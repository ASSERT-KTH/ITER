bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  Class  <?>  rawType  =  this.rawTypeToken.getRawClass();  [CE]  cannot  find  symbol  rawTypeToken  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?>  rawType  =  this.rawTypeToken.getRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?>  rawType  =  this.rawTypeToken.getRawClass();	  final    Class    <?>    rawType    =    type.getRawClass();    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	37	None	replace
2	[BUG]  [BUGGY]  final  Class  <?>  rawType  =  types.getRawClass();  [CE]  cannot  find  symbol  types  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?>  rawType  =  types.getRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?>  rawType  =  types.getRawClass();	  final    Class    <?>    rawType    =    type.getRawClass();    	non-compiled	[CE]  cannot  find  symbol  types	37	None	replace
3	[BUG]  [BUGGY]  final  Class  <?>  rawType  =  parent.getRawClass();  [CE]  cannot  find  symbol  parent  [FE]                                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?>  rawType  =  parent.getRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?>  rawType  =  parent.getRawClass();	  final    Class    <?>    rawType    =    type.getRawClass();    	non-compiled	[CE]  cannot  find  symbol  parent	37	None	replace
4	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(0,  typeToken.getRawParameterType(1));  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(0,  typeToken.getRawParameterType(1));  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(0,  typeToken.getRawParameterType(1));	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(0,    typeToken.getRawParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
5	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getRawParameterType(0,  typeToken.getRawParameterType(0));  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getRawParameterType(0,  typeToken.getRawParameterType(0));  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.getRawParameterType(0,  typeToken.getRawParameterType(0));	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(0,    typeToken.getRawParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
6	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(0,  typeToken.getRawParameterType(2));  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(0,  typeToken.getRawParameterType(2));  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(0,  typeToken.getRawParameterType(2));	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(0,    typeToken.getRawParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
7	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(0,  typeToken.getRawParameterType());  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(0,  typeToken.getRawParameterType());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(0,  typeToken.getRawParameterType());	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(0,    typeToken.getRawParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
8	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(0,  typeToken.getRawParameterType(3));  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(0,  typeToken.getRawParameterType(3));  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(0,  typeToken.getRawParameterType(3));	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(0,    typeToken.getRawParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
9	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  typeToken.getSuperType());  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  typeToken.getSuperType());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  typeToken.getSuperType());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSuperType());    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
10	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(rawTypeToken.getSuperType());  [CE]  cannot  find  symbol  rawTypeToken  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(rawTypeToken.getSuperType());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(rawTypeToken.getSuperType());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSuperType());    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	16	None	replace
11	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  defaultImplementation.getSuperType());  [CE]  cannot  find  symbol  defaultImplementation  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  defaultImplementation.getSuperType());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  defaultImplementation.getSuperType());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSuperType());    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	16	None	replace
12	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperType().constructType(typeToken.getSuperType());  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperType().constructType(typeToken.getSuperType());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperType().constructType(typeToken.getSuperType());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSuperType());    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
13	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  this.defaultImplementation.getSuperType());  [CE]  cannot  find  symbol  defaultImplementation  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  this.defaultImplementation.getSuperType());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  this.defaultImplementation.getSuperType());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSuperType());    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	16	None	replace
14	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  this.typeToken.getSuperType());  [CE]  cannot  find  symbol  typeToken  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  this.typeToken.getSuperType());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  this.typeToken.getSuperType());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSuperType());    	non-compiled	[CE]  cannot  find  symbol  typeToken	16	None	replace
15	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.newInstance(defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.newInstance(defaultImplementation);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.newInstance(defaultImplementation);	  final    Class    <?    super    T>    rawType    =    typeToken.newInstance();    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	18	None	replace
16	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.newInstance(this);  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.newInstance(this);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.newInstance(this);	  final    Class    <?    super    T>    rawType    =    typeToken.newInstance();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
17	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.newInstance(typeToken);  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.newInstance(typeToken);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.newInstance(typeToken);	  final    Class    <?    super    T>    rawType    =    typeToken.newInstance();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
18	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.newInstance(null);  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.newInstance(null);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.newInstance(null);	  final    Class    <?    super    T>    rawType    =    typeToken.newInstance();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
19	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.newInstanceUTC();  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.newInstanceUTC();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.newInstanceUTC();	  final    Class    <?    super    T>    rawType    =    typeToken.newInstance();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
20	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  typeToken.getQualifiedName());  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  typeToken.getQualifiedName());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  typeToken.getQualifiedName());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getQualifiedName());    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
21	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(rawTypeToken.getQualifiedName());  [CE]  cannot  find  symbol  rawTypeToken  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(rawTypeToken.getQualifiedName());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(rawTypeToken.getQualifiedName());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getQualifiedName());    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	1	None	replace
22	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.getQualifiedName(),  typeToken.getQualifiedName());  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.getQualifiedName(),  typeToken.getQualifiedName());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.getQualifiedName(),  typeToken.getQualifiedName());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getQualifiedName());    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
23	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(rawType.getQualifiedName());  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(rawType.getQualifiedName());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(rawType.getQualifiedName());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getQualifiedName());    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
24	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.toString());  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.toString());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.toString());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getQualifiedName());    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
25	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(type);  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(type);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(type);	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getQualifiedName());    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
26	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperType()?  typeToken.getSuperType()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperType()?  typeToken.getSuperType()  :  typeToken;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperType()?  typeToken.getSuperType()  :  typeToken;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSuperType()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
27	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperType()?  typeToken.hasSuperType()  :  typeToken.getSuperType();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperType()?  typeToken.hasSuperType()  :  typeToken.getSuperType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperType()?  typeToken.hasSuperType()  :  typeToken.getSuperType();	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSuperType()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
28	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperType()?  typeToken.getSuperType()  :  typeToken.getSuperType();  [CE]  ')'  expected  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperType()?  typeToken.getSuperType()  :  typeToken.getSuperType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperType()?  typeToken.getSuperType()  :  typeToken.getSuperType();	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSuperType()    :    typeToken;    	non-compiled	[CE]  ')'  expected	64	None	replace
29	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSuperType()  :  typeToken.getSuperType();  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSuperType()  :  typeToken.getSuperType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSuperType()  :  typeToken.getSuperType();	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSuperType()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
30	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperType()?  typeToken.getSupertype()  :  typeToken.getSupertype();  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperType()?  typeToken.getSupertype()  :  typeToken.getSupertype();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperType()?  typeToken.getSupertype()  :  typeToken.getSupertype();	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSupertype()    :    typeToken.getSupertype();    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
31	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperType()?  typeToken.getSupertype()  :  typeToken.getSupertype();  [CE]  ')'  expected  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperType()?  typeToken.getSupertype()  :  typeToken.getSupertype();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperType()?  typeToken.getSupertype()  :  typeToken.getSupertype();	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSupertype()    :    typeToken.getSupertype();    	non-compiled	[CE]  ')'  expected	71	None	replace
32	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isConstructor()?  typeToken.getSupertype()  :  typeToken.getSupertype();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isConstructor()?  typeToken.getSupertype()  :  typeToken.getSupertype();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isConstructor()?  typeToken.getSupertype()  :  typeToken.getSupertype();	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSupertype()    :    typeToken.getSupertype();    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
33	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperType()?  typeToken.hasSuperType()  :  typeToken.getSupertype();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperType()?  typeToken.hasSuperType()  :  typeToken.getSupertype();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperType()?  typeToken.hasSuperType()  :  typeToken.getSupertype();	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSupertype()    :    typeToken.getSupertype();    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
34	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSupertype()  :  typeToken.getSupertype();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSupertype()  :  typeToken.getSupertype();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSupertype()  :  typeToken.getSupertype();	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSupertype()    :    typeToken.getSupertype();    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
35	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSupertype()?  typeToken.getSupertype()  :  typeToken.getSupertype();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSupertype()?  typeToken.getSupertype()  :  typeToken.getSupertype();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSupertype()?  typeToken.getSupertype()  :  typeToken.getSupertype();	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSupertype()    :    typeToken.getSupertype();    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
36	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  /  1;  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  /  1;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  /  1;	  final    Class    <?    super    T>    rawType    =    typeToken.getQualifiedName()    +    1;    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
37	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName(),  typeToken.getQualifiedName()  +  1;  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName(),  typeToken.getQualifiedName()  +  1;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName(),  typeToken.getQualifiedName()  +  1;	  final    Class    <?    super    T>    rawType    =    typeToken.getQualifiedName()    +    1;    	non-compiled	[CE]  ';'  expected	57	None	replace
38	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  +  2;  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  +  2;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  +  2;	  final    Class    <?    super    T>    rawType    =    typeToken.getQualifiedName()    +    1;    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
39	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  *  2  +  1;  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  *  2  +  1;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  *  2  +  1;	  final    Class    <?    super    T>    rawType    =    typeToken.getQualifiedName()    +    1;    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
40	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  *  1;  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  *  1;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  *  1;	  final    Class    <?    super    T>    rawType    =    typeToken.getQualifiedName()    +    1;    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
41	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  TypeToken  typeToken  =  typeToken.getRawType();  [CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  TypeToken  typeToken  =  typeToken.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  TypeToken  typeToken  =  typeToken.getRawType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    TypeToken    typeToken    =    typeToken.getRawType();    	non-compiled	[CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)	76	None	replace
42	[BUG]  [BUGGY]  TypeToken  typeToken  =  typeToken.getRawType();  [CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  TypeToken  typeToken  =  typeToken.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	TypeToken  typeToken  =  typeToken.getRawType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    TypeToken    typeToken    =    typeToken.getRawType();    	non-compiled	[CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)	76	None	replace
43	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  final  TypeToken  typeToken  =  typeToken.getRawType();  [CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  final  TypeToken  typeToken  =  typeToken.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  final  TypeToken  typeToken  =  typeToken.getRawType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    TypeToken    typeToken    =    typeToken.getRawType();    	non-compiled	[CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)	76	None	replace
44	[BUG]  [BUGGY]  final  Type  <?  super  T>  rawType  =  typeToken.getRawType();  TypeToken  typeToken  =  typeToken.getRawType();  [CE]  type  Type  does  not  take  parameters  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Type  <?  super  T>  rawType  =  typeToken.getRawType();  TypeToken  typeToken  =  typeToken.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Type  <?  super  T>  rawType  =  typeToken.getRawType();  TypeToken  typeToken  =  typeToken.getRawType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    TypeToken    typeToken    =    typeToken.getRawType();    	non-compiled	[CE]  type  Type  does  not  take  parameters	76	None	replace
45	[BUG]  [BUGGY]  final  TypeToken  typeToken  =  typeToken.getRawType();  [CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  TypeToken  typeToken  =  typeToken.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  TypeToken  typeToken  =  typeToken.getRawType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    TypeToken    typeToken    =    typeToken.getRawType();    	non-compiled	[CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)	76	None	replace
46	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRestrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRestrictByNotNullOrUndefined();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.getRestrictByNotNullOrUndefined();	  Class    <?    super    T>    rawType    =    typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
47	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  type.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  type.restrictByNotNullOrUndefined();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  type.restrictByNotNullOrUndefined();	  Class    <?    super    T>    rawType    =    typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
48	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.restrictByNotEmptyOrUndefined();  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.restrictByNotEmptyOrUndefined();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.restrictByNotEmptyOrUndefined();	  Class    <?    super    T>    rawType    =    typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
49	[BUG]  [BUGGY]  Class  <  T>  rawType  =  typeToken.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <  T>  rawType  =  typeToken.restrictByNotNullOrUndefined();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <  T>  rawType  =  typeToken.restrictByNotNullOrUndefined();	  Class    <?    super    T>    rawType    =    typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
50	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  defaultConstructor.getRawParameterType(0);  [CE]  cannot  find  symbol  defaultConstructor  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  defaultConstructor.getRawParameterType(0);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  defaultConstructor.getRawParameterType(0);	  final    Class    <?    super    T>    rawType    =    typeToken,    defaultConstructor.getRawParameterType(0);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	96	None	replace
51	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRawParameterType(1);  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRawParameterType(1);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRawParameterType(1);	  final    Class    <?    super    T>    rawType    =    typeToken,    defaultConstructor.getRawParameterType(0);    	non-compiled	[CE]  ';'  expected	96	None	replace
52	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getParameterType(0);  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getParameterType(0);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getParameterType(0);	  final    Class    <?    super    T>    rawType    =    typeToken,    defaultConstructor.getRawParameterType(0);    	non-compiled	[CE]  ';'  expected	96	None	replace
53	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRawParameterType(2);  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRawParameterType(2);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRawParameterType(2);	  final    Class    <?    super    T>    rawType    =    typeToken,    defaultConstructor.getRawParameterType(0);    	non-compiled	[CE]  ';'  expected	96	None	replace
54	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRawParameterType(0);  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRawParameterType(0);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRawParameterType(0);	  final    Class    <?    super    T>    rawType    =    typeToken,    defaultConstructor.getRawParameterType(0);    	non-compiled	[CE]  ';'  expected	96	None	replace
55	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  defaultImplementation.getRawParameterType(0);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  defaultImplementation.getRawParameterType(0);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  defaultImplementation.getRawParameterType(0);	  final    Class    <?    super    T>    rawType    =    typeToken,    defaultConstructor.getRawParameterType(0);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	96	None	replace
56	[BUG]  [BUGGY]  final  Class  <  T>  rawType  =  typeToken.getRawClass();  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <  T>  rawType  =  typeToken.getRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <  T>  rawType  =  typeToken.getRawClass();	  Class    <    T>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
57	[BUG]  [BUGGY]  Class  <  T>  rawType  =  typeToken.constructType(typeToken.getRawClass());  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <  T>  rawType  =  typeToken.constructType(typeToken.getRawClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <  T>  rawType  =  typeToken.constructType(typeToken.getRawClass());	  Class    <    T>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
58	[BUG]  [BUGGY]  Class  <  T>  rawType  =  typeToken.toRawClass();  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <  T>  rawType  =  typeToken.toRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <  T>  rawType  =  typeToken.toRawClass();	  Class    <    T>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
59	[BUG]  [BUGGY]  Class  <  T>  rawType  =  typeToken.getRawClass()  ||  typeToken.getRawClass();  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <  T>  rawType  =  typeToken.getRawClass()  ||  typeToken.getRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <  T>  rawType  =  typeToken.getRawClass()  ||  typeToken.getRawClass();	  Class    <    T>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
60	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreators  =  instanceCreators.get(type);  [CE]  incompatible  types  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  InstanceCreator  <  T>  typeCreators  =  instanceCreators.get(type);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  InstanceCreator  <  T>  typeCreators  =  instanceCreators.get(type);	  final    InstanceCreator    <    T>    instanceCreators    =    instanceCreators.get(type);    	non-compiled	[CE]  incompatible  types	80	None	replace
61	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  instanceCreators  =  instances.get(type);  [CE]  cannot  find  symbol  instances  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  InstanceCreator  <  T>  instanceCreators  =  instances.get(type);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  InstanceCreator  <  T>  instanceCreators  =  instances.get(type);	  final    InstanceCreator    <    T>    instanceCreators    =    instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  instances	80	None	replace
62	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  instanceCreators  =  instanceCreators.get(type,  type);  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  InstanceCreator  <  T>  instanceCreators  =  instanceCreators.get(type,  type);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  InstanceCreator  <  T>  instanceCreators  =  instanceCreators.get(type,  type);	  final    InstanceCreator    <    T>    instanceCreators    =    instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
63	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  instanceCreators  =  instanceCreators.get(type,  typeToken);  [CE]  cannot  find  symbol  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  InstanceCreator  <  T>  instanceCreators  =  instanceCreators.get(type,  typeToken);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  InstanceCreator  <  T>  instanceCreators  =  instanceCreators.get(type,  typeToken);	  final    InstanceCreator    <    T>    instanceCreators    =    instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
64	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  instanceCreators  =  types.get(instanceCreators);  [CE]  cannot  find  symbol  types  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  InstanceCreator  <  T>  instanceCreators  =  types.get(instanceCreators);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  InstanceCreator  <  T>  instanceCreators  =  types.get(instanceCreators);	  final    InstanceCreator    <    T>    instanceCreators    =    instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  types	80	None	replace
65	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  instanceCreators  =  instanceCreators.get(typeToken);  [CE]  cannot  find  symbol  [FE]                                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  InstanceCreator  <  T>  instanceCreators  =  instanceCreators.get(typeToken);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  InstanceCreator  <  T>  instanceCreators  =  instanceCreators.get(typeToken);	  final    InstanceCreator    <    T>    instanceCreators    =    instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
66	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken,  defaultImplementation.getRawSuperClass();  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken,  defaultImplementation.getRawSuperClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken,  defaultImplementation.getRawSuperClass();	  Class    <?    super    T>    rawType    =    typeToken.getRawSuperClass();    	non-compiled	[CE]  ';'  expected	100	None	replace
67	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawSuperclass();  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawSuperclass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.getRawSuperclass();	  Class    <?    super    T>    rawType    =    typeToken.getRawSuperClass();    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
68	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(3);  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(3);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(3);	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(1);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
69	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getRawParameterType(1);  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getRawParameterType(1);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.getRawParameterType(1);	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(1);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
70	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType1();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType1();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType1();	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(1);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
71	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  typeToken.getSuperclass());  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  typeToken.getSuperclass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  typeToken.getSuperclass());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSuperclass());    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
72	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass().constructType(typeToken.getSuperclass());  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass().constructType(typeToken.getSuperclass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass().constructType(typeToken.getSuperclass());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSuperclass());    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
73	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(rawTypeToken.getSuperclass());  [CE]  cannot  find  symbol  rawTypeToken  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(rawTypeToken.getSuperclass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(rawTypeToken.getSuperclass());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSuperclass());    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	9	None	replace
74	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  defaultImplementation.getSuperclass());  [CE]  cannot  find  symbol  defaultImplementation  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  defaultImplementation.getSuperclass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  defaultImplementation.getSuperclass());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSuperclass());    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	9	None	replace
75	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  context.getSuperclass());  [CE]  cannot  find  symbol  context  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  context.getSuperclass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  context.getSuperclass());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSuperclass());    	non-compiled	[CE]  cannot  find  symbol  context	9	None	replace
76	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.getSuperclass(),  typeToken.getSuperclass());  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.getSuperclass(),  typeToken.getSuperclass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.getSuperclass(),  typeToken.getSuperclass());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSuperclass());    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
77	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperType()?  typeToken.getSupertype()  :  type;  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperType()?  typeToken.getSupertype()  :  type;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperType()?  typeToken.getSupertype()  :  type;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSupertype()    :    type;    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
78	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.hasSuperType()?  typeToken.getSupertype()  :  type;  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.hasSuperType()?  typeToken.getSupertype()  :  type;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.hasSuperType()?  typeToken.getSupertype()  :  type;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSupertype()    :    type;    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
79	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isConstructor()?  typeToken.getSupertype()  :  type;  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isConstructor()?  typeToken.getSupertype()  :  type;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isConstructor()?  typeToken.getSupertype()  :  type;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSupertype()    :    type;    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
80	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperType()?  typeToken.hasSuperType()  :  type;  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperType()?  typeToken.hasSuperType()  :  type;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperType()?  typeToken.hasSuperType()  :  type;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSupertype()    :    type;    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
81	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSupertype()  :  type;  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSupertype()  :  type;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSupertype()  :  type;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSupertype()    :    type;    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
82	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =  typeToken.getRawClass();  [CE]  cannot  find  symbol  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <  T>  rawTypeCreator  =  typeToken.getRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <  T>  rawTypeCreator  =  typeToken.getRawClass();	  Class    <    T>    rawTypeCreator    =    type.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
83	[BUG]  [BUGGY]  final  Class  <  T>  rawTypeCreator  =  type.getRawClass();  [CE]  cannot  find  symbol  [FE]                                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <  T>  rawTypeCreator  =  type.getRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <  T>  rawTypeCreator  =  type.getRawClass();	  Class    <    T>    rawTypeCreator    =    type.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
84	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =  types.getRawClass();  [CE]  cannot  find  symbol  types  [FE]                                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <  T>  rawTypeCreator  =  types.getRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <  T>  rawTypeCreator  =  types.getRawClass();	  Class    <    T>    rawTypeCreator    =    type.getRawClass();    	non-compiled	[CE]  cannot  find  symbol  types	38	None	replace
85	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =  this.rawTypeToken.getRawClass();  [CE]  cannot  find  symbol  rawTypeToken  [FE]                                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <  T>  rawTypeCreator  =  this.rawTypeToken.getRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <  T>  rawTypeCreator  =  this.rawTypeToken.getRawClass();	  Class    <    T>    rawTypeCreator    =    type.getRawClass();    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	38	None	replace
86	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =  type.constructType(typeToken.getRawClass());  [CE]  cannot  find  symbol  [FE]                                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <  T>  rawTypeCreator  =  type.constructType(typeToken.getRawClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <  T>  rawTypeCreator  =  type.constructType(typeToken.getRawClass());	  Class    <    T>    rawTypeCreator    =    type.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
87	[BUG]  [BUGGY]  Class  <  T>  typeCreator  =  type.getRawClass();  [CE]  cannot  find  symbol  [FE]                                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <  T>  typeCreator  =  type.getRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <  T>  typeCreator  =  type.getRawClass();	  Class    <    T>    rawTypeCreator    =    type.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
88	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()?  typeToken.getQualifiedName()  :  null;  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()?  typeToken.getQualifiedName()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()?  typeToken.getQualifiedName()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.hasQualifiedName()?    typeToken.getQualifiedName()    :    null;    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
89	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isQualifiedName()?  typeToken.getQualifiedName()  :  null;  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isQualifiedName()?  typeToken.getQualifiedName()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isQualifiedName()?  typeToken.getQualifiedName()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.hasQualifiedName()?    typeToken.getQualifiedName()    :    null;    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
90	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.hasQualifiedName()?  typeToken.getQualifiedName()  :  null;  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.hasQualifiedName()?  typeToken.getQualifiedName()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.hasQualifiedName()?  typeToken.getQualifiedName()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.hasQualifiedName()?    typeToken.getQualifiedName()    :    null;    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
91	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()?  typeToken.hasQualifiedName()  :  typeToken.getQualifiedName();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()?  typeToken.hasQualifiedName()  :  typeToken.getQualifiedName();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()?  typeToken.hasQualifiedName()  :  typeToken.getQualifiedName();	  final    Class    <?    super    T>    rawType    =    typeToken.hasQualifiedName()?    typeToken.getQualifiedName()    :    null;    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
92	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hashCode()?  typeToken.getQualifiedName()  :  null;  [CE]  incompatible  types  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hashCode()?  typeToken.getQualifiedName()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.hashCode()?  typeToken.getQualifiedName()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.hasQualifiedName()?    typeToken.getQualifiedName()    :    null;    	non-compiled	[CE]  incompatible  types	54	None	replace
93	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasQualifiedName()?  typeToken.getQualifiedName()  :  new  Class  <?  super  T>(typeToken.getQualifiedName());  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasQualifiedName()?  typeToken.getQualifiedName()  :  new  Class  <?  super  T>(typeToken.getQualifiedName());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.hasQualifiedName()?  typeToken.getQualifiedName()  :  new  Class  <?  super  T>(typeToken.getQualifiedName());	  final    Class    <?    super    T>    rawType    =    typeToken.hasQualifiedName()?    typeToken.getQualifiedName()    :    null;    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
94	[BUG]  [BUGGY]  final  Class  <?  super  T>  typeType  =  this.typeToken.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  typeToken  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  typeType  =  this.typeToken.restrictByNotNullOrUndefined();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  typeType  =  this.typeToken.restrictByNotNullOrUndefined();	  final    Class    <?    super    T>    rawType    =    this.typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol  typeToken	103	None	replace
95	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  types.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  types  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  types.restrictByNotNullOrUndefined();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  types.restrictByNotNullOrUndefined();	  final    Class    <?    super    T>    rawType    =    this.typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol  types	103	None	replace
96	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  getTypeToken().restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  getTypeToken().restrictByNotNullOrUndefined();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  getTypeToken().restrictByNotNullOrUndefined();	  final    Class    <?    super    T>    rawType    =    this.typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
97	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperClass()?  typeToken.getSuperClass()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperClass()?  typeToken.getSuperClass()  :  typeToken;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperClass()?  typeToken.getSuperClass()  :  typeToken;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperClass()?    typeToken.getSuperClass()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
98	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperClass()?  typeToken.hasSuperClass()  :  typeToken.getSuperClass();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperClass()?  typeToken.hasSuperClass()  :  typeToken.getSuperClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperClass()?  typeToken.hasSuperClass()  :  typeToken.getSuperClass();	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperClass()?    typeToken.getSuperClass()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
99	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSuperClass()  :  typeToken.getSuperClass();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSuperClass()  :  typeToken.getSuperClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSuperClass()  :  typeToken.getSuperClass();	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperClass()?    typeToken.getSuperClass()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
100	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasSuperclass()?  typeToken.getSuperClass()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasSuperclass()?  typeToken.getSuperClass()  :  typeToken;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.hasSuperclass()?  typeToken.getSuperClass()  :  typeToken;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperClass()?    typeToken.getSuperClass()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
101	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSuperClass()  :  typeToken.getSuperClass();  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSuperClass()  :  typeToken.getSuperClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSuperClass()  :  typeToken.getSuperClass();	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperClass()?    typeToken.getSuperClass()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
102	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(4);  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(4);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(4);	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(2);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
103	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getRawParameterType(2);  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getRawParameterType(2);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.getRawParameterType(2);	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(2);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
104	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.getSupertype());  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.getSupertype());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.getSupertype());	  Class    <?    super    T>    rawType    =    typeToken.getSupertype();    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
105	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getsupertype();  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getsupertype();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.getsupertype();	  Class    <?    super    T>    rawType    =    typeToken.getSupertype();    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
106	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getSupertype(typeToken);  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getSupertype(typeToken);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.getSupertype(typeToken);	  Class    <?    super    T>    rawType    =    typeToken.getSupertype();    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
107	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.newInstance();  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.newInstance();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.newInstance();	  Class    <?    super    T>    rawType    =    typeToken.getSupertype();    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
108	[BUG]  [BUGGY]  Class  <?>  rawType  =  type.getRawType();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?>  rawType  =  type.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?>  rawType  =  type.getRawType();	  Class    <?>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
109	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.getQualifiedName();  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?>  rawType  =  typeToken.getQualifiedName();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?>  rawType  =  typeToken.getQualifiedName();	  Class    <?>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
110	[BUG]  [BUGGY]  final  Class  <?>  rawType  =  type.getRawType();  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?>  rawType  =  type.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?>  rawType  =  type.getRawType();	  Class    <?>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
111	[BUG]  [BUGGY]  Type  <?>  rawType  =  typeToken.getRawType();  [CE]  type  Type  does  not  take  parameters  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Type  <?>  rawType  =  typeToken.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Type  <?>  rawType  =  typeToken.getRawType();	  Class    <?>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  type  Type  does  not  take  parameters	78	None	replace
112	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(1);  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(1);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(1);	  Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(0);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
113	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(2);  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(2);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(2);	  Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(0);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
114	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(0,  typeToken.getRawParameterType(0));  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(0,  typeToken.getRawParameterType(0));  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(0,  typeToken.getRawParameterType(0));	  Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(0);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
115	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  type.getRawParameterType(0);  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  type.getRawParameterType(0);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  type.getRawParameterType(0);	  Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(0);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
116	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typeToken.getRawParameterType(0));  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typeToken.getRawParameterType(0));  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typeToken.getRawParameterType(0));	  Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(0);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
117	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  &&  typeToken.getQualifiedName()!=  null;  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  &&  typeToken.getQualifiedName()!=  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  &&  typeToken.getQualifiedName()!=  null;	  final    Class    <?    super    T>    rawType    =    typeToken.getQualifiedName()    ||    typeToken.getQualifiedName()!=    null;    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
118	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  /|  typeToken.getQualifiedName()!=  null;  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  /|  typeToken.getQualifiedName()!=  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  /|  typeToken.getQualifiedName()!=  null;	  final    Class    <?    super    T>    rawType    =    typeToken.getQualifiedName()    ||    typeToken.getQualifiedName()!=    null;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
119	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName(),  typeToken.getQualifiedName()!=  null;  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName(),  typeToken.getQualifiedName()!=  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName(),  typeToken.getQualifiedName()!=  null;	  final    Class    <?    super    T>    rawType    =    typeToken.getQualifiedName()    ||    typeToken.getQualifiedName()!=    null;    	non-compiled	[CE]  ';'  expected	3	None	replace
120	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  /  ||  typeToken.getQualifiedName()!=  null;  [CE]  illegal  start  of  expression  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  /  ||  typeToken.getQualifiedName()!=  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  /  ||  typeToken.getQualifiedName()!=  null;	  final    Class    <?    super    T>    rawType    =    typeToken.getQualifiedName()    ||    typeToken.getQualifiedName()!=    null;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
121	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  + ": "+typeToken.getQualifiedName();  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  + ": "+typeToken.getQualifiedName();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  + ": "+typeToken.getQualifiedName();	  Class    <?    super    T>    rawType    =    typeToken.getQualifiedName();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
122	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  ||  typeToken.getQualifiedName()!=  null;  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  ||  typeToken.getQualifiedName()!=  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  ||  typeToken.getQualifiedName()!=  null;	  Class    <?    super    T>    rawType    =    typeToken.getQualifiedName();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
123	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.getQualifiedName());  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.getQualifiedName());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.getQualifiedName());	  Class    <?    super    T>    rawType    =    typeToken.getQualifiedName();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
124	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  ||  typeToken.getQualifiedName()  ==  null;  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  ||  typeToken.getQualifiedName()  ==  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  ||  typeToken.getQualifiedName()  ==  null;	  Class    <?    super    T>    rawType    =    typeToken.getQualifiedName();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
125	[BUG]  [BUGGY]  final  Class  <  T>  rawType  =  typeToken.getRawType();  [CE]  incompatible  types  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <  T>  rawType  =  typeToken.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <  T>  rawType  =  typeToken.getRawType();	  Class    <    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  incompatible  types	81	None	replace
126	[BUG]  [BUGGY]  Class  <  T>  rawType  =  typeToken.getQualifiedName();  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <  T>  rawType  =  typeToken.getQualifiedName();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <  T>  rawType  =  typeToken.getQualifiedName();	  Class    <    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
127	[BUG]  [BUGGY]  Class  <  T>  rawType  =  typeToken.getReturnType();  [CE]  cannot  find  symbol  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <  T>  rawType  =  typeToken.getReturnType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <  T>  rawType  =  typeToken.getReturnType();	  Class    <    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
128	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typeToken,  typeToken.getRawSuperClass());  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typeToken,  typeToken.getRawSuperClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typeToken,  typeToken.getRawSuperClass());	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(typeToken.getRawSuperClass());    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
129	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawSuperClassType(typeToken.getRawParameterType(typeToken.getRawSuperClass());  [CE]  ')'  expected  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawSuperClassType(typeToken.getRawParameterType(typeToken.getRawSuperClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawSuperClassType(typeToken.getRawParameterType(typeToken.getRawSuperClass());	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(typeToken.getRawSuperClass());    	non-compiled	[CE]  ')'  expected	13	None	replace
130	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawSuperClass().getRawParameterType(typeToken.getRawSuperClass());  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawSuperClass().getRawParameterType(typeToken.getRawSuperClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawSuperClass().getRawParameterType(typeToken.getRawSuperClass());	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(typeToken.getRawSuperClass());    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
131	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(type);  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(type);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(type);	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(typeToken.getRawSuperClass());    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
132	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(type,  typeToken.getRawSuperClass());  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(type,  typeToken.getRawSuperClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(type,  typeToken.getRawSuperClass());	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(typeToken.getRawSuperClass());    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
133	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getRawParameterType(typeToken.getRawSuperClass());  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getRawParameterType(typeToken.getRawSuperClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.getRawParameterType(typeToken.getRawSuperClass());	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(typeToken.getRawSuperClass());    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
134	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getSupertype();  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getSupertype();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.getSupertype();	  final    Class    <?    super    T>    rawType    =    this.typeToken.getSupertype();    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
135	[BUG]  [BUGGY]  final  Class  <?  super  T>  typeType  =  this.typeToken.getSupertype();  [CE]  cannot  find  symbol  typeToken  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  typeType  =  this.typeToken.getSupertype();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  typeType  =  this.typeToken.getSupertype();	  final    Class    <?    super    T>    rawType    =    this.typeToken.getSupertype();    	non-compiled	[CE]  cannot  find  symbol  typeToken	95	None	replace
136	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  getTypeToken().getSupertype();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  getTypeToken().getSupertype();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  getTypeToken().getSupertype();	  final    Class    <?    super    T>    rawType    =    this.typeToken.getSupertype();    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
137	[BUG]  [BUGGY]  final  Class  <?  super  T>  type  =  this.typeToken.getSupertype();  [CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  type  =  this.typeToken.getSupertype();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  type  =  this.typeToken.getSupertype();	  final    Class    <?    super    T>    rawType    =    this.typeToken.getSupertype();    	non-compiled	[CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)	95	None	replace
138	[BUG]  [BUGGY]  final  Class  <  T>  rawType  =  type.getRawClass();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <  T>  rawType  =  type.getRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <  T>  rawType  =  type.getRawClass();	  Class    <    T>    rawType    =    type.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
139	[BUG]  [BUGGY]  Class  <  T>  rawType  =  this.rawTypeToken.getRawClass();  [CE]  cannot  find  symbol  rawTypeToken  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <  T>  rawType  =  this.rawTypeToken.getRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <  T>  rawType  =  this.rawTypeToken.getRawClass();	  Class    <    T>    rawType    =    type.getRawClass();    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	32	None	replace
140	[BUG]  [BUGGY]  Class  <  T>  rawType  =  types.getRawClass();  [CE]  cannot  find  symbol  types  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <  T>  rawType  =  types.getRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <  T>  rawType  =  types.getRawClass();	  Class    <    T>    rawType    =    type.getRawClass();    	non-compiled	[CE]  cannot  find  symbol  types	32	None	replace
141	[BUG]  [BUGGY]  Type  <  T>  rawType  =  typeToken.getRawClass();  [CE]  type  Type  does  not  take  parameters  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Type  <  T>  rawType  =  typeToken.getRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Type  <  T>  rawType  =  typeToken.getRawClass();	  Class    <    T>    rawType    =    type.getRawClass();    	non-compiled	[CE]  type  Type  does  not  take  parameters	32	None	replace
142	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawSuperClass()  &&  typeToken.getRawSuperClass();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawSuperClass()  &&  typeToken.getRawSuperClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawSuperClass()  &&  typeToken.getRawSuperClass();	  final    Class    <?    super    T>    rawType    =    typeToken.getRawSuperClass()    ||    typeToken.getRawSuperClass();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
143	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawClass()  ||  typeToken.getRawSuperClass();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawClass()  ||  typeToken.getRawSuperClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawClass()  ||  typeToken.getRawSuperClass();	  final    Class    <?    super    T>    rawType    =    typeToken.getRawSuperClass()    ||    typeToken.getRawSuperClass();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
144	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawSuperClass()  ||  typeToken.getRawSuperclass();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawSuperClass()  ||  typeToken.getRawSuperclass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawSuperClass()  ||  typeToken.getRawSuperclass();	  final    Class    <?    super    T>    rawType    =    typeToken.getRawSuperClass()    ||    typeToken.getRawSuperClass();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
145	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getRawSuperClass()  ||  typeToken.getRawSuperClass();  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getRawSuperClass()  ||  typeToken.getRawSuperClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.getRawSuperClass()  ||  typeToken.getRawSuperClass();	  final    Class    <?    super    T>    rawType    =    typeToken.getRawSuperClass()    ||    typeToken.getRawSuperClass();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
146	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawSuperClass()  ||  typeToken.isInterface();  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawSuperClass()  ||  typeToken.isInterface();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawSuperClass()  ||  typeToken.isInterface();	  final    Class    <?    super    T>    rawType    =    typeToken.getRawSuperClass()    ||    typeToken.getRawSuperClass();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
147	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(typeToken,  typeToken.getRawClass());  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(typeToken,  typeToken.getRawClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(typeToken,  typeToken.getRawClass());	  final    Class    <?    super    T>    rawType    =    typeToken.restrictByNotNullOrUndefined(typeToken.getRawClass());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
148	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.restrictByNotNullOrUndefined(typeToken.getRawClass());  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.restrictByNotNullOrUndefined(typeToken.getRawClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.restrictByNotNullOrUndefined(typeToken.getRawClass());	  final    Class    <?    super    T>    rawType    =    typeToken.restrictByNotNullOrUndefined(typeToken.getRawClass());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
149	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(rawType.getRawClass());  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(rawType.getRawClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(rawType.getRawClass());	  final    Class    <?    super    T>    rawType    =    typeToken.restrictByNotNullOrUndefined(typeToken.getRawClass());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
150	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(type,  typeToken.getRawClass());  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(type,  typeToken.getRawClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(type,  typeToken.getRawClass());	  final    Class    <?    super    T>    rawType    =    typeToken.restrictByNotNullOrUndefined(typeToken.getRawClass());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
151	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(rawTypeToken.getRawClass());  [CE]  cannot  find  symbol  rawTypeToken  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(rawTypeToken.getRawClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(rawTypeToken.getRawClass());	  final    Class    <?    super    T>    rawType    =    typeToken.restrictByNotNullOrUndefined(typeToken.getRawClass());    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	20	None	replace
152	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  types.restrictByNotNullOrUndefined(typeToken.getRawClass());  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  types.restrictByNotNullOrUndefined(typeToken.getRawClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  types.restrictByNotNullOrUndefined(typeToken.getRawClass());	  final    Class    <?    super    T>    rawType    =    typeToken.restrictByNotNullOrUndefined(typeToken.getRawClass());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
153	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperType()?  typeToken.getSuperType()  :  type;  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperType()?  typeToken.getSuperType()  :  type;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperType()?  typeToken.getSuperType()  :  type;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSuperType()    :    type;    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
154	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperType()?  typeToken.getSuperType()  :  type;  [CE]  ')'  expected  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperType()?  typeToken.getSuperType()  :  type;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperType()?  typeToken.getSuperType()  :  type;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSuperType()    :    type;    	non-compiled	[CE]  ')'  expected	66	None	replace
155	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.hasSuperType()?  typeToken.getSuperType()  :  type;  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.hasSuperType()?  typeToken.getSuperType()  :  type;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.hasSuperType()?  typeToken.getSuperType()  :  type;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSuperType()    :    type;    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
156	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawClass()  &&  typeToken.getRawClass()!=  null;  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawClass()  &&  typeToken.getRawClass()!=  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawClass()  &&  typeToken.getRawClass()!=  null;	  final    Class    <?    super    T>    rawType    =    typeToken.getRawClass()    ||    typeToken.getRawClass()!=    null;    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
157	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawClass(),  typeToken.getRawClass()  ||  typeToken.getRawClass()!=  null;  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawClass(),  typeToken.getRawClass()  ||  typeToken.getRawClass()!=  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawClass(),  typeToken.getRawClass()  ||  typeToken.getRawClass()!=  null;	  final    Class    <?    super    T>    rawType    =    typeToken.getRawClass()    ||    typeToken.getRawClass()!=    null;    	non-compiled	[CE]  ';'  expected	21	None	replace
158	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawClass()  ||  typeToken.getRawClass()  ==  null;  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawClass()  ||  typeToken.getRawClass()  ==  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawClass()  ||  typeToken.getRawClass()  ==  null;	  final    Class    <?    super    T>    rawType    =    typeToken.getRawClass()    ||    typeToken.getRawClass()!=    null;    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
159	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getRawClass()  ||  typeToken.getRawClass()!=  null;  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getRawClass()  ||  typeToken.getRawClass()!=  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.getRawClass()  ||  typeToken.getRawClass()!=  null;	  final    Class    <?    super    T>    rawType    =    typeToken.getRawClass()    ||    typeToken.getRawClass()!=    null;    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
160	[BUG]  [BUGGY]  instanceCreators.put(type,  type);  [CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  instanceCreators.put(type,  type);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	instanceCreators.put(type,  type);	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Class    <?    super    T>    rawType    =    typeToken.getRawType();    instanceCreators.put(type,    rawType);    	non-compiled	[CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	31	None	replace
161	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  instanceCreators.put(type,  rawType);  [CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  instanceCreators.put(type,  rawType);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  instanceCreators.put(type,  rawType);	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Class    <?    super    T>    rawType    =    typeToken.getRawType();    instanceCreators.put(type,    rawType);    	non-compiled	[CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	31	None	replace
162	[BUG]  [BUGGY]  instanceCreators.put(type,  typeToken);  [CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  instanceCreators.put(type,  typeToken);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	instanceCreators.put(type,  typeToken);	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Class    <?    super    T>    rawType    =    typeToken.getRawType();    instanceCreators.put(type,    rawType);    	non-compiled	[CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	31	None	replace
163	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawType();  instanceCreators.put(type,  rawType);  [CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawType();  instanceCreators.put(type,  rawType);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.getRawType();  instanceCreators.put(type,  rawType);	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Class    <?    super    T>    rawType    =    typeToken.getRawType();    instanceCreators.put(type,    rawType);    	non-compiled	[CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	31	None	replace
164	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSubtype(typeToken.getSupertype());  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSubtype(typeToken.getSupertype());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSubtype(typeToken.getSupertype());	  final    Class    <?    super    T>    rawType    =    typeToken.getsupertype();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
165	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getPropertyType(typeToken.getSuperType());  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getPropertyType(typeToken.getSuperType());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getPropertyType(typeToken.getSuperType());	  final    Class    <?    super    T>    rawType    =    typeToken.getsupertype();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
166	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperClass().toQualifiedName();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperClass().toQualifiedName();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperClass().toQualifiedName();	  final    Class    <?    super    T>    rawType    =    typeToken.toQualifiedName();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
167	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawClass().toQualifiedName();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawClass().toQualifiedName();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawClass().toQualifiedName();	  final    Class    <?    super    T>    rawType    =    typeToken.toQualifiedName();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
168	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.fromQualifiedName();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.fromQualifiedName();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.fromQualifiedName();	  final    Class    <?    super    T>    rawType    =    typeToken.toQualifiedName();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
169	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typeToken.getRawSuperclass());  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typeToken.getRawSuperclass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typeToken.getRawSuperclass());	  final    Class    <?    super    T>    rawType    =    typeToken.getRawSuperclass();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
170	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawSubtype(typeToken.getRawSuperclass());  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawSubtype(typeToken.getRawSuperclass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawSubtype(typeToken.getRawSuperclass());	  final    Class    <?    super    T>    rawType    =    typeToken.getRawSuperclass();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
171	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawSuperclass()  ||  typeToken.getRawSuperclass();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawSuperclass()  ||  typeToken.getRawSuperclass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawSuperclass()  ||  typeToken.getRawSuperclass();	  final    Class    <?    super    T>    rawType    =    typeToken.getRawSuperclass();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
172	[BUG]  [BUGGY]  final  Class  <?  super  T>  typeType  =  type.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  typeType  =  type.restrictByNotNullOrUndefined();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  typeType  =  type.restrictByNotNullOrUndefined();	  final    Class    <?    super    T>    rawType    =    token.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
173	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSupertype()?  typeToken.hasSuperType()  :  typeToken.getSupertype();  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSupertype()?  typeToken.hasSuperType()  :  typeToken.getSupertype();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSupertype()?  typeToken.hasSuperType()  :  typeToken.getSupertype();	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSupertype()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
174	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperType()?  typeToken.getSupertype()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperType()?  typeToken.getSupertype()  :  typeToken;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperType()?  typeToken.getSupertype()  :  typeToken;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSupertype()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
175	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isConstructor()?  typeToken.getSupertype()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isConstructor()?  typeToken.getSupertype()  :  typeToken;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isConstructor()?  typeToken.getSupertype()  :  typeToken;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSupertype()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
176	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.getSuperType());  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.getSuperType());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.getSuperType());	  Class    <?    super    T>    rawType    =    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
177	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getsuperType();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getsuperType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.getsuperType();	  Class    <?    super    T>    rawType    =    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
178	[BUG]  [BUGGY]  InstanceCreator  <  T>  instanceCreators  =  instances.get(type);  [CE]  cannot  find  symbol  instances  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  InstanceCreator  <  T>  instanceCreators  =  instances.get(type);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	InstanceCreator  <  T>  instanceCreators  =  instances.get(type);	  InstanceCreator    <    T>    instanceCreators    =    instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  instances	93	None	replace
179	[BUG]  [BUGGY]  InstanceCreator  <  T>  instanceCreators  =  instanceCreators.get(type,  type);  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  InstanceCreator  <  T>  instanceCreators  =  instanceCreators.get(type,  type);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	InstanceCreator  <  T>  instanceCreators  =  instanceCreators.get(type,  type);	  InstanceCreator    <    T>    instanceCreators    =    instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
180	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreators  =  instanceCreators.get(type);  [CE]  incompatible  types  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  InstanceCreator  <  T>  typeCreators  =  instanceCreators.get(type);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	InstanceCreator  <  T>  typeCreators  =  instanceCreators.get(type);	  InstanceCreator    <    T>    instanceCreators    =    instanceCreators.get(type);    	non-compiled	[CE]  incompatible  types	93	None	replace
181	[BUG]  [BUGGY]  InstanceCreator  <  T>  instanceCreators  =  instanceCreators.get(type,  typeToken);  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  InstanceCreator  <  T>  instanceCreators  =  instanceCreators.get(type,  typeToken);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	InstanceCreator  <  T>  instanceCreators  =  instanceCreators.get(type,  typeToken);	  InstanceCreator    <    T>    instanceCreators    =    instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
182	[BUG]  [BUGGY]  InstanceCreator  <  T>  instanceCreators  =  types.get(instanceCreators);  [CE]  cannot  find  symbol  types  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  InstanceCreator  <  T>  instanceCreators  =  types.get(instanceCreators);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	InstanceCreator  <  T>  instanceCreators  =  types.get(instanceCreators);	  InstanceCreator    <    T>    instanceCreators    =    instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  types	93	None	replace
183	[BUG]  [BUGGY]  InstanceCreator  <  T>  instanceCreators  =  type.getInstanceCreators();  [CE]  cannot  find  symbol  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  InstanceCreator  <  T>  instanceCreators  =  type.getInstanceCreators();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	InstanceCreator  <  T>  instanceCreators  =  type.getInstanceCreators();	  InstanceCreator    <    T>    instanceCreators    =    instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
184	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?>  rawType  =  typeToken.restrictByNotNullOrUndefined();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?>  rawType  =  typeToken.restrictByNotNullOrUndefined();	  Class    <?>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
185	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.constructType(typeToken.getRawClass());  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?>  rawType  =  typeToken.constructType(typeToken.getRawClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?>  rawType  =  typeToken.constructType(typeToken.getRawClass());	  Class    <?>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
186	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.getRawClass()  ||  typeToken.getRawClass();  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?>  rawType  =  typeToken.getRawClass()  ||  typeToken.getRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?>  rawType  =  typeToken.getRawClass()  ||  typeToken.getRawClass();	  Class    <?>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
187	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.getRawClass()  ||  typeToken.getRawClass()!=  null;  [CE]  cannot  find  symbol  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?>  rawType  =  typeToken.getRawClass()  ||  typeToken.getRawClass()!=  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?>  rawType  =  typeToken.getRawClass()  ||  typeToken.getRawClass()!=  null;	  Class    <?>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
188	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.toRawClass();  [CE]  cannot  find  symbol  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?>  rawType  =  typeToken.toRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?>  rawType  =  typeToken.toRawClass();	  Class    <?>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
189	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.referenceName();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.referenceName();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.referenceName();	  final    Class    <?    super    T>    rawType    =    typeToken.getReferenceName();    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
190	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getSuperType();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getSuperType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.getSuperType();	  final    Class    <?    super    T>    rawType    =    this.typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
191	[BUG]  [BUGGY]  final  Class  <?  super  T>  typeType  =  this.typeToken.getSuperType();  [CE]  cannot  find  symbol  typeToken  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  typeType  =  this.typeToken.getSuperType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  typeType  =  this.typeToken.getSuperType();	  final    Class    <?    super    T>    rawType    =    this.typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol  typeToken	91	None	replace
192	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  getTypeToken().getSuperType();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  getTypeToken().getSuperType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  getTypeToken().getSuperType();	  final    Class    <?    super    T>    rawType    =    this.typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
193	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  types.getSuperType();  [CE]  cannot  find  symbol  types  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  types.getSuperType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  types.getSuperType();	  final    Class    <?    super    T>    rawType    =    this.typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol  types	91	None	replace
194	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(typeToken,  typeToken.getQualifiedName());  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(typeToken,  typeToken.getQualifiedName());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(typeToken,  typeToken.getQualifiedName());	  final    Class    <?    super    T>    rawType    =    typeToken.restrictByNotNullOrUndefined(typeToken.getQualifiedName());    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
195	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.restrictByNotNullOrUndefined(typeToken.getQualifiedName());  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.restrictByNotNullOrUndefined(typeToken.getQualifiedName());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.restrictByNotNullOrUndefined(typeToken.getQualifiedName());	  final    Class    <?    super    T>    rawType    =    typeToken.restrictByNotNullOrUndefined(typeToken.getQualifiedName());    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
196	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(typeToken.getQualifiedName(),  typeToken.getQualifiedName());  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(typeToken.getQualifiedName(),  typeToken.getQualifiedName());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(typeToken.getQualifiedName(),  typeToken.getQualifiedName());	  final    Class    <?    super    T>    rawType    =    typeToken.restrictByNotNullOrUndefined(typeToken.getQualifiedName());    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
197	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(type,  typeToken.getQualifiedName());  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(type,  typeToken.getQualifiedName());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(type,  typeToken.getQualifiedName());	  final    Class    <?    super    T>    rawType    =    typeToken.restrictByNotNullOrUndefined(typeToken.getQualifiedName());    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
198	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(rawType.getQualifiedName());  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(rawType.getQualifiedName());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(rawType.getQualifiedName());	  final    Class    <?    super    T>    rawType    =    typeToken.restrictByNotNullOrUndefined(typeToken.getQualifiedName());    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
199	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(typetoken.getQualifiedName());  [CE]  cannot  find  symbol  typetoken  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(typetoken.getQualifiedName());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(typetoken.getQualifiedName());	  final    Class    <?    super    T>    rawType    =    typeToken.restrictByNotNullOrUndefined(typeToken.getQualifiedName());    	non-compiled	[CE]  cannot  find  symbol  typetoken	102	None	replace
200	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.getRawParameterType());  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.getRawParameterType());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.getRawParameterType());	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
201	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  getRawParameterType();  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  getRawParameterType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken,  getRawParameterType();	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType();    	non-compiled	[CE]  ';'  expected	43	None	replace
202	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType()  ||  typeToken.getRawParameterType()!=  null;  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType()  ||  typeToken.getRawParameterType()!=  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType()  ||  typeToken.getRawParameterType()!=  null;	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
203	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getParameterType();  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getParameterType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getParameterType();	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
204	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType()  ||  typeToken.getRawParameterType();  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType()  ||  typeToken.getRawParameterType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType()  ||  typeToken.getRawParameterType();	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
205	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getQualifiedName();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getQualifiedName();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.getQualifiedName();	  final    Class    <?    super    T>    rawType    =    this.typeToken.getQualifiedName();    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
206	[BUG]  [BUGGY]  final  Class  <?  super  T>  typeType  =  this.typeToken.getQualifiedName();  [CE]  cannot  find  symbol  typeToken  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  typeType  =  this.typeToken.getQualifiedName();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  typeType  =  this.typeToken.getQualifiedName();	  final    Class    <?    super    T>    rawType    =    this.typeToken.getQualifiedName();    	non-compiled	[CE]  cannot  find  symbol  typeToken	101	None	replace
207	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  getTypeToken().getQualifiedName();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  getTypeToken().getQualifiedName();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  getTypeToken().getQualifiedName();	  final    Class    <?    super    T>    rawType    =    this.typeToken.getQualifiedName();    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
208	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  types.getQualifiedName();  [CE]  cannot  find  symbol  types  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  types.getQualifiedName();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  types.getQualifiedName();	  final    Class    <?    super    T>    rawType    =    this.typeToken.getQualifiedName();    	non-compiled	[CE]  cannot  find  symbol  types	101	None	replace
209	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  defaultImplementation.getRawSuperClass();  [CE]  cannot  find  symbol  defaultImplementation  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  defaultImplementation.getRawSuperClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  defaultImplementation.getRawSuperClass();	  final    Class    <?    super    T>    rawType    =    typeToken,    defaultImplementation.getRawSuperClass();    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	12	None	replace
210	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  defaultImplementation.getSuperClass();  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  defaultImplementation.getSuperClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken,  defaultImplementation.getSuperClass();	  final    Class    <?    super    T>    rawType    =    typeToken,    defaultImplementation.getRawSuperClass();    	non-compiled	[CE]  ';'  expected	12	None	replace
211	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  defaultImplementation.getRawSuperclass();  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  defaultImplementation.getRawSuperclass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken,  defaultImplementation.getRawSuperclass();	  final    Class    <?    super    T>    rawType    =    typeToken,    defaultImplementation.getRawSuperClass();    	non-compiled	[CE]  ';'  expected	12	None	replace
212	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  defaultImplementation.getRawClass();  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  defaultImplementation.getRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken,  defaultImplementation.getRawClass();	  final    Class    <?    super    T>    rawType    =    typeToken,    defaultImplementation.getRawSuperClass();    	non-compiled	[CE]  ';'  expected	12	None	replace
213	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.subtract(typeToken.toRawSuperClass());  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.subtract(typeToken.toRawSuperClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.subtract(typeToken.toRawSuperClass());	  final    Class    <?    super    T>    rawType    =    typeToken.toRawSuperClass();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
214	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.fromRawSuperClass();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.fromRawSuperClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.fromRawSuperClass();	  final    Class    <?    super    T>    rawType    =    typeToken.toRawSuperClass();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
215	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.toRawSuperClass()  ||  typeToken.toRawSuperClass();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.toRawSuperClass()  ||  typeToken.toRawSuperClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.toRawSuperClass()  ||  typeToken.toRawSuperClass();	  final    Class    <?    super    T>    rawType    =    typeToken.toRawSuperClass();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
216	[BUG]  [BUGGY]  Class  <?>  rawType  =  this.rawTypeToken.getRawClass();  [CE]  cannot  find  symbol  rawTypeToken  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?>  rawType  =  this.rawTypeToken.getRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?>  rawType  =  this.rawTypeToken.getRawClass();	  Class    <?>    rawType    =    type.getRawClass();    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	35	None	replace
217	[BUG]  [BUGGY]  Class  <?>  rawType  =  types.getRawClass();  [CE]  cannot  find  symbol  types  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?>  rawType  =  types.getRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?>  rawType  =  types.getRawClass();	  Class    <?>    rawType    =    type.getRawClass();    	non-compiled	[CE]  cannot  find  symbol  types	35	None	replace
218	[BUG]  [BUGGY]  Type  <?>  rawType  =  typeToken.getRawClass();  [CE]  type  Type  does  not  take  parameters  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Type  <?>  rawType  =  typeToken.getRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Type  <?>  rawType  =  typeToken.getRawClass();	  Class    <?>    rawType    =    type.getRawClass();    	non-compiled	[CE]  type  Type  does  not  take  parameters	35	None	replace
219	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperClass()?  typeToken.getSuperClass()  :  type;  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperClass()?  typeToken.getSuperClass()  :  type;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperClass()?  typeToken.getSuperClass()  :  type;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperClass()?    typeToken.getSuperClass()    :    type;    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
220	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.hasSuperClass()?  typeToken.getSuperClass()  :  type;  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.hasSuperClass()?  typeToken.getSuperClass()  :  type;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.hasSuperClass()?  typeToken.getSuperClass()  :  type;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperClass()?    typeToken.getSuperClass()    :    type;    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
221	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperClass()?  typeToken.hasSuperClass()  :  type;  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperClass()?  typeToken.hasSuperClass()  :  type;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperClass()?  typeToken.hasSuperClass()  :  type;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperClass()?    typeToken.getSuperClass()    :    type;    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
222	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSuperClass()  :  type;  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSuperClass()  :  type;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSuperClass()  :  type;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperClass()?    typeToken.getSuperClass()    :    type;    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
223	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSuperClass()  :  type;  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSuperClass()  :  type;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSuperClass()  :  type;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperClass()?    typeToken.getSuperClass()    :    type;    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
224	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()  &&  typeToken.getSuperclass();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()  &&  typeToken.getSuperclass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()  &&  typeToken.getSuperclass();	  final    Class    <?    super    T>    rawType    =    typeToken.getSuperclass()    ||    typeToken.getSuperclass();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
225	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass(),  typeToken.getSuperclass();  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass(),  typeToken.getSuperclass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass(),  typeToken.getSuperclass();	  final    Class    <?    super    T>    rawType    =    typeToken.getSuperclass()    ||    typeToken.getSuperclass();    	non-compiled	[CE]  ';'  expected	10	None	replace
226	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperClass()  ||  typeToken.getSuperclass();  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperClass()  ||  typeToken.getSuperclass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperClass()  ||  typeToken.getSuperclass();	  final    Class    <?    super    T>    rawType    =    typeToken.getSuperclass()    ||    typeToken.getSuperclass();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
227	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()  ||  typeToken.isInterface();  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()  ||  typeToken.isInterface();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()  ||  typeToken.isInterface();	  final    Class    <?    super    T>    rawType    =    typeToken.getSuperclass()    ||    typeToken.getSuperclass();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
228	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()  /|  typeToken.getSuperclass();  [CE]  illegal  start  of  expression  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()  /|  typeToken.getSuperclass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()  /|  typeToken.getSuperclass();	  final    Class    <?    super    T>    rawType    =    typeToken.getSuperclass()    ||    typeToken.getSuperclass();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
229	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()  ||  typeToken.getInterfaceType();  [CE]  cannot  find  symbol  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()  ||  typeToken.getInterfaceType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()  ||  typeToken.getInterfaceType();	  final    Class    <?    super    T>    rawType    =    typeToken.getSuperclass()    ||    typeToken.getSuperclass();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
230	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()?  typeToken.getQualifiedName()  :  type;  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()?  typeToken.getQualifiedName()  :  type;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()?  typeToken.getQualifiedName()  :  type;	  final    Class    <?    super    T>    rawType    =    typeToken.hasQualifiedName()?    typeToken.getQualifiedName()    :    type;    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
231	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasQualifiedName()?  typeToken.getQualifiedName()  :  typeToken.getQualifiedName();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasQualifiedName()?  typeToken.getQualifiedName()  :  typeToken.getQualifiedName();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.hasQualifiedName()?  typeToken.getQualifiedName()  :  typeToken.getQualifiedName();	  final    Class    <?    super    T>    rawType    =    typeToken.hasQualifiedName()?    typeToken.getQualifiedName()    :    type;    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
232	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.hasQualifiedName()?  typeToken.getQualifiedName()  :  type;  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.hasQualifiedName()?  typeToken.getQualifiedName()  :  type;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.hasQualifiedName()?  typeToken.getQualifiedName()  :  type;	  final    Class    <?    super    T>    rawType    =    typeToken.hasQualifiedName()?    typeToken.getQualifiedName()    :    type;    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
233	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isQualifiedName()?  typeToken.getQualifiedName()  :  type;  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isQualifiedName()?  typeToken.getQualifiedName()  :  type;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isQualifiedName()?  typeToken.getQualifiedName()  :  type;	  final    Class    <?    super    T>    rawType    =    typeToken.hasQualifiedName()?    typeToken.getQualifiedName()    :    type;    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
234	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasQualifiedName()?  typeToken.getQualifiedName()  :  type);  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasQualifiedName()?  typeToken.getQualifiedName()  :  type);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.hasQualifiedName()?  typeToken.getQualifiedName()  :  type);	  final    Class    <?    super    T>    rawType    =    typeToken.hasQualifiedName()?    typeToken.getQualifiedName()    :    type;    	non-compiled	[CE]  ';'  expected	55	None	replace
235	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(type,  typeToken.getRawParameterType(1));  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(type,  typeToken.getRawParameterType(1));  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(type,  typeToken.getRawParameterType(1));	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(typeToken.getRawParameterType(1));    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
236	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typeToken,  typeToken.getRawParameterType(1));  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typeToken,  typeToken.getRawParameterType(1));  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typeToken,  typeToken.getRawParameterType(1));	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(typeToken.getRawParameterType(1));    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
237	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getRawParameterType(typeToken.getRawParameterType(1));  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getRawParameterType(typeToken.getRawParameterType(1));  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.getRawParameterType(typeToken.getRawParameterType(1));	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(typeToken.getRawParameterType(1));    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
238	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typeToken.getRawParameterType(2));  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typeToken.getRawParameterType(2));  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typeToken.getRawParameterType(2));	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(typeToken.getRawParameterType(1));    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
239	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  + ",:   "+typeToken.getQualifiedName();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  + ",:   "+typeToken.getQualifiedName();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  + ",:   "+typeToken.getQualifiedName();	  final    Class    <?    super    T>    rawType    =    typeToken.getQualifiedName()    +   ":   "+typeToken.getQualifiedName();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
240	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  + ".: "+typeToken.getQualifiedName();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  + ".: "+typeToken.getQualifiedName();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  + ".: "+typeToken.getQualifiedName();	  final    Class    <?    super    T>    rawType    =    typeToken.getQualifiedName()    +   ":   "+typeToken.getQualifiedName();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
241	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRestrictByNotEmptyOrUndefined();  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRestrictByNotEmptyOrUndefined();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRestrictByNotEmptyOrUndefined();	  final    Class    <?    super    T>    rawType    =    typeToken.restrictByNotEmptyOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
242	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.restrictByNotEmptyOrUndefined();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.restrictByNotEmptyOrUndefined();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.restrictByNotEmptyOrUndefined();	  final    Class    <?    super    T>    rawType    =    typeToken.restrictByNotEmptyOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
243	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullable();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullable();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullable();	  final    Class    <?    super    T>    rawType    =    typeToken.restrictByNotEmptyOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
244	[BUG]  [BUGGY]  Category  <?  super  T>  rawType  =  typeToken.getRawType();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Category  <?  super  T>  rawType  =  typeToken.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Category  <?  super  T>  rawType  =  typeToken.getRawType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Category    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
245	[BUG]  [BUGGY]  Type  <?  super  T>  rawType  =  typeToken.getRawType();  [CE]  type  Type  does  not  take  parameters  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Type  <?  super  T>  rawType  =  typeToken.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Type  <?  super  T>  rawType  =  typeToken.getRawType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Category    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  type  Type  does  not  take  parameters	28	None	replace
246	[BUG]  [BUGGY]  SortedMap  <?  super  T>  rawType  =  typeToken.getRawType();  Category  <?  super  T>  rawType  =  typeToken.getRawType();  [CE]  wrong  number  of  type  arguments;  required  2  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  SortedMap  <?  super  T>  rawType  =  typeToken.getRawType();  Category  <?  super  T>  rawType  =  typeToken.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	SortedMap  <?  super  T>  rawType  =  typeToken.getRawType();  Category  <?  super  T>  rawType  =  typeToken.getRawType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Category    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  2	28	None	replace
247	[BUG]  [BUGGY]  typeToken.getRawType();  Category  <?  super  T>  rawType  =  typeToken.getRawType();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  typeToken.getRawType();  Category  <?  super  T>  rawType  =  typeToken.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	typeToken.getRawType();  Category  <?  super  T>  rawType  =  typeToken.getRawType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Category    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
248	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Category  <?  super  T>  rawType  =  typeToken.getRawType();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Category  <?  super  T>  rawType  =  typeToken.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Category  <?  super  T>  rawType  =  typeToken.getRawType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Category    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
249	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()?  typeToken.getSuperclass()  :  null;  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()?  typeToken.getSuperclass()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()?  typeToken.getSuperclass()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperclass()?    typeToken.getSuperclass()    :    null;    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
250	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()?  typeToken.hasSuperclass()  :  null;  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()?  typeToken.hasSuperclass()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()?  typeToken.hasSuperclass()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperclass()?    typeToken.getSuperclass()    :    null;    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
251	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSuperclass()  :  null;  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSuperclass()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSuperclass()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperclass()?    typeToken.getSuperclass()    :    null;    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
252	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSuperclass()?  typeToken.getSuperclass()  :  null;  [CE]  cannot  find  symbol  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSuperclass()?  typeToken.getSuperclass()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isSuperclass()?  typeToken.getSuperclass()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperclass()?    typeToken.getSuperclass()    :    null;    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
253	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSuperclass()  :  null;  [CE]  cannot  find  symbol  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSuperclass()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSuperclass()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperclass()?    typeToken.getSuperclass()    :    null;    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
254	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.hasSuperclass()?  typeToken.getSuperclass()  :  null;  [CE]  cannot  find  symbol  [FE]                                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.hasSuperclass()?  typeToken.getSuperclass()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.hasSuperclass()?  typeToken.getSuperclass()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperclass()?    typeToken.getSuperclass()    :    null;    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
255	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(rawTypeToken.getRawClass());  [CE]  cannot  find  symbol  rawTypeToken  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(rawTypeToken.getRawClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(rawTypeToken.getRawClass());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getRawClass());    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	19	None	replace
256	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  typeToken.getRawClass());  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  typeToken.getRawClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  typeToken.getRawClass());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getRawClass());    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
257	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  defaultImplementation.getRawClass());  [CE]  cannot  find  symbol  defaultImplementation  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  defaultImplementation.getRawClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  defaultImplementation.getRawClass());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getRawClass());    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	19	None	replace
258	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  context.getRawClass());  [CE]  cannot  find  symbol  context  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  context.getRawClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  context.getRawClass());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getRawClass());    	non-compiled	[CE]  cannot  find  symbol  context	19	None	replace
259	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(rawType.getRawClass());  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(rawType.getRawClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(rawType.getRawClass());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getRawClass());    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
260	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  getRawClass());  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  getRawClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  getRawClass());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getRawClass());    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
261	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getRestrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getRestrictByNotNullOrUndefined();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.getRestrictByNotNullOrUndefined();	  final    Class    <?    super    T>    rawType    =    type.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
262	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  &&  typeToken.getQualifiedName();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  &&  typeToken.getQualifiedName();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  &&  typeToken.getQualifiedName();	  final    Class    <?    super    T>    rawType    =    typeToken.getQualifiedName()    ||    typeToken.getQualifiedName();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
263	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  /|  typeToken.getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  /|  typeToken.getQualifiedName();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  /|  typeToken.getQualifiedName();	  final    Class    <?    super    T>    rawType    =    typeToken.getQualifiedName()    ||    typeToken.getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
264	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName(),  typeToken.getQualifiedName();  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName(),  typeToken.getQualifiedName();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName(),  typeToken.getQualifiedName();	  final    Class    <?    super    T>    rawType    =    typeToken.getQualifiedName()    ||    typeToken.getQualifiedName();    	non-compiled	[CE]  ';'  expected	4	None	replace
265	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  /  ||  typeToken.getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  /  ||  typeToken.getQualifiedName();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  /  ||  typeToken.getQualifiedName();	  final    Class    <?    super    T>    rawType    =    typeToken.getQualifiedName()    ||    typeToken.getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
266	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getQualifiedName()  ||  typeToken.getQualifiedName();  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getQualifiedName()  ||  typeToken.getQualifiedName();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.getQualifiedName()  ||  typeToken.getQualifiedName();	  final    Class    <?    super    T>    rawType    =    typeToken.getQualifiedName()    ||    typeToken.getQualifiedName();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
267	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getPrimitiveType()  ||  typeToken.getPrimitiveType()!=  null;  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getPrimitiveType()  ||  typeToken.getPrimitiveType()!=  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getPrimitiveType()  ||  typeToken.getPrimitiveType()!=  null;	  final    Class    <?    super    T>    rawType    =    typeToken.getPrimitiveType();    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
268	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getPrimitiveType()  ||  typeToken.getPrimitiveType()  ==  null;  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getPrimitiveType()  ||  typeToken.getPrimitiveType()  ==  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getPrimitiveType()  ||  typeToken.getPrimitiveType()  ==  null;	  final    Class    <?    super    T>    rawType    =    typeToken.getPrimitiveType();    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
269	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getGrandparent();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getGrandparent();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getGrandparent();	  final    Class    <?    super    T>    rawType    =    typeToken.getPrimitiveType();    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
270	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawType  =  typeToken.getRawType();  [CE]  incompatible  types  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  ObjectConstructor  <  T>  rawType  =  typeToken.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	ObjectConstructor  <  T>  rawType  =  typeToken.getRawType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    ObjectConstructor    <    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  incompatible  types	27	None	replace
271	[BUG]  [BUGGY]  final  ObjectConstructor  <  T>  rawType  =  typeToken.getRawType();  [CE]  incompatible  types  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  ObjectConstructor  <  T>  rawType  =  typeToken.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  ObjectConstructor  <  T>  rawType  =  typeToken.getRawType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    ObjectConstructor    <    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  incompatible  types	27	None	replace
272	[BUG]  [BUGGY]  final  Type  <?  super  T>  rawType  =  typeToken.getRawType();  [CE]  type  Type  does  not  take  parameters  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Type  <?  super  T>  rawType  =  typeToken.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Type  <?  super  T>  rawType  =  typeToken.getRawType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    ObjectConstructor    <    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  type  Type  does  not  take  parameters	27	None	replace
273	[BUG]  [BUGGY]  Constructor  <  T>  rawType  =  typeToken.getRawType();  [CE]  incompatible  types  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Constructor  <  T>  rawType  =  typeToken.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Constructor  <  T>  rawType  =  typeToken.getRawType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    ObjectConstructor    <    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  incompatible  types	27	None	replace
274	[BUG]  [BUGGY]  TypeToken  <  T>  rawType  =  typeToken.getRawType();  [CE]  incompatible  types  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  TypeToken  <  T>  rawType  =  typeToken.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	TypeToken  <  T>  rawType  =  typeToken.getRawType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    ObjectConstructor    <    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  incompatible  types	27	None	replace
275	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperClass()?  typeToken.getSuperClass()  :  null;  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperClass()?  typeToken.getSuperClass()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperClass()?  typeToken.getSuperClass()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperClass()?    typeToken.getSuperClass()    :    null;    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
276	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperClass()?  typeToken.hasSuperClass()  :  null;  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperClass()?  typeToken.hasSuperClass()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperClass()?  typeToken.hasSuperClass()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperClass()?    typeToken.getSuperClass()    :    null;    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
277	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSuperClass()  :  null;  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSuperClass()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSuperClass()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperClass()?    typeToken.getSuperClass()    :    null;    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
278	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSuperClass()  :  null;  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSuperClass()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSuperClass()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperClass()?    typeToken.getSuperClass()    :    null;    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
279	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isConstructor()?  typeToken.getSuperClass()  :  null;  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isConstructor()?  typeToken.getSuperClass()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isConstructor()?  typeToken.getSuperClass()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperClass()?    typeToken.getSuperClass()    :    null;    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
280	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasSuperclass()?  typeToken.getSuperClass()  :  null;  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasSuperclass()?  typeToken.getSuperClass()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.hasSuperclass()?  typeToken.getSuperClass()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperClass()?    typeToken.getSuperClass()    :    null;    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
281	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getExpression();  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getExpression();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getExpression();	  final    Class    <?    super    T>    rawType    =    typeToken.getsuperclass();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
282	[BUG]  [BUGGY]  final  Type  <  T>  rawType  =  typeToken.getRawType();  [CE]  type  Type  does  not  take  parameters  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Type  <  T>  rawType  =  typeToken.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Type  <  T>  rawType  =  typeToken.getRawType();	  Type    <    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  type  Type  does  not  take  parameters	94	None	replace
283	[BUG]  [BUGGY]  Type  <  T>  rawType  =  typeToken.getQualifiedName();  [CE]  type  Type  does  not  take  parameters  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Type  <  T>  rawType  =  typeToken.getQualifiedName();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Type  <  T>  rawType  =  typeToken.getQualifiedName();	  Type    <    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  type  Type  does  not  take  parameters	94	None	replace
284	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperClass()?  typeToken.getSuperClass()  :  typeToken.getSuperClass();  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperClass()?  typeToken.getSuperClass()  :  typeToken.getSuperClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperClass()?  typeToken.getSuperClass()  :  typeToken.getSuperClass();	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperClass()?    typeToken.getSuperClass()    :    typeToken.getSuperClass();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
285	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperClass()?  typeToken.getSuperClass()  :  typeToken.getSuperClass();  [CE]  ')'  expected  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperClass()?  typeToken.getSuperClass()  :  typeToken.getSuperClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperClass()?  typeToken.getSuperClass()  :  typeToken.getSuperClass();	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperClass()?    typeToken.getSuperClass()    :    typeToken.getSuperClass();    	non-compiled	[CE]  ')'  expected	58	None	replace
286	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isConstructor()?  typeToken.getSuperClass()  :  typeToken.getSuperClass();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isConstructor()?  typeToken.getSuperClass()  :  typeToken.getSuperClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isConstructor()?  typeToken.getSuperClass()  :  typeToken.getSuperClass();	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperClass()?    typeToken.getSuperClass()    :    typeToken.getSuperClass();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
287	[BUG]  [BUGGY]  if(type.isUnknownType())  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  if(type.isUnknownType())  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	if(type.isUnknownType())  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
288	[BUG]  [BUGGY]  if(type.isUnknownType())  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  if(type.isUnknownType())  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	if(type.isUnknownType())  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
289	[BUG]  [BUGGY]  if(type.isUnknownType())  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  if(type.isUnknownType())  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	if(type.isUnknownType())  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
290	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperType()?  typeToken.getSuperType()  :  typeToken.getSuperType();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperType()?  typeToken.getSuperType()  :  typeToken.getSuperType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperType()?  typeToken.getSuperType()  :  typeToken.getSuperType();	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSuperType()    :    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
291	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isConstructor()?  typeToken.getSuperType()  :  typeToken.getSuperType();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isConstructor()?  typeToken.getSuperType()  :  typeToken.getSuperType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isConstructor()?  typeToken.getSuperType()  :  typeToken.getSuperType();	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSuperType()    :    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
292	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSuperType()  :  typeToken.getSuperType();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSuperType()  :  typeToken.getSuperType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSuperType()  :  typeToken.getSuperType();	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSuperType()    :    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
293	[BUG]  [BUGGY]  Constructor  <?  super  T>  rawType  =  typeToken.getRawType();  [CE]  incompatible  types  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Constructor  <?  super  T>  rawType  =  typeToken.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Constructor  <?  super  T>  rawType  =  typeToken.getRawType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Constructor    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  incompatible  types	29	None	replace
294	[BUG]  [BUGGY]  final  Constructor  <?  super  T>  rawType  =  typeToken.getRawType();  [CE]  incompatible  types  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Constructor  <?  super  T>  rawType  =  typeToken.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Constructor  <?  super  T>  rawType  =  typeToken.getRawType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Constructor    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  incompatible  types	29	None	replace
295	[BUG]  [BUGGY]  ObjectConstructor  <?  super  T>  rawType  =  typeToken.getRawType();  [CE]  incompatible  types  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  ObjectConstructor  <?  super  T>  rawType  =  typeToken.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	ObjectConstructor  <?  super  T>  rawType  =  typeToken.getRawType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Constructor    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  incompatible  types	29	None	replace
296	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.getRawClass());  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.getRawClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.getRawClass());	  Class    <?    super    T>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
297	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getSuperclass();  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getSuperclass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.getSuperclass();	  Class    <?    super    T>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
298	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getSimpleType();  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getSimpleType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.getSimpleType();	  Class    <?    super    T>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
299	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  defaultConstructor.getRawSuperClass();  [CE]  cannot  find  symbol  defaultConstructor  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  defaultConstructor.getRawSuperClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  defaultConstructor.getRawSuperClass();	  final    Class    <?    super    T>    rawType    =    typeToken,    defaultConstructor.getRawSuperClass();    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	88	None	replace
300	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getSuperClass();  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getSuperClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getSuperClass();	  final    Class    <?    super    T>    rawType    =    typeToken,    defaultConstructor.getRawSuperClass();    	non-compiled	[CE]  ';'  expected	88	None	replace
301	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRawClass();  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRawClass();	  final    Class    <?    super    T>    rawType    =    typeToken,    defaultConstructor.getRawSuperClass();    	non-compiled	[CE]  ';'  expected	88	None	replace
302	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getImplementationClass();  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getImplementationClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getImplementationClass();	  final    Class    <?    super    T>    rawType    =    typeToken,    defaultConstructor.getRawSuperClass();    	non-compiled	[CE]  ';'  expected	88	None	replace
303	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRawSuperClass();  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRawSuperClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRawSuperClass();	  final    Class    <?    super    T>    rawType    =    typeToken,    defaultConstructor.getRawSuperClass();    	non-compiled	[CE]  ';'  expected	88	None	replace
304	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getRawType();  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.getRawType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    final    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
305	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  types.getRawType();  [CE]  cannot  find  symbol  types  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  types.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  types.getRawType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    final    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol  types	25	None	replace
306	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getReturnType();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getReturnType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getReturnType();	  final    Class    <?    super    T>    rawType    =    typeToken.toString();    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
307	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.toObject();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.toObject();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.toObject();	  final    Class    <?    super    T>    rawType    =    typeToken.toString();    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
308	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  types.getRawType();  [CE]  cannot  find  symbol  types  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  types.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  types.getRawType();	  Class    <?    super    T>    rawType    =    type.getRawType();    	non-compiled	[CE]  cannot  find  symbol  types	47	None	replace
309	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperType()?  typeToken.getSuperType()  :  null;  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperType()?  typeToken.getSuperType()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperType()?  typeToken.getSuperType()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSuperType()    :    null;    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
310	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperType()?  typeToken.getSuperType()  :  null;  [CE]  ')'  expected  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperType()?  typeToken.getSuperType()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperType()?  typeToken.getSuperType()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSuperType()    :    null;    	non-compiled	[CE]  ')'  expected	65	None	replace
311	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperType()?  typeToken.hasSuperType()  :  null;  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperType()?  typeToken.hasSuperType()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperType()?  typeToken.hasSuperType()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSuperType()    :    null;    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
312	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isConstructor()?  typeToken.getSuperType()  :  null;  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isConstructor()?  typeToken.getSuperType()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isConstructor()?  typeToken.getSuperType()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSuperType()    :    null;    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
313	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSuperType()  :  null;  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSuperType()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSuperType()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSuperType()    :    null;    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
314	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.hasSuperType()?  typeToken.getSuperType()  :  null;  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.hasSuperType()?  typeToken.getSuperType()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.hasSuperType()?  typeToken.getSuperType()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSuperType()    :    null;    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
315	[BUG]  [BUGGY]  final  InstanceCreator  <?  super  T>  rawType  =  typeToken.getRawType();  [CE]  incompatible  types  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  InstanceCreator  <?  super  T>  rawType  =  typeToken.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  InstanceCreator  <?  super  T>  rawType  =  typeToken.getRawType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    InstanceCreator    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  incompatible  types	75	None	replace
316	[BUG]  [BUGGY]  InstanceCreator  <?  super  T>  rawType  =  typeToken.getRawType();  [CE]  incompatible  types  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  InstanceCreator  <?  super  T>  rawType  =  typeToken.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	InstanceCreator  <?  super  T>  rawType  =  typeToken.getRawType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    InstanceCreator    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  incompatible  types	75	None	replace
317	[BUG]  [BUGGY]  final  InstanceCreator  <?  super  T>  rawType  =  type.getRawType();  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  InstanceCreator  <?  super  T>  rawType  =  type.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  InstanceCreator  <?  super  T>  rawType  =  type.getRawType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    InstanceCreator    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
318	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()?  typeToken.getSuperclass()  :  typeToken.getSuperclass();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()?  typeToken.getSuperclass()  :  typeToken.getSuperclass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()?  typeToken.getSuperclass()  :  typeToken.getSuperclass();	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperclass()?    typeToken.getSuperclass()    :    typeToken.getSuperclass();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
319	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()?  typeToken.hasSuperclass()  :  typeToken.getSuperclass();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()?  typeToken.hasSuperclass()  :  typeToken.getSuperclass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()?  typeToken.hasSuperclass()  :  typeToken.getSuperclass();	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperclass()?    typeToken.getSuperclass()    :    typeToken.getSuperclass();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
320	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperclass()?  typeToken.getSuperclass()  :  typeToken.getSuperclass();  [CE]  ')'  expected  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperclass()?  typeToken.getSuperclass()  :  typeToken.getSuperclass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperclass()?  typeToken.getSuperclass()  :  typeToken.getSuperclass();	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperclass()?    typeToken.getSuperclass()    :    typeToken.getSuperclass();    	non-compiled	[CE]  ')'  expected	67	None	replace
321	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSuperclass()  :  typeToken.getSuperclass();  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSuperclass()  :  typeToken.getSuperclass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSuperclass()  :  typeToken.getSuperclass();	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperclass()?    typeToken.getSuperclass()    :    typeToken.getSuperclass();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
322	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSuperclass()  :  typeToken.getSuperclass();  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSuperclass()  :  typeToken.getSuperclass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSuperclass()  :  typeToken.getSuperclass();	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperclass()?    typeToken.getSuperclass()    :    typeToken.getSuperclass();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
323	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isConstructor()?  typeToken.getSuperclass()  :  typeToken.getSuperclass();  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isConstructor()?  typeToken.getSuperclass()  :  typeToken.getSuperclass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isConstructor()?  typeToken.getSuperclass()  :  typeToken.getSuperclass();	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperclass()?    typeToken.getSuperclass()    :    typeToken.getSuperclass();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
324	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  typeToken.getSupertype());  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  typeToken.getSupertype());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  typeToken.getSupertype());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSupertype());    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
325	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(rawTypeToken.getSupertype());  [CE]  cannot  find  symbol  rawTypeToken  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(rawTypeToken.getSupertype());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(rawTypeToken.getSupertype());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSupertype());    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	6	None	replace
326	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  defaultImplementation.getSupertype());  [CE]  cannot  find  symbol  defaultImplementation  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  defaultImplementation.getSupertype());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  defaultImplementation.getSupertype());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSupertype());    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	6	None	replace
327	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSupertype().constructType(typeToken.getSupertype());  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSupertype().constructType(typeToken.getSupertype());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSupertype().constructType(typeToken.getSupertype());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSupertype());    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
328	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  this.typeToken.getSupertype());  [CE]  cannot  find  symbol  typeToken  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  this.typeToken.getSupertype());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  this.typeToken.getSupertype());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSupertype());    	non-compiled	[CE]  cannot  find  symbol  typeToken	6	None	replace
329	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  types.constructType(typeToken.getSupertype());  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  types.constructType(typeToken.getSupertype());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  types.constructType(typeToken.getSupertype());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSupertype());    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
330	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSupertype(type);  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSupertype(type);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSupertype(type);	  final    Class    <?    super    T>    rawType    =    typeToken.getSupertype(typeToken);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
331	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSupertype(rawType);  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSupertype(rawType);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSupertype(rawType);	  final    Class    <?    super    T>    rawType    =    typeToken.getSupertype(typeToken);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
332	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSupertype(defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSupertype(defaultImplementation);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSupertype(defaultImplementation);	  final    Class    <?    super    T>    rawType    =    typeToken.getSupertype(typeToken);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	8	None	replace
333	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSupertype(rawTypeToken);  [CE]  cannot  find  symbol  rawTypeToken  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSupertype(rawTypeToken);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSupertype(rawTypeToken);	  final    Class    <?    super    T>    rawType    =    typeToken.getSupertype(typeToken);    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	8	None	replace
334	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  types.getSupertype(typeToken);  [CE]  cannot  find  symbol  types  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  types.getSupertype(typeToken);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  types.getSupertype(typeToken);	  final    Class    <?    super    T>    rawType    =    typeToken.getSupertype(typeToken);    	non-compiled	[CE]  cannot  find  symbol  types	8	None	replace
335	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.getSuperClass());  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.getSuperClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.getSuperClass());	  Class    <?    super    T>    rawType    =    typeToken.getSuperClass();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
336	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getSuperClass()  ||  typeToken.getSuperClass();  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getSuperClass()  ||  typeToken.getSuperClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.getSuperClass()  ||  typeToken.getSuperClass();	  Class    <?    super    T>    rawType    =    typeToken.getSuperClass();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
337	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getsuperClass();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getsuperClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.getsuperClass();	  Class    <?    super    T>    rawType    =    typeToken.getSuperClass();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
338	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Preconditions.checkState(typeToken.getRawType()  ==  null);  [CE]  cannot  find  symbol  Preconditions  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Preconditions.checkState(typeToken.getRawType()  ==  null);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Preconditions.checkState(typeToken.getRawType()  ==  null);	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Preconditions.checkState(typeToken.getRawType()    ==    null);    	non-compiled	[CE]  cannot  find  symbol  Preconditions	77	None	replace
339	[BUG]  [BUGGY]  Preconditions.checkState(typeToken.getRawType()  ==  null);  [CE]  cannot  find  symbol  Preconditions  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Preconditions.checkState(typeToken.getRawType()  ==  null);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Preconditions.checkState(typeToken.getRawType()  ==  null);	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Preconditions.checkState(typeToken.getRawType()    ==    null);    	non-compiled	[CE]  cannot  find  symbol  Preconditions	77	None	replace
340	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Preconditions.checkState(typeToken.getRawType()!=  null);  [CE]  cannot  find  symbol  Preconditions  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Preconditions.checkState(typeToken.getRawType()!=  null);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.getRawType();  Preconditions.checkState(typeToken.getRawType()!=  null);	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Preconditions.checkState(typeToken.getRawType()    ==    null);    	non-compiled	[CE]  cannot  find  symbol  Preconditions	77	None	replace
341	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Preconditions.checkState(typeToken.getRawType()!=  null);  [CE]  cannot  find  symbol  Preconditions  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Preconditions.checkState(typeToken.getRawType()!=  null);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Preconditions.checkState(typeToken.getRawType()!=  null);	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Preconditions.checkState(typeToken.getRawType()    ==    null);    	non-compiled	[CE]  cannot  find  symbol  Preconditions	77	None	replace
342	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getSuperType();  Preconditions.checkState(typeToken.getRawType()  ==  null);  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getSuperType();  Preconditions.checkState(typeToken.getRawType()  ==  null);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.getSuperType();  Preconditions.checkState(typeToken.getRawType()  ==  null);	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Preconditions.checkState(typeToken.getRawType()    ==    null);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
343	[BUG]  [BUGGY]  Constructor  <?  super  T>  rawType  =  typeToken.getRawType();  Preconditions.checkState(typeToken.getRawType()  ==  null);  [CE]  incompatible  types  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Constructor  <?  super  T>  rawType  =  typeToken.getRawType();  Preconditions.checkState(typeToken.getRawType()  ==  null);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Constructor  <?  super  T>  rawType  =  typeToken.getRawType();  Preconditions.checkState(typeToken.getRawType()  ==  null);	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Preconditions.checkState(typeToken.getRawType()    ==    null);    	non-compiled	[CE]  incompatible  types	77	None	replace
344	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  defaultImplementation.getRestrictByNotNullOrUndefined();  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  defaultImplementation.getRestrictByNotNullOrUndefined();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken,  defaultImplementation.getRestrictByNotNullOrUndefined();	  final    Class    <?    super    T>    rawType    =    typeToken.getRestrictByNotNullOrUndefined();    	non-compiled	[CE]  ';'  expected	49	None	replace
345	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  getRestrictByNotNullOrUndefined();  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  getRestrictByNotNullOrUndefined();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken,  getRestrictByNotNullOrUndefined();	  final    Class    <?    super    T>    rawType    =    typeToken.getRestrictByNotNullOrUndefined();    	non-compiled	[CE]  ';'  expected	49	None	replace
346	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()?  typeToken.getSuperclass()  :  type;  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()?  typeToken.getSuperclass()  :  type;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()?  typeToken.getSuperclass()  :  type;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperclass()?    typeToken.getSuperclass()    :    type;    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
347	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()?  typeToken.hasSuperclass()  :  type;  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()?  typeToken.hasSuperclass()  :  type;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()?  typeToken.hasSuperclass()  :  type;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperclass()?    typeToken.getSuperclass()    :    type;    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
348	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.hasSuperclass()?  typeToken.getSuperclass()  :  type;  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.hasSuperclass()?  typeToken.getSuperclass()  :  type;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.hasSuperclass()?  typeToken.getSuperclass()  :  type;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperclass()?    typeToken.getSuperclass()    :    type;    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
349	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSuperclass()  :  type;  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSuperclass()  :  type;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSuperclass()  :  type;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperclass()?    typeToken.getSuperclass()    :    type;    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
350	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSuperclass()?  typeToken.getSuperclass()  :  type;  [CE]  cannot  find  symbol  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSuperclass()?  typeToken.getSuperclass()  :  type;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isSuperclass()?  typeToken.getSuperclass()  :  type;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperclass()?    typeToken.getSuperclass()    :    type;    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
351	[BUG]  [BUGGY]  final  Class  <?>  rawType  =  typeToken.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?>  rawType  =  typeToken.restrictByNotNullOrUndefined();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?>  rawType  =  typeToken.restrictByNotNullOrUndefined();	  final    Class    <?>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
352	[BUG]  [BUGGY]  final  Class  <?>  rawType  =  typeToken.constructType(typeToken.getRawClass());  [CE]  cannot  find  symbol  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?>  rawType  =  typeToken.constructType(typeToken.getRawClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?>  rawType  =  typeToken.constructType(typeToken.getRawClass());	  final    Class    <?>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
353	[BUG]  [BUGGY]  final  Class  <?>  rawType  =  typeToken.getRawClass()  ||  typeToken.getRawClass();  [CE]  cannot  find  symbol  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?>  rawType  =  typeToken.getRawClass()  ||  typeToken.getRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?>  rawType  =  typeToken.getRawClass()  ||  typeToken.getRawClass();	  final    Class    <?>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
354	[BUG]  [BUGGY]  final  Class  <?>  rawType  =  typeToken.restrictByNotNullOrUndefined(typeToken.getRawClass());  [CE]  cannot  find  symbol  [FE]                                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?>  rawType  =  typeToken.restrictByNotNullOrUndefined(typeToken.getRawClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?>  rawType  =  typeToken.restrictByNotNullOrUndefined(typeToken.getRawClass());	  final    Class    <?>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
355	[BUG]  [BUGGY]  final  Class  <?>  rawType  =  typeToken.toRawClass();  [CE]  cannot  find  symbol  [FE]                                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?>  rawType  =  typeToken.toRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?>  rawType  =  typeToken.toRawClass();	  final    Class    <?>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
356	[BUG]  [BUGGY]  final  Class  <?>  rawType  =  typeToken.getRawClass()  ||  typeToken.getRawClass()!=  null;  [CE]  cannot  find  symbol  [FE]                                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?>  rawType  =  typeToken.getRawClass()  ||  typeToken.getRawClass()!=  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?>  rawType  =  typeToken.getRawClass()  ||  typeToken.getRawClass()!=  null;	  final    Class    <?>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
357	[BUG]  [BUGGY]  final  SortedType  <?  super  T>  rawType  =  typeToken.getRawType();  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  SortedType  <?  super  T>  rawType  =  typeToken.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  SortedType  <?  super  T>  rawType  =  typeToken.getRawType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Type    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
358	[BUG]  [BUGGY]  final  SortedType  <  T>  rawType  =  typeToken.getRawType();  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  SortedType  <  T>  rawType  =  typeToken.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  SortedType  <  T>  rawType  =  typeToken.getRawType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Type    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
359	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(type,  typeToken.getRawParameterType(0));  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(type,  typeToken.getRawParameterType(0));  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(type,  typeToken.getRawParameterType(0));	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(typeToken.getRawParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
360	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getRawParameterType(typeToken.getRawParameterType(0));  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getRawParameterType(typeToken.getRawParameterType(0));  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.getRawParameterType(typeToken.getRawParameterType(0));	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(typeToken.getRawParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
361	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typeToken,  typeToken.getRawParameterType(0));  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typeToken,  typeToken.getRawParameterType(0));  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typeToken,  typeToken.getRawParameterType(0));	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(typeToken.getRawParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
362	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(type.getRawParameterType(0));  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(type.getRawParameterType(0));  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(type.getRawParameterType(0));	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(typeToken.getRawParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
363	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()?  typeToken.getSuperclass()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()?  typeToken.getSuperclass()  :  typeToken;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()?  typeToken.getSuperclass()  :  typeToken;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperclass()?    typeToken.getSuperclass()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
364	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSuperclass()?  typeToken.getSuperclass()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSuperclass()?  typeToken.getSuperclass()  :  typeToken;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isSuperclass()?  typeToken.getSuperclass()  :  typeToken;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperclass()?    typeToken.getSuperclass()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
365	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSuperclass()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSuperclass()  :  typeToken;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSuperclass()  :  typeToken;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperclass()?    typeToken.getSuperclass()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
366	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSuperclass()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSuperclass()  :  typeToken;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSuperclass()  :  typeToken;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperclass()?    typeToken.getSuperclass()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
367	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getRawSuperClass();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getRawSuperClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.getRawSuperClass();	  final    Class    <?    super    T>    rawType    =    this.typeToken.getRawSuperClass();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
368	[BUG]  [BUGGY]  final  Class  <?  super  T>  typeType  =  this.typeToken.getRawSuperClass();  [CE]  cannot  find  symbol  typeToken  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  typeType  =  this.typeToken.getRawSuperClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  typeType  =  this.typeToken.getRawSuperClass();	  final    Class    <?    super    T>    rawType    =    this.typeToken.getRawSuperClass();    	non-compiled	[CE]  cannot  find  symbol  typeToken	89	None	replace
369	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  this.typeToken.getRawClass();  [CE]  cannot  find  symbol  typeToken  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  this.typeToken.getRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  this.typeToken.getRawClass();	  final    Class    <?    super    T>    rawType    =    this.typeToken.getRawSuperClass();    	non-compiled	[CE]  cannot  find  symbol  typeToken	89	None	replace
370	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  types.getRawSuperClass();  [CE]  cannot  find  symbol  types  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  types.getRawSuperClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  types.getRawSuperClass();	  final    Class    <?    super    T>    rawType    =    this.typeToken.getRawSuperClass();    	non-compiled	[CE]  cannot  find  symbol  types	89	None	replace
371	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.construct(type);  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.construct(type);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.construct(type);	  final    Class    <?    super    T>    rawType    =    typeToken.construct(defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
372	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.construct(rawType);  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.construct(rawType);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.construct(rawType);	  final    Class    <?    super    T>    rawType    =    typeToken.construct(defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
373	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.construct(null);  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.construct(null);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.construct(null);	  final    Class    <?    super    T>    rawType    =    typeToken.construct(defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
374	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.construct(typeToken);  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.construct(typeToken);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.construct(typeToken);	  final    Class    <?    super    T>    rawType    =    typeToken.construct(defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
375	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.construct(this);  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.construct(this);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.construct(this);	  final    Class    <?    super    T>    rawType    =    typeToken.construct(defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
376	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.construct(defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.construct(defaultConstructor);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.construct(defaultConstructor);	  final    Class    <?    super    T>    rawType    =    typeToken.construct(defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	84	None	replace
377	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getRawParameterType(typeToken.getRawParameterType(0);  [CE]  ')'  expected  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getRawParameterType(typeToken.getRawParameterType(0);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.getRawParameterType(typeToken.getRawParameterType(0);	  final    Class    <?    super    T>    rawType    =    type.getRawParameterType(0);    	non-compiled	[CE]  ')'  expected	87	None	replace
378	[BUG]  [BUGGY]  final  Class  <?>  rawType  =  typeToken.getQualifiedName();  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?>  rawType  =  typeToken.getQualifiedName();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?>  rawType  =  typeToken.getQualifiedName();	  final    Class    <?>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
379	[BUG]  [BUGGY]  final  Class  <?>  rawType  =  typeToken.getReturnType();  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?>  rawType  =  typeToken.getReturnType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?>  rawType  =  typeToken.getReturnType();	  final    Class    <?>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
380	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSubtype(typeToken.getSuperType());  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSubtype(typeToken.getSuperType());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSubtype(typeToken.getSuperType());	  final    Class    <?    super    T>    rawType    =    typeToken.getsuperType();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
381	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperType()?  typeToken.getSupertype()  :  null;  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperType()?  typeToken.getSupertype()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperType()?  typeToken.getSupertype()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSupertype()    :    null;    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
382	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperType()?  typeToken.getSupertype()  :  null;  [CE]  ')'  expected  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperType()?  typeToken.getSupertype()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperType()?  typeToken.getSupertype()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSupertype()    :    null;    	non-compiled	[CE]  ')'  expected	73	None	replace
383	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isConstructor()?  typeToken.getSupertype()  :  null;  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isConstructor()?  typeToken.getSupertype()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isConstructor()?  typeToken.getSupertype()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSupertype()    :    null;    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
384	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSupertype()  :  null;  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSupertype()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSupertype()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSupertype()    :    null;    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
385	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.hasSuperType()?  typeToken.getSupertype()  :  null;  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.hasSuperType()?  typeToken.getSupertype()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.hasSuperType()?  typeToken.getSupertype()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSupertype()    :    null;    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
386	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  typeToken.getSuperClass());  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  typeToken.getSuperClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  typeToken.getSuperClass());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSuperClass());    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
387	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(rawTypeToken.getSuperClass());  [CE]  cannot  find  symbol  rawTypeToken  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(rawTypeToken.getSuperClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(rawTypeToken.getSuperClass());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSuperClass());    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	22	None	replace
388	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  defaultImplementation.getSuperClass());  [CE]  cannot  find  symbol  defaultImplementation  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  defaultImplementation.getSuperClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  defaultImplementation.getSuperClass());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSuperClass());    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	22	None	replace
389	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperClass().constructType(typeToken.getSuperClass());  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperClass().constructType(typeToken.getSuperClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperClass().constructType(typeToken.getSuperClass());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSuperClass());    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
390	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  context.getSuperClass());  [CE]  cannot  find  symbol  context  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  context.getSuperClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  context.getSuperClass());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSuperClass());    	non-compiled	[CE]  cannot  find  symbol  context	22	None	replace
391	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  this.defaultImplementation.getSuperClass());  [CE]  cannot  find  symbol  defaultImplementation  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  this.defaultImplementation.getSuperClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  this.defaultImplementation.getSuperClass());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSuperClass());    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	22	None	replace
392	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.fromRawClass();  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.fromRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.fromRawClass();	  final    Class    <?    super    T>    rawType    =    typeToken.toRawClass();    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
393	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.toRawClass());  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.toRawClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.toRawClass());	  final    Class    <?    super    T>    rawType    =    typeToken.toRawClass();    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
394	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  &&  typeToken.getQualifiedName()  ==  null;  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  &&  typeToken.getQualifiedName()  ==  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  &&  typeToken.getQualifiedName()  ==  null;	  final    Class    <?    super    T>    rawType    =    typeToken.getQualifiedName()    ||    typeToken.getQualifiedName()    ==    null;    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
395	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  /|  typeToken.getQualifiedName()  ==  null;  [CE]  illegal  start  of  expression  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  /|  typeToken.getQualifiedName()  ==  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  /|  typeToken.getQualifiedName()  ==  null;	  final    Class    <?    super    T>    rawType    =    typeToken.getQualifiedName()    ||    typeToken.getQualifiedName()    ==    null;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
396	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName(),  typeToken.getQualifiedName()  ==  null;  [CE]  ';'  expected  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName(),  typeToken.getQualifiedName()  ==  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName(),  typeToken.getQualifiedName()  ==  null;	  final    Class    <?    super    T>    rawType    =    typeToken.getQualifiedName()    ||    typeToken.getQualifiedName()    ==    null;    	non-compiled	[CE]  ';'  expected	5	None	replace
397	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  /  ||  typeToken.getQualifiedName()  ==  null;  [CE]  illegal  start  of  expression  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  /  ||  typeToken.getQualifiedName()  ==  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  /  ||  typeToken.getQualifiedName()  ==  null;	  final    Class    <?    super    T>    rawType    =    typeToken.getQualifiedName()    ||    typeToken.getQualifiedName()    ==    null;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
398	[BUG]  [BUGGY]  final  SortedMap  <  Class  <?  super  T>  rawType  =  typeToken.getRawType();  [CE]  >  expected  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  SortedMap  <  Class  <?  super  T>  rawType  =  typeToken.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  SortedMap  <  Class  <?  super  T>  rawType  =  typeToken.getRawType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    SortedMap    <    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  >  expected	30	None	replace
399	[BUG]  [BUGGY]  SortedMap  <  Class  <?  super  T>  rawType  =  typeToken.getRawType();  [CE]  >  expected  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  SortedMap  <  Class  <?  super  T>  rawType  =  typeToken.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	SortedMap  <  Class  <?  super  T>  rawType  =  typeToken.getRawType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    SortedMap    <    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  >  expected	30	None	replace
400	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken);  [CE]  incompatible  types  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken);	  InstanceCreator    <    T>    rawType    =    instanceCreators.get(type);    	non-compiled	[CE]  incompatible  types	36	None	replace
401	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawType  =  instanceCreators.get(type);  [CE]  incompatible  types  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  InstanceCreator  <  T>  rawType  =  instanceCreators.get(type);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  InstanceCreator  <  T>  rawType  =  instanceCreators.get(type);	  InstanceCreator    <    T>    rawType    =    instanceCreators.get(type);    	non-compiled	[CE]  incompatible  types	36	None	replace
402	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(type,  typeToken);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(type,  typeToken);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	InstanceCreator  <  T>  rawType  =  instanceCreators.get(type,  typeToken);	  InstanceCreator    <    T>    rawType    =    instanceCreators.get(type);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	36	None	replace
403	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(type,  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(type,  defaultImplementation);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	InstanceCreator  <  T>  rawType  =  instanceCreators.get(type,  defaultImplementation);	  InstanceCreator    <    T>    rawType    =    instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	36	None	replace
404	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(type,  ObjectConstructor.class);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(type,  ObjectConstructor.class);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	InstanceCreator  <  T>  rawType  =  instanceCreators.get(type,  ObjectConstructor.class);	  InstanceCreator    <    T>    rawType    =    instanceCreators.get(type);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	36	None	replace
405	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(type,  null);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(type,  null);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	InstanceCreator  <  T>  rawType  =  instanceCreators.get(type,  null);	  InstanceCreator    <    T>    rawType    =    instanceCreators.get(type);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	36	None	replace
406	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSupertype()  :  typeToken.getSupertype();  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSupertype()  :  typeToken.getSupertype();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSupertype()  :  typeToken.getSupertype();	  Class    <?    super    T>    rawType    =    typeToken.getSupertype();    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
407	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSupertype()  :  type;  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSupertype()  :  type;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSupertype()  :  type;	  Class    <?    super    T>    rawType    =    typeToken.getSupertype();    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
408	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSupertype()  :  null;  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSupertype()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSupertype()  :  null;	  Class    <?    super    T>    rawType    =    typeToken.getSupertype();    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
409	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSupertype()  :  typeToken;  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSupertype()  :  typeToken;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSupertype()  :  typeToken;	  Class    <?    super    T>    rawType    =    typeToken.getSupertype();    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
410	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.construct(defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?>  rawType  =  typeToken.construct(defaultImplementation);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?>  rawType  =  typeToken.construct(defaultImplementation);	  Class    <?>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	34	None	replace
411	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.newInstance();  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?>  rawType  =  typeToken.newInstance();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?>  rawType  =  typeToken.newInstance();	  Class    <?>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
412	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.newInstance();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.newInstance();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.newInstance();	  final    Class    <?    super    T>    rawType    =    typeToken.newInstance();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
413	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getRawParameterType(typeToken.getRawParameterType(1);  [CE]  ')'  expected  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getRawParameterType(typeToken.getRawParameterType(1);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.getRawParameterType(typeToken.getRawParameterType(1);	  final    Class    <?    super    T>    rawType    =    type.getRawParameterType(0);    	non-compiled	[CE]  ')'  expected	87	None	replace
414	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  methodToken.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  methodToken  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  methodToken.restrictByNotNullOrUndefined();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  methodToken.restrictByNotNullOrUndefined();	  final    Class    <?    super    T>    rawType    =    classToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol  methodToken	53	None	replace
415	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  this.rawTypeToken.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  rawTypeToken  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  this.rawTypeToken.restrictByNotNullOrUndefined();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  this.rawTypeToken.restrictByNotNullOrUndefined();	  final    Class    <?    super    T>    rawType    =    classToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	53	None	replace
416	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(type,  rawType);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(type,  rawType);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	InstanceCreator  <  T>  rawType  =  instanceCreators.get(type,  rawType);	  InstanceCreator    <    T>    rawType    =    instanceCreators.get(type);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	36	None	replace
417	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(type,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(type,  defaultConstructor);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	InstanceCreator  <  T>  rawType  =  instanceCreators.get(type,  defaultConstructor);	  InstanceCreator    <    T>    rawType    =    instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	36	None	replace
418	[BUG]  [BUGGY]  Class  <  T>  rawType  =  typeToken.construct(defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <  T>  rawType  =  typeToken.construct(defaultImplementation);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <  T>  rawType  =  typeToken.construct(defaultImplementation);	  Class    <    T>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	33	None	replace
419	[BUG]  [BUGGY]  Class  <  T>  typeCreator  =  typeToken.getRawClass();  [CE]  cannot  find  symbol  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <  T>  typeCreator  =  typeToken.getRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <  T>  typeCreator  =  typeToken.getRawClass();	  Class    <    T>    rawTypeCreator    =    type.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
420	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =  this.typeToken.getRawClass();  [CE]  cannot  find  symbol  typeToken  [FE]                                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <  T>  rawTypeCreator  =  this.typeToken.getRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <  T>  rawTypeCreator  =  this.typeToken.getRawClass();	  Class    <    T>    rawTypeCreator    =    type.getRawClass();    	non-compiled	[CE]  cannot  find  symbol  typeToken	38	None	replace
421	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType();  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.getRawParameterType();	  Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(0);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
422	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSupertype()  :  null;  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSupertype()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSupertype()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSupertype()    :    null;    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
423	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSuperclass()?  typeToken.getSuperclass()  :  typeToken.getSuperclass();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSuperclass()?  typeToken.getSuperclass()  :  typeToken.getSuperclass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isSuperclass()?  typeToken.getSuperclass()  :  typeToken.getSuperclass();	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperclass()?    typeToken.getSuperclass()    :    typeToken.getSuperclass();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
424	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasQualifiedName()?  typeToken.getQualifiedName()  :  this.type;  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasQualifiedName()?  typeToken.getQualifiedName()  :  this.type;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.hasQualifiedName()?  typeToken.getQualifiedName()  :  this.type;	  final    Class    <?    super    T>    rawType    =    typeToken.hasQualifiedName()?    typeToken.getQualifiedName()    :    type;    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
425	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRawParameterType();  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRawParameterType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRawParameterType();	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType();    	non-compiled	[CE]  ';'  expected	43	None	replace
426	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getRawParameterType();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getRawParameterType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.getRawParameterType();	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
427	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.toRawParameterType();  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.toRawParameterType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.toRawParameterType();	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
428	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getCollectionParameterType();  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getCollectionParameterType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getCollectionParameterType();	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
429	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  getSuperType(typeToken.getSuperType());  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  getSuperType(typeToken.getSuperType());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  getSuperType(typeToken.getSuperType());	  final    Class    <?    super    T>    rawType    =    this.typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
430	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawType  =  typeToken.getRawType();  Category  <?  super  T>  rawType  =  typeToken.getRawType();  [CE]  incompatible  types  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  ObjectConstructor  <  T>  rawType  =  typeToken.getRawType();  Category  <?  super  T>  rawType  =  typeToken.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	ObjectConstructor  <  T>  rawType  =  typeToken.getRawType();  Category  <?  super  T>  rawType  =  typeToken.getRawType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Category    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  incompatible  types	28	None	replace
431	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawsuperclass();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawsuperclass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawsuperclass();	  final    Class    <?    super    T>    rawType    =    typeToken.getRawSuperclass();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
432	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getRawSuperclass();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getRawSuperclass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.getRawSuperclass();	  final    Class    <?    super    T>    rawType    =    typeToken.getRawSuperclass();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
433	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getQualifiedName()  ||  typeToken.getQualifiedName()  ==  null;  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getQualifiedName()  ||  typeToken.getQualifiedName()  ==  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.getQualifiedName()  ||  typeToken.getQualifiedName()  ==  null;	  final    Class    <?    super    T>    rawType    =    typeToken.getQualifiedName()    ||    typeToken.getQualifiedName()    ==    null;    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
434	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSuperClass()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSuperClass()  :  typeToken;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSuperClass()  :  typeToken;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperClass()?    typeToken.getSuperClass()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
435	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSuperClass()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSuperClass()  :  typeToken;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSuperClass()  :  typeToken;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperClass()?    typeToken.getSuperClass()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
436	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSuperClass()?  typeToken.getSuperClass()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSuperClass()?  typeToken.getSuperClass()  :  typeToken;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isSuperClass()?  typeToken.getSuperClass()  :  typeToken;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperClass()?    typeToken.getSuperClass()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
437	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.hasSuperClass()?  typeToken.getSuperClass()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.hasSuperClass()?  typeToken.getSuperClass()  :  typeToken;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.hasSuperClass()?  typeToken.getSuperClass()  :  typeToken;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperClass()?    typeToken.getSuperClass()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
438	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getPropertyType(typeToken.getSuperclass());  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getPropertyType(typeToken.getSuperclass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getPropertyType(typeToken.getSuperclass());	  final    Class    <?    super    T>    rawType    =    typeToken.getsuperclass();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
439	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSubtype(typeToken.getSuperclass());  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSubtype(typeToken.getSuperclass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSubtype(typeToken.getSuperclass());	  final    Class    <?    super    T>    rawType    =    typeToken.getsuperclass();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
440	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.toRawClass();  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.toRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.toRawClass();	  final    Class    <?    super    T>    rawType    =    typeToken.toRawClass();    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
441	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(type.getRawParameterType(1));  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(type.getRawParameterType(1));  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(type.getRawParameterType(1));	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(typeToken.getRawParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
442	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typetoken.getRawParameterType(0));  [CE]  cannot  find  symbol  typetoken  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typetoken.getRawParameterType(0));  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typetoken.getRawParameterType(0));	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(typeToken.getRawParameterType(0));    	non-compiled	[CE]  cannot  find  symbol  typetoken	40	None	replace
443	[BUG]  [BUGGY]  Class  <  T>  rawType  =  getRawClass(typeToken.getRawClass());  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <  T>  rawType  =  getRawClass(typeToken.getRawClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <  T>  rawType  =  getRawClass(typeToken.getRawClass());	  Class    <    T>    rawType    =    type.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
444	[BUG]  [BUGGY]  Class  <  T>  rawType  =  this.typeToken.getRawClass();  [CE]  cannot  find  symbol  typeToken  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <  T>  rawType  =  this.typeToken.getRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <  T>  rawType  =  this.typeToken.getRawClass();	  Class    <    T>    rawType    =    type.getRawClass();    	non-compiled	[CE]  cannot  find  symbol  typeToken	32	None	replace
445	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(null,  typeToken.getSupertype());  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(null,  typeToken.getSupertype());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(null,  typeToken.getSupertype());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSupertype());    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
446	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(defaultImplementation.getSupertype());  [CE]  cannot  find  symbol  defaultImplementation  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(defaultImplementation.getSupertype());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(defaultImplementation.getSupertype());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSupertype());    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	6	None	replace
447	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(rawType.getSupertype());  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(rawType.getSupertype());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(rawType.getSupertype());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSupertype());    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
448	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSuperclass()  :  type;  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSuperclass()  :  type;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSuperclass()  :  type;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperclass()?    typeToken.getSuperclass()    :    type;    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
449	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(null,  typeToken.getRawClass());  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(null,  typeToken.getRawClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(null,  typeToken.getRawClass());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getRawClass());    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
450	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(defaultImplementation.getRawClass());  [CE]  cannot  find  symbol  defaultImplementation  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(defaultImplementation.getRawClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(defaultImplementation.getRawClass());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getRawClass());    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	19	None	replace
451	[BUG]  [BUGGY]  Type  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined();  [CE]  type  Type  does  not  take  parameters  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Type  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Type  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined();	  Class    <?    super    T>    rawType    =    typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  type  Type  does  not  take  parameters	98	None	replace
452	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  token.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  token  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  token.restrictByNotNullOrUndefined();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  token.restrictByNotNullOrUndefined();	  Class    <?    super    T>    rawType    =    typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol  token	98	None	replace
453	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  InstanceCreator  <?  super  T>  rawType  =  rawType.getRawType();  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  InstanceCreator  <?  super  T>  rawType  =  rawType.getRawType();  }  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  InstanceCreator  <?  super  T>  rawType  =  rawType.getRawType();  }	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    InstanceCreator    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	75	None	replace
454	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  InstanceCreator  <?  super  T>  rawType  =  typeToken.getRawType();  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  InstanceCreator  <?  super  T>  rawType  =  typeToken.getRawType();  }  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  InstanceCreator  <?  super  T>  rawType  =  typeToken.getRawType();  }	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    InstanceCreator    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	75	None	replace
455	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  InstanceCreator  <?  super  T>  rawType  =  rawType.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  InstanceCreator  <?  super  T>  rawType  =  rawType.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  InstanceCreator  <?  super  T>  rawType  =  rawType.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    InstanceCreator    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	75	None	replace
456	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getQualifiedName()  +  1;  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getQualifiedName()  +  1;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.getQualifiedName()  +  1;	  final    Class    <?    super    T>    rawType    =    typeToken.getQualifiedName()    +    1;    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
457	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSupertype()  :  typeToken.getSupertype();  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSupertype()  :  typeToken.getSupertype();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSupertype()  :  typeToken.getSupertype();	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSupertype()    :    typeToken.getSupertype();    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
458	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isConstructor()?  typeToken.getSuperclass()  :  null;  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isConstructor()?  typeToken.getSuperclass()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isConstructor()?  typeToken.getSuperclass()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperclass()?    typeToken.getSuperclass()    :    null;    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
459	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typeToken.getRawParameterType(0);  [CE]  ')'  expected  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typeToken.getRawParameterType(0);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typeToken.getRawParameterType(0);	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(1);    	non-compiled	[CE]  ')'  expected	39	None	replace
460	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Preconditions.checkState(rawTypeToken.getRawType()  ==  null);  [CE]  cannot  find  symbol  rawTypeToken  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Preconditions.checkState(rawTypeToken.getRawType()  ==  null);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Preconditions.checkState(rawTypeToken.getRawType()  ==  null);	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Preconditions.checkState(typeToken.getRawType()    ==    null);    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	77	None	replace
461	[BUG]  [BUGGY]  Type  <?  super  T>  rawType  =  typeToken.getRawType();  Preconditions.checkState(typeToken.getRawType()  ==  null);  [CE]  type  Type  does  not  take  parameters  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Type  <?  super  T>  rawType  =  typeToken.getRawType();  Preconditions.checkState(typeToken.getRawType()  ==  null);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Type  <?  super  T>  rawType  =  typeToken.getRawType();  Preconditions.checkState(typeToken.getRawType()  ==  null);	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Preconditions.checkState(typeToken.getRawType()    ==    null);    	non-compiled	[CE]  type  Type  does  not  take  parameters	77	None	replace
462	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typesToken.getSupertype(typeToken);  [CE]  cannot  find  symbol  typesToken  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typesToken.getSupertype(typeToken);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typesToken.getSupertype(typeToken);	  final    Class    <?    super    T>    rawType    =    typeToken.getSupertype(typeToken);    	non-compiled	[CE]  cannot  find  symbol  typesToken	8	None	replace
463	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSupertype(null);  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSupertype(null);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSupertype(null);	  final    Class    <?    super    T>    rawType    =    typeToken.getSupertype(typeToken);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
464	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.toRawSuperClass();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.toRawSuperClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.toRawSuperClass();	  final    Class    <?    super    T>    rawType    =    typeToken.toRawSuperClass();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
465	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.canQualifiedName()?  typeToken.getQualifiedName()  :  null;  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.canQualifiedName()?  typeToken.getQualifiedName()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.canQualifiedName()?  typeToken.getQualifiedName()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.hasQualifiedName()?    typeToken.getQualifiedName()    :    null;    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
466	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasQualifiedName()?  typeToken.getQualifiedName()  :  new  Class  <?  super  T>();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasQualifiedName()?  typeToken.getQualifiedName()  :  new  Class  <?  super  T>();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.hasQualifiedName()?  typeToken.getQualifiedName()  :  new  Class  <?  super  T>();	  final    Class    <?    super    T>    rawType    =    typeToken.hasQualifiedName()?    typeToken.getQualifiedName()    :    null;    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
467	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typetoken.getRawSuperClass());  [CE]  cannot  find  symbol  typetoken  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typetoken.getRawSuperClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typetoken.getRawSuperClass());	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(typeToken.getRawSuperClass());    	non-compiled	[CE]  cannot  find  symbol  typetoken	13	None	replace
468	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typeToken.getRawClass());  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typeToken.getRawClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typeToken.getRawClass());	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(typeToken.getRawSuperClass());    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
469	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.hasSuperClass()?  typeToken.getSuperClass()  :  null;  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.hasSuperClass()?  typeToken.getSuperClass()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.hasSuperClass()?  typeToken.getSuperClass()  :  null;	  Class    <?    super    T>    rawType    =    typeToken.getSuperClass();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
470	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.hasSuperClass()?  typeToken.getSuperClass()  :  type;  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.hasSuperClass()?  typeToken.getSuperClass()  :  type;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.hasSuperClass()?  typeToken.getSuperClass()  :  type;	  Class    <?    super    T>    rawType    =    typeToken.getSuperClass();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
471	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.hasSuperClass()?  typeToken.getSuperClass()  :  typeToken.getSuperClass();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.hasSuperClass()?  typeToken.getSuperClass()  :  typeToken.getSuperClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.hasSuperClass()?  typeToken.getSuperClass()  :  typeToken.getSuperClass();	  Class    <?    super    T>    rawType    =    typeToken.getSuperClass();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
472	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getPrimitive();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getPrimitive();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getPrimitive();	  final    Class    <?    super    T>    rawType    =    typeToken.getCollection();    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
473	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getConstructor();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getConstructor();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getConstructor();	  final    Class    <?    super    T>    rawType    =    typeToken.getCollection();    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
474	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getObject();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getObject();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getObject();	  final    Class    <?    super    T>    rawType    =    typeToken.getCollection();    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
475	[BUG]  [BUGGY]  final  Class  <?>  rawType  =  this.typeToken.getRawClass();  [CE]  cannot  find  symbol  typeToken  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?>  rawType  =  this.typeToken.getRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?>  rawType  =  this.typeToken.getRawClass();	  final    Class    <?>    rawType    =    type.getRawClass();    	non-compiled	[CE]  cannot  find  symbol  typeToken	37	None	replace
476	[BUG]  [BUGGY]  final  Class  <?>  rawType  =  classToken.getRawClass();  [CE]  cannot  find  symbol  classToken  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?>  rawType  =  classToken.getRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?>  rawType  =  classToken.getRawClass();	  final    Class    <?>    rawType    =    type.getRawClass();    	non-compiled	[CE]  cannot  find  symbol  classToken	37	None	replace
477	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  factory.getRawSuperClass();  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  factory.getRawSuperClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken,  factory.getRawSuperClass();	  final    Class    <?    super    T>    rawType    =    typeToken,    defaultImplementation.getRawSuperClass();    	non-compiled	[CE]  ';'  expected	12	None	replace
478	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Constructor  <?  super  T>  rawType  =  typeToken.getRawType();  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Constructor  <?  super  T>  rawType  =  typeToken.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Constructor  <?  super  T>  rawType  =  typeToken.getRawType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Constructor    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	29	None	replace
479	[BUG]  [BUGGY]  Class  <  T>  rawType  =  typeToken.getRawType(0);  [CE]  method  getRawType  in  class  TypeToken<T>  cannot  be  applied  to  given  types;  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <  T>  rawType  =  typeToken.getRawType(0);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <  T>  rawType  =  typeToken.getRawType(0);	  Class    <    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  method  getRawType  in  class  TypeToken<T>  cannot  be  applied  to  given  types;	81	None	replace
480	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken!=  null)?  this.typeToken.getSupertype()  :  typeToken.getSupertype();  [CE]  cannot  find  symbol  typeToken  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken!=  null)?  this.typeToken.getSupertype()  :  typeToken.getSupertype();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =(typeToken!=  null)?  this.typeToken.getSupertype()  :  typeToken.getSupertype();	  final    Class    <?    super    T>    rawType    =    this.typeToken.getSupertype();    	non-compiled	[CE]  cannot  find  symbol  typeToken	95	None	replace
481	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken  ==  null)?  this.typeToken.getSupertype()  :  typeToken.getSupertype();  [CE]  cannot  find  symbol  typeToken  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken  ==  null)?  this.typeToken.getSupertype()  :  typeToken.getSupertype();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =(typeToken  ==  null)?  this.typeToken.getSupertype()  :  typeToken.getSupertype();	  final    Class    <?    super    T>    rawType    =    this.typeToken.getSupertype();    	non-compiled	[CE]  cannot  find  symbol  typeToken	95	None	replace
482	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken  ==  null)?  null  :  typeToken.getSupertype();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken  ==  null)?  null  :  typeToken.getSupertype();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =(typeToken  ==  null)?  null  :  typeToken.getSupertype();	  final    Class    <?    super    T>    rawType    =    this.typeToken.getSupertype();    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
483	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken!=  null)?  this.typeToken.getSupertype()  :  type;  [CE]  cannot  find  symbol  typeToken  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken!=  null)?  this.typeToken.getSupertype()  :  type;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =(typeToken!=  null)?  this.typeToken.getSupertype()  :  type;	  final    Class    <?    super    T>    rawType    =    this.typeToken.getSupertype();    	non-compiled	[CE]  cannot  find  symbol  typeToken	95	None	replace
484	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isConstructor()?  typeToken.getSuperType()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isConstructor()?  typeToken.getSuperType()  :  typeToken;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isConstructor()?  typeToken.getSuperType()  :  typeToken;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSuperType()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
485	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSuperType()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSuperType()  :  typeToken;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSuperType()  :  typeToken;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSuperType()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
486	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSuperType()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSuperType()  :  typeToken;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSuperType()  :  typeToken;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSuperType()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
487	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.hasSuperType()?  typeToken.getSuperType()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.hasSuperType()?  typeToken.getSuperType()  :  typeToken;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.hasSuperType()?  typeToken.getSuperType()  :  typeToken;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSuperType()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
488	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  defaultImplementation.construct(typeToken);  [CE]  cannot  find  symbol  defaultImplementation  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  defaultImplementation.construct(typeToken);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  defaultImplementation.construct(typeToken);	  final    Class    <?    super    T>    rawType    =    typeToken.construct(defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	84	None	replace
489	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.construct(raf);  [CE]  cannot  find  symbol  raf  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.construct(raf);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.construct(raf);	  final    Class    <?    super    T>    rawType    =    typeToken.construct(defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol  raf	84	None	replace
490	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.construct(restrictedType);  [CE]  cannot  find  symbol  restrictedType  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.construct(restrictedType);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.construct(restrictedType);	  final    Class    <?    super    T>    rawType    =    typeToken.construct(defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol  restrictedType	84	None	replace
491	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getQualifiedName()  ||  typeToken.getQualifiedName()!=  null;  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getQualifiedName()  ||  typeToken.getQualifiedName()!=  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.getQualifiedName()  ||  typeToken.getQualifiedName()!=  null;	  final    Class    <?    super    T>    rawType    =    typeToken.getQualifiedName()    ||    typeToken.getQualifiedName()!=    null;    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
492	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  ||  typeToken.getPropertyName();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  ||  typeToken.getPropertyName();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  ||  typeToken.getPropertyName();	  final    Class    <?    super    T>    rawType    =    typeToken.getQualifiedName()    ||    typeToken.getQualifiedName();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
493	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  type.getRawClass();  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  type.getRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  type.getRawClass();	  Class    <?    super    T>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
494	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.construct(defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.construct(defaultImplementation);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.construct(defaultImplementation);	  Class    <?    super    T>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	44	None	replace
495	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getCollection();  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getCollection();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.getCollection();	  Class    <?    super    T>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
496	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.toQualifiedName();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.toQualifiedName();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.toQualifiedName();	  final    Class    <?    super    T>    rawType    =    typeToken.toQualifiedName();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
497	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  token.toQualifiedName();  [CE]  cannot  find  symbol  token  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  token.toQualifiedName();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  token.toQualifiedName();	  final    Class    <?    super    T>    rawType    =    typeToken.toQualifiedName();    	non-compiled	[CE]  cannot  find  symbol  token	56	None	replace
498	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.toQualifiedName()  +  1;  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.toQualifiedName()  +  1;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.toQualifiedName()  +  1;	  final    Class    <?    super    T>    rawType    =    typeToken.toQualifiedName();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
499	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNulle();  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNulle();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNulle();	  final    Class    <?    super    T>    rawType    =    typeToken.restrictByNotEmptyOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
500	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  token.restrictByNotEmptyOrUndefined();  [CE]  cannot  find  symbol  token  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  token.restrictByNotEmptyOrUndefined();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  token.restrictByNotEmptyOrUndefined();	  final    Class    <?    super    T>    rawType    =    typeToken.restrictByNotEmptyOrUndefined();    	non-compiled	[CE]  cannot  find  symbol  token	50	None	replace
501	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSuperClass()?  typeToken.getSuperClass()  :  null;  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSuperClass()?  typeToken.getSuperClass()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isSuperClass()?  typeToken.getSuperClass()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperClass()?    typeToken.getSuperClass()    :    null;    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
502	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasSuperClass()?  typeToken.getSuperclass()  :  null;  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasSuperClass()?  typeToken.getSuperclass()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.hasSuperClass()?  typeToken.getSuperclass()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperClass()?    typeToken.getSuperClass()    :    null;    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
503	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.hasSuperClass()?  typeToken.getSuperClass()  :  null;  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.hasSuperClass()?  typeToken.getSuperClass()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.hasSuperClass()?  typeToken.getSuperClass()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperClass()?    typeToken.getSuperClass()    :    null;    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
504	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  instanceCreators  =  instanceCreators.get(type,  rawTypeCreator);  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  InstanceCreator  <  T>  instanceCreators  =  instanceCreators.get(type,  rawTypeCreator);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  InstanceCreator  <  T>  instanceCreators  =  instanceCreators.get(type,  rawTypeCreator);	  final    InstanceCreator    <    T>    instanceCreators    =    instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	80	None	replace
505	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  instanceCreators  =  instanceCreators.get(type,  rawType);  [CE]  cannot  find  symbol  rawType  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  InstanceCreator  <  T>  instanceCreators  =  instanceCreators.get(type,  rawType);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  InstanceCreator  <  T>  instanceCreators  =  instanceCreators.get(type,  rawType);	  final    InstanceCreator    <    T>    instanceCreators    =    instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  rawType	80	None	replace
506	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.hasSuperType()?  typeToken.getSuperType()  :  typeToken.getSuperType();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.hasSuperType()?  typeToken.getSuperType()  :  typeToken.getSuperType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.hasSuperType()?  typeToken.getSuperType()  :  typeToken.getSuperType();	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSuperType()    :    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
507	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	24	None	replace
508	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  rawType.getRawType();  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  rawType.getRawType();  }  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  rawType.getRawType();  }	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	24	None	replace
509	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	24	None	replace
510	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  rawType.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  rawType.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  rawType.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	24	None	replace
511	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	24	None	replace
512	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  SortedMap  <  Class  <?  super  T>  rawType  =  rawType.getRawType();  }  [CE]  >  expected  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  SortedMap  <  Class  <?  super  T>  rawType  =  rawType.getRawType();  }  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  SortedMap  <  Class  <?  super  T>  rawType  =  rawType.getRawType();  }	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    SortedMap    <    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  >  expected	30	None	replace
513	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  SortedMap  <  Class  <?  super  T>  rawType  =  rawType.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  >  expected  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  SortedMap  <  Class  <?  super  T>  rawType  =  rawType.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  SortedMap  <  Class  <?  super  T>  rawType  =  rawType.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    SortedMap    <    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  >  expected	30	None	replace
514	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  SortedMap  <  Class  <?  super  T>  rawType  =  new  SortedMap  <  Class  <?  super  T>();  }  [CE]  >  expected  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  SortedMap  <  Class  <?  super  T>  rawType  =  new  SortedMap  <  Class  <?  super  T>();  }  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  SortedMap  <  Class  <?  super  T>  rawType  =  new  SortedMap  <  Class  <?  super  T>();  }	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    SortedMap    <    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  >  expected	30	None	replace
515	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  SortedMap  <  Class  <?  super  T>  rawType  =  rawType.getRawType();  }  else  {  final  Map  <  Class  <?  super  T>  instanceCreators  =  new  HashMap  <  Class  <?  super  T>  [CE]  >  expected  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  SortedMap  <  Class  <?  super  T>  rawType  =  rawType.getRawType();  }  else  {  final  Map  <  Class  <?  super  T>  instanceCreators  =  new  HashMap  <  Class  <?  super  T>  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  SortedMap  <  Class  <?  super  T>  rawType  =  rawType.getRawType();  }  else  {  final  Map  <  Class  <?  super  T>  instanceCreators  =  new  HashMap  <  Class  <?  super  T>	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    SortedMap    <    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  >  expected	30	None	replace
516	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSupertype()  :  typeToken;  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSupertype()  :  typeToken;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSupertype()  :  typeToken;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSupertype()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
517	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.hasSuperType()?  typeToken.getSupertype()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.hasSuperType()?  typeToken.getSupertype()  :  typeToken;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.hasSuperType()?  typeToken.getSupertype()  :  typeToken;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSupertype()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
518	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSuperType()?  typeToken.getSupertype()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSuperType()?  typeToken.getSupertype()  :  typeToken;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isSuperType()?  typeToken.getSupertype()  :  typeToken;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSupertype()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
519	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  defaultImplementation.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  defaultImplementation  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  defaultImplementation.restrictByNotNullOrUndefined();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  defaultImplementation.restrictByNotNullOrUndefined();	  final    Class    <?    super    T>    rawType    =    token.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	52	None	replace
520	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(defaultImplementation.getQualifiedName());  [CE]  cannot  find  symbol  defaultImplementation  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(defaultImplementation.getQualifiedName());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(defaultImplementation.getQualifiedName());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getQualifiedName());    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	1	None	replace
521	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(null,  typeToken.getQualifiedName());  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(null,  typeToken.getQualifiedName());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(null,  typeToken.getQualifiedName());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getQualifiedName());    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
522	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSubtype(typeToken.getSuperClass());  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSubtype(typeToken.getSuperClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSubtype(typeToken.getSuperClass());	  final    Class    <?    super    T>    rawType    =    typeToken.getsuperClass();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
523	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  TypeToken  typeToken  =  typeToken.getRawType();  }  [CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  TypeToken  typeToken  =  typeToken.getRawType();  }  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  TypeToken  typeToken  =  typeToken.getRawType();  }	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    TypeToken    typeToken    =    typeToken.getRawType();    	non-compiled	[CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)	76	None	replace
524	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  TypeToken  typeToken  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  TypeToken  typeToken  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  TypeToken  typeToken  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    TypeToken    typeToken    =    typeToken.getRawType();    	non-compiled	[CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)	76	None	replace
525	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  TypeToken  typeToken  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }  [CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  TypeToken  typeToken  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  TypeToken  typeToken  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    TypeToken    typeToken    =    typeToken.getRawType();    	non-compiled	[CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)	76	None	replace
526	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken.getQualifiedName()  ==  null)?  typeToken.getQualifiedName()  :  this.typeToken.getQualifiedName();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken.getQualifiedName()  ==  null)?  typeToken.getQualifiedName()  :  this.typeToken.getQualifiedName();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =(typeToken.getQualifiedName()  ==  null)?  typeToken.getQualifiedName()  :  this.typeToken.getQualifiedName();	  final    Class    <?    super    T>    rawType    =    this.typeToken.getQualifiedName();    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
527	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken.getQualifiedName()!=  null)?  typeToken.getQualifiedName()  :  this.typeToken.getQualifiedName();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken.getQualifiedName()!=  null)?  typeToken.getQualifiedName()  :  this.typeToken.getQualifiedName();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =(typeToken.getQualifiedName()!=  null)?  typeToken.getQualifiedName()  :  this.typeToken.getQualifiedName();	  final    Class    <?    super    T>    rawType    =    this.typeToken.getQualifiedName();    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
528	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken.getQualifiedName()  ==  null)?  this.typeToken.getQualifiedName()  :  type;  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken.getQualifiedName()  ==  null)?  this.typeToken.getQualifiedName()  :  type;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =(typeToken.getQualifiedName()  ==  null)?  this.typeToken.getQualifiedName()  :  type;	  final    Class    <?    super    T>    rawType    =    this.typeToken.getQualifiedName();    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
529	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken.getQualifiedName()  >=  null)?  typeToken.getQualifiedName()  :  this.typeToken.getQualifiedName();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken.getQualifiedName()  >=  null)?  typeToken.getQualifiedName()  :  this.typeToken.getQualifiedName();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =(typeToken.getQualifiedName()  >=  null)?  typeToken.getQualifiedName()  :  this.typeToken.getQualifiedName();	  final    Class    <?    super    T>    rawType    =    this.typeToken.getQualifiedName();    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
530	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.getRawType(0);  [CE]  method  getRawType  in  class  TypeToken<T>  cannot  be  applied  to  given  types;  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?>  rawType  =  typeToken.getRawType(0);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?>  rawType  =  typeToken.getRawType(0);	  Class    <?>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  method  getRawType  in  class  TypeToken<T>  cannot  be  applied  to  given  types;	78	None	replace
531	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawClass()  /|  typeToken.getRawClass()!=  null;  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawClass()  /|  typeToken.getRawClass()!=  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawClass()  /|  typeToken.getRawClass()!=  null;	  final    Class    <?    super    T>    rawType    =    typeToken.getRawClass()    ||    typeToken.getRawClass()!=    null;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
532	[BUG]  [BUGGY]  final  Class  <?>  rawType  =  typeToken.construct(defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?>  rawType  =  typeToken.construct(defaultImplementation);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?>  rawType  =  typeToken.construct(defaultImplementation);	  final    Class    <?>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	82	None	replace
533	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.toObjectConstructor();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.toObjectConstructor();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.toObjectConstructor();	  final    Class    <?    super    T>    rawType    =    typeToken.toString();    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
534	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(typetoken.getRawClass());  [CE]  cannot  find  symbol  typetoken  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(typetoken.getRawClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(typetoken.getRawClass());	  final    Class    <?    super    T>    rawType    =    typeToken.restrictByNotNullOrUndefined(typeToken.getRawClass());    	non-compiled	[CE]  cannot  find  symbol  typetoken	20	None	replace
535	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typesToken.restrictByNotNullOrUndefined(typeToken.getRawClass());  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typesToken.restrictByNotNullOrUndefined(typeToken.getRawClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typesToken.restrictByNotNullOrUndefined(typeToken.getRawClass());	  final    Class    <?    super    T>    rawType    =    typeToken.restrictByNotNullOrUndefined(typeToken.getRawClass());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
536	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSuperType()  :  typeToken.getSuperType();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSuperType()  :  typeToken.getSuperType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSuperType()  :  typeToken.getSuperType();	  Class    <?    super    T>    rawType    =    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
537	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSuperType()  :  null;  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSuperType()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSuperType()  :  null;	  Class    <?    super    T>    rawType    =    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
538	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSuperType()  :  type;  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSuperType()  :  type;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSuperType()  :  type;	  Class    <?    super    T>    rawType    =    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
539	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSuperType()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSuperType()  :  typeToken;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSuperType()  :  typeToken;	  Class    <?    super    T>    rawType    =    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
540	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  defaultConstructor,  typeToken.getRawParameterType(0);  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  defaultConstructor,  typeToken.getRawParameterType(0);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  defaultConstructor,  typeToken.getRawParameterType(0);	  final    Class    <?    super    T>    rawType    =    typeToken,    defaultConstructor.getRawParameterType(0);    	non-compiled	[CE]  ';'  expected	96	None	replace
541	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  defaultConstructor.getRawParameterType(1);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  defaultConstructor.getRawParameterType(1);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  defaultConstructor.getRawParameterType(1);	  final    Class    <?    super    T>    rawType    =    typeToken,    defaultConstructor.getRawParameterType(0);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	96	None	replace
542	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  defaultConstructor.getRawParameterType(typeToken);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  defaultConstructor.getRawParameterType(typeToken);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  defaultConstructor.getRawParameterType(typeToken);	  final    Class    <?    super    T>    rawType    =    typeToken,    defaultConstructor.getRawParameterType(0);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	96	None	replace
543	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  ObjectConstructor  <  T>  rawType  =  typeToken.getRawType();  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  ObjectConstructor  <  T>  rawType  =  typeToken.getRawType();  }  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  ObjectConstructor  <  T>  rawType  =  typeToken.getRawType();  }	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    ObjectConstructor    <    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	27	None	replace
544	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  ObjectConstructor  <  T>  rawType  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  ObjectConstructor  <  T>  rawType  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  ObjectConstructor  <  T>  rawType  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    ObjectConstructor    <    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	27	None	replace
545	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  ObjectConstructor  <  T>  rawType  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  ObjectConstructor  <  T>  rawType  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  ObjectConstructor  <  T>  rawType  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    ObjectConstructor    <    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	27	None	replace
546	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  ObjectConstructor  <  T>  rawType  =  typeToken.getRawType();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  ObjectConstructor  <  T>  rawType  =  typeToken.getRawType();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  ObjectConstructor  <  T>  rawType  =  typeToken.getRawType();  }  else  {  throw  new  IllegalStateException( " ");  }	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    ObjectConstructor    <    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	27	None	replace
547	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Type  <?  super  T>  rawType  =  typeToken.getRawType();  }  [CE]  type  Type  does  not  take  parameters  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Type  <?  super  T>  rawType  =  typeToken.getRawType();  }  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Type  <?  super  T>  rawType  =  typeToken.getRawType();  }	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Type    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  type  Type  does  not  take  parameters	26	None	replace
548	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Type  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  type  Type  does  not  take  parameters  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Type  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Type  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Type    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  type  Type  does  not  take  parameters	26	None	replace
549	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Type  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  return  rawType;  }  [CE]  type  Type  does  not  take  parameters  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Type  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  return  rawType;  }  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Type  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  return  rawType;  }	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Type    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  type  Type  does  not  take  parameters	26	None	replace
550	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSuperType()  :  null;  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSuperType()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSuperType()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSuperType()    :    null;    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
551	[BUG]  [BUGGY]  InstanceCreator  <  T>  instanceCreators  =  instanceCreators.get(type,  rawTypeCreator);  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  InstanceCreator  <  T>  instanceCreators  =  instanceCreators.get(type,  rawTypeCreator);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	InstanceCreator  <  T>  instanceCreators  =  instanceCreators.get(type,  rawTypeCreator);	  InstanceCreator    <    T>    instanceCreators    =    instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	93	None	replace
552	[BUG]  [BUGGY]  InstanceCreator  <  T>  instanceCreators  =  instanceCreators.get(type,  rawType);  [CE]  cannot  find  symbol  rawType  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  InstanceCreator  <  T>  instanceCreators  =  instanceCreators.get(type,  rawType);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	InstanceCreator  <  T>  instanceCreators  =  instanceCreators.get(type,  rawType);	  InstanceCreator    <    T>    instanceCreators    =    instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  rawType	93	None	replace
553	[BUG]  [BUGGY]  InstanceCreator  <  T>  instanceCreators  =  instanceCreators.get(typeToken);  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  InstanceCreator  <  T>  instanceCreators  =  instanceCreators.get(typeToken);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	InstanceCreator  <  T>  instanceCreators  =  instanceCreators.get(typeToken);	  InstanceCreator    <    T>    instanceCreators    =    instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
554	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  getRawType(typeToken.getRawType());  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  getRawType(typeToken.getRawType());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  getRawType(typeToken.getRawType());	  Class    <?    super    T>    rawType    =    type.getRawType();    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
555	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()  ||  typeToken.getSubtype(typeToken.getSuperclass());  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()  ||  typeToken.getSubtype(typeToken.getSuperclass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()  ||  typeToken.getSubtype(typeToken.getSuperclass());	  final    Class    <?    super    T>    rawType    =    typeToken.getSuperclass()    ||    typeToken.getSuperclass();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
556	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()  ||  typeToken.getParameterType(0);  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()  ||  typeToken.getParameterType(0);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()  ||  typeToken.getParameterType(0);	  final    Class    <?    super    T>    rawType    =    typeToken.getSuperclass()    ||    typeToken.getSuperclass();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
557	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()  ||  typeToken.getObjectClass();  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()  ||  typeToken.getObjectClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()  ||  typeToken.getObjectClass();	  final    Class    <?    super    T>    rawType    =    typeToken.getSuperclass()    ||    typeToken.getSuperclass();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
558	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasRestrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasRestrictByNotNullOrUndefined();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.hasRestrictByNotNullOrUndefined();	  final    Class    <?    super    T>    rawType    =    typeToken.getRestrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
559	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  token.getRestrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  token  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  token.getRestrictByNotNullOrUndefined();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  token.getRestrictByNotNullOrUndefined();	  final    Class    <?    super    T>    rawType    =    typeToken.getRestrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol  token	49	None	replace
560	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  getRestrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  getRestrictByNotNullOrUndefined();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  getRestrictByNotNullOrUndefined();	  final    Class    <?    super    T>    rawType    =    typeToken.getRestrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
561	[BUG]  [BUGGY]  final  Class  <?>  rawType  =  typeToken.getPrimitiveType();  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?>  rawType  =  typeToken.getPrimitiveType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?>  rawType  =  typeToken.getPrimitiveType();	  final    Class    <?>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
562	[BUG]  [BUGGY]  final  Class  <?>  rawType  =  typeToken.getRawType(0);  [CE]  method  getRawType  in  class  TypeToken<T>  cannot  be  applied  to  given  types;  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?>  rawType  =  typeToken.getRawType(0);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?>  rawType  =  typeToken.getRawType(0);	  final    Class    <?>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  method  getRawType  in  class  TypeToken<T>  cannot  be  applied  to  given  types;	79	None	replace
563	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(null,  typeToken.getSuperclass());  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(null,  typeToken.getSuperclass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(null,  typeToken.getSuperclass());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSuperclass());    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
564	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(defaultImplementation.getSuperclass());  [CE]  cannot  find  symbol  defaultImplementation  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(defaultImplementation.getSuperclass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(defaultImplementation.getSuperclass());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSuperclass());    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	9	None	replace
565	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typesToken.constructType(typeToken.getSuperclass());  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typesToken.constructType(typeToken.getSuperclass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typesToken.constructType(typeToken.getSuperclass());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSuperclass());    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
566	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getPrimitiveType()  :  null;  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getPrimitiveType()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getPrimitiveType()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.getPrimitiveType();    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
567	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  null  :  typeToken.getPrimitiveType();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  null  :  typeToken.getPrimitiveType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  null  :  typeToken.getPrimitiveType();	  final    Class    <?    super    T>    rawType    =    typeToken.getPrimitiveType();    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
568	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getPrimitiveType()  :  type;  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getPrimitiveType()  :  type;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getPrimitiveType()  :  type;	  final    Class    <?    super    T>    rawType    =    typeToken.getPrimitiveType();    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
569	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(rawTypeToken.getQualifiedName());  [CE]  cannot  find  symbol  rawTypeToken  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(rawTypeToken.getQualifiedName());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(rawTypeToken.getQualifiedName());	  final    Class    <?    super    T>    rawType    =    typeToken.restrictByNotNullOrUndefined(typeToken.getQualifiedName());    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	102	None	replace
570	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(typeToken.toQualifiedName());  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(typeToken.toQualifiedName());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(typeToken.toQualifiedName());	  final    Class    <?    super    T>    rawType    =    typeToken.restrictByNotNullOrUndefined(typeToken.getQualifiedName());    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
571	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(null,  typeToken.getSuperClass());  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(null,  typeToken.getSuperClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(null,  typeToken.getSuperClass());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSuperClass());    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
572	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(defaultImplementation.getSuperClass());  [CE]  cannot  find  symbol  defaultImplementation  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(defaultImplementation.getSuperClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(defaultImplementation.getSuperClass());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSuperClass());    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	22	None	replace
573	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  factory.getSuperClass());  [CE]  cannot  find  symbol  factory  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  factory.getSuperClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  factory.getSuperClass());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSuperClass());    	non-compiled	[CE]  cannot  find  symbol  factory	22	None	replace
574	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasSuperClass()?  typeToken.getSuperClass()  :  typeToken.getSuperclass();  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasSuperClass()?  typeToken.getSuperClass()  :  typeToken.getSuperclass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.hasSuperClass()?  typeToken.getSuperClass()  :  typeToken.getSuperclass();	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperClass()?    typeToken.getSuperClass()    :    typeToken.getSuperClass();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
575	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSuperClass()?  typeToken.getSuperClass()  :  typeToken.getSuperClass();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSuperClass()?  typeToken.getSuperClass()  :  typeToken.getSuperClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isSuperClass()?  typeToken.getSuperClass()  :  typeToken.getSuperClass();	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperClass()?    typeToken.getSuperClass()    :    typeToken.getSuperClass();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
576	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRawSuperclass();  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRawSuperclass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRawSuperclass();	  final    Class    <?    super    T>    rawType    =    typeToken,    defaultConstructor.getRawSuperClass();    	non-compiled	[CE]  ';'  expected	88	None	replace
577	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(0,  this.typeToken.getRawParameterType(0));  [CE]  cannot  find  symbol  typeToken  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(0,  this.typeToken.getRawParameterType(0));  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(0,  this.typeToken.getRawParameterType(0));	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(0,    typeToken.getRawParameterType(0));    	non-compiled	[CE]  cannot  find  symbol  typeToken	41	None	replace
578	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawSuperClass()  ||  typeToken.getColumnSuperClass();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawSuperClass()  ||  typeToken.getColumnSuperClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawSuperClass()  ||  typeToken.getColumnSuperClass();	  final    Class    <?    super    T>    rawType    =    typeToken.getRawSuperClass()    ||    typeToken.getRawSuperClass();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
579	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSupertype()  :  type;  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSupertype()  :  type;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSupertype()  :  type;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSupertype()    :    type;    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
580	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isConstructor()?  typeToken.getSuperType()  :  type;  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isConstructor()?  typeToken.getSuperType()  :  type;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isConstructor()?  typeToken.getSuperType()  :  type;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSuperType()    :    type;    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
581	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSuperType()  :  type;  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSuperType()  :  type;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSuperType()  :  type;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSuperType()    :    type;    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
582	[BUG]  [BUGGY]  Type  <  T>  rawType  =  typeToken.restrictByNotNullOrUndefined();  [CE]  type  Type  does  not  take  parameters  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Type  <  T>  rawType  =  typeToken.restrictByNotNullOrUndefined();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Type  <  T>  rawType  =  typeToken.restrictByNotNullOrUndefined();	  Type    <    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  type  Type  does  not  take  parameters	94	None	replace
583	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(null,  typeToken.getSuperType());  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(null,  typeToken.getSuperType());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(null,  typeToken.getSuperType());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSuperType());    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
584	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(defaultImplementation.getSuperType());  [CE]  cannot  find  symbol  defaultImplementation  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(defaultImplementation.getSuperType());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(defaultImplementation.getSuperType());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSuperType());    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	16	None	replace
585	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(rawType.getSuperType());  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(rawType.getSuperType());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(rawType.getSuperType());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSuperType());    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
586	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  +  1;  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  +  1;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  +  1;	  Class    <?    super    T>    rawType    =    typeToken.getQualifiedName();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
587	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  type.getQualifiedName();  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  type.getQualifiedName();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  type.getQualifiedName();	  Class    <?    super    T>    rawType    =    typeToken.getQualifiedName();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
588	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.toQualifiedName();  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.toQualifiedName();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.toQualifiedName();	  Class    <?    super    T>    rawType    =    typeToken.getQualifiedName();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
589	[BUG]  [BUGGY]  Class  <?>  rawType  =  getRawClass(typeToken.getRawClass());  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?>  rawType  =  getRawClass(typeToken.getRawClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?>  rawType  =  getRawClass(typeToken.getRawClass());	  Class    <?>    rawType    =    type.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
590	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    final    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	25	None	replace
591	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    final    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	25	None	replace
592	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    final    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	25	None	replace
593	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  throw  new  IllegalStateException( " ");  }	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    final    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	25	None	replace
594	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  final  Class  <?  super  T>  rawType  =  rawType.getRawType();  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  final  Class  <?  super  T>  rawType  =  rawType.getRawType();  }  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  final  Class  <?  super  T>  rawType  =  rawType.getRawType();  }	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    final    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	25	None	replace
595	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  final  Class  <?  super  T>  rawType  =  rawType.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  final  Class  <?  super  T>  rawType  =  rawType.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  final  Class  <?  super  T>  rawType  =  rawType.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    final    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	25	None	replace
596	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getPropertyType(typeToken.getSupertype());  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getPropertyType(typeToken.getSupertype());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getPropertyType(typeToken.getSupertype());	  final    Class    <?    super    T>    rawType    =    typeToken.getsupertype();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
597	[BUG]  [BUGGY]  if(typeToken.isUnknownType())  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  InstanceCreator  <?  super  T>  rawType  =  rawType.getRawType();  }  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  if(typeToken.isUnknownType())  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  InstanceCreator  <?  super  T>  rawType  =  rawType.getRawType();  }  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	if(typeToken.isUnknownType())  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  InstanceCreator  <?  super  T>  rawType  =  rawType.getRawType();  }	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    InstanceCreator    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
598	[BUG]  [BUGGY]  if(typeToken.isUnknownType())  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  InstanceCreator  <?  super  T>  rawType  =  rawType.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  if(typeToken.isUnknownType())  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  InstanceCreator  <?  super  T>  rawType  =  rawType.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	if(typeToken.isUnknownType())  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  InstanceCreator  <?  super  T>  rawType  =  rawType.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    InstanceCreator    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
599	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.getRawParameterType(0);  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?>  rawType  =  typeToken.getRawParameterType(0);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?>  rawType  =  typeToken.getRawParameterType(0);	  Class    <?>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
600	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawClass()  ||  typeToken.getCollectionClass()!=  null;  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawClass()  ||  typeToken.getCollectionClass()!=  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawClass()  ||  typeToken.getCollectionClass()!=  null;	  final    Class    <?    super    T>    rawType    =    typeToken.getRawClass()    ||    typeToken.getRawClass()!=    null;    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
601	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawClass()  ||  typeToken.isSubtype(typeToken.getRawClass())atteinte  null;  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawClass()  ||  typeToken.isSubtype(typeToken.getRawClass())atteinte  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawClass()  ||  typeToken.isSubtype(typeToken.getRawClass())atteinte  null;	  final    Class    <?    super    T>    rawType    =    typeToken.getRawClass()    ||    typeToken.getRawClass()!=    null;    	non-compiled	[CE]  ';'  expected	21	None	replace
602	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawClass()  ||  typeToken.isSubtype(typeToken.getRawClass());  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawClass()  ||  typeToken.isSubtype(typeToken.getRawClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawClass()  ||  typeToken.isSubtype(typeToken.getRawClass());	  final    Class    <?    super    T>    rawType    =    typeToken.getRawClass()    ||    typeToken.getRawClass()!=    null;    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
603	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.toRawClass()  ||  typeToken.toRawClass();  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.toRawClass()  ||  typeToken.toRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.toRawClass()  ||  typeToken.toRawClass();	  final    Class    <?    super    T>    rawType    =    typeToken.toRawClass();    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
604	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.resolveType(typeToken.getReferenceName());  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.resolveType(typeToken.getReferenceName());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.resolveType(typeToken.getReferenceName());	  final    Class    <?    super    T>    rawType    =    typeToken.getReferenceName();    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
605	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  this.typeToken.newInstance();  [CE]  cannot  find  symbol  typeToken  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  this.typeToken.newInstance();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  this.typeToken.newInstance();	  final    Class    <?    super    T>    rawType    =    typeToken.newInstance();    	non-compiled	[CE]  cannot  find  symbol  typeToken	18	None	replace
606	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.newInstance(defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.newInstance(defaultConstructor);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.newInstance(defaultConstructor);	  final    Class    <?    super    T>    rawType    =    typeToken.newInstance();    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	18	None	replace
607	[BUG]  [BUGGY]  final  Class  <?>  typeType  =  typeToken.getRawClass();  [CE]  cannot  find  symbol  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?>  typeType  =  typeToken.getRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?>  typeType  =  typeToken.getRawClass();	  final    Class    <?>    rawType    =    type.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
608	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  ||  typeToken.getQualifiedName();  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  ||  typeToken.getQualifiedName();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  ||  typeToken.getQualifiedName();	  Class    <?    super    T>    rawType    =    typeToken.getQualifiedName();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
609	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(type);  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(type);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(type);	  Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(0);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
610	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawSuperClass()  ||  typeToken.isSubtype(typeToken.getRawSuperClass());  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawSuperClass()  ||  typeToken.isSubtype(typeToken.getRawSuperClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawSuperClass()  ||  typeToken.isSubtype(typeToken.getRawSuperClass());	  final    Class    <?    super    T>    rawType    =    typeToken.getRawSuperClass()    ||    typeToken.getRawSuperClass();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
611	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawSuperClass()  ||  typeToken.isPrimitive();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawSuperClass()  ||  typeToken.isPrimitive();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawSuperClass()  ||  typeToken.isPrimitive();	  final    Class    <?    super    T>    rawType    =    typeToken.getRawSuperClass()    ||    typeToken.getRawSuperClass();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
612	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isConstructor()?  typeToken.getSuperclass()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isConstructor()?  typeToken.getSuperclass()  :  typeToken;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isConstructor()?  typeToken.getSuperclass()  :  typeToken;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperclass()?    typeToken.getSuperclass()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
613	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isStatic()?  typeToken.getSuperType()  :  null;  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isStatic()?  typeToken.getSuperType()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isStatic()?  typeToken.getSuperType()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSuperType()    :    null;    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
614	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.superClass();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.superClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.superClass();	  final    Class    <?    super    T>    rawType    =    typeToken.getsuperClass();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
615	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  this.typeToken.restrictByNotEmptyOrUndefined();  [CE]  cannot  find  symbol  typeToken  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  this.typeToken.restrictByNotEmptyOrUndefined();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  this.typeToken.restrictByNotEmptyOrUndefined();	  final    Class    <?    super    T>    rawType    =    typeToken.restrictByNotEmptyOrUndefined();    	non-compiled	[CE]  cannot  find  symbol  typeToken	50	None	replace
616	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRawParameterType(typeToken.getRawSuperClass());  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRawParameterType(typeToken.getRawSuperClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRawParameterType(typeToken.getRawSuperClass());	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(typeToken.getRawSuperClass());    	non-compiled	[CE]  ';'  expected	13	None	replace
617	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typeToken,  defaultConstructor.getRawSuperClass());  [CE]  cannot  find  symbol  defaultConstructor  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typeToken,  defaultConstructor.getRawSuperClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typeToken,  defaultConstructor.getRawSuperClass());	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(typeToken.getRawSuperClass());    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	13	None	replace
618	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(this.typeToken.getRawSuperClass());  [CE]  cannot  find  symbol  typeToken  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(this.typeToken.getRawSuperClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(this.typeToken.getRawSuperClass());	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(typeToken.getRawSuperClass());    	non-compiled	[CE]  cannot  find  symbol  typeToken	13	None	replace
619	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperType()?  typeToken.getSuperType()  :  typeToken;  [CE]  ')'  expected  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperType()?  typeToken.getSuperType()  :  typeToken;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperType()?  typeToken.getSuperType()  :  typeToken;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSuperType()    :    typeToken;    	non-compiled	[CE]  ')'  expected	64	None	replace
620	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperClass()?  typeToken.getSuperClass()  :  null;  [CE]  ')'  expected  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperClass()?  typeToken.getSuperClass()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperClass()?  typeToken.getSuperClass()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperClass()?    typeToken.getSuperClass()    :    null;    	non-compiled	[CE]  ')'  expected	59	None	replace
621	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Preconditions.checkState(rawTypeToken.getRawType()  ==  null);  [CE]  cannot  find  symbol  rawTypeToken  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Preconditions.checkState(rawTypeToken.getRawType()  ==  null);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.getRawType();  Preconditions.checkState(rawTypeToken.getRawType()  ==  null);	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Preconditions.checkState(typeToken.getRawType()    ==    null);    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	77	None	replace
622	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  defaultConstructor.getSuperType());  [CE]  cannot  find  symbol  defaultConstructor  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  defaultConstructor.getSuperType());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  defaultConstructor.getSuperType());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSuperType());    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	16	None	replace
623	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(rawTypeToken,  typeToken.getSuperType());  [CE]  cannot  find  symbol  rawTypeToken  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(rawTypeToken,  typeToken.getSuperType());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(rawTypeToken,  typeToken.getSuperType());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSuperType());    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	16	None	replace
624	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  factory.getSuperType());  [CE]  cannot  find  symbol  factory  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  factory.getSuperType());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  factory.getSuperType());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSuperType());    	non-compiled	[CE]  cannot  find  symbol  factory	16	None	replace
625	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRawParameterType(0,  typeToken.getRawParameterType(0));  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRawParameterType(0,  typeToken.getRawParameterType(0));  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRawParameterType(0,  typeToken.getRawParameterType(0));	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(0,    typeToken.getRawParameterType(0));    	non-compiled	[CE]  ';'  expected	41	None	replace
626	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typeToken);  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typeToken);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typeToken);	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
627	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  defaultConstructor.getSuperClass());  [CE]  cannot  find  symbol  defaultConstructor  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  defaultConstructor.getSuperClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  defaultConstructor.getSuperClass());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSuperClass());    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	22	None	replace
628	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(rawTypeToken,  typeToken.getSuperClass());  [CE]  cannot  find  symbol  rawTypeToken  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(rawTypeToken,  typeToken.getSuperClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(rawTypeToken,  typeToken.getSuperClass());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSuperClass());    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	22	None	replace
629	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(this.typeToken.getSuperClass());  [CE]  cannot  find  symbol  typeToken  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(this.typeToken.getSuperClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(this.typeToken.getSuperClass());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSuperClass());    	non-compiled	[CE]  cannot  find  symbol  typeToken	22	None	replace
630	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  rawType.getRawType();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  rawType.getRawType();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  rawType.getRawType();  }  else  {  throw  new  IllegalStateException( " ");  }	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	24	None	replace
631	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  rawType.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  rawType.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  rawType.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	24	None	replace
632	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  rawType.getRawType();  }  else  {  return  defaultConstructor.createInstance(type);  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  rawType.getRawType();  }  else  {  return  defaultConstructor.createInstance(type);  }  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  rawType.getRawType();  }  else  {  return  defaultConstructor.createInstance(type);  }	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	24	None	replace
633	[BUG]  [BUGGY]  Class  <  T>  rawType  =  typeToken.restrictByNotNullOrUndefined()?  typeToken.getRawClass()  :  typeToken.getRawClass();  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <  T>  rawType  =  typeToken.restrictByNotNullOrUndefined()?  typeToken.getRawClass()  :  typeToken.getRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <  T>  rawType  =  typeToken.restrictByNotNullOrUndefined()?  typeToken.getRawClass()  :  typeToken.getRawClass();	  Class    <    T>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
634	[BUG]  [BUGGY]  Class  <  T>  rawType  =  typeToken.restrictByNotNullOrUndefined()?  null  :  typeToken.getRawClass();  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <  T>  rawType  =  typeToken.restrictByNotNullOrUndefined()?  null  :  typeToken.getRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <  T>  rawType  =  typeToken.restrictByNotNullOrUndefined()?  null  :  typeToken.getRawClass();	  Class    <    T>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
635	[BUG]  [BUGGY]  Class  <  T>  rawType  =  typeToken.restrictByNotNullOrUndefined()?  typeToken.getRawClass()  :  type;  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <  T>  rawType  =  typeToken.restrictByNotNullOrUndefined()?  typeToken.getRawClass()  :  type;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <  T>  rawType  =  typeToken.restrictByNotNullOrUndefined()?  typeToken.getRawClass()  :  type;	  Class    <    T>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
636	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperClass()?  typeToken.getSuperClass()  :  type;  [CE]  ')'  expected  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperClass()?  typeToken.getSuperClass()  :  type;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperClass()?  typeToken.getSuperClass()  :  type;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperClass()?    typeToken.getSuperClass()    :    type;    	non-compiled	[CE]  ')'  expected	61	None	replace
637	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSuperClass()?  typeToken.getSuperClass()  :  type;  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSuperClass()?  typeToken.getSuperClass()  :  type;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isSuperClass()?  typeToken.getSuperClass()  :  type;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperClass()?    typeToken.getSuperClass()    :    type;    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
638	[BUG]  [BUGGY]  final  Class  <?>  rawType  =  typeToken.getRawParameterType(0);  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?>  rawType  =  typeToken.getRawParameterType(0);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?>  rawType  =  typeToken.getRawParameterType(0);	  final    Class    <?>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
639	[BUG]  [BUGGY]  final  Class  <?>  rawType  =  typeToken.toString();  [CE]  incompatible  types  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?>  rawType  =  typeToken.toString();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?>  rawType  =  typeToken.toString();	  final    Class    <?>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  incompatible  types	79	None	replace
640	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  defaultConstructor.getSupertype());  [CE]  cannot  find  symbol  defaultConstructor  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  defaultConstructor.getSupertype());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  defaultConstructor.getSupertype());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSupertype());    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	6	None	replace
641	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(rawTypeToken,  typeToken.getSupertype());  [CE]  cannot  find  symbol  rawTypeToken  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(rawTypeToken,  typeToken.getSupertype());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(rawTypeToken,  typeToken.getSupertype());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSupertype());    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	6	None	replace
642	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  factory.getSupertype());  [CE]  cannot  find  symbol  factory  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  factory.getSupertype());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  factory.getSupertype());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSupertype());    	non-compiled	[CE]  cannot  find  symbol  factory	6	None	replace
643	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  defaultConstructor.getRawClass());  [CE]  cannot  find  symbol  defaultConstructor  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  defaultConstructor.getRawClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  defaultConstructor.getRawClass());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getRawClass());    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	19	None	replace
644	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(rawTypeToken,  typeToken.getRawClass());  [CE]  cannot  find  symbol  rawTypeToken  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(rawTypeToken,  typeToken.getRawClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(rawTypeToken,  typeToken.getRawClass());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getRawClass());    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	19	None	replace
645	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.restrictByNotNullOrUndefined());  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.restrictByNotNullOrUndefined());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.restrictByNotNullOrUndefined());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getRawClass());    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
646	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRawParameterType(typeToken);  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRawParameterType(typeToken);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRawParameterType(typeToken);	  final    Class    <?    super    T>    rawType    =    typeToken,    defaultConstructor.getRawParameterType(0);    	non-compiled	[CE]  ';'  expected	96	None	replace
647	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRawParameterType(type);  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRawParameterType(type);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRawParameterType(type);	  final    Class    <?    super    T>    rawType    =    typeToken,    defaultConstructor.getRawParameterType(0);    	non-compiled	[CE]  ';'  expected	96	None	replace
648	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRestrictByNotNullOrUndefined();  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRestrictByNotNullOrUndefined();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRestrictByNotNullOrUndefined();	  final    Class    <?    super    T>    rawType    =    typeToken.getRestrictByNotNullOrUndefined();    	non-compiled	[CE]  ';'  expected	49	None	replace
649	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  this.typeToken.getRestrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  typeToken  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  this.typeToken.getRestrictByNotNullOrUndefined();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  this.typeToken.getRestrictByNotNullOrUndefined();	  final    Class    <?    super    T>    rawType    =    typeToken.getRestrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol  typeToken	49	None	replace
650	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSupertype()?  typeToken.getSupertype()  :  null;  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSupertype()?  typeToken.getSupertype()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSupertype()?  typeToken.getSupertype()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSupertype()    :    null;    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
651	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  ||  typeToken.isPrimitive();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  ||  typeToken.isPrimitive();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  ||  typeToken.isPrimitive();	  final    Class    <?    super    T>    rawType    =    typeToken.getQualifiedName()    ||    typeToken.getQualifiedName();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
652	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  +|  typeToken.getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  +|  typeToken.getQualifiedName();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  +|  typeToken.getQualifiedName();	  final    Class    <?    super    T>    rawType    =    typeToken.getQualifiedName()    ||    typeToken.getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
653	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Type  <?  super  T>  rawType  =  rawType.getRawType();  }  [CE]  type  Type  does  not  take  parameters  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Type  <?  super  T>  rawType  =  rawType.getRawType();  }  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Type  <?  super  T>  rawType  =  rawType.getRawType();  }	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Type    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  type  Type  does  not  take  parameters	26	None	replace
654	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Type  <?  super  T>  rawType  =  rawType.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  type  Type  does  not  take  parameters  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Type  <?  super  T>  rawType  =  rawType.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Type  <?  super  T>  rawType  =  rawType.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Type    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  type  Type  does  not  take  parameters	26	None	replace
655	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRawClass();  [CE]  ';'  expected  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRawClass();	  Class    <?    super    T>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  ';'  expected	44	None	replace
656	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.toRawClass();  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.toRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.toRawClass();	  Class    <?    super    T>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
657	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawClass()  ||  typeToken.getRawClass()!=  null;  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawClass()  ||  typeToken.getRawClass()!=  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.getRawClass()  ||  typeToken.getRawClass()!=  null;	  Class    <?    super    T>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
658	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  this.typeToken.restrictByNotNullOrUndefined(typeToken.getQualifiedName());  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  this.typeToken.restrictByNotNullOrUndefined(typeToken.getQualifiedName());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  this.typeToken.restrictByNotNullOrUndefined(typeToken.getQualifiedName());	  final    Class    <?    super    T>    rawType    =    typeToken.restrictByNotNullOrUndefined(typeToken.getQualifiedName());    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
659	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  classToken.restrictByNotNullOrUndefined(typeToken.getQualifiedName());  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  classToken.restrictByNotNullOrUndefined(typeToken.getQualifiedName());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  classToken.restrictByNotNullOrUndefined(typeToken.getQualifiedName());	  final    Class    <?    super    T>    rawType    =    typeToken.restrictByNotNullOrUndefined(typeToken.getQualifiedName());    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
660	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  token.restrictByNotNullOrUndefined(typeToken.getQualifiedName());  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  token.restrictByNotNullOrUndefined(typeToken.getQualifiedName());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  token.restrictByNotNullOrUndefined(typeToken.getQualifiedName());	  final    Class    <?    super    T>    rawType    =    typeToken.restrictByNotNullOrUndefined(typeToken.getQualifiedName());    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
661	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken  ==  null)?  this.typeToken.getSuperType()  :  typeToken.getSuperType();  [CE]  cannot  find  symbol  typeToken  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken  ==  null)?  this.typeToken.getSuperType()  :  typeToken.getSuperType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =(typeToken  ==  null)?  this.typeToken.getSuperType()  :  typeToken.getSuperType();	  final    Class    <?    super    T>    rawType    =    this.typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol  typeToken	91	None	replace
662	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken  ==  null)?  typeToken.getSuperType()  :  this.typeToken.getSuperType();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken  ==  null)?  typeToken.getSuperType()  :  this.typeToken.getSuperType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =(typeToken  ==  null)?  typeToken.getSuperType()  :  this.typeToken.getSuperType();	  final    Class    <?    super    T>    rawType    =    this.typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
663	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken  ==  null)?  this.typeToken.getSuperType()  :  type;  [CE]  cannot  find  symbol  typeToken  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken  ==  null)?  this.typeToken.getSuperType()  :  type;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =(typeToken  ==  null)?  this.typeToken.getSuperType()  :  type;	  final    Class    <?    super    T>    rawType    =    this.typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol  typeToken	91	None	replace
664	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.toString();  [CE]  incompatible  types  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.toString();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.toString();	  Class    <?    super    T>    rawType    =    typeToken.getSupertype();    	non-compiled	[CE]  incompatible  types	62	None	replace
665	[BUG]  [BUGGY]  instanceCreators.put(type,  rawType);  [CE]  cannot  find  symbol  rawType  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  instanceCreators.put(type,  rawType);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	instanceCreators.put(type,  rawType);	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Class    <?    super    T>    rawType    =    typeToken.getRawType();    instanceCreators.put(type,    rawType);    	non-compiled	[CE]  cannot  find  symbol  rawType	31	None	replace
666	[BUG]  [BUGGY]  final  Class  <?>  rawType  =  typeToken.resolveClass(typeToken.getRawClass());  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?>  rawType  =  typeToken.resolveClass(typeToken.getRawClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?>  rawType  =  typeToken.resolveClass(typeToken.getRawClass());	  final    Class    <?>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
667	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  defaultImplementation.getQualifiedName());  [CE]  cannot  find  symbol  defaultImplementation  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  defaultImplementation.getQualifiedName());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  defaultImplementation.getQualifiedName());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getQualifiedName());    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	1	None	replace
668	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  defaultConstructor.getQualifiedName());  [CE]  cannot  find  symbol  defaultConstructor  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  defaultConstructor.getQualifiedName());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  defaultConstructor.getQualifiedName());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getQualifiedName());    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	1	None	replace
669	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  this.defaultImplementation.getQualifiedName());  [CE]  cannot  find  symbol  defaultImplementation  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  this.defaultImplementation.getQualifiedName());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  this.defaultImplementation.getQualifiedName());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getQualifiedName());    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	1	None	replace
670	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.superclass();  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.superclass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.superclass();	  final    Class    <?    super    T>    rawType    =    typeToken.getsuperclass();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
671	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperType()?  typeToken.getSupertype()  :  typeToken;  [CE]  ')'  expected  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperType()?  typeToken.getSupertype()  :  typeToken;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperType()?  typeToken.getSupertype()  :  typeToken;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSupertype()    :    typeToken;    	non-compiled	[CE]  ')'  expected	72	None	replace
672	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSupertype()?  typeToken.getSupertype()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSupertype()?  typeToken.getSupertype()  :  typeToken;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSupertype()?  typeToken.getSupertype()  :  typeToken;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSupertype()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
673	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSupertype()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSupertype()  :  typeToken;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getSupertype()  :  typeToken;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSupertype()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
674	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken  ==  null)?  null  :  typeToken.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	add	final  Class  <?  super  T>  rawType  =(typeToken  ==  null)?  null  :  typeToken.getRawType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    final    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	compilable	  [FE]  ClassCastException  	25	2	replace
675	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken  ==  null)?  null  :  typeToken.getRawType();  [FE]  ClassCastException  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken  ==  null)?  null  :  typeToken.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =(typeToken  ==  null)?  null  :  typeToken.getRawType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    final    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	compilable	  [FE]  ClassCastException  	25	2	replace
676	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken!=  null)?  null  :  typeToken.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	add	final  Class  <?  super  T>  rawType  =(typeToken!=  null)?  null  :  typeToken.getRawType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    final    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	compilable	  [FE]  NullPointerException  	25	43	replace
677	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken!=  null)?  null  :  typeToken.getRawType();  [FE]  NullPointerException  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken!=  null)?  null  :  typeToken.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =(typeToken!=  null)?  null  :  typeToken.getRawType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    final    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	compilable	  [FE]  NullPointerException  	25	43	replace
678	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken.getRawType()  ==  null)?  null  :  typeToken.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	add	final  Class  <?  super  T>  rawType  =(typeToken.getRawType()  ==  null)?  null  :  typeToken.getRawType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    final    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	compilable	  [FE]  ClassCastException  	25	2	replace
679	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken.getRawType()  ==  null)?  null  :  typeToken.getRawType();  [FE]  ClassCastException  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken.getRawType()  ==  null)?  null  :  typeToken.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =(typeToken.getRawType()  ==  null)?  null  :  typeToken.getRawType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    final    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	compilable	  [FE]  ClassCastException  	25	2	replace
680	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken.getRawType()!=  null)?  typeToken.getRawType()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	add	final  Class  <?  super  T>  rawType  =(typeToken.getRawType()!=  null)?  typeToken.getRawType()  :  null;	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    final    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	compilable	  [FE]  ClassCastException  	25	2	replace
681	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken.getRawType()!=  null)?  typeToken.getRawType()  :  null;  [FE]  ClassCastException  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken.getRawType()!=  null)?  typeToken.getRawType()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =(typeToken.getRawType()!=  null)?  typeToken.getRawType()  :  null;	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    final    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	compilable	  [FE]  ClassCastException  	25	2	replace
682	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken,  defaultImplementation.getSuperClass();  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken,  defaultImplementation.getSuperClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken,  defaultImplementation.getSuperClass();	  Class    <?    super    T>    rawType    =    typeToken.getSuperClass();    	non-compiled	[CE]  ';'  expected	46	None	replace
683	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperclass()?  typeToken.getSuperclass()  :  type;  [CE]  ')'  expected  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperclass()?  typeToken.getSuperclass()  :  type;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperclass()?  typeToken.getSuperclass()  :  type;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperclass()?    typeToken.getSuperclass()    :    type;    	non-compiled	[CE]  ')'  expected	69	None	replace
684	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  ObjectConstructor  <  T>  rawType  =  typeToken.getRawType();  }  else  {  return  defaultConstructor.createInstance(type);  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  ObjectConstructor  <  T>  rawType  =  typeToken.getRawType();  }  else  {  return  defaultConstructor.createInstance(type);  }  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  ObjectConstructor  <  T>  rawType  =  typeToken.getRawType();  }  else  {  return  defaultConstructor.createInstance(type);  }	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    ObjectConstructor    <    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	27	None	replace
685	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  this.typeToken.getRawSuperclass();  [CE]  cannot  find  symbol  typeToken  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  this.typeToken.getRawSuperclass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  this.typeToken.getRawSuperclass();	  final    Class    <?    super    T>    rawType    =    typeToken.getRawSuperclass();    	non-compiled	[CE]  cannot  find  symbol  typeToken	14	None	replace
686	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.toRawSuperclass();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.toRawSuperclass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.toRawSuperclass();	  final    Class    <?    super    T>    rawType    =    typeToken.getRawSuperclass();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
687	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  token.getRawSuperclass();  [CE]  cannot  find  symbol  token  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  token.getRawSuperclass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  token.getRawSuperclass();	  final    Class    <?    super    T>    rawType    =    typeToken.getRawSuperclass();    	non-compiled	[CE]  cannot  find  symbol  token	14	None	replace
688	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperClass()?  typeToken.getSuperClass()  :  typeToken;  [CE]  ')'  expected  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperClass()?  typeToken.getSuperClass()  :  typeToken;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperClass()?  typeToken.getSuperClass()  :  typeToken;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperClass()?    typeToken.getSuperClass()    :    typeToken;    	non-compiled	[CE]  ')'  expected	60	None	replace
689	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  defaultConstructor.getSuperclass());  [CE]  cannot  find  symbol  defaultConstructor  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  defaultConstructor.getSuperclass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  defaultConstructor.getSuperclass());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSuperclass());    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	9	None	replace
690	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  factory.getSuperclass());  [CE]  cannot  find  symbol  factory  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  factory.getSuperclass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken,  factory.getSuperclass());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSuperclass());    	non-compiled	[CE]  cannot  find  symbol  factory	9	None	replace
691	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(this.typeToken.getSuperclass());  [CE]  cannot  find  symbol  typeToken  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(this.typeToken.getSuperclass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(this.typeToken.getSuperclass());	  final    Class    <?    super    T>    rawType    =    typeToken.constructType(typeToken.getSuperclass());    	non-compiled	[CE]  cannot  find  symbol  typeToken	9	None	replace
692	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSuperType()  :  type;  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSuperType()  :  type;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isInterface()?  typeToken.getSuperType()  :  type;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSuperType()    :    type;    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
693	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken!=  null)?  this.typeToken.restrictByNotNullOrUndefined()  :  typeToken.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  typeToken  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken!=  null)?  this.typeToken.restrictByNotNullOrUndefined()  :  typeToken.restrictByNotNullOrUndefined();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =(typeToken!=  null)?  this.typeToken.restrictByNotNullOrUndefined()  :  typeToken.restrictByNotNullOrUndefined();	  final    Class    <?    super    T>    rawType    =    this.typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol  typeToken	103	None	replace
694	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken!=  null)?  this.typeToken.restrictByNotNullOrUndefined()  :  typeToken.getRestrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  typeToken  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken!=  null)?  this.typeToken.restrictByNotNullOrUndefined()  :  typeToken.getRestrictByNotNullOrUndefined();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =(typeToken!=  null)?  this.typeToken.restrictByNotNullOrUndefined()  :  typeToken.getRestrictByNotNullOrUndefined();	  final    Class    <?    super    T>    rawType    =    this.typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol  typeToken	103	None	replace
695	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperclass()?  typeToken.getSuperclass()  :  null;  [CE]  ')'  expected  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperclass()?  typeToken.getSuperclass()  :  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperclass()?  typeToken.getSuperclass()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperclass()?    typeToken.getSuperclass()    :    null;    	non-compiled	[CE]  ')'  expected	70	None	replace
696	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =  classToken.getRawClass();  [CE]  cannot  find  symbol  classToken  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <  T>  rawTypeCreator  =  classToken.getRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <  T>  rawTypeCreator  =  classToken.getRawClass();	  Class    <    T>    rawTypeCreator    =    type.getRawClass();    	non-compiled	[CE]  cannot  find  symbol  classToken	38	None	replace
697	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  this.typeToken.getRawType();  [CE]  cannot  find  symbol  typeToken  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  this.typeToken.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  this.typeToken.getRawType();	  Class    <?    super    T>    rawType    =    type.getRawType();    	non-compiled	[CE]  cannot  find  symbol  typeToken	47	None	replace
698	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  getRawType(typeToken).getRawType();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  getRawType(typeToken).getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  getRawType(typeToken).getRawType();	  Class    <?    super    T>    rawType    =    type.getRawType();    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
699	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  parent.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  parent  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  parent.restrictByNotNullOrUndefined();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  parent.restrictByNotNullOrUndefined();	  final    Class    <?    super    T>    rawType    =    type.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol  parent	51	None	replace
700	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(typeToken,  defaultConstructor.getRawClass());  [CE]  cannot  find  symbol  defaultConstructor  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(typeToken,  defaultConstructor.getRawClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(typeToken,  defaultConstructor.getRawClass());	  final    Class    <?    super    T>    rawType    =    typeToken.restrictByNotNullOrUndefined(typeToken.getRawClass());    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	20	None	replace
701	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(typeToken,  this.typeToken.getRawClass());  [CE]  cannot  find  symbol  typeToken  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(typeToken,  this.typeToken.getRawClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(typeToken,  this.typeToken.getRawClass());	  final    Class    <?    super    T>    rawType    =    typeToken.restrictByNotNullOrUndefined(typeToken.getRawClass());    	non-compiled	[CE]  cannot  find  symbol  typeToken	20	None	replace
702	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(typeToken,  defaultImplementation.getRawClass());  [CE]  cannot  find  symbol  defaultImplementation  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(typeToken,  defaultImplementation.getRawClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(typeToken,  defaultImplementation.getRawClass());	  final    Class    <?    super    T>    rawType    =    typeToken.restrictByNotNullOrUndefined(typeToken.getRawClass());    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	20	None	replace
703	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  token.restrictByNotNullOrUndefined(typeToken.getRawClass());  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  token.restrictByNotNullOrUndefined(typeToken.getRawClass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  token.restrictByNotNullOrUndefined(typeToken.getRawClass());	  final    Class    <?    super    T>    rawType    =    typeToken.restrictByNotNullOrUndefined(typeToken.getRawClass());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
704	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  +|  typeToken.getQualifiedName()!=  null;  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  +|  typeToken.getQualifiedName()!=  null;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  +|  typeToken.getQualifiedName()!=  null;	  final    Class    <?    super    T>    rawType    =    typeToken.getQualifiedName()    ||    typeToken.getQualifiedName()!=    null;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
705	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasQualifiedName()?  typeToken.getQualifiedName()  :  defaultImplementation;  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasQualifiedName()?  typeToken.getQualifiedName()  :  defaultImplementation;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.hasQualifiedName()?  typeToken.getQualifiedName()  :  defaultImplementation;	  final    Class    <?    super    T>    rawType    =    typeToken.hasQualifiedName()?    typeToken.getQualifiedName()    :    null;    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
706	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasQualifiedName()?  typeToken.getQualifiedName()  :  this;  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasQualifiedName()?  typeToken.getQualifiedName()  :  this;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.hasQualifiedName()?  typeToken.getQualifiedName()  :  this;	  final    Class    <?    super    T>    rawType    =    typeToken.hasQualifiedName()?    typeToken.getQualifiedName()    :    null;    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
707	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken!=  null)?  typeToken.getQualifiedName()  :  this.typeToken.getQualifiedName();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken!=  null)?  typeToken.getQualifiedName()  :  this.typeToken.getQualifiedName();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =(typeToken!=  null)?  typeToken.getQualifiedName()  :  this.typeToken.getQualifiedName();	  final    Class    <?    super    T>    rawType    =    this.typeToken.getQualifiedName();    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
708	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken.getQualifiedName()  ==  null)?  this.typeToken.getQualifiedName()  :  typeToken.getQualifiedName();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken.getQualifiedName()  ==  null)?  this.typeToken.getQualifiedName()  :  typeToken.getQualifiedName();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =(typeToken.getQualifiedName()  ==  null)?  this.typeToken.getQualifiedName()  :  typeToken.getQualifiedName();	  final    Class    <?    super    T>    rawType    =    this.typeToken.getQualifiedName();    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
709	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSuperType()  :  typeToken.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSuperType()  :  typeToken.restrictByNotNullOrUndefined();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSuperType()  :  typeToken.restrictByNotNullOrUndefined();	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSuperType()    :    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
710	[BUG]  [BUGGY]  Class  <  T>  rawType  =  classToken.getRawClass();  [CE]  cannot  find  symbol  classToken  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <  T>  rawType  =  classToken.getRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <  T>  rawType  =  classToken.getRawClass();	  Class    <    T>    rawType    =    type.getRawClass();    	non-compiled	[CE]  cannot  find  symbol  classToken	32	None	replace
711	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperType()?  typeToken.getSupertype()  :  type;  [CE]  ')'  expected  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperType()?  typeToken.getSupertype()  :  type;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isSubtype(typeToken.hasSuperType()?  typeToken.getSupertype()  :  type;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSupertype()    :    type;    	non-compiled	[CE]  ')'  expected	74	None	replace
712	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSupertype()?  typeToken.getSupertype()  :  type;  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSupertype()?  typeToken.getSupertype()  :  type;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSupertype()?  typeToken.getSupertype()  :  type;	  final    Class    <?    super    T>    rawType    =    typeToken.hasSuperType()?    typeToken.getSupertype()    :    type;    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
713	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  SortedMap  <  Class  <?  super  T>  rawType  =  rawType;  }  [CE]  >  expected  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  SortedMap  <  Class  <?  super  T>  rawType  =  rawType;  }  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  SortedMap  <  Class  <?  super  T>  rawType  =  rawType;  }	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    SortedMap    <    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  >  expected	30	None	replace
714	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  SortedMap  <  Class  <?  super  T>  rawType  =  rawType.getRawType();  }  else  {  final  Map  <  Class  <?  super  T>  instanceCreators  =  [CE]  >  expected  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  SortedMap  <  Class  <?  super  T>  rawType  =  rawType.getRawType();  }  else  {  final  Map  <  Class  <?  super  T>  instanceCreators  =  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	if(typeToken!=  null)  {  Class  <?  super  T>  rawType  =  typeToken.getRawType();  SortedMap  <  Class  <?  super  T>  rawType  =  rawType.getRawType();  }  else  {  final  Map  <  Class  <?  super  T>  instanceCreators  =	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    SortedMap    <    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  >  expected	30	None	replace
715	[BUG]  [BUGGY]  Type  <  T>  rawType  =  getRawType(typeToken.getRawType());  [CE]  type  Type  does  not  take  parameters  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Type  <  T>  rawType  =  getRawType(typeToken.getRawType());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Type  <  T>  rawType  =  getRawType(typeToken.getRawType());	  Type    <    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  type  Type  does  not  take  parameters	94	None	replace
716	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  this.typeToken.getRawSuperClass();  [CE]  cannot  find  symbol  typeToken  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  this.typeToken.getRawSuperClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  this.typeToken.getRawSuperClass();	  Class    <?    super    T>    rawType    =    typeToken.getRawSuperClass();    	non-compiled	[CE]  cannot  find  symbol  typeToken	100	None	replace
717	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.toRawSuperClass();  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.toRawSuperClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.toRawSuperClass();	  Class    <?    super    T>    rawType    =    typeToken.getRawSuperClass();    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
718	[BUG]  [BUGGY]  Class  <  T>  rawType  =  typeToken.getRawParameterType(0);  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <  T>  rawType  =  typeToken.getRawParameterType(0);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <  T>  rawType  =  typeToken.getRawParameterType(0);	  Class    <    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
719	[BUG]  [BUGGY]  Class  <  T>  rawType  =  typeToken.toString();  [CE]  incompatible  types  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <  T>  rawType  =  typeToken.toString();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <  T>  rawType  =  typeToken.toString();	  Class    <    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  incompatible  types	81	None	replace
720	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  this.typeToken.getRawParameterType(0);  [CE]  cannot  find  symbol  typeToken  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  this.typeToken.getRawParameterType(0);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  this.typeToken.getRawParameterType(0);	  final    Class    <?    super    T>    rawType    =    this.typeToken.getRawSuperClass();    	non-compiled	[CE]  cannot  find  symbol  typeToken	89	None	replace
721	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken  ==  null)?  typeToken.getSupertype()  :  this.typeToken.getSupertype();  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken  ==  null)?  typeToken.getSupertype()  :  this.typeToken.getSupertype();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =(typeToken  ==  null)?  typeToken.getSupertype()  :  this.typeToken.getSupertype();	  final    Class    <?    super    T>    rawType    =    this.typeToken.getSupertype();    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
722	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken  ==  null)?  this.typeToken.getSupertype()  :  type;  [CE]  cannot  find  symbol  typeToken  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =(typeToken  ==  null)?  this.typeToken.getSupertype()  :  type;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =(typeToken  ==  null)?  this.typeToken.getSupertype()  :  type;	  final    Class    <?    super    T>    rawType    =    this.typeToken.getSupertype();    	non-compiled	[CE]  cannot  find  symbol  typeToken	95	None	replace
723	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawType  =  instanceCreators.get(type);  [CE]  incompatible  types  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  ObjectConstructor  <  T>  rawType  =  instanceCreators.get(type);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	ObjectConstructor  <  T>  rawType  =  instanceCreators.get(type);	  InstanceCreator    <    T>    rawType    =    instanceCreators.get(type);    	non-compiled	[CE]  incompatible  types	36	None	replace
724	[BUG]  [BUGGY]  Class  <?>  rawType  =  classToken.getRawClass();  [CE]  cannot  find  symbol  classToken  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?>  rawType  =  classToken.getRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?>  rawType  =  classToken.getRawClass();	  Class    <?>    rawType    =    type.getRawClass();    	non-compiled	[CE]  cannot  find  symbol  classToken	35	None	replace
725	[BUG]  [BUGGY]  Class  <?>  rawType  =  parent.getRawClass();  [CE]  cannot  find  symbol  parent  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  Class  <?>  rawType  =  parent.getRawClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?>  rawType  =  parent.getRawClass();	  Class    <?>    rawType    =    type.getRawClass();    	non-compiled	[CE]  cannot  find  symbol  parent	35	None	replace
726	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()  ||  typeToken.isPrimitive();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()  ||  typeToken.isPrimitive();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()  ||  typeToken.isPrimitive();	  final    Class    <?    super    T>    rawType    =    typeToken.getSuperclass()    ||    typeToken.getSuperclass();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
727	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()  ||  typeToken.isSubtype(typeToken.getSuperclass());  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()  ||  typeToken.isSubtype(typeToken.getSuperclass());  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()  ||  typeToken.isSubtype(typeToken.getSuperclass());	  final    Class    <?    super    T>    rawType    =    typeToken.getSuperclass()    ||    typeToken.getSuperclass();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
728	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()  ||  typeToken.getSuperClass();  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()  ||  typeToken.getSuperClass();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()  ||  typeToken.getSuperClass();	  final    Class    <?    super    T>    rawType    =    typeToken.getSuperclass()    ||    typeToken.getSuperclass();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
729	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawType  =  typeToken.getRawType();  Category  <?  super  T>  rawType  =  rawType.getRawType();  [CE]  incompatible  types  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  ObjectConstructor  <  T>  rawType  =  typeToken.getRawType();  Category  <?  super  T>  rawType  =  rawType.getRawType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	ObjectConstructor  <  T>  rawType  =  typeToken.getRawType();  Category  <?  super  T>  rawType  =  rawType.getRawType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    Category    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  incompatible  types	28	None	replace
730	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  types.getRawParameterType(0);  [CE]  cannot  find  symbol  types  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  types.getRawParameterType(0);  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  types.getRawParameterType(0);	  final    Class    <?    super    T>    rawType    =    type.getRawParameterType(0);    	non-compiled	[CE]  cannot  find  symbol  types	87	None	replace
731	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typeToken.getRawParameterType(3));  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typeToken.getRawParameterType(3));  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typeToken.getRawParameterType(3));	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(typeToken.getRawParameterType(1));    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
732	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getPrimitiveType()  :  typeToken.getPrimitiveType();  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getPrimitiveType()  :  typeToken.getPrimitiveType();  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getPrimitiveType()  :  typeToken.getPrimitiveType();	  final    Class    <?    super    T>    rawType    =    typeToken.getPrimitiveType();    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
733	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getPrimitiveType()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getPrimitiveType()  :  typeToken;  [BUGGY]        @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.isPrimitive()?  typeToken.getPrimitiveType()  :  typeToken;	  final    Class    <?    super    T>    rawType    =    typeToken.getPrimitiveType();    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
