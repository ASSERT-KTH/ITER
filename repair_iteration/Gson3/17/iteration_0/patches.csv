bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawClass();  [CE]  cannot  find  symbol  [FE]    ClassCastException  [CONTEXT]  public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawClass();  [BUGGY]    @SuppressWarnings( "unchecked ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawClass();	final  Class<?  super  T>  rawType  =  typeToken.getRawType();  	non-compiled	[CE]  cannot  find  symbol	33	None	replace
2	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperClass();  [CE]  cannot  find  symbol  [FE]      ClassCastException  [CONTEXT]  public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperClass();  [BUGGY]    @SuppressWarnings( "unchecked ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperClass();	final  Class<?  super  T>  rawType  =  typeToken.getRawType();  	non-compiled	[CE]  cannot  find  symbol	33	None	replace
3	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName();  [CE]  cannot  find  symbol  [FE]        ClassCastException  [CONTEXT]  public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName();  [BUGGY]    @SuppressWarnings( "unchecked ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName();	final  Class<?  super  T>  rawType  =  typeToken.getRawType();  	non-compiled	[CE]  cannot  find  symbol	33	None	replace
4	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperType();  [CE]  cannot  find  symbol  [FE]          ClassCastException  [CONTEXT]  public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperType();  [BUGGY]    @SuppressWarnings( "unchecked ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperType();	final  Class<?  super  T>  rawType  =  typeToken.getRawType();  	non-compiled	[CE]  cannot  find  symbol	33	None	replace
5	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]            ClassCastException  [CONTEXT]  public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawType();  [BUGGY]    @SuppressWarnings( "unchecked ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	add	Class  <?  super  T>  rawType  =  typeToken.getRawType();	final  Class<?  super  T>  rawType  =  typeToken.getRawType();  	compilable	  [FE]  ClassCastException  	33	2	replace
6	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawType();  [FE]  ClassCastException  [FE]            ClassCastException  [CONTEXT]  public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawType();  [BUGGY]    @SuppressWarnings( "unchecked ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.getRawType();	final  Class<?  super  T>  rawType  =  typeToken.getRawType();  	compilable	  [FE]  ClassCastException  	33	2	replace
7	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass();  [CE]  cannot  find  symbol  [FE]              ClassCastException  [CONTEXT]  public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass();  [BUGGY]    @SuppressWarnings( "unchecked ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass();	final  Class<?  super  T>  rawType  =  typeToken.getRawType();  	non-compiled	[CE]  cannot  find  symbol	33	None	replace
8	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  rawType  [FE]                ClassCastException  [CONTEXT]  public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  [BUGGY]    [BUGGY]    @SuppressWarnings( "unchecked ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	  	final  Class<?  super  T>  rawType  =  typeToken.getRawType();  	non-compiled	[CE]  cannot  find  symbol  rawType	33	None	replace
9	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSupertype();  [CE]  cannot  find  symbol  [FE]    ClassCastException  [CONTEXT]  public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSupertype();  [BUGGY]    @SuppressWarnings( "unchecked ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSupertype();	final  Class<?  super  T>  rawType  =  typeToken.getRawType();  	non-compiled	[CE]  cannot  find  symbol	33	None	replace
10	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(0);  [CE]  cannot  find  symbol  [FE]      ClassCastException  [CONTEXT]  public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(0);  [BUGGY]    @SuppressWarnings( "unchecked ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(0);	final  Class<?  super  T>  rawType  =  typeToken.getRawType();  	non-compiled	[CE]  cannot  find  symbol	33	None	replace
11	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]    ClassCastException  [CONTEXT]  public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined();  [BUGGY]    @SuppressWarnings( "unchecked ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined();	final  Class<?  super  T>  rawType  =  typeToken.getRawType();  	non-compiled	[CE]  cannot  find  symbol	33	None	replace
12	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawSuperClass();  [CE]  cannot  find  symbol  [FE]      ClassCastException  [CONTEXT]  public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawSuperClass();  [BUGGY]    @SuppressWarnings( "unchecked ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawSuperClass();	final  Class<?  super  T>  rawType  =  typeToken.getRawType();  	non-compiled	[CE]  cannot  find  symbol	33	None	replace
