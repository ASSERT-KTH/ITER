bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.getQualifiedName());  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.getQualifiedName());  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.getQualifiedName());	  final    Class    <?    super    T>    rawType    =    typeToken.getQualifiedName();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
2	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  + ": "+typeToken.getQualifiedName();  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  + ": "+typeToken.getQualifiedName();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  + ": "+typeToken.getQualifiedName();	  final    Class    <?    super    T>    rawType    =    typeToken.getQualifiedName();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
3	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  ||  typeToken.getQualifiedName()!=  null;  [CE]  cannot  find  symbol  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  ||  typeToken.getQualifiedName()!=  null;  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  ||  typeToken.getQualifiedName()!=  null;	  final    Class    <?    super    T>    rawType    =    typeToken.getQualifiedName();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
4	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  ||  typeToken.getQualifiedName();  [CE]  cannot  find  symbol  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  ||  typeToken.getQualifiedName();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  ||  typeToken.getQualifiedName();	  final    Class    <?    super    T>    rawType    =    typeToken.getQualifiedName();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
5	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  ||  typeToken.getQualifiedName()  ==  null;  [CE]  cannot  find  symbol  [FE]                    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  ||  typeToken.getQualifiedName()  ==  null;  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  ||  typeToken.getQualifiedName()  ==  null;	  final    Class    <?    super    T>    rawType    =    typeToken.getQualifiedName();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
6	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.getSupertype());  [CE]  cannot  find  symbol  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.getSupertype());  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.getSupertype());	  final    Class    <?    super    T>    rawType    =    typeToken.getSupertype();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
7	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getsupertype();  [CE]  cannot  find  symbol  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getsupertype();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getsupertype();	  final    Class    <?    super    T>    rawType    =    typeToken.getSupertype();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
8	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSupertype(typeToken);  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSupertype(typeToken);  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSupertype(typeToken);	  final    Class    <?    super    T>    rawType    =    typeToken.getSupertype();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
9	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.getSuperclass());  [CE]  cannot  find  symbol  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.getSuperclass());  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.getSuperclass());	  final    Class    <?    super    T>    rawType    =    typeToken.getSuperclass();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
10	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()  ||  typeToken.getSuperclass();  [CE]  cannot  find  symbol  [FE]                    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()  ||  typeToken.getSuperclass();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperclass()  ||  typeToken.getSuperclass();	  final    Class    <?    super    T>    rawType    =    typeToken.getSuperclass();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
11	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getsuperclass();  [CE]  cannot  find  symbol  [FE]                      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getsuperclass();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getsuperclass();	  final    Class    <?    super    T>    rawType    =    typeToken.getSuperclass();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
12	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  defaultImplementation.getRawSuperClass();  [CE]  ';'  expected  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  defaultImplementation.getRawSuperClass();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken,  defaultImplementation.getRawSuperClass();	  final    Class    <?    super    T>    rawType    =    typeToken.getRawSuperClass();    	non-compiled	[CE]  ';'  expected	12	None	replace
13	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typeToken.getRawSuperClass());  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typeToken.getRawSuperClass());  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typeToken.getRawSuperClass());	  final    Class    <?    super    T>    rawType    =    typeToken.getRawSuperClass();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
14	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawSuperclass();  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawSuperclass();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawSuperclass();	  final    Class    <?    super    T>    rawType    =    typeToken.getRawSuperClass();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
15	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawSuperClass()  ||  typeToken.getRawSuperClass();  [CE]  cannot  find  symbol  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawSuperClass()  ||  typeToken.getRawSuperClass();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawSuperClass()  ||  typeToken.getRawSuperClass();	  final    Class    <?    super    T>    rawType    =    typeToken.getRawSuperClass();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
16	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.getSuperType());  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.getSuperType());  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.getSuperType());	  final    Class    <?    super    T>    rawType    =    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
17	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getsuperType();  [CE]  cannot  find  symbol  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getsuperType();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getsuperType();	  final    Class    <?    super    T>    rawType    =    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
18	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.newInstance();  [CE]  cannot  find  symbol  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.newInstance();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.newInstance();	  final    Class    <?    super    T>    rawType    =    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
19	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.getRawClass());  [CE]  cannot  find  symbol  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.getRawClass());  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.getRawClass());	  final    Class    <?    super    T>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
20	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(typeToken.getRawClass());  [CE]  cannot  find  symbol  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(typeToken.getRawClass());  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(typeToken.getRawClass());	  final    Class    <?    super    T>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
21	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawClass()  ||  typeToken.getRawClass()!=  null;  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawClass()  ||  typeToken.getRawClass()!=  null;  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawClass()  ||  typeToken.getRawClass()!=  null;	  final    Class    <?    super    T>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
22	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.getSuperClass());  [CE]  cannot  find  symbol  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.getSuperClass());  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.constructType(typeToken.getSuperClass());	  final    Class    <?    super    T>    rawType    =    typeToken.getSuperClass();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
23	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getsuperClass();  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getsuperClass();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getsuperClass();	  final    Class    <?    super    T>    rawType    =    typeToken.getSuperClass();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
24	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  typeToken.getRawType();  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  typeToken.getRawType();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class    <?    super    T>    rawType    =    typeToken.getRawType();    Class  <?  super  T>  rawType  =  typeToken.getRawType();	  	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	5	None	add
25	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawType();  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawType();  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class    <?    super    T>    rawType    =    typeToken.getRawType();    final  Class  <?  super  T>  rawType  =  typeToken.getRawType();	  	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	5	None	add
26	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Type  <?  super  T>  rawType  =  typeToken.getRawType();  [CE]  type  Type  does  not  take  parameters  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Type  <?  super  T>  rawType  =  typeToken.getRawType();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class    <?    super    T>    rawType    =    typeToken.getRawType();    Type  <?  super  T>  rawType  =  typeToken.getRawType();	  	non-compiled	[CE]  type  Type  does  not  take  parameters	5	None	add
27	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawType();  ObjectConstructor  <  T>  rawType  =  typeToken.getRawType();  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawType();  ObjectConstructor  <  T>  rawType  =  typeToken.getRawType();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class    <?    super    T>    rawType    =    typeToken.getRawType();    ObjectConstructor  <  T>  rawType  =  typeToken.getRawType();	  	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	5	None	add
28	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Category  <?  super  T>  rawType  =  typeToken.getRawType();  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Category  <?  super  T>  rawType  =  typeToken.getRawType();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class    <?    super    T>    rawType    =    typeToken.getRawType();    Category  <?  super  T>  rawType  =  typeToken.getRawType();	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
29	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Constructor  <?  super  T>  rawType  =  typeToken.getRawType();  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Constructor  <?  super  T>  rawType  =  typeToken.getRawType();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class    <?    super    T>    rawType    =    typeToken.getRawType();    Constructor  <?  super  T>  rawType  =  typeToken.getRawType();	  	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	5	None	add
30	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawType();  SortedMap  <  Class  <?  super  T>  rawType  =  typeToken.getRawType();  [CE]  >  expected  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawType();  SortedMap  <  Class  <?  super  T>  rawType  =  typeToken.getRawType();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class    <?    super    T>    rawType    =    typeToken.getRawType();    SortedMap  <  Class  <?  super  T>  rawType  =  typeToken.getRawType();	  	non-compiled	[CE]  >  expected	5	None	add
31	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  typeToken.getRawType();  instanceCreators.put(type,  rawType);  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  typeToken.getRawType();  instanceCreators.put(type,  rawType);  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class    <?    super    T>    rawType    =    typeToken.getRawType();    Class  <?  super  T>  rawType  =  typeToken.getRawType();  instanceCreators.put(type,  rawType);	  	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	5	None	add
32	[BUG]  [BUGGY]  Class  <  T>  rawType  =  type.getRawClass();  [CE]  cannot  find  symbol  [FE]                    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  Class  <  T>  rawType  =  type.getRawClass();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <  T>  rawType  =  type.getRawClass();	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
33	[BUG]  [BUGGY]  Class  <  T>  rawType  =  typeToken.getRawClass();  [CE]  cannot  find  symbol  [FE]                      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  Class  <  T>  rawType  =  typeToken.getRawClass();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <  T>  rawType  =  typeToken.getRawClass();	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
34	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.getRawClass();  [CE]  cannot  find  symbol  [FE]                        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  Class  <?>  rawType  =  typeToken.getRawClass();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?>  rawType  =  typeToken.getRawClass();	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
35	[BUG]  [BUGGY]  Class  <?>  rawType  =  type.getRawClass();  [CE]  cannot  find  symbol  [FE]                          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  Class  <?>  rawType  =  type.getRawClass();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?>  rawType  =  type.getRawClass();	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
36	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(type);  [CE]  incompatible  types  [FE]                            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(type);  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	InstanceCreator  <  T>  rawType  =  instanceCreators.get(type);	      	non-compiled	[CE]  incompatible  types	8	None	replace
37	[BUG]  [BUGGY]  final  Class  <?>  rawType  =  type.getRawClass();  [CE]  cannot  find  symbol  [FE]                              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?>  rawType  =  type.getRawClass();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?>  rawType  =  type.getRawClass();	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
38	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =  type.getRawClass();  [CE]  cannot  find  symbol  [FE]                                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  Class  <  T>  rawTypeCreator  =  type.getRawClass();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <  T>  rawTypeCreator  =  type.getRawClass();	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
39	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(1);  [CE]  cannot  find  symbol  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(1);  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(1);	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(0);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
40	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typeToken.getRawParameterType(0));  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typeToken.getRawParameterType(0));  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typeToken.getRawParameterType(0));	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(0);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
41	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(0,  typeToken.getRawParameterType(0));  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(0,  typeToken.getRawParameterType(0));  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(0,  typeToken.getRawParameterType(0));	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(0);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
42	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(2);  [CE]  cannot  find  symbol  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(2);  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(2);	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(0);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
43	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType();  [CE]  cannot  find  symbol  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType();	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(0);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
44	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawClass();  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawClass();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.getRawClass();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
45	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName();  [CE]  cannot  find  symbol  [FE]      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.getQualifiedName();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
46	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getSuperClass();  [CE]  cannot  find  symbol  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getSuperClass();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.getSuperClass();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
47	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  type.getRawType();  [CE]  cannot  find  symbol  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  Class  <?  super  T>  rawType  =  type.getRawType();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  type.getRawType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
48	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getSuperType();  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getSuperType();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.getSuperType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
49	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRestrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRestrictByNotNullOrUndefined();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRestrictByNotNullOrUndefined();	  final    Class    <?    super    T>    rawType    =    typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
50	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotEmptyOrUndefined();  [CE]  cannot  find  symbol  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotEmptyOrUndefined();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotEmptyOrUndefined();	  final    Class    <?    super    T>    rawType    =    typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
51	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  type.restrictByNotNullOrUndefined();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.restrictByNotNullOrUndefined();	  final    Class    <?    super    T>    rawType    =    typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
52	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  token.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  token  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  token.restrictByNotNullOrUndefined();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  token.restrictByNotNullOrUndefined();	  final    Class    <?    super    T>    rawType    =    typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol  token	11	None	replace
53	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  classToken.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  classToken  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  classToken.restrictByNotNullOrUndefined();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  classToken.restrictByNotNullOrUndefined();	  final    Class    <?    super    T>    rawType    =    typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol  classToken	11	None	replace
54	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasQualifiedName()?  typeToken.getQualifiedName()  :  null;  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasQualifiedName()?  typeToken.getQualifiedName()  :  null;  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.hasQualifiedName()?  typeToken.getQualifiedName()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.getQualifiedName();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
55	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasQualifiedName()?  typeToken.getQualifiedName()  :  type;  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasQualifiedName()?  typeToken.getQualifiedName()  :  type;  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.hasQualifiedName()?  typeToken.getQualifiedName()  :  type;	  final    Class    <?    super    T>    rawType    =    typeToken.getQualifiedName();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
56	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.toQualifiedName();  [CE]  cannot  find  symbol  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.toQualifiedName();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.toQualifiedName();	  final    Class    <?    super    T>    rawType    =    typeToken.getQualifiedName();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
57	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  +  1;  [CE]  cannot  find  symbol  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  +  1;  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName()  +  1;	  final    Class    <?    super    T>    rawType    =    typeToken.getQualifiedName();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
58	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasSuperClass()?  typeToken.getSuperClass()  :  typeToken.getSuperClass();  [CE]  cannot  find  symbol  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasSuperClass()?  typeToken.getSuperClass()  :  typeToken.getSuperClass();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.hasSuperClass()?  typeToken.getSuperClass()  :  typeToken.getSuperClass();	  final    Class    <?    super    T>    rawType    =    typeToken.getSuperClass();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
59	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasSuperClass()?  typeToken.getSuperClass()  :  null;  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasSuperClass()?  typeToken.getSuperClass()  :  null;  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.hasSuperClass()?  typeToken.getSuperClass()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.getSuperClass();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
60	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasSuperClass()?  typeToken.getSuperClass()  :  typeToken;  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasSuperClass()?  typeToken.getSuperClass()  :  typeToken;  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.hasSuperClass()?  typeToken.getSuperClass()  :  typeToken;	  final    Class    <?    super    T>    rawType    =    typeToken.getSuperClass();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
61	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasSuperClass()?  typeToken.getSuperClass()  :  type;  [CE]  cannot  find  symbol  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasSuperClass()?  typeToken.getSuperClass()  :  type;  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.hasSuperClass()?  typeToken.getSuperClass()  :  type;	  final    Class    <?    super    T>    rawType    =    typeToken.getSuperClass();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
62	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getSupertype();  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getSupertype();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.getSupertype();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
63	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSuperType()  :  typeToken.getSuperType();  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSuperType()  :  typeToken.getSuperType();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSuperType()  :  typeToken.getSuperType();	  final    Class    <?    super    T>    rawType    =    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
64	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSuperType()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSuperType()  :  typeToken;  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSuperType()  :  typeToken;	  final    Class    <?    super    T>    rawType    =    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
65	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSuperType()  :  null;  [CE]  cannot  find  symbol  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSuperType()  :  null;  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSuperType()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
66	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSuperType()  :  type;  [CE]  cannot  find  symbol  [FE]                    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSuperType()  :  type;  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSuperType()  :  type;	  final    Class    <?    super    T>    rawType    =    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
67	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasSuperclass()?  typeToken.getSuperclass()  :  typeToken.getSuperclass();  [CE]  cannot  find  symbol  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasSuperclass()?  typeToken.getSuperclass()  :  typeToken.getSuperclass();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.hasSuperclass()?  typeToken.getSuperclass()  :  typeToken.getSuperclass();	  final    Class    <?    super    T>    rawType    =    typeToken.getSuperclass();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
68	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasSuperclass()?  typeToken.getSuperclass()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasSuperclass()?  typeToken.getSuperclass()  :  typeToken;  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.hasSuperclass()?  typeToken.getSuperclass()  :  typeToken;	  final    Class    <?    super    T>    rawType    =    typeToken.getSuperclass();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
69	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasSuperclass()?  typeToken.getSuperclass()  :  type;  [CE]  cannot  find  symbol  [FE]                      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasSuperclass()?  typeToken.getSuperclass()  :  type;  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.hasSuperclass()?  typeToken.getSuperclass()  :  type;	  final    Class    <?    super    T>    rawType    =    typeToken.getSuperclass();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
70	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasSuperclass()?  typeToken.getSuperclass()  :  null;  [CE]  cannot  find  symbol  [FE]                        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasSuperclass()?  typeToken.getSuperclass()  :  null;  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.hasSuperclass()?  typeToken.getSuperclass()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.getSuperclass();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
71	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSupertype()  :  typeToken.getSupertype();  [CE]  cannot  find  symbol  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSupertype()  :  typeToken.getSupertype();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSupertype()  :  typeToken.getSupertype();	  final    Class    <?    super    T>    rawType    =    typeToken.getSupertype();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
72	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSupertype()  :  typeToken;  [CE]  cannot  find  symbol  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSupertype()  :  typeToken;  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSupertype()  :  typeToken;	  final    Class    <?    super    T>    rawType    =    typeToken.getSupertype();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
73	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSupertype()  :  null;  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSupertype()  :  null;  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSupertype()  :  null;	  final    Class    <?    super    T>    rawType    =    typeToken.getSupertype();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
74	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSupertype()  :  type;  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSupertype()  :  type;  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.hasSuperType()?  typeToken.getSupertype()  :  type;	  final    Class    <?    super    T>    rawType    =    typeToken.getSupertype();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
75	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawType();  InstanceCreator  <?  super  T>  rawType  =  typeToken.getRawType();  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawType();  InstanceCreator  <?  super  T>  rawType  =  typeToken.getRawType();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class    <?    super    T>    rawType    =    typeToken.getRawType();    InstanceCreator  <?  super  T>  rawType  =  typeToken.getRawType();	  	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	5	None	add
76	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawType();  TypeToken  typeToken  =  typeToken.getRawType();  [CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawType();  TypeToken  typeToken  =  typeToken.getRawType();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class    <?    super    T>    rawType    =    typeToken.getRawType();    TypeToken  typeToken  =  typeToken.getRawType();	  	non-compiled	[CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)	5	None	add
77	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Preconditions.checkState(typeToken.getRawType()  ==  null);  [CE]  cannot  find  symbol  Preconditions  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawType();  Preconditions.checkState(typeToken.getRawType()  ==  null);  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class    <?    super    T>    rawType    =    typeToken.getRawType();    Preconditions.checkState(typeToken.getRawType()  ==  null);	  	non-compiled	[CE]  cannot  find  symbol  Preconditions	5	None	add
78	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.getRawType();  [CE]  invalid  inferred  types  for  T#1;  actual  argument  Class<CAP#1>  cannot  be  converted  to  Class<?  super  T#2>  by  method  invocation  conversion  [FE]                    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  Class  <?>  rawType  =  typeToken.getRawType();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?>  rawType  =  typeToken.getRawType();	      	non-compiled	[CE]  invalid  inferred  types  for  T#1;  actual  argument  Class<CAP#1>  cannot  be  converted  to  Class<?  super  T#2>  by  method  invocation  conversion	8	None	replace
79	[BUG]  [BUGGY]  final  Class  <?>  rawType  =  typeToken.getRawType();  [CE]  invalid  inferred  types  for  T#1;  actual  argument  Class<CAP#1>  cannot  be  converted  to  Class<?  super  T#2>  by  method  invocation  conversion  [FE]                      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?>  rawType  =  typeToken.getRawType();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?>  rawType  =  typeToken.getRawType();	      	non-compiled	[CE]  invalid  inferred  types  for  T#1;  actual  argument  Class<CAP#1>  cannot  be  converted  to  Class<?  super  T#2>  by  method  invocation  conversion	8	None	replace
80	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  instanceCreators  =  instanceCreators.get(type);  [CE]  cannot  find  symbol  [FE]                        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  InstanceCreator  <  T>  instanceCreators  =  instanceCreators.get(type);  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  InstanceCreator  <  T>  instanceCreators  =  instanceCreators.get(type);	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
81	[BUG]  [BUGGY]  Class  <  T>  rawType  =  typeToken.getRawType();  [CE]  incompatible  types  [FE]                          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  Class  <  T>  rawType  =  typeToken.getRawType();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <  T>  rawType  =  typeToken.getRawType();	      	non-compiled	[CE]  incompatible  types	8	None	replace
82	[BUG]  [BUGGY]  final  Class  <?>  rawType  =  typeToken.getRawClass();  [CE]  cannot  find  symbol  [FE]                            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?>  rawType  =  typeToken.getRawClass();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?>  rawType  =  typeToken.getRawClass();	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
83	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.toRawClass();  [CE]  cannot  find  symbol  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.toRawClass();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.toRawClass();	  final    Class    <?    super    T>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
84	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.construct(defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.construct(defaultImplementation);  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.construct(defaultImplementation);	  final    Class    <?    super    T>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	1	None	replace
85	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getCollection();  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getCollection();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getCollection();	  final    Class    <?    super    T>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
86	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getReferenceName();  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getReferenceName();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getReferenceName();	  final    Class    <?    super    T>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
87	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getRawParameterType(0);  [CE]  cannot  find  symbol  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getRawParameterType(0);  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  type.getRawParameterType(0);	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(0);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
88	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRawSuperClass();  [CE]  ';'  expected  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRawSuperClass();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRawSuperClass();	  final    Class    <?    super    T>    rawType    =    typeToken.getRawSuperClass();    	non-compiled	[CE]  ';'  expected	12	None	replace
89	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  this.typeToken.getRawSuperClass();  [CE]  cannot  find  symbol  typeToken  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  this.typeToken.getRawSuperClass();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  this.typeToken.getRawSuperClass();	  final    Class    <?    super    T>    rawType    =    typeToken.getRawSuperClass();    	non-compiled	[CE]  cannot  find  symbol  typeToken	12	None	replace
90	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.toRawSuperClass();  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.toRawSuperClass();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.toRawSuperClass();	  final    Class    <?    super    T>    rawType    =    typeToken.getRawSuperClass();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
91	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  this.typeToken.getSuperType();  [CE]  cannot  find  symbol  typeToken  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  this.typeToken.getSuperType();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  this.typeToken.getSuperType();	  final    Class    <?    super    T>    rawType    =    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol  typeToken	4	None	replace
92	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.toString();  [CE]  incompatible  types  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.toString();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.toString();	  final    Class    <?    super    T>    rawType    =    typeToken.getSuperType();    	non-compiled	[CE]  incompatible  types	4	None	replace
93	[BUG]  [BUGGY]  InstanceCreator  <  T>  instanceCreators  =  instanceCreators.get(type);  [CE]  cannot  find  symbol  [FE]                    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  InstanceCreator  <  T>  instanceCreators  =  instanceCreators.get(type);  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	InstanceCreator  <  T>  instanceCreators  =  instanceCreators.get(type);	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
94	[BUG]  [BUGGY]  Type  <  T>  rawType  =  typeToken.getRawType();  [CE]  type  Type  does  not  take  parameters  [FE]                      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  Type  <  T>  rawType  =  typeToken.getRawType();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Type  <  T>  rawType  =  typeToken.getRawType();	      	non-compiled	[CE]  type  Type  does  not  take  parameters	8	None	replace
95	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  this.typeToken.getSupertype();  [CE]  cannot  find  symbol  typeToken  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  this.typeToken.getSupertype();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  this.typeToken.getSupertype();	  final    Class    <?    super    T>    rawType    =    typeToken.getSupertype();    	non-compiled	[CE]  cannot  find  symbol  typeToken	9	None	replace
96	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRawParameterType(0);  [CE]  ';'  expected  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRawParameterType(0);  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken,  defaultConstructor.getRawParameterType(0);	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(0);    	non-compiled	[CE]  ';'  expected	10	None	replace
97	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typeToken.getRawParameterType(1));  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typeToken.getRawParameterType(1));  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(typeToken.getRawParameterType(1));	  final    Class    <?    super    T>    rawType    =    typeToken.getRawParameterType(0);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
98	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
99	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(0);  [CE]  cannot  find  symbol  [FE]      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(0);  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(0);	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
100	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawSuperClass();  [CE]  cannot  find  symbol  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawSuperClass();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	Class  <?  super  T>  rawType  =  typeToken.getRawSuperClass();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
101	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  this.typeToken.getQualifiedName();  [CE]  cannot  find  symbol  typeToken  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  this.typeToken.getQualifiedName();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  this.typeToken.getQualifiedName();	  final    Class    <?    super    T>    rawType    =    typeToken.getQualifiedName();    	non-compiled	[CE]  cannot  find  symbol  typeToken	3	None	replace
102	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(typeToken.getQualifiedName());  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(typeToken.getQualifiedName());  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.restrictByNotNullOrUndefined(typeToken.getQualifiedName());	  final    Class    <?    super    T>    rawType    =    typeToken.getQualifiedName();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
103	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  this.typeToken.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  typeToken  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  this.typeToken.restrictByNotNullOrUndefined();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  this.typeToken.restrictByNotNullOrUndefined();	  final    Class    <?    super    T>    rawType    =    typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol  typeToken	11	None	replace
104	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getPrimitiveType();  [CE]  cannot  find  symbol  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getPrimitiveType();  [BUGGY]      @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getPrimitiveType();	  final    Class    <?    super    T>    rawType    =    typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
