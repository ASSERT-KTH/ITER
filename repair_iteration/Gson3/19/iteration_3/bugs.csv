bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  UnsafeAllocator  <  T>  unsafeAllocator  =(UnsafeAllocator  <  T>)typeCreators.get(type);  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  UnsafeAllocator  <  T>  unsafeAllocator  =(UnsafeAllocator  <  T>)typeCreators.get(type);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  UnsafeAllocator  <  T>  unsafeAllocator  =(UnsafeAllocator  <  T>)typeCreators.get(type);	  final    UnsafeAllocator    <    T>    unsafeAllocator    =(UnsafeAllocator    <    T>)instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
2	[BUG]  [BUGGY]  final  UnsafeAllocator  <  T>  unsafeAllocator  =(UnsafeAllocator  <  T>)rawTypeCreators.get(type);  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  UnsafeAllocator  <  T>  unsafeAllocator  =(UnsafeAllocator  <  T>)rawTypeCreators.get(type);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  UnsafeAllocator  <  T>  unsafeAllocator  =(UnsafeAllocator  <  T>)rawTypeCreators.get(type);	  final    UnsafeAllocator    <    T>    unsafeAllocator    =(UnsafeAllocator    <    T>)instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
3	[BUG]  [BUGGY]  final  UnsafeAllocator  <  T>  unsafeAllocator  =(UnsafeAllocator  <  T>)instanceCreators.get(typeToken);  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  UnsafeAllocator  <  T>  unsafeAllocator  =(UnsafeAllocator  <  T>)instanceCreators.get(typeToken);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  UnsafeAllocator  <  T>  unsafeAllocator  =(UnsafeAllocator  <  T>)instanceCreators.get(typeToken);	  final    UnsafeAllocator    <    T>    unsafeAllocator    =(UnsafeAllocator    <    T>)instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
4	[BUG]  [BUGGY]  final  UnsafeAllocator  <  T>  unsafeAllocator  =(UnsafeAllocator  <  T>)rawTypeCreator.get(type);  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  UnsafeAllocator  <  T>  unsafeAllocator  =(UnsafeAllocator  <  T>)rawTypeCreator.get(type);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  UnsafeAllocator  <  T>  unsafeAllocator  =(UnsafeAllocator  <  T>)rawTypeCreator.get(type);	  final    UnsafeAllocator    <    T>    unsafeAllocator    =(UnsafeAllocator    <    T>)instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
5	[BUG]  [BUGGY]  final  UnsafeAllocator  <  T>  unsafeAllocator  =(UnsafeAllocator  <  T>)instanceCreators.get(type,  rawType);  [CE]  illegal  start  of  type  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  UnsafeAllocator  <  T>  unsafeAllocator  =(UnsafeAllocator  <  T>)instanceCreators.get(type,  rawType);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  UnsafeAllocator  <  T>  unsafeAllocator  =(UnsafeAllocator  <  T>)instanceCreators.get(type,  rawType);	  final    UnsafeAllocator    <    T>    unsafeAllocator    =(UnsafeAllocator    <    T>)instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
6	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
7	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(type);  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(type);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(type);	  final    InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
8	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(type);  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(type);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(type);	  final    InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
9	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null?  null  :  instanceCreators.get(type));  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null?  null  :  instanceCreators.get(type));  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null?  null  :  instanceCreators.get(type));	  final    InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
10	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null?  null  :  instanceCreators.get(type));  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null?  null  :  instanceCreators.get(type));  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null?  null  :  instanceCreators.get(type));	  final    InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
11	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  &&  type.hasInstanceType())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  &&  type.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  &&  type.hasInstanceType())  {	  if(typeCreator!=    null    &&    rawType.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	22	None	replace
12	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  &&  typeCreator.hasInstanceType())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  &&  typeCreator.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  &&  typeCreator.hasInstanceType())  {	  if(typeCreator!=    null    &&    rawType.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	22	None	replace
13	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  &&  rawType.hasInstanceType())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  &&  rawType.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  &&  rawType.hasInstanceType())  {	  if(typeCreator!=    null    &&    rawType.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	22	None	replace
14	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  &&  typeToken.hasInstanceType())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  &&  typeToken.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  &&  typeToken.hasInstanceType())  {	  if(typeCreator!=    null    &&    rawType.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	22	None	replace
15	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  rawType.isInstanceType())  {  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  rawType.isInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  rawType.isInstanceType())  {	  if(typeCreator!=    null    &&    rawType.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
16	[BUG]  [BUGGY]  if(instanceCreators  ==  null)  {  if(instanceCreators  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(instanceCreators  ==  null)  {  if(instanceCreators  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(instanceCreators    ==    null)    {    if(instanceCreators  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	86	None	add
17	[BUG]  [BUGGY]  if(instanceCreators  ==  null)  {  if(instanceCreators!=  null)  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(instanceCreators  ==  null)  {  if(instanceCreators!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(instanceCreators    ==    null)    {    if(instanceCreators!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	86	None	add
18	[BUG]  [BUGGY]  if(instanceCreators  ==  null)  {  if(typeCreator  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(instanceCreators  ==  null)  {  if(typeCreator  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(instanceCreators    ==    null)    {    if(typeCreator  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	86	None	add
19	[BUG]  [BUGGY]  if(instanceCreators  ==  null)  {  if(typeCreators  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(instanceCreators  ==  null)  {  if(typeCreators  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(instanceCreators    ==    null)    {    if(typeCreators  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	86	None	add
20	[BUG]  [BUGGY]  if(instanceCreators  ==  null)  {  If(instanceCreators  ==  null)  {  [CE]  ';'  expected  [FE]            ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(instanceCreators  ==  null)  {  If(instanceCreators  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(instanceCreators    ==    null)    {    If(instanceCreators  ==  null)  {	  	non-compiled	[CE]  ';'  expected	86	None	add
21	[BUG]  [BUGGY]  if(instanceCreators  ==  null)  {  if(instanceCreators  >=  null)  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(instanceCreators  ==  null)  {  if(instanceCreators  >=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(instanceCreators    ==    null)    {    if(instanceCreators  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	86	None	add
22	[BUG]  [BUGGY]  if(instanceCreators  ==  null)  {  if(rawTypeCreator  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(instanceCreators  ==  null)  {  if(rawTypeCreator  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(instanceCreators    ==    null)    {    if(rawTypeCreator  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	86	None	add
23	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  &&  context.hasInstanceType())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  &&  context.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  &&  context.hasInstanceType())  {	  if(typeCreator!=    null    &&    context.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	120	None	replace
24	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  &&  type.isInterface())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]    ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  &&  type.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  &&  type.isInterface())  {	  if(typeCreator!=    null    &&    rawType.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	94	None	replace
25	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  &&  typeCreator.isInterface())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]      ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  &&  typeCreator.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  &&  typeCreator.isInterface())  {	  if(typeCreator!=    null    &&    rawType.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	94	None	replace
26	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  ||  rawType.isInterface())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]        ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  ||  rawType.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  ||  rawType.isInterface())  {	  if(typeCreator!=    null    &&    rawType.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	94	None	replace
27	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  type.isConstructor())  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  type.isConstructor())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  type.isConstructor())  {	  if(rawTypeCreator    ==    null    ||    typeCreator.isConstructor())    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
28	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  ||  typeCreator.isConstructor())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  ||  typeCreator.isConstructor())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  ||  typeCreator.isConstructor())  {	  if(rawTypeCreator    ==    null    ||    typeCreator.isConstructor())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	8	None	replace
29	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  type.isConstructor())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  type.isConstructor())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  type.isConstructor())  {	  if(rawTypeCreator    ==    null    ||    typeCreator.isConstructor())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	8	None	replace
30	[BUG]  [BUGGY]  if(typeToken  ==  null  ||  typeCreator.isConstructor())  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeToken  ==  null  ||  typeCreator.isConstructor())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeToken  ==  null  ||  typeCreator.isConstructor())  {	  if(rawTypeCreator    ==    null    ||    typeCreator.isConstructor())    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
31	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  &&  typeCreator.isInstance())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  &&  typeCreator.isInstance())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  &&  typeCreator.isInstance())  {	  if(rawTypeCreator!=    null    &&    typeCreator.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	62	None	replace
32	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  ||  typeCreator.isInstance())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  ||  typeCreator.isInstance())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  ||  typeCreator.isInstance())  {	  if(rawTypeCreator!=    null    &&    typeCreator.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	62	None	replace
33	[BUG]  [BUGGY]  if(typeToken!=  null  &&  typeCreator.isInstance())  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeToken!=  null  &&  typeCreator.isInstance())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeToken!=  null  &&  typeCreator.isInstance())  {	  if(rawTypeCreator!=    null    &&    typeCreator.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
34	[BUG]  [BUGGY]  if(typeToken!=  null  &&  typeCreator.isInterface())  {  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeToken!=  null  &&  typeCreator.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeToken!=  null  &&  typeCreator.isInterface())  {	  if(typeCreator!=    null    &&    typeToken.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
35	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  &&  typeToken.isInterface())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  &&  typeToken.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  &&  typeToken.isInterface())  {	  if(typeCreator!=    null    &&    typeToken.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	60	None	replace
36	[BUG]  [BUGGY]  if(typeCreator  ==  null  &&  typeToken.isInterface())  {  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  &&  typeToken.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  &&  typeToken.isInterface())  {	  if(typeCreator!=    null    &&    typeToken.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
37	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  typeToken.isInterface()  ||  typeToken.isInterface())  {  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  typeToken.isInterface()  ||  typeToken.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  typeToken.isInterface()  ||  typeToken.isInterface())  {	  if(typeCreator!=    null    &&    typeToken.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
38	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  targetTypeCreator)  {  [CE]  cannot  find  symbol  targetTypeCreator  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  targetTypeCreator)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  typeCreator!=  targetTypeCreator)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    targetTypeCreator)    {    	non-compiled	[CE]  cannot  find  symbol  targetTypeCreator	131	None	replace
39	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  targetType)  {  [CE]  cannot  find  symbol  targetType  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  targetType)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  typeCreator!=  targetType)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    targetTypeCreator)    {    	non-compiled	[CE]  cannot  find  symbol  targetType	131	None	replace
40	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator!=  targetType)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator!=  targetType)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  typeCreator!=  targetType)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    targetTypeCreator)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	131	None	replace
41	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  rawTypeCreator!=  targetTypeCreator)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  rawTypeCreator!=  targetTypeCreator)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  rawTypeCreator!=  targetTypeCreator)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    targetTypeCreator)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	131	None	replace
42	[BUG]  [BUGGY]  if(resultTypeCreator!=  null  ||  typeCreator.isInterface())  {  [CE]  cannot  find  symbol  resultTypeCreator  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(resultTypeCreator!=  null  ||  typeCreator.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(resultTypeCreator!=  null  ||  typeCreator.isInterface())  {	  if(rawTypeCreator!=    null    ||    typeCreator.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  resultTypeCreator	40	None	replace
43	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  ||  type.isInterface())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  ||  type.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  ||  type.isInterface())  {	  if(rawTypeCreator!=    null    ||    typeCreator.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	40	None	replace
44	[BUG]  [BUGGY]  if(rrawTypeCreator  ==  null)  {  [CE]  cannot  find  symbol  rrawTypeCreator  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rrawTypeCreator  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rrawTypeCreator  ==  null)  {	  if(primaryTypeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  rrawTypeCreator	85	None	replace
45	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator.hasInstanceType())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  typeCreator.hasInstanceType())  {	  if(typeCreator    ==    null    ||    typeCreator.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	127	None	replace
46	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  rawType.hasInstanceType())  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  rawType.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  rawType.hasInstanceType())  {	  if(typeCreator    ==    null    ||    typeCreator.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
47	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeToken.hasInstanceType())  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeToken.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  typeToken.hasInstanceType())  {	  if(typeCreator    ==    null    ||    typeCreator.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
48	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  type.hasInstanceType())  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  type.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  type.hasInstanceType())  {	  if(typeCreator    ==    null    ||    typeCreator.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
49	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeCreator.isInstanceType())  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeCreator.isInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  typeCreator.isInstanceType())  {	  if(typeCreator    ==    null    ||    typeCreator.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
50	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)typeCreators.get(type);  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)typeCreators.get(type);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)typeCreators.get(type);	  final    Class    <?    super    T>    rawTypeCreator    =(Class    <?    super    T>)instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
51	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)instanceCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)instanceCreators.get(rawType);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)instanceCreators.get(rawType);	  final    Class    <?    super    T>    rawTypeCreator    =(Class    <?    super    T>)instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
52	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)this.instanceCreators.get(type);  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)this.instanceCreators.get(type);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)this.instanceCreators.get(type);	  final    Class    <?    super    T>    rawTypeCreator    =(Class    <?    super    T>)instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
53	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)rawTypeCreators.get(type);  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)rawTypeCreators.get(type);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)rawTypeCreators.get(type);	  final    Class    <?    super    T>    rawTypeCreator    =(Class    <?    super    T>)instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
54	[BUG]  [BUGGY]  static  final  Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)instanceCreators.get(type);  [CE]  illegal  start  of  expression  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  static  final  Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)instanceCreators.get(type);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	static  final  Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)instanceCreators.get(type);	  final    Class    <?    super    T>    rawTypeCreator    =(Class    <?    super    T>)instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
55	[BUG]  [BUGGY]  Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)typeCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)typeCreators.get(rawType);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)typeCreators.get(rawType);	  Class    <?    super    T>    rawTypeCreator    =(Class    <?    super    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
56	[BUG]  [BUGGY]  Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)rawTypeCreators.get(type);  [CE]  illegal  start  of  type  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)rawTypeCreators.get(type);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)rawTypeCreators.get(type);	  Class    <?    super    T>    rawTypeCreator    =(Class    <?    super    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
57	[BUG]  [BUGGY]  Type  <?  super  T>  rawTypeCreator  =(Type  <?  super  T>)instanceCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  Type  <?  super  T>  rawTypeCreator  =(Type  <?  super  T>)instanceCreators.get(rawType);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	Type  <?  super  T>  rawTypeCreator  =(Type  <?  super  T>)instanceCreators.get(rawType);	  Class    <?    super    T>    rawTypeCreator    =(Class    <?    super    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
58	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  &&  typeToken.isInstance())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  &&  typeToken.isInstance())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  &&  typeToken.isInstance())  {	  if(typeCreator!=    null    &&    typeToken.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	66	None	replace
59	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  typeToken.isInstance())  {  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  ||  typeToken.isInstance())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  ||  typeToken.isInstance())  {	  if(typeCreator!=    null    &&    typeToken.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
60	[BUG]  [BUGGY]  if(typeCreator  ==  null  &&  typeToken.isInstance())  {  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  &&  typeToken.isInstance())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  &&  typeToken.isInstance())  {	  if(typeCreator!=    null    &&    typeToken.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
61	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  typeToken.isConstructor())  {  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  typeToken.isConstructor())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  typeToken.isConstructor())  {	  if(typeCreator!=    null    &&    typeToken.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
62	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator!=  UnsafeAllocator)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator!=  UnsafeAllocator)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  typeCreator!=  UnsafeAllocator)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    sourceType)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	105	None	replace
63	[BUG]  [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)typeCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)typeCreators.get(rawType);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)typeCreators.get(rawType);	  Constructor    <    T>    rawTypeCreator    =(Constructor    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
64	[BUG]  [BUGGY]  final  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)instanceCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)instanceCreators.get(rawType);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)instanceCreators.get(rawType);	  Constructor    <    T>    rawTypeCreator    =(Constructor    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
65	[BUG]  [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)rawTypeCreators.get(type);  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)rawTypeCreators.get(type);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)rawTypeCreators.get(type);	  Constructor    <    T>    rawTypeCreator    =(Constructor    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
66	[BUG]  [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)instanceCreators.get(typeToken);  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)instanceCreators.get(typeToken);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)instanceCreators.get(typeToken);	  Constructor    <    T>    rawTypeCreator    =(Constructor    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
67	[BUG]  [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)unsafeAllocator.get(rawType);  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)unsafeAllocator.get(rawType);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)unsafeAllocator.get(rawType);	  Constructor    <    T>    rawTypeCreator    =(Constructor    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
68	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  rawType.equals(typeCreator))  {  if(typeCreator  ==  null  ||  rawType.equals(typeCreator))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  rawType.equals(typeCreator))  {  if(typeCreator  ==  null  ||  rawType.equals(typeCreator))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator    ==    null    ||    rawType.equals(typeCreator))    {    if(typeCreator  ==  null  ||  rawType.equals(typeCreator))  {	  	non-compiled	[CE]  illegal  start  of  expression	111	None	add
69	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  rawType.equals(typeCreator))  {  if(typeCreator!=  null  ||  rawType.equals(typeCreator))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  rawType.equals(typeCreator))  {  if(typeCreator!=  null  ||  rawType.equals(typeCreator))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator    ==    null    ||    rawType.equals(typeCreator))    {    if(typeCreator!=  null  ||  rawType.equals(typeCreator))  {	  	non-compiled	[CE]  illegal  start  of  expression	111	None	add
70	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  rawType.equals(typeCreator))  {  If(typeCreator  ==  null  ||  rawType.equals(typeCreator))  {  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  rawType.equals(typeCreator))  {  If(typeCreator  ==  null  ||  rawType.equals(typeCreator))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator    ==    null    ||    rawType.equals(typeCreator))    {    If(typeCreator  ==  null  ||  rawType.equals(typeCreator))  {	  	non-compiled	[CE]  ';'  expected	111	None	add
71	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  rawType.equals(typeCreator))  {  if(rawType  ==  null  ||  rawType.equals(typeCreator))  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  rawType.equals(typeCreator))  {  if(rawType  ==  null  ||  rawType.equals(typeCreator))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator    ==    null    ||    rawType.equals(typeCreator))    {    if(rawType  ==  null  ||  rawType.equals(typeCreator))  {	  	non-compiled	[CE]  illegal  start  of  expression	111	None	add
72	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  instanceCreators!=  null)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]    NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  instanceCreators!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  instanceCreators!=  null)  {	  if(instanceCreators!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	4	None	replace
73	[BUG]  [BUGGY]  if(resultTypeCreator  ==  null  ||  typeCreator!=  null)  {  [CE]  cannot  find  symbol  resultTypeCreator  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(resultTypeCreator  ==  null  ||  typeCreator!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(resultTypeCreator  ==  null  ||  typeCreator!=  null)  {	  if(rawTypeCreator    ==    null    ||    rawTypeCreator!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  resultTypeCreator	80	None	replace
74	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator  >=  null)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator  >=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  typeCreator  >=  null)  {	  if(rawTypeCreator    ==    null    ||    rawTypeCreator!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	80	None	replace
75	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeCreator.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeCreator.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  typeCreator.isAssignableFrom(rawType))  {	  if(rawTypeCreator    ==    null    ||    typeCreator.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
76	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator.isAssignableFrom(type))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  typeCreator.isAssignableFrom(type))  {	  if(rawTypeCreator    ==    null    ||    typeCreator.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	7	None	replace
77	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  ||  typeCreator.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  ||  typeCreator.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  ||  typeCreator.isAssignableFrom(rawType))  {	  if(rawTypeCreator    ==    null    ||    typeCreator.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	7	None	replace
78	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  rawType.isAssignableFrom(typeCreator))  {  [CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  rawType.isAssignableFrom(typeCreator))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  rawType.isAssignableFrom(typeCreator))  {	  if(rawTypeCreator    ==    null    ||    typeCreator.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;	7	None	replace
79	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  typeCreator.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  ||  typeCreator.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  ||  typeCreator.isAssignableFrom(rawType))  {	  if(rawTypeCreator    ==    null    ||    typeCreator.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
80	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  type.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  type.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  type.isAssignableFrom(rawType))  {	  if(rawTypeCreator    ==    null    ||    typeCreator.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
81	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  type.isInterface())  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  type.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  type.isInterface())  {	  if(typeCreator!=    null    ||    type.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
82	[BUG]  [BUGGY]  if(rawType.isInterface())  {  if(typeCreator  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawType.isInterface())  {  if(typeCreator  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawType.isInterface())  {  if(typeCreator  ==  null)  {	  if(typeCreator    ==    null)    {    if(typeCreator    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
83	[BUG]  [BUGGY]  if(rawType  instanceof  InstanceCreator  <  T>)  {  [CE]  illegal  generic  type  for  instanceof  [FE]          NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawType  instanceof  InstanceCreator  <  T>)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawType  instanceof  InstanceCreator  <  T>)  {	  if(typeCreator    ==    null)    {    if(typeCreator    ==    null)    {    	non-compiled	[CE]  illegal  generic  type  for  instanceof	9	None	replace
84	[BUG]  [BUGGY]  if(rawType.isConstructor()  ||  rawType.isInterface())  {  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawType.isConstructor()  ||  rawType.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawType.isConstructor()  ||  rawType.isInterface())  {	  if(typeCreator    ==    null)    {    if(typeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
85	[BUG]  [BUGGY]  if(rawType.isConstructor())  {  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawType.isConstructor())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawType.isConstructor())  {	  if(typeCreator    ==    null)    {    if(typeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
86	[BUG]  [BUGGY]  if(rawType.isConstructor()  ||  rawType.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawType.isConstructor()  ||  rawType.isPrimitive())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawType.isConstructor()  ||  rawType.isPrimitive())  {	  if(typeCreator    ==    null)    {    if(typeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
87	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  &&  context.isInstance())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  &&  context.isInstance())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  &&  context.isInstance())  {	  if(typeCreator!=    null    &&    context.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	118	None	replace
88	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeToken.isInterface())  {  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeToken.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  typeToken.isInterface())  {	  if(typeCreator    ==    null    ||    rawTypeCreator.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
89	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  rawType.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(typeCreator  ==  null  ||  rawType.isInterface())  {	  if(typeCreator    ==    null    ||    rawTypeCreator.isInterface())    {    	compilable	  [FE]  NullPointerException  	108	22	replace
90	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  rawType.isInterface())  {  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  rawType.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  rawType.isInterface())  {	  if(typeCreator    ==    null    ||    rawTypeCreator.isInterface())    {    	compilable	  [FE]  NullPointerException  	108	22	replace
91	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  rawType.isInterface())  {  if(typeCreator!=  null  ||  rawType.isInterface())  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  ||  rawType.isInterface())  {  if(typeCreator!=  null  ||  rawType.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=    null    ||    rawType.isInterface())    {    if(typeCreator!=  null  ||  rawType.isInterface())  {	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
92	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  rawType.isInterface())  {  if(typeCreator  ==  null  ||  rawType.isInterface())  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  ||  rawType.isInterface())  {  if(typeCreator  ==  null  ||  rawType.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=    null    ||    rawType.isInterface())    {    if(typeCreator  ==  null  ||  rawType.isInterface())  {	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
93	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  rawType.isInterface())  {  if(typeCreator  >=  null  ||  rawType.isInterface())  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  ||  rawType.isInterface())  {  if(typeCreator  >=  null  ||  rawType.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=    null    ||    rawType.isInterface())    {    if(typeCreator  >=  null  ||  rawType.isInterface())  {	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
94	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  rawType.isInterface())  {  If(typeCreator!=  null  ||  rawType.isInterface())  {  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  ||  rawType.isInterface())  {  If(typeCreator!=  null  ||  rawType.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=    null    ||    rawType.isInterface())    {    If(typeCreator!=  null  ||  rawType.isInterface())  {	  	non-compiled	[CE]  ';'  expected	44	None	add
95	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  rawType.isInterface())  {  if(typeCreator  >>  null  ||  rawType.isInterface())  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  ||  rawType.isInterface())  {  if(typeCreator  >>  null  ||  rawType.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=    null    ||    rawType.isInterface())    {    if(typeCreator  >>  null  ||  rawType.isInterface())  {	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
96	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  rawType.isInterface())  {  if(typeCreator!=  null  ||  type.isInterface())  {  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  ||  rawType.isInterface())  {  if(typeCreator!=  null  ||  type.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=    null    ||    rawType.isInterface())    {    if(typeCreator!=  null  ||  type.isInterface())  {	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
97	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(type);  [CE]  illegal  start  of  type  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(type);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(type);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
98	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(type);  [CE]  illegal  start  of  type  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(type);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(type);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
99	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type,  rawType);  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type,  rawType);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type,  rawType);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
100	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
101	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  rawType!=  typeCreator)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  rawType!=  typeCreator)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  rawType!=  typeCreator)  {	  if(typeCreator    ==    null    ||    rawType!=    typeCreator)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	35	None	replace
102	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  rawType  >=  typeCreator)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  rawType  >=  typeCreator)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  rawType  >=  typeCreator)  {	  if(typeCreator    ==    null    ||    rawType!=    typeCreator)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	35	None	replace
103	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType!=  typeCreator)  {  [CE]  incomparable  types:  Class<CAP#1>  and  InstanceCreator<T>  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawType  ==  null  ||  rawType!=  typeCreator)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawType  ==  null  ||  rawType!=  typeCreator)  {	  if(typeCreator    ==    null    ||    rawType!=    typeCreator)    {    	non-compiled	[CE]  incomparable  types:  Class<CAP#1>  and  InstanceCreator<T>	35	None	replace
104	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  rawType!=  typeCreator.type)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  rawType!=  typeCreator.type)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  rawType!=  typeCreator.type)  {	  if(typeCreator    ==    null    ||    rawType!=    typeCreator)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	35	None	replace
105	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  typeType.isInterface())  {  [CE]  cannot  find  symbol  typeType  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  typeType.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  typeType.isInterface())  {	  if(rawTypeCreator!=    null    &&    rawType.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  typeType	96	None	replace
106	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                      NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawType.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(rawType.isInterface())  {	  if(typeCreator    ==    null)    {    if(typeCreator    ==    null    ||    typeCreator.isInterface())    {    	compilable	  [FE]  NullPointerException  	16	18	replace
107	[BUG]  [BUGGY]  if(rawType.isInterface())  {  [FE]  NullPointerException  [FE]                      NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawType.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawType.isInterface())  {	  if(typeCreator    ==    null)    {    if(typeCreator    ==    null    ||    typeCreator.isInterface())    {    	compilable	  [FE]  NullPointerException  	16	18	replace
108	[BUG]  [BUGGY]  if(rawType.isInterface()  ||  typeCreator.isInterface())  {  [CE]  cannot  find  symbol  [FE]                        NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawType.isInterface()  ||  typeCreator.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawType.isInterface()  ||  typeCreator.isInterface())  {	  if(typeCreator    ==    null)    {    if(typeCreator    ==    null    ||    typeCreator.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
109	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  rawTypeCreator.isInterface())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                          NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  rawTypeCreator.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  rawTypeCreator.isInterface())  {	  if(typeCreator    ==    null)    {    if(typeCreator    ==    null    ||    typeCreator.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	16	None	replace
110	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  rawType.isInterface())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  rawType.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  rawType.isInterface())  {	  if(typeCreator!=    null    ||    typeTypeCreator.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	129	None	replace
111	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeToken.isConstructor())  {  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeToken.isConstructor())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  typeToken.isConstructor())  {	  if(typeCreator    ==    null    ||    rawTypeCreator.isConstructor())    {    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
112	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  defaultConstructor.isConstructor())  {  [CE]  cannot  find  symbol  defaultConstructor  [FE]              NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  defaultConstructor.isConstructor())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  defaultConstructor.isConstructor())  {	  if(typeCreator    ==    null    ||    rawTypeCreator.isConstructor())    {    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	109	None	replace
113	[BUG]  [BUGGY]  if(typeCreator  ==  null  &&  type.isInstance())  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  &&  type.isInstance())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  &&  type.isInstance())  {	  if(typeCreator    ==    null    &&    typeCreator.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
114	[BUG]  [BUGGY]  if(typeCreator  ==  null  &&  rawTypeCreator.isInstance())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  &&  rawTypeCreator.isInstance())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  &&  rawTypeCreator.isInstance())  {	  if(typeCreator    ==    null    &&    typeCreator.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	65	None	replace
115	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  defaultImplementation.hasInstanceType())  {  [CE]  cannot  find  symbol  defaultImplementation  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  defaultImplementation.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  defaultImplementation.hasInstanceType())  {	  if(typeCreator!=    null    &&    defaultConstructor.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	119	None	replace
116	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  &&  defaultConstructor.hasInstanceType())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  &&  defaultConstructor.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  &&  defaultConstructor.hasInstanceType())  {	  if(typeCreator!=    null    &&    defaultConstructor.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	119	None	replace
117	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  rawTypeCreator.isConstructor())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  ||  rawTypeCreator.isConstructor())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  ||  rawTypeCreator.isConstructor())  {	  if(typeCreator!=    null    ||    typeCreator.isConstructor())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	128	None	replace
118	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  typeCreator.isConstructor())  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  typeCreator.isConstructor())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  typeCreator.isConstructor())  {	  if(typeCreator!=    null    ||    typeCreator.isConstructor())    {    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
119	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  type.isConstructor())  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  ||  type.isConstructor())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  ||  type.isConstructor())  {	  if(typeCreator!=    null    ||    typeCreator.isConstructor())    {    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
120	[BUG]  [BUGGY]  Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)typeCreators.get(type);  [CE]  illegal  start  of  type  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)typeCreators.get(type);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)typeCreators.get(type);	  Class    <?    super    T>    rawTypeCreator    =(Class    <?    super    T>)instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
121	[BUG]  [BUGGY]  Type  <?  super  T>  rawTypeCreator  =(Type  <?  super  T>)instanceCreators.get(type);  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  Type  <?  super  T>  rawTypeCreator  =(Type  <?  super  T>)instanceCreators.get(type);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	Type  <?  super  T>  rawTypeCreator  =(Type  <?  super  T>)instanceCreators.get(type);	  Class    <?    super    T>    rawTypeCreator    =(Class    <?    super    T>)instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
122	[BUG]  [BUGGY]  Type  <?  super  T>  rawTypeCreator  =(Type  <?  super  T>)typeCreators.get(type);  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  Type  <?  super  T>  rawTypeCreator  =(Type  <?  super  T>)typeCreators.get(type);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	Type  <?  super  T>  rawTypeCreator  =(Type  <?  super  T>)typeCreators.get(type);	  Class    <?    super    T>    rawTypeCreator    =(Class    <?    super    T>)instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
123	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  defaultImplementation)  {  [CE]  cannot  find  symbol  defaultImplementation  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  defaultImplementation)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  typeCreator!=  defaultImplementation)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    defaultImplementation)    {    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	33	None	replace
124	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  defaultImplementation!=  typeCreator)  {  [CE]  cannot  find  symbol  defaultImplementation  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  defaultImplementation!=  typeCreator)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  defaultImplementation!=  typeCreator)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    defaultImplementation)    {    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	33	None	replace
125	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  defaultImplementation!=  typeCreator)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  defaultImplementation!=  typeCreator)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  defaultImplementation!=  typeCreator)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    defaultImplementation)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	33	None	replace
126	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  rawTypeCreator!=  defaultImplementation)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  rawTypeCreator!=  defaultImplementation)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  rawTypeCreator!=  defaultImplementation)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    defaultImplementation)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	33	None	replace
127	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  ||  typeCreator!=  defaultImplementation)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  ||  typeCreator!=  defaultImplementation)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  ||  typeCreator!=  defaultImplementation)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    defaultImplementation)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	33	None	replace
128	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  typeCreator!=  defaultImplementation)  {  [CE]  cannot  find  symbol  defaultImplementation  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  ||  typeCreator!=  defaultImplementation)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  ||  typeCreator!=  defaultImplementation)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    defaultImplementation)    {    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	33	None	replace
129	[BUG]  [BUGGY]  if(instanceCreators!=  null  &&  typeCreator.isInstance())  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(instanceCreators!=  null  &&  typeCreator.isInstance())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(instanceCreators!=  null  &&  typeCreator.isInstance())  {	  if(typeCreator!=    null    &&    instanceCreators.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
130	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  &&  instanceCreators.isInstance())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  &&  instanceCreators.isInstance())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  &&  instanceCreators.isInstance())  {	  if(typeCreator!=    null    &&    instanceCreators.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	64	None	replace
131	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  instances.isInstance())  {  [CE]  cannot  find  symbol  instances  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  instances.isInstance())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  instances.isInstance())  {	  if(typeCreator!=    null    &&    instanceCreators.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol  instances	64	None	replace
132	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  typeCreators.isInstance())  {  [CE]  cannot  find  symbol  typeCreators  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  typeCreators.isInstance())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  typeCreators.isInstance())  {	  if(typeCreator!=    null    &&    instanceCreators.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol  typeCreators	64	None	replace
133	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  instanceCreators.getInstanceType())  {  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  instanceCreators.getInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  instanceCreators.getInstanceType())  {	  if(typeCreator!=    null    &&    instanceCreators.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
134	[BUG]  [BUGGY]  if(typeCreator  ==  null  &&  instanceCreators.isInstance())  {  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  &&  instanceCreators.isInstance())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  &&  instanceCreators.isInstance())  {	  if(typeCreator!=    null    &&    instanceCreators.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
135	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  instanceCreators.hasInstanceType())  {  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  instanceCreators.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  instanceCreators.hasInstanceType())  {	  if(typeCreator    ==    null    ||    rawTypeCreator.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
136	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  type.hasInstanceType())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  type.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  type.hasInstanceType())  {	  if(typeCreator    ==    null    ||    rawTypeCreator.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	110	None	replace
137	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeCreator  ==  null)  {  if(typeCreator  ==  null  ||  typeCreator  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeCreator  ==  null)  {  if(typeCreator  ==  null  ||  typeCreator  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator    ==    null    ||    typeCreator    ==    null)    {    if(typeCreator  ==  null  ||  typeCreator  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
138	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeCreator  ==  null)  {  if(typeCreator  ==  null  ||  typeCreator!=  null)  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeCreator  ==  null)  {  if(typeCreator  ==  null  ||  typeCreator!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator    ==    null    ||    typeCreator    ==    null)    {    if(typeCreator  ==  null  ||  typeCreator!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
139	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeCreator  ==  null)  {  if(typeCreator!=  null  ||  typeCreator  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeCreator  ==  null)  {  if(typeCreator!=  null  ||  typeCreator  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator    ==    null    ||    typeCreator    ==    null)    {    if(typeCreator!=  null  ||  typeCreator  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
140	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeCreator  ==  null)  {  if(typeCreator  ==  null  ||  typeCreator  >=  null)  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeCreator  ==  null)  {  if(typeCreator  ==  null  ||  typeCreator  >=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator    ==    null    ||    typeCreator    ==    null)    {    if(typeCreator  ==  null  ||  typeCreator  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
141	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeCreator  ==  null)  {  If(typeCreator  ==  null  ||  typeCreator  ==  null)  {  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeCreator  ==  null)  {  If(typeCreator  ==  null  ||  typeCreator  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator    ==    null    ||    typeCreator    ==    null)    {    If(typeCreator  ==  null  ||  typeCreator  ==  null)  {	  	non-compiled	[CE]  ';'  expected	27	None	add
142	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeCreator  ==  null)  {  if(typeCreator  >=  null  ||  typeCreator  ==  null)  {  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeCreator  ==  null)  {  if(typeCreator  >=  null  ||  typeCreator  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator    ==    null    ||    typeCreator    ==    null)    {    if(typeCreator  >=  null  ||  typeCreator  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
143	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  rawTypeCreator!=  unsafeAllocator)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  rawTypeCreator!=  unsafeAllocator)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  rawTypeCreator!=  unsafeAllocator)  {	  if(typeCreator    ==    null    ||    typeCreator!=    unsafeAllocator)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	34	None	replace
144	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  rawTypeCreator!=  UnsafeAllocator)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  rawTypeCreator!=  UnsafeAllocator)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  rawTypeCreator!=  UnsafeAllocator)  {	  if(typeCreator    ==    null    ||    typeCreator!=    unsafeAllocator)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	34	None	replace
145	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  rawType.unsafeAllocator)  {  [CE]  cannot  find  symbol  unsafeAllocator  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  rawType.unsafeAllocator)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  typeCreator!=  rawType.unsafeAllocator)  {	  if(typeCreator    ==    null    ||    typeCreator!=    unsafeAllocator)    {    	non-compiled	[CE]  cannot  find  symbol  unsafeAllocator	34	None	replace
146	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  rawType.isConstructor())  {  [CE]  cannot  find  symbol  [FE]                    NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  rawType.isConstructor())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  rawType.isConstructor())  {	  if(typeCreator    ==    null)    {    if(rawTypeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
147	[BUG]  [BUGGY]  if(rawType.isConstructor()  ||  typeCreator.isInterface())  {  [CE]  cannot  find  symbol  [FE]                      NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawType.isConstructor()  ||  typeCreator.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawType.isConstructor()  ||  typeCreator.isInterface())  {	  if(typeCreator    ==    null)    {    if(rawTypeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
148	[BUG]  [BUGGY]  if(typeCreator  ==  null  &&  type.isInterface())  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  &&  type.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  &&  type.isInterface())  {	  if(typeCreator!=    null    &&    type.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
149	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  type.isConstructor())  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  type.isConstructor())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  type.isConstructor())  {	  if(typeCreator!=    null    &&    type.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
150	[BUG]  [BUGGY]  if(rawType.isInterface())  {  if(typeCreator!=  null)  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawType.isInterface())  {  if(typeCreator!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawType.isInterface())  {  if(typeCreator!=  null)  {	  if(typeCreator    ==    null)    {    if(typeCreator!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
151	[BUG]  [BUGGY]  if(rawType.isConstructor())  {  if(typeCreator!=  null)  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawType.isConstructor())  {  if(typeCreator!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawType.isConstructor())  {  if(typeCreator!=  null)  {	  if(typeCreator    ==    null)    {    if(typeCreator!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
152	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(type);  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(type);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(type);	  ObjectConstructor    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
153	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  typeToken);  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  typeToken);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  typeToken);	  ObjectConstructor    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
154	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType);	  ObjectConstructor    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
155	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType);	  ObjectConstructor    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
156	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  typeCreator.get(rawType);  [CE]  illegal  start  of  type  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  typeCreator.get(rawType);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =  typeCreator.get(rawType);	  ObjectConstructor    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
157	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  ObjectConstructor    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
158	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  typeCreator.isInstance())  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  ||  typeCreator.isInstance())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  ||  typeCreator.isInstance())  {	  if(typeCreator!=    null    &&    typeCreator.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
159	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  ||  rawType.isConstructor())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]    NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  ||  rawType.isConstructor())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  ||  rawType.isConstructor())  {	  if(typeCreator!=    null    ||    rawType.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	45	None	replace
160	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  type.isInterface())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]      NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  type.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  type.isInterface())  {	  if(typeCreator!=    null    ||    rawType.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	45	None	replace
161	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  rawType.isInterface())  {  if(typeCreator!=  null  &&  rawType.isInterface())  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  rawType.isInterface())  {  if(typeCreator!=  null  &&  rawType.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=    null    &&    rawType.isInterface())    {    if(typeCreator!=  null  &&  rawType.isInterface())  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
162	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  rawType.isInterface())  {  if(typeCreator  ==  null  &&  rawType.isInterface())  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  rawType.isInterface())  {  if(typeCreator  ==  null  &&  rawType.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=    null    &&    rawType.isInterface())    {    if(typeCreator  ==  null  &&  rawType.isInterface())  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
163	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  rawType.isInterface())  {  if(typeCreator  >=  null  &&  rawType.isInterface())  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  rawType.isInterface())  {  if(typeCreator  >=  null  &&  rawType.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=    null    &&    rawType.isInterface())    {    if(typeCreator  >=  null  &&  rawType.isInterface())  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
164	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  rawType.isInterface())  {  If(typeCreator!=  null  &&  rawType.isInterface())  {  [CE]  ';'  expected  [FE]          ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  rawType.isInterface())  {  If(typeCreator!=  null  &&  rawType.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=    null    &&    rawType.isInterface())    {    If(typeCreator!=  null  &&  rawType.isInterface())  {	  	non-compiled	[CE]  ';'  expected	93	None	add
165	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  rawType.isInterface())  {  if(typeCreator!=  null  &&  type.isInterface())  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  rawType.isInterface())  {  if(typeCreator!=  null  &&  type.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=    null    &&    rawType.isInterface())    {    if(typeCreator!=  null  &&  type.isInterface())  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
166	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  rawType.isInterface())  {  if(typeCreator  >>  null  &&  rawType.isInterface())  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  rawType.isInterface())  {  if(typeCreator  >>  null  &&  rawType.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=    null    &&    rawType.isInterface())    {    if(typeCreator  >>  null  &&  rawType.isInterface())  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
167	[BUG]  [BUGGY]  if(rrawTypeCreator!=  null)  {  [CE]  cannot  find  symbol  rrawTypeCreator  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rrawTypeCreator!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rrawTypeCreator!=  null)  {	  if(primaryTypeCreator!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  rrawTypeCreator	83	None	replace
168	[BUG]  [BUGGY]  if(rawTypeCreator  >=  null)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  >=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  >=  null)  {	  if(primaryTypeCreator!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	83	None	replace
169	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeCreators.get(rawType);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeCreators.get(rawType);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
170	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawTypeCreators.get(type);  [CE]  illegal  start  of  type  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawTypeCreators.get(type);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawTypeCreators.get(type);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
171	[BUG]  [BUGGY]  final  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
172	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)unsafeAllocator.get(rawType);  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)unsafeAllocator.get(rawType);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)unsafeAllocator.get(rawType);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
173	[BUG]  [BUGGY]  if(instanceCreators!=  null  &&  typeCreator.isInterface())  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(instanceCreators!=  null  &&  typeCreator.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(instanceCreators!=  null  &&  typeCreator.isInterface())  {	  if(typeCreator!=    null    &&    instanceCreators.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
174	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  &&  instanceCreators.isInterface())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  &&  instanceCreators.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  &&  instanceCreators.isInterface())  {	  if(typeCreator!=    null    &&    instanceCreators.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	57	None	replace
175	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  instances.isInterface())  {  [CE]  cannot  find  symbol  instances  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  instances.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  instances.isInterface())  {	  if(typeCreator!=    null    &&    instanceCreators.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  instances	57	None	replace
176	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  typeCreators.isInterface())  {  [CE]  cannot  find  symbol  typeCreators  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  typeCreators.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  typeCreators.isInterface())  {	  if(typeCreator!=    null    &&    instanceCreators.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  typeCreators	57	None	replace
177	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  instanceCreators.isConstructor())  {  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  instanceCreators.isConstructor())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  instanceCreators.isConstructor())  {	  if(typeCreator!=    null    &&    instanceCreators.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
178	[BUG]  [BUGGY]  if(typeCreator  ==  null  &&  instanceCreators.isInterface())  {  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  &&  instanceCreators.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  &&  instanceCreators.isInterface())  {	  if(typeCreator!=    null    &&    instanceCreators.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
179	[BUG]  [BUGGY]  if(rootTypeCreator  ==  null  ||  rootTypeCreator  ==  null)  {  [CE]  cannot  find  symbol  rootTypeCreator  [FE]        NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rootTypeCreator  ==  null  ||  rootTypeCreator  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rootTypeCreator  ==  null  ||  rootTypeCreator  ==  null)  {	  if(rawTypeCreator    ==    null    ||    rawTypeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  rootTypeCreator	79	None	replace
180	[BUG]  [BUGGY]  if(typeToken!=  null  &&  typeCreator.hasInstanceType())  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeToken!=  null  &&  typeCreator.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeToken!=  null  &&  typeCreator.hasInstanceType())  {	  if(typeCreator!=    null    &&    typeToken.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
181	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  typeToken.isInstanceType())  {  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  typeToken.isInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  typeToken.isInstanceType())  {	  if(typeCreator!=    null    &&    typeToken.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
182	[BUG]  [BUGGY]  if(typeCreator  ==  null  &&  typeToken.hasInstanceType())  {  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  &&  typeToken.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  &&  typeToken.hasInstanceType())  {	  if(typeCreator!=    null    &&    typeToken.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
183	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  typeToken.hasInstanceType())  {  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  ||  typeToken.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  ||  typeToken.hasInstanceType())  {	  if(typeCreator!=    null    &&    typeToken.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
184	[BUG]  [BUGGY]  if(typeToken  ==  null  ||  typeCreator!=  null)  {  if(typeToken  ==  null  ||  typeCreator!=  null)  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeToken  ==  null  ||  typeCreator!=  null)  {  if(typeToken  ==  null  ||  typeCreator!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeToken    ==    null    ||    typeCreator!=    null)    {    if(typeToken  ==  null  ||  typeCreator!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
185	[BUG]  [BUGGY]  if(typeToken  ==  null  ||  typeCreator!=  null)  {  if(typeToken!=  null  ||  typeCreator!=  null)  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeToken  ==  null  ||  typeCreator!=  null)  {  if(typeToken!=  null  ||  typeCreator!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeToken    ==    null    ||    typeCreator!=    null)    {    if(typeToken!=  null  ||  typeCreator!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
186	[BUG]  [BUGGY]  if(typeToken  ==  null  ||  typeCreator!=  null)  {  if(typeToken  ==  null  ||  typeCreator  >=  null)  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeToken  ==  null  ||  typeCreator!=  null)  {  if(typeToken  ==  null  ||  typeCreator  >=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeToken    ==    null    ||    typeCreator!=    null)    {    if(typeToken  ==  null  ||  typeCreator  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
187	[BUG]  [BUGGY]  if(typeToken  ==  null  ||  typeCreator!=  null)  {  If(typeToken  ==  null  ||  typeCreator!=  null)  {  [CE]  ';'  expected  [FE]          ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeToken  ==  null  ||  typeCreator!=  null)  {  If(typeToken  ==  null  ||  typeCreator!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeToken    ==    null    ||    typeCreator!=    null)    {    If(typeToken  ==  null  ||  typeCreator!=  null)  {	  	non-compiled	[CE]  ';'  expected	52	None	add
188	[BUG]  [BUGGY]  if(typeToken  ==  null  ||  typeCreator!=  null)  {  if(typeToken  >=  null  ||  typeCreator!=  null)  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeToken  ==  null  ||  typeCreator!=  null)  {  if(typeToken  >=  null  ||  typeCreator!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeToken    ==    null    ||    typeCreator!=    null)    {    if(typeToken  >=  null  ||  typeCreator!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
189	[BUG]  [BUGGY]  if(typeToken  ==  null  ||  typeCreator!=  null)  {  if(typeToken  ==  null  ||  typeCreator  >>  null)  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeToken  ==  null  ||  typeCreator!=  null)  {  if(typeToken  ==  null  ||  typeCreator  >>  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeToken    ==    null    ||    typeCreator!=    null)    {    if(typeToken  ==  null  ||  typeCreator  >>  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
190	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  defaultConstructor)  {  [CE]  cannot  find  symbol  defaultConstructor  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  defaultConstructor)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  typeCreator!=  defaultConstructor)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    defaultConstructor)    {    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	130	None	replace
191	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  defaultConstructor!=  typeCreator)  {  [CE]  cannot  find  symbol  defaultConstructor  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  defaultConstructor!=  typeCreator)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  defaultConstructor!=  typeCreator)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    defaultConstructor)    {    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	130	None	replace
192	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  defaultConstructor!=  typeCreator)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  defaultConstructor!=  typeCreator)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  defaultConstructor!=  typeCreator)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    defaultConstructor)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	130	None	replace
193	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  rawTypeCreator!=  defaultConstructor)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  rawTypeCreator!=  defaultConstructor)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  rawTypeCreator!=  defaultConstructor)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    defaultConstructor)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	130	None	replace
194	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator!=  typeCreator)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator!=  typeCreator)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  typeCreator!=  typeCreator)  {	  if(typeCreator    ==    null    ||    typeCreator!=    rawType)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	31	None	replace
195	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  rawType.isPrimitive())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(typeCreator  ==  null  ||  rawType.isPrimitive())  {	  if(typeCreator    ==    null    ||    typeCreator!=    rawType)    {    	compilable	  [FE]  NullPointerException  	31	22	replace
196	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  rawType.isPrimitive())  {  [FE]  NullPointerException  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  rawType.isPrimitive())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  rawType.isPrimitive())  {	  if(typeCreator    ==    null    ||    typeCreator!=    rawType)    {    	compilable	  [FE]  NullPointerException  	31	22	replace
197	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  type.isInstanceType())  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  type.isInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  type.isInstanceType())  {	  if(typeCreator!=    null    &&    type.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
198	[BUG]  [BUGGY]  if(typeCreator  ==  null  &&  type.hasInstanceType())  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  &&  type.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  &&  type.hasInstanceType())  {	  if(typeCreator!=    null    &&    type.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
199	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(typeToken);  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(typeToken);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(typeToken);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
200	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(typeToken);  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(typeToken);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(typeToken);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
201	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType);  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
202	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator!=  rawType.typeCreator)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator!=  rawType.typeCreator)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  typeCreator!=  rawType.typeCreator)  {	  if(rawTypeCreator    ==    null    ||    rawTypeCreator!=    typeCreator)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	104	None	replace
203	[BUG]  [BUGGY]  if(instanceCreators!=  null  &&  typeCreator.hasInstanceType())  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(instanceCreators!=  null  &&  typeCreator.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(instanceCreators!=  null  &&  typeCreator.hasInstanceType())  {	  if(typeCreator!=    null    &&    instanceCreators.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
204	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  instances.hasInstanceType())  {  [CE]  cannot  find  symbol  instances  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  instances.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  instances.hasInstanceType())  {	  if(typeCreator!=    null    &&    instanceCreators.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol  instances	19	None	replace
205	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  instanceCreators.containsKey(type))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(typeCreator!=  null  &&  instanceCreators.containsKey(type))  {	  if(typeCreator!=    null    &&    instanceCreators.hasInstanceType())    {    	compilable	  [FE]  ClassCastException  	19	2	replace
206	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  instanceCreators.containsKey(type))  {  [FE]  ClassCastException  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  instanceCreators.containsKey(type))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  instanceCreators.containsKey(type))  {	  if(typeCreator!=    null    &&    instanceCreators.hasInstanceType())    {    	compilable	  [FE]  ClassCastException  	19	2	replace
207	[BUG]  [BUGGY]  if(typeCreator  ==  null  &&  instanceCreators.hasInstanceType())  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  &&  instanceCreators.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  &&  instanceCreators.hasInstanceType())  {	  if(typeCreator!=    null    &&    instanceCreators.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
208	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  typeCreator!=  null)  {  if(typeCreator!=  null  ||  typeCreator!=  null)  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  ||  typeCreator!=  null)  {  if(typeCreator!=  null  ||  typeCreator!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=    null    ||    typeCreator!=    null)    {    if(typeCreator!=  null  ||  typeCreator!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	46	None	add
209	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  typeCreator!=  null)  {  if(typeCreator  ==  null  ||  typeCreator!=  null)  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  ||  typeCreator!=  null)  {  if(typeCreator  ==  null  ||  typeCreator!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=    null    ||    typeCreator!=    null)    {    if(typeCreator  ==  null  ||  typeCreator!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	46	None	add
210	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  typeCreator!=  null)  {  if(typeCreator!=  null  ||  typeCreator  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  ||  typeCreator!=  null)  {  if(typeCreator!=  null  ||  typeCreator  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=    null    ||    typeCreator!=    null)    {    if(typeCreator!=  null  ||  typeCreator  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	46	None	add
211	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  typeCreator!=  null)  {  if(typeCreator  >=  null  ||  typeCreator!=  null)  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  ||  typeCreator!=  null)  {  if(typeCreator  >=  null  ||  typeCreator!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=    null    ||    typeCreator!=    null)    {    if(typeCreator  >=  null  ||  typeCreator!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	46	None	add
212	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  typeCreator!=  null)  {  if(typeCreator!=  null  ||  typeCreator  >=  null)  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  ||  typeCreator!=  null)  {  if(typeCreator!=  null  ||  typeCreator  >=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=    null    ||    typeCreator!=    null)    {    if(typeCreator!=  null  ||  typeCreator  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	46	None	add
213	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  typeCreator!=  null)  {  If(typeCreator!=  null  ||  typeCreator!=  null)  {  [CE]  ';'  expected  [FE]              ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  ||  typeCreator!=  null)  {  If(typeCreator!=  null  ||  typeCreator!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=    null    ||    typeCreator!=    null)    {    If(typeCreator!=  null  ||  typeCreator!=  null)  {	  	non-compiled	[CE]  ';'  expected	46	None	add
214	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  ||  typeToken!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(typeCreator!=  null  ||  typeToken!=  null)  {	  if(typeCreator!=    null    ||    rawTypeCreator!=    null)    {    	compilable	  [FE]  NullPointerException  	50	22	replace
215	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  typeToken!=  null)  {  [FE]  NullPointerException  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  ||  typeToken!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  ||  typeToken!=  null)  {	  if(typeCreator!=    null    ||    rawTypeCreator!=    null)    {    	compilable	  [FE]  NullPointerException  	50	22	replace
216	[BUG]  [BUGGY]  if(rawType.isUnsafe()  ||  rawType.isUnsafe())  {  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawType.isUnsafe()  ||  rawType.isUnsafe())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawType.isUnsafe()  ||  rawType.isUnsafe())  {	  if(typeCreator    ==    null)    {    if(typeCreator    ==    null    ||    typeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
217	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  ||  typeCreator.hasInstanceType())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  ||  typeCreator.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  ||  typeCreator.hasInstanceType())  {	  if(rawTypeCreator!=    null    &&    typeCreator.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	18	None	replace
218	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeCreators.get(typeToken);  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeCreators.get(typeToken);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeCreators.get(typeToken);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
219	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeCreators.get(type);  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeCreators.get(type);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeCreators.get(type);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
220	[BUG]  [BUGGY]  final  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(typeToken);  [CE]  illegal  start  of  type  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(typeToken);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(typeToken);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
221	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawTypeCreators.get(typeToken);  [CE]  illegal  start  of  type  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawTypeCreators.get(typeToken);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawTypeCreators.get(typeToken);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
222	[BUG]  [BUGGY]  if(instanceCreators!=  null  &&  instanceCreators.hasInstanceType())  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(instanceCreators!=  null  &&  instanceCreators.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(instanceCreators!=  null  &&  instanceCreators.hasInstanceType())  {	  if(rawTypeCreator!=    null    &&    instanceCreators.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
223	[BUG]  [BUGGY]  if(resultTypeCreator!=  null  &&  instanceCreators.hasInstanceType())  {  [CE]  cannot  find  symbol  resultTypeCreator  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(resultTypeCreator!=  null  &&  instanceCreators.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(resultTypeCreator!=  null  &&  instanceCreators.hasInstanceType())  {	  if(rawTypeCreator!=    null    &&    instanceCreators.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol  resultTypeCreator	74	None	replace
224	[BUG]  [BUGGY]  if(instanceCreators!=  null  &&  typeCreators.hasInstanceType())  {  [CE]  cannot  find  symbol  typeCreators  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(instanceCreators!=  null  &&  typeCreators.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(instanceCreators!=  null  &&  typeCreators.hasInstanceType())  {	  if(rawTypeCreator!=    null    &&    instanceCreators.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol  typeCreators	74	None	replace
225	[BUG]  [BUGGY]  if(instanceCreators!=  null)  {  if(instanceCreators!=  null)  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(instanceCreators!=  null)  {  if(instanceCreators!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(instanceCreators!=    null)    {    if(instanceCreators!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
226	[BUG]  [BUGGY]  if(instanceCreators!=  null)  {  if(instanceCreators  ==  null)  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(instanceCreators!=  null)  {  if(instanceCreators  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(instanceCreators!=    null)    {    if(instanceCreators  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
227	[BUG]  [BUGGY]  if(instanceCreators!=  null)  {  if(typeCreators!=  null)  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(instanceCreators!=  null)  {  if(typeCreators!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(instanceCreators!=    null)    {    if(typeCreators!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
228	[BUG]  [BUGGY]  if(instanceCreators!=  null)  {  if(rawTypeCreator!=  null)  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(instanceCreators!=  null)  {  if(rawTypeCreator!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(instanceCreators!=    null)    {    if(rawTypeCreator!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
229	[BUG]  [BUGGY]  if(instanceCreators!=  null)  {  if(typeCreator!=  null)  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(instanceCreators!=  null)  {  if(typeCreator!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(instanceCreators!=    null)    {    if(typeCreator!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
230	[BUG]  [BUGGY]  if(instanceCreators!=  null)  {  if(typeCreator  ==  null)  {  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(instanceCreators!=  null)  {  if(typeCreator  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(instanceCreators!=    null)    {    if(typeCreator  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
231	[BUG]  [BUGGY]  if(instanceCreators!=  null)  {  if(rawTypeCreator  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(instanceCreators!=  null)  {  if(rawTypeCreator  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(instanceCreators!=    null)    {    if(rawTypeCreator  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
232	[BUG]  [BUGGY]  if(instanceCreators!=  null)  {  if(typeCreators  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(instanceCreators!=  null)  {  if(typeCreators  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(instanceCreators!=    null)    {    if(typeCreators  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
233	[BUG]  [BUGGY]  final  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(type);  [CE]  illegal  start  of  type  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(type);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(type);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
234	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  ||  typeToken.isInterface())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  ||  typeToken.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  ||  typeToken.isInterface())  {	  if(typeCreator!=    null    ||    typeToken.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	43	None	replace
235	[BUG]  [BUGGY]  if(typeToken!=  null  ||  typeCreator.isInterface())  {  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeToken!=  null  ||  typeCreator.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeToken!=  null  ||  typeCreator.isInterface())  {	  if(typeCreator!=    null    ||    typeToken.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
236	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  typeToken.isInterface())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  typeToken.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  typeToken.isInterface())  {	  if(typeCreator!=    null    ||    typeToken.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	43	None	replace
237	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  typeToken.isConstructor())  {  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  ||  typeToken.isConstructor())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  ||  typeToken.isConstructor())  {	  if(typeCreator!=    null    ||    typeToken.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
238	[BUG]  [BUGGY]  if(rawType.isConstructor()  ||  typeCreator.isConstructor())  {  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawType.isConstructor()  ||  typeCreator.isConstructor())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawType.isConstructor()  ||  typeCreator.isConstructor())  {	  if(typeCreator    ==    null)    {    if(typeCreator    ==    null    ||    typeCreator.isConstructor())    {    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
239	[BUG]  [BUGGY]  if(rawType.isConstructor()  ||  type.isConstructor())  {  [CE]  cannot  find  symbol  [FE]                  NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawType.isConstructor()  ||  type.isConstructor())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawType.isConstructor()  ||  type.isConstructor())  {	  if(typeCreator    ==    null)    {    if(typeCreator    ==    null    ||    typeCreator.isConstructor())    {    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
240	[BUG]  [BUGGY]  if(typeCreator  ==  null  &&  rawTypeCreator.isInterface())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  &&  rawTypeCreator.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  &&  rawTypeCreator.isInterface())  {	  if(typeCreator    ==    null    &&    typeCreator.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	58	None	replace
241	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeCreator.isUnsafeAllocator())  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeCreator.isUnsafeAllocator())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  typeCreator.isUnsafeAllocator())  {	  if(rawTypeCreator    ==    null    ||    typeCreator.isUnsafeAllocator())    {    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
242	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  type.isUnsafeAllocator())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  type.isUnsafeAllocator())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  type.isUnsafeAllocator())  {	  if(rawTypeCreator    ==    null    ||    typeCreator.isUnsafeAllocator())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	6	None	replace
243	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  ||  typeCreator.isUnsafeAllocator())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  ||  typeCreator.isUnsafeAllocator())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  ||  typeCreator.isUnsafeAllocator())  {	  if(rawTypeCreator    ==    null    ||    typeCreator.isUnsafeAllocator())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	6	None	replace
244	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  typeToken.isUnsafeAllocator())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  typeToken.isUnsafeAllocator())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  typeToken.isUnsafeAllocator())  {	  if(rawTypeCreator    ==    null    ||    typeCreator.isUnsafeAllocator())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	6	None	replace
245	[BUG]  [BUGGY]  if(unsafeAllocator  ==  null  ||  typeCreator.isUnsafeAllocator())  {  [CE]  cannot  find  symbol  unsafeAllocator  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(unsafeAllocator  ==  null  ||  typeCreator.isUnsafeAllocator())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(unsafeAllocator  ==  null  ||  typeCreator.isUnsafeAllocator())  {	  if(rawTypeCreator    ==    null    ||    typeCreator.isUnsafeAllocator())    {    	non-compiled	[CE]  cannot  find  symbol  unsafeAllocator	6	None	replace
246	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  type.isUnsafeAllocator())  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  type.isUnsafeAllocator())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  type.isUnsafeAllocator())  {	  if(rawTypeCreator    ==    null    ||    typeCreator.isUnsafeAllocator())    {    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
247	[BUG]  [BUGGY]  if(rawType.equals(typeCreator))  {  if(typeCreator  ==  null  ||  typeCreator!=  null)  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawType.equals(typeCreator))  {  if(typeCreator  ==  null  ||  typeCreator!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawType.equals(typeCreator))  {  if(typeCreator  ==  null  ||  typeCreator!=  null)  {	  if(typeCreator    ==    null)    {    if(typeCreator    ==    null    ||    typeCreator!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
248	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  &&  type.isInstance())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  &&  type.isInstance())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  &&  type.isInstance())  {	  if(rawTypeCreator!=    null    &&    rawTypeCreator.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	77	None	replace
249	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken);  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
250	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)unsafeAllocator.get(rawType);  [CE]  illegal  start  of  type  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)unsafeAllocator.get(rawType);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)unsafeAllocator.get(rawType);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
251	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.rawTypeCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.rawTypeCreators.get(rawType);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.rawTypeCreators.get(rawType);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
252	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  rawType.equals(typeCreator))  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]    NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  rawType.equals(typeCreator))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  rawType.equals(typeCreator))  {	  if(typeCreator    ==    null    ||    rawType.equals(typeCreator))    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	112	None	replace
253	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator.equals(rawType))  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]      NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator.equals(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  typeCreator.equals(rawType))  {	  if(typeCreator    ==    null    ||    rawType.equals(typeCreator))    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	112	None	replace
254	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  ||  rawType.equals(typeCreator))  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]        NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  ||  rawType.equals(typeCreator))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  ||  rawType.equals(typeCreator))  {	  if(typeCreator    ==    null    ||    rawType.equals(typeCreator))    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	112	None	replace
255	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  type.equals(rawTypeCreator))  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]          NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  type.equals(rawTypeCreator))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  type.equals(rawTypeCreator))  {	  if(typeCreator    ==    null    ||    rawType.equals(typeCreator))    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	112	None	replace
256	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  rawType.isUnsafeAllocator())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]            NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  rawType.isUnsafeAllocator())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  rawType.isUnsafeAllocator())  {	  if(typeCreator    ==    null    ||    rawType.equals(typeCreator))    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	112	None	replace
257	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  typeToken.equals(rawType))  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]              NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  typeToken.equals(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  typeToken.equals(rawType))  {	  if(typeCreator    ==    null    ||    rawType.equals(typeCreator))    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	112	None	replace
258	[BUG]  [BUGGY]  if(rawType  <  null  ||  typeCreator  ==  null)  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]    NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawType  <  null  ||  typeCreator  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawType  <  null  ||  typeCreator  ==  null)  {	  if(typeCreator    ==    null    ||    typeCreator    ==    null)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	28	None	replace
259	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeToken!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(typeCreator  ==  null  ||  typeToken!=  null)  {	  if(typeCreator    ==    null    ||    rawTypeCreator!=    null)    {    	compilable	  [FE]  NullPointerException  	51	22	replace
260	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeToken!=  null)  {  [FE]  NullPointerException  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeToken!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  typeToken!=  null)  {	  if(typeCreator    ==    null    ||    rawTypeCreator!=    null)    {    	compilable	  [FE]  NullPointerException  	51	22	replace
261	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  instanceCreators!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(typeCreator  ==  null  ||  instanceCreators!=  null)  {	  if(typeCreator    ==    null    ||    rawTypeCreator!=    null)    {    	compilable	  [FE]  NullPointerException  	51	22	replace
262	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  instanceCreators!=  null)  {  [FE]  NullPointerException  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  instanceCreators!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  instanceCreators!=  null)  {	  if(typeCreator    ==    null    ||    rawTypeCreator!=    null)    {    	compilable	  [FE]  NullPointerException  	51	22	replace
263	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  defaultImplementation!=  null)  {  [CE]  cannot  find  symbol  defaultImplementation  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  defaultImplementation!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  defaultImplementation!=  null)  {	  if(typeCreator    ==    null    ||    rawTypeCreator!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	51	None	replace
264	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  defaultImplementation.isInstance())  {  [CE]  cannot  find  symbol  defaultImplementation  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  defaultImplementation.isInstance())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  defaultImplementation.isInstance())  {	  if(typeCreator!=    null    &&    defaultConstructor.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	78	None	replace
265	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  &&  defaultConstructor.isInstance())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  &&  defaultConstructor.isInstance())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  &&  defaultConstructor.isInstance())  {	  if(typeCreator!=    null    &&    defaultConstructor.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	78	None	replace
266	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  &&  sourceType.isInterface())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  &&  sourceType.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  &&  sourceType.isInterface())  {	  if(typeCreator!=    null    &&    typeTypeCreator.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	59	None	replace
267	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  null)  {  if(typeCreator  ==  null  ||  typeCreator!=  null)  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  null)  {  if(typeCreator  ==  null  ||  typeCreator!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator    ==    null    ||    typeCreator!=    null)    {    if(typeCreator  ==  null  ||  typeCreator!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	48	None	add
268	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  null)  {  if(typeCreator!=  null  ||  typeCreator!=  null)  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  null)  {  if(typeCreator!=  null  ||  typeCreator!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator    ==    null    ||    typeCreator!=    null)    {    if(typeCreator!=  null  ||  typeCreator!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	48	None	add
269	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  null)  {  if(typeCreator  ==  null  ||  typeCreator  >=  null)  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  null)  {  if(typeCreator  ==  null  ||  typeCreator  >=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator    ==    null    ||    typeCreator!=    null)    {    if(typeCreator  ==  null  ||  typeCreator  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	48	None	add
270	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  null)  {  If(typeCreator  ==  null  ||  typeCreator!=  null)  {  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  null)  {  If(typeCreator  ==  null  ||  typeCreator!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator    ==    null    ||    typeCreator!=    null)    {    If(typeCreator  ==  null  ||  typeCreator!=  null)  {	  	non-compiled	[CE]  ';'  expected	48	None	add
271	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  null)  {  if(typeCreator  >=  null  ||  typeCreator!=  null)  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  null)  {  if(typeCreator  >=  null  ||  typeCreator!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator    ==    null    ||    typeCreator!=    null)    {    if(typeCreator  >=  null  ||  typeCreator!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	48	None	add
272	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  null)  {  if(typeCreator  ==  null  ||  typeCreator  >>  null)  {  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  null)  {  if(typeCreator  ==  null  ||  typeCreator  >>  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator    ==    null    ||    typeCreator!=    null)    {    if(typeCreator  ==  null  ||  typeCreator  >>  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	48	None	add
273	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  &&  rawType.isInstance())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  &&  rawType.isInstance())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  &&  rawType.isInstance())  {	  if(typeCreator!=    null    &&    rawType.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	67	None	replace
274	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  rawType.isInstance())  {  [CE]  method  isInstance  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  ||  rawType.isInstance())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  ||  rawType.isInstance())  {	  if(typeCreator!=    null    &&    rawType.isInstance())    {    	non-compiled	[CE]  method  isInstance  in  class  Class<T>  cannot  be  applied  to  given  types;	67	None	replace
275	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  typeCreator.isInstanceType())  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  typeCreator.isInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  typeCreator.isInstanceType())  {	  if(typeCreator!=    null    &&    typeCreator.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
276	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator.isInstance())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]        NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator.isInstance())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  typeCreator.isInstance())  {	  if(typeCreator    ==    null    ||    rawTypeCreator.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	107	None	replace
277	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  type.isInstance())  {  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  type.isInstance())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  type.isInstance())  {	  if(typeCreator    ==    null    ||    rawTypeCreator.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
278	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeToken.isInstance())  {  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeToken.isInstance())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  typeToken.isInstance())  {	  if(typeCreator    ==    null    ||    rawTypeCreator.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
279	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  instanceCreators.isInstance())  {  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  instanceCreators.isInstance())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  instanceCreators.isInstance())  {	  if(typeCreator    ==    null    ||    rawTypeCreator.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
280	[BUG]  [BUGGY]  if(rawType  ==  null  ||  typeCreator.isUnsafeAllocator())  {  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawType  ==  null  ||  typeCreator.isUnsafeAllocator())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawType  ==  null  ||  typeCreator.isUnsafeAllocator())  {	  if(typeCreator    ==    null    ||    rawType.isUnsafeAllocator())    {    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
281	[BUG]  [BUGGY]  if(rawType!=  null  ||  typeCreator.isUnsafeAllocator())  {  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawType!=  null  ||  typeCreator.isUnsafeAllocator())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawType!=  null  ||  typeCreator.isUnsafeAllocator())  {	  if(typeCreator    ==    null    ||    rawType.isUnsafeAllocator())    {    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
282	[BUG]  [BUGGY]  if(typeCreator  ==  null  &&  rawTypeCreator.hasInstanceType())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  &&  rawTypeCreator.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  &&  rawTypeCreator.hasInstanceType())  {	  if(typeCreator    ==    null    &&    typeCreator.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	21	None	replace
283	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  rawType!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(typeCreator  ==  null  ||  rawType!=  null)  {	  if(rawTypeCreator    ==    null    ||    typeCreator    ==    null)    {    	compilable	  [FE]  NullPointerException  	24	22	replace
284	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  rawType!=  null)  {  [FE]  NullPointerException  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  rawType!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  rawType!=  null)  {	  if(rawTypeCreator    ==    null    ||    typeCreator    ==    null)    {    	compilable	  [FE]  NullPointerException  	24	22	replace
285	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  ||  typeToken  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(typeCreator!=  null  ||  typeToken  ==  null)  {	  if(typeCreator!=    null    ||    rawTypeCreator    ==    null)    {    	compilable	  [FE]  ClassCastException  	29	2	replace
286	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  typeToken  ==  null)  {  [FE]  ClassCastException  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  ||  typeToken  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  ||  typeToken  ==  null)  {	  if(typeCreator!=    null    ||    rawTypeCreator    ==    null)    {    	compilable	  [FE]  ClassCastException  	29	2	replace
287	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  rawType.equals(typeToken))  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]        NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  rawType.equals(typeToken))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  rawType.equals(typeToken))  {	  if(typeCreator    ==    null)    {    if(typeCreator    ==    null    ||    rawType.equals(typeToken))    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	121	None	replace
288	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  typeToken.equals(type))  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]          NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  typeToken.equals(type))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  typeToken.equals(type))  {	  if(typeCreator    ==    null)    {    if(typeCreator    ==    null    ||    rawType.equals(typeToken))    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	121	None	replace
289	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  typeToken.equals(typeCreator))  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]            NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  typeToken.equals(typeCreator))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  typeToken.equals(typeCreator))  {	  if(typeCreator    ==    null)    {    if(typeCreator    ==    null    ||    rawType.equals(typeToken))    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	121	None	replace
290	[BUG]  [BUGGY]  if(rawTypeToken  ==  null  ||  typeCreator.equals(typeToken))  {  [CE]  cannot  find  symbol  rawTypeToken  [FE]              NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeToken  ==  null  ||  typeCreator.equals(typeToken))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeToken  ==  null  ||  typeCreator.equals(typeToken))  {	  if(typeCreator    ==    null)    {    if(typeCreator    ==    null    ||    rawType.equals(typeToken))    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	121	None	replace
291	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  ||  rawType.equals(typeToken))  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  ||  rawType.equals(typeToken))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  ||  rawType.equals(typeToken))  {	  if(typeCreator    ==    null)    {    if(typeCreator    ==    null    ||    rawType.equals(typeToken))    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	121	None	replace
292	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeCreator.getRawType();  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeCreator.getRawType();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  Class  <?  super  T>  rawType  =  typeCreator.getRawType();	  final    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
293	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperType();  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperType();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperType();	  final    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
294	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperClass();  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSuperClass();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSuperClass();	  final    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
295	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName();  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName();	  final    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
296	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getReturnType();  [CE]  illegal  start  of  type  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getReturnType();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getReturnType();	  final    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
297	[BUG]  [BUGGY]  if(typeToken  ==  null  ||  typeCreator.isInterface())  {  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeToken  ==  null  ||  typeCreator.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeToken  ==  null  ||  typeCreator.isInterface())  {	  if(rawTypeCreator    ==    null    ||    typeCreator.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
298	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  defaultImplementation.isInterface())  {  [CE]  cannot  find  symbol  defaultImplementation  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  defaultImplementation.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  defaultImplementation.isInterface())  {	  if(typeCreator!=    null    &&    defaultConstructor.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	123	None	replace
299	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  &&  defaultConstructor.isInterface())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  &&  defaultConstructor.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  &&  defaultConstructor.isInterface())  {	  if(typeCreator!=    null    &&    defaultConstructor.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	123	None	replace
300	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  context.isInterface())  {  [CE]  cannot  find  symbol  context  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  context.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  context.isInterface())  {	  if(typeCreator!=    null    &&    defaultConstructor.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  context	123	None	replace
301	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawType  ==  null  ||  typeCreator!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(rawType  ==  null  ||  typeCreator!=  null)  {	  if(typeToken    ==    null    ||    typeCreator!=    null)    {    	compilable	  [FE]  ClassCastException  	53	2	replace
302	[BUG]  [BUGGY]  if(rawType  ==  null  ||  typeCreator!=  null)  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawType  ==  null  ||  typeCreator!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawType  ==  null  ||  typeCreator!=  null)  {	  if(typeToken    ==    null    ||    typeCreator!=    null)    {    	compilable	  [FE]  ClassCastException  	53	2	replace
303	[BUG]  [BUGGY]  if(rawTypeToken  ==  null  ||  typeCreator!=  null)  {  [CE]  cannot  find  symbol  rawTypeToken  [FE]      ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeToken  ==  null  ||  typeCreator!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeToken  ==  null  ||  typeCreator!=  null)  {	  if(typeToken    ==    null    ||    typeCreator!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	53	None	replace
304	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawType!=  null  ||  typeCreator  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(rawType!=  null  ||  typeCreator  ==  null)  {	  if(typeToken    ==    null    ||    typeCreator!=    null)    {    	compilable	  [FE]  NullPointerException  	53	22	replace
305	[BUG]  [BUGGY]  if(rawType!=  null  ||  typeCreator  ==  null)  {  [FE]  NullPointerException  [FE]        ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawType!=  null  ||  typeCreator  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawType!=  null  ||  typeCreator  ==  null)  {	  if(typeToken    ==    null    ||    typeCreator!=    null)    {    	compilable	  [FE]  NullPointerException  	53	22	replace
306	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawType!=  null  ||  typeCreator!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(rawType!=  null  ||  typeCreator!=  null)  {	  if(typeToken    ==    null    ||    typeCreator!=    null)    {    	compilable	  [FE]  NullPointerException  	53	22	replace
307	[BUG]  [BUGGY]  if(rawType!=  null  ||  typeCreator!=  null)  {  [FE]  NullPointerException  [FE]          ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawType!=  null  ||  typeCreator!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawType!=  null  ||  typeCreator!=  null)  {	  if(typeToken    ==    null    ||    typeCreator!=    null)    {    	compilable	  [FE]  NullPointerException  	53	22	replace
308	[BUG]  [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)typeCreators.get(type);  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)typeCreators.get(type);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)typeCreators.get(type);	  Constructor    <    T>    rawTypeCreator    =(Constructor    <    T>)instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
309	[BUG]  [BUGGY]  final  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)instanceCreators.get(type);  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)instanceCreators.get(type);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)instanceCreators.get(type);	  Constructor    <    T>    rawTypeCreator    =(Constructor    <    T>)instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
310	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  rawType.isInstance())  {  [CE]  method  isInstance  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  rawType.isInstance())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  rawType.isInstance())  {	  if(typeCreator    ==    null    ||    typeCreator.isInstance())    {    	non-compiled	[CE]  method  isInstance  in  class  Class<T>  cannot  be  applied  to  given  types;	126	None	replace
311	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeToken!=  typeCreator)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(typeCreator  ==  null  ||  typeToken!=  typeCreator)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    typeToken)    {    	compilable	  [FE]  NullPointerException  	36	22	replace
312	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeToken!=  typeCreator)  {  [FE]  NullPointerException  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeToken!=  typeCreator)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  typeToken!=  typeCreator)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    typeToken)    {    	compilable	  [FE]  NullPointerException  	36	22	replace
313	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  typeToken!=  typeCreator)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  typeToken!=  typeCreator)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  typeToken!=  typeCreator)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    typeToken)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	36	None	replace
314	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeToken  ==  null  ||  typeCreator!=  typeToken)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(typeToken  ==  null  ||  typeCreator!=  typeToken)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    typeToken)    {    	compilable	  [FE]  NullPointerException  	36	22	replace
315	[BUG]  [BUGGY]  if(typeToken  ==  null  ||  typeCreator!=  typeToken)  {  [FE]  NullPointerException  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeToken  ==  null  ||  typeCreator!=  typeToken)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeToken  ==  null  ||  typeCreator!=  typeToken)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    typeToken)    {    	compilable	  [FE]  NullPointerException  	36	22	replace
316	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  typeToken)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(typeCreator  ==  null  ||  typeCreator!=  typeToken)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    typeToken)    {    	compilable	  [FE]  NullPointerException  	36	22	replace
317	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  typeToken)  {  [FE]  NullPointerException  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  typeToken)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  typeCreator!=  typeToken)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    typeToken)    {    	compilable	  [FE]  NullPointerException  	36	22	replace
318	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  rawTypeCreator!=  typeToken)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  rawTypeCreator!=  typeToken)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  rawTypeCreator!=  typeToken)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    typeToken)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	36	None	replace
319	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  typeToken!=  typeToken)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  typeToken!=  typeToken)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  typeToken!=  typeToken)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    typeToken)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	36	None	replace
320	[BUG]  [BUGGY]  if(typeToken  ==  null  ||  typeCreator!=  rawType)  {  [CE]  incomparable  types:  InstanceCreator<T>  and  Class<CAP#1>  [FE]                                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeToken  ==  null  ||  typeCreator!=  rawType)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeToken  ==  null  ||  typeCreator!=  rawType)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    typeToken)    {    	non-compiled	[CE]  incomparable  types:  InstanceCreator<T>  and  Class<CAP#1>	36	None	replace
321	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator.isPrimitive())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]          NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator.isPrimitive())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  typeCreator.isPrimitive())  {	  if(typeCreator    ==    null)    {    if(typeCreator    ==    null    ||    rawType.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	122	None	replace
322	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  ||  typeCreator.isPrimitive())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]            NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  ||  typeCreator.isPrimitive())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  ||  typeCreator.isPrimitive())  {	  if(typeCreator    ==    null)    {    if(typeCreator    ==    null    ||    rawType.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	122	None	replace
323	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  rawType.isPrimitive())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]              NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  rawType.isPrimitive())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  rawType.isPrimitive())  {	  if(typeCreator    ==    null)    {    if(typeCreator    ==    null    ||    rawType.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	122	None	replace
324	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  type.isPrimitive())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  type.isPrimitive())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  type.isPrimitive())  {	  if(typeCreator    ==    null)    {    if(typeCreator    ==    null    ||    rawType.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	122	None	replace
325	[BUG]  [BUGGY]  final  UnsafeAllocator  <  T>  unsafeAllocator  =(UnsafeAllocator  <  T>)typeCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  UnsafeAllocator  <  T>  unsafeAllocator  =(UnsafeAllocator  <  T>)typeCreators.get(rawType);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  UnsafeAllocator  <  T>  unsafeAllocator  =(UnsafeAllocator  <  T>)typeCreators.get(rawType);	  final    UnsafeAllocator    <    T>    unsafeAllocator    =(UnsafeAllocator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
326	[BUG]  [BUGGY]  final  UnsafeAllocator  <  T>  unsafeAllocator  =(UnsafeAllocator  <  T>)typeCreator.get(rawType);  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  UnsafeAllocator  <  T>  unsafeAllocator  =(UnsafeAllocator  <  T>)typeCreator.get(rawType);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  UnsafeAllocator  <  T>  unsafeAllocator  =(UnsafeAllocator  <  T>)typeCreator.get(rawType);	  final    UnsafeAllocator    <    T>    unsafeAllocator    =(UnsafeAllocator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
327	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  typeCreator)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(typeCreator  ==  null  ||  typeCreator!=  typeCreator)  {	  if(typeCreator    ==    null    ||    rawTypeCreator!=    typeCreator)    {    	compilable	  [FE]  NullPointerException  	103	22	replace
328	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  typeCreator)  {  [FE]  NullPointerException  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  typeCreator)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  typeCreator!=  typeCreator)  {	  if(typeCreator    ==    null    ||    rawTypeCreator!=    typeCreator)    {    	compilable	  [FE]  NullPointerException  	103	22	replace
329	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeToken!=  UnsafeAllocator)  {  [CE]  cannot  find  symbol  UnsafeAllocator  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeToken!=  UnsafeAllocator)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  typeToken!=  UnsafeAllocator)  {	  if(typeCreator    ==    null    ||    rawTypeCreator!=    typeCreator)    {    	non-compiled	[CE]  cannot  find  symbol  UnsafeAllocator	103	None	replace
330	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeToken!=  unsafeAllocator)  {  [CE]  cannot  find  symbol  unsafeAllocator  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeToken!=  unsafeAllocator)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  typeToken!=  unsafeAllocator)  {	  if(typeCreator    ==    null    ||    rawTypeCreator!=    typeCreator)    {    	non-compiled	[CE]  cannot  find  symbol  unsafeAllocator	103	None	replace
331	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  typeCreator  ==  null)  {  if(typeCreator!=  null  ||  typeCreator  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  ||  typeCreator  ==  null)  {  if(typeCreator!=  null  ||  typeCreator  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=    null    ||    typeCreator    ==    null)    {    if(typeCreator!=  null  ||  typeCreator  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
332	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  typeCreator  ==  null)  {  if(typeCreator  ==  null  ||  typeCreator  ==  null)  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  ||  typeCreator  ==  null)  {  if(typeCreator  ==  null  ||  typeCreator  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=    null    ||    typeCreator    ==    null)    {    if(typeCreator  ==  null  ||  typeCreator  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
333	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  typeCreator  ==  null)  {  if(typeCreator  ==  null  ||  typeCreator!=  null)  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  ||  typeCreator  ==  null)  {  if(typeCreator  ==  null  ||  typeCreator!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=    null    ||    typeCreator    ==    null)    {    if(typeCreator  ==  null  ||  typeCreator!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
334	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  typeCreator  ==  null)  {  if(typeCreator  >=  null  ||  typeCreator  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  ||  typeCreator  ==  null)  {  if(typeCreator  >=  null  ||  typeCreator  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=    null    ||    typeCreator    ==    null)    {    if(typeCreator  >=  null  ||  typeCreator  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
335	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  typeCreator  ==  null)  {  if(typeCreator!=  null  ||  typeCreator  >=  null)  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  ||  typeCreator  ==  null)  {  if(typeCreator!=  null  ||  typeCreator  >=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=    null    ||    typeCreator    ==    null)    {    if(typeCreator!=  null  ||  typeCreator  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
336	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  typeCreator  ==  null)  {  If(typeCreator!=  null  ||  typeCreator  ==  null)  {  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  ||  typeCreator  ==  null)  {  If(typeCreator!=  null  ||  typeCreator  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=    null    ||    typeCreator    ==    null)    {    If(typeCreator!=  null  ||  typeCreator  ==  null)  {	  	non-compiled	[CE]  ';'  expected	25	None	add
337	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  unsafeAllocator!=  typeCreator)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  unsafeAllocator!=  typeCreator)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  unsafeAllocator!=  typeCreator)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    unsafeAllocator)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	32	None	replace
338	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  unsafeAllocator!=  typeCreator)  {  [CE]  cannot  find  symbol  unsafeAllocator  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  unsafeAllocator!=  typeCreator)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  unsafeAllocator!=  typeCreator)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    unsafeAllocator)    {    	non-compiled	[CE]  cannot  find  symbol  unsafeAllocator	32	None	replace
339	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeToken  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(typeCreator  ==  null  ||  typeToken  ==  null)  {	  if(typeCreator    ==    null    ||    rawTypeCreator    ==    null)    {    	compilable	  [FE]  NullPointerException  	30	22	replace
340	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeToken  ==  null)  {  [FE]  NullPointerException  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeToken  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  typeToken  ==  null)  {	  if(typeCreator    ==    null    ||    rawTypeCreator    ==    null)    {    	compilable	  [FE]  NullPointerException  	30	22	replace
341	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  &&  rawType.isInterface())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]    ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  &&  rawType.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  &&  rawType.isInterface())  {	  if(typeCreator!=    null    &&    rawType.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	94	None	replace
342	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  &&  rawType.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(typeCreator  ==  null  &&  rawType.isInterface())  {	  if(typeCreator!=    null    &&    rawType.isInterface())    {    	compilable	  [FE]  NullPointerException  	94	18	replace
343	[BUG]  [BUGGY]  if(typeCreator  ==  null  &&  rawType.isInterface())  {  [FE]  NullPointerException  [FE]      ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  &&  rawType.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  &&  rawType.isInterface())  {	  if(typeCreator!=    null    &&    rawType.isInterface())    {    	compilable	  [FE]  NullPointerException  	94	18	replace
344	[BUG]  [BUGGY]  Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)instanceCreators.get(typeToken);  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)instanceCreators.get(typeToken);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)instanceCreators.get(typeToken);	  Class    <?    super    T>    rawTypeCreator    =(Class    <?    super    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
345	[BUG]  [BUGGY]  final  UnsafeAllocator  <  T>  unsafeAllocator  =(unsafeAllocator  <  T>)instanceCreators.get(type);  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  UnsafeAllocator  <  T>  unsafeAllocator  =(unsafeAllocator  <  T>)instanceCreators.get(type);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  UnsafeAllocator  <  T>  unsafeAllocator  =(unsafeAllocator  <  T>)instanceCreators.get(type);	  final    UnsafeAllocator    <    T>    unsafeAllocator    =(UnsafeAllocator    <    T>)instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
346	[BUG]  [BUGGY]  if(rafTypeCreator  ==  null  ||  typeCreator.isConstructor())  {  [CE]  cannot  find  symbol  rafTypeCreator  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rafTypeCreator  ==  null  ||  typeCreator.isConstructor())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rafTypeCreator  ==  null  ||  typeCreator.isConstructor())  {	  if(rawTypeCreator    ==    null    ||    typeCreator.isConstructor())    {    	non-compiled	[CE]  cannot  find  symbol  rafTypeCreator	8	None	replace
347	[BUG]  [BUGGY]  if(primaryTypeCreator  ==  null  ||  typeCreator.isConstructor())  {  [CE]  cannot  find  symbol  primaryTypeCreator  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(primaryTypeCreator  ==  null  ||  typeCreator.isConstructor())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(primaryTypeCreator  ==  null  ||  typeCreator.isConstructor())  {	  if(rawTypeCreator    ==    null    ||    typeCreator.isConstructor())    {    	non-compiled	[CE]  cannot  find  symbol  primaryTypeCreator	8	None	replace
348	[BUG]  [BUGGY]  if(sourceCreator  ==  null  ||  typeCreator.isConstructor())  {  [CE]  cannot  find  symbol  sourceCreator  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(sourceCreator  ==  null  ||  typeCreator.isConstructor())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(sourceCreator  ==  null  ||  typeCreator.isConstructor())  {	  if(rawTypeCreator    ==    null    ||    typeCreator.isConstructor())    {    	non-compiled	[CE]  cannot  find  symbol  sourceCreator	8	None	replace
349	[BUG]  [BUGGY]  if(rawType  >=  null  ||  typeCreator.isUnsafeAllocator())  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawType  >=  null  ||  typeCreator.isUnsafeAllocator())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawType  >=  null  ||  typeCreator.isUnsafeAllocator())  {	  if(typeCreator    ==    null    ||    rawType.isUnsafeAllocator())    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	37	None	replace
350	[BUG]  [BUGGY]  if(rawTypeToken  ==  null)  {  if(typeCreator  ==  null  ||  typeCreator.isInterface())  {  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeToken  ==  null)  {  if(typeCreator  ==  null  ||  typeCreator.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeToken  ==  null)  {  if(typeCreator  ==  null  ||  typeCreator.isInterface())  {	  if(typeCreator    ==    null)    {    if(typeCreator    ==    null    ||    typeCreator.isInterface())    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
351	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawClass();  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawClass();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawClass();	  final    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
352	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSubtype(typeToken.getRawType());  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getSubtype(typeToken.getRawType());  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getSubtype(typeToken.getRawType());	  final    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
353	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getPrimitiveType();  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getPrimitiveType();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getPrimitiveType();	  final    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
354	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getConstructor();  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getConstructor();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getConstructor();	  final    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
355	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  ||  defaultConstructor  ==  null)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  ||  defaultConstructor  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  ||  defaultConstructor  ==  null)  {	  if(rawTypeCreator!=    null    ||    rawTypeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	90	None	replace
356	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  ||  typeCreator!=  rawType)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  ||  typeCreator!=  rawType)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  ||  typeCreator!=  rawType)  {	  if(typeCreator    ==    null    ||    typeCreator!=    rawType)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	31	None	replace
357	[BUG]  [BUGGY]  if(rawTypeToken  ==  null)  {  if(typeCreator  ==  null  ||  typeCreator.isConstructor())  {  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeToken  ==  null)  {  if(typeCreator  ==  null  ||  typeCreator.isConstructor())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeToken  ==  null)  {  if(typeCreator  ==  null  ||  typeCreator.isConstructor())  {	  if(typeCreator    ==    null)    {    if(typeCreator    ==    null    ||    rawTypeCreator.isConstructor())    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
358	[BUG]  [BUGGY]  if(rawTypeToken  ==  null)  {  if(typeCreator  ==  null  ||  rawTypeCreator.isConstructor())  {  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeToken  ==  null)  {  if(typeCreator  ==  null  ||  rawTypeCreator.isConstructor())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeToken  ==  null)  {  if(typeCreator  ==  null  ||  rawTypeCreator.isConstructor())  {	  if(typeCreator    ==    null)    {    if(typeCreator    ==    null    ||    rawTypeCreator.isConstructor())    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
359	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator!=  this)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator!=  this)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  typeCreator!=  this)  {	  if(typeCreator    ==    null    ||    rawType!=    typeCreator)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	35	None	replace
360	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator.equals(rawTypeToken))  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]        NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator.equals(rawTypeToken))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  typeCreator.equals(rawTypeToken))  {	  if(typeCreator    ==    null)    {    if(typeCreator    ==    null    ||    rawType.equals(typeToken))    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	121	None	replace
361	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  ||  typeCreator.equals(rawType))  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]          NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  ||  typeCreator.equals(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  ||  typeCreator.equals(rawType))  {	  if(typeCreator    ==    null)    {    if(typeCreator    ==    null    ||    rawType.equals(typeToken))    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	121	None	replace
362	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  rawTypeCreator.isInstance())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]        NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  rawTypeCreator.isInstance())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  rawTypeCreator.isInstance())  {	  if(typeCreator    ==    null    ||    rawTypeCreator.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	107	None	replace
363	[BUG]  [BUGGY]  if(sourceCreator!=  null  ||  rawTypeCreator  ==  null)  {  [CE]  cannot  find  symbol  sourceCreator  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(sourceCreator!=  null  ||  rawTypeCreator  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(sourceCreator!=  null  ||  rawTypeCreator  ==  null)  {	  if(typeCreator!=    null    ||    rawTypeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  sourceCreator	29	None	replace
364	[BUG]  [BUGGY]  if(rawTypeToken  ==  null  ||  typeCreator  ==  null)  {  [CE]  cannot  find  symbol  rawTypeToken  [FE]    ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeToken  ==  null  ||  typeCreator  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeToken  ==  null  ||  typeCreator  ==  null)  {	  if(typeToken    ==    null    ||    typeCreator!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	53	None	replace
365	[BUG]  [BUGGY]  if(typeToken  ==  null  ||  rawTypeCreator  ==  null)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]      ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeToken  ==  null  ||  rawTypeCreator  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeToken  ==  null  ||  rawTypeCreator  ==  null)  {	  if(typeToken    ==    null    ||    typeCreator!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	53	None	replace
366	[BUG]  [BUGGY]  if(typeToken  ==  null  ||  rawTypeCreator!=  null)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]        ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeToken  ==  null  ||  rawTypeCreator!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeToken  ==  null  ||  rawTypeCreator!=  null)  {	  if(typeToken    ==    null    ||    typeCreator!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	53	None	replace
367	[BUG]  [BUGGY]  if(primaryTypeCreator!=  null  &&  typeCreator.hasInstanceType())  {  [CE]  cannot  find  symbol  primaryTypeCreator  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(primaryTypeCreator!=  null  &&  typeCreator.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(primaryTypeCreator!=  null  &&  typeCreator.hasInstanceType())  {	  if(rawTypeCreator!=    null    &&    typeCreator.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol  primaryTypeCreator	18	None	replace
368	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  &&  typeCreator.canInstanceType())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  &&  typeCreator.canInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  &&  typeCreator.canInstanceType())  {	  if(rawTypeCreator!=    null    &&    typeCreator.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	18	None	replace
369	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  &&  typeCreator.isInstanceType())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  &&  typeCreator.isInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  &&  typeCreator.isInstanceType())  {	  if(rawTypeCreator!=    null    &&    typeCreator.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	18	None	replace
370	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  rawTypeCreator.isUnsafeAllocator())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  rawTypeCreator.isUnsafeAllocator())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  rawTypeCreator.isUnsafeAllocator())  {	  if(rawTypeCreator    ==    null    ||    typeCreator.isUnsafeAllocator())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	6	None	replace
371	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator.hasUnsafeAllocator())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator.hasUnsafeAllocator())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  typeCreator.hasUnsafeAllocator())  {	  if(rawTypeCreator    ==    null    ||    typeCreator.isUnsafeAllocator())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	6	None	replace
372	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  typeCreator.canInstanceType())  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  typeCreator.canInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  typeCreator.canInstanceType())  {	  if(typeCreator!=    null    &&    typeCreator.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
373	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  rawTypeToken.isInterface())  {  [CE]  cannot  find  symbol  rawTypeToken  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  ||  rawTypeToken.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  ||  rawTypeToken.isInterface())  {	  if(typeCreator!=    null    ||    typeToken.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	43	None	replace
374	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  instanceCreators  ==  null)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]    ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  instanceCreators  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  instanceCreators  ==  null)  {	  if(instanceCreators    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	87	None	replace
375	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  rawTypeToken.hasInstanceType())  {  [CE]  cannot  find  symbol  rawTypeToken  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  rawTypeToken.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  rawTypeToken.hasInstanceType())  {	  if(typeCreator!=    null    &&    typeToken.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	23	None	replace
376	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  typeToken);  [CE]  illegal  start  of  type  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  typeToken);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  typeToken);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
377	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawTypeToken);  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawTypeToken);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawTypeToken);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
378	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken  -  1);  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken  -  1);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken  -  1);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
379	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  &&  types.hasInstanceType())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  &&  types.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  &&  types.hasInstanceType())  {	  if(rawTypeCreator!=    null    &&    rawTypeCreator.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	75	None	replace
380	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  instanceCreators.containsKey(typeToken))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(typeCreator!=  null  &&  instanceCreators.containsKey(typeToken))  {	  if(typeCreator!=    null    &&    instanceCreators.isInterface())    {    	compilable	  [FE]  ClassCastException  	57	2	replace
381	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  instanceCreators.containsKey(typeToken))  {  [FE]  ClassCastException  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  instanceCreators.containsKey(typeToken))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  instanceCreators.containsKey(typeToken))  {	  if(typeCreator!=    null    &&    instanceCreators.isInterface())    {    	compilable	  [FE]  ClassCastException  	57	2	replace
382	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator!=  instanceCreators)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator!=  instanceCreators)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  typeCreator!=  instanceCreators)  {	  if(rawTypeCreator    ==    null    ||    rawTypeCreator!=    typeCreator)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	104	None	replace
383	[BUG]  [BUGGY]  if(sourceCreator  ==  null  ||  rawTypeCreator  ==  null)  {  [CE]  cannot  find  symbol  sourceCreator  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(sourceCreator  ==  null  ||  rawTypeCreator  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(sourceCreator  ==  null  ||  rawTypeCreator  ==  null)  {	  if(typeCreator    ==    null    ||    rawTypeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  sourceCreator	30	None	replace
384	[BUG]  [BUGGY]  if(rafTypeCreator  ==  null  ||  typeCreator.isInterface())  {  [CE]  cannot  find  symbol  rafTypeCreator  [FE]          NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rafTypeCreator  ==  null  ||  typeCreator.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rafTypeCreator  ==  null  ||  typeCreator.isInterface())  {	  if(rawTypeCreator    ==    null    ||    typeCreator.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  rafTypeCreator	38	None	replace
385	[BUG]  [BUGGY]  if(primaryTypeCreator  ==  null  ||  typeCreator.isInterface())  {  [CE]  cannot  find  symbol  primaryTypeCreator  [FE]            NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(primaryTypeCreator  ==  null  ||  typeCreator.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(primaryTypeCreator  ==  null  ||  typeCreator.isInterface())  {	  if(rawTypeCreator    ==    null    ||    typeCreator.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  primaryTypeCreator	38	None	replace
386	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator.hasInterface())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]              NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator.hasInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  typeCreator.hasInterface())  {	  if(rawTypeCreator    ==    null    ||    typeCreator.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	38	None	replace
387	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  defaultConstructor  ==  null)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]        NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  defaultConstructor  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  defaultConstructor  ==  null)  {	  if(rawTypeCreator    ==    null    ||    rawTypeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	79	None	replace
388	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  instanceCreators.size()  >  0)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(typeCreator!=  null  &&  instanceCreators.size()  >  0)  {	  if(typeCreator!=    null    &&    instanceCreators.hasInstanceType())    {    	compilable	  [FE]  ClassCastException  	19	2	replace
389	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  instanceCreators.size()  >  0)  {  [FE]  ClassCastException  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  instanceCreators.size()  >  0)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  instanceCreators.size()  >  0)  {	  if(typeCreator!=    null    &&    instanceCreators.hasInstanceType())    {    	compilable	  [FE]  ClassCastException  	19	2	replace
390	[BUG]  [BUGGY]  if(primaryTypeCreator!=  null  &&  typeCreator.isInstance())  {  [CE]  cannot  find  symbol  primaryTypeCreator  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(primaryTypeCreator!=  null  &&  typeCreator.isInstance())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(primaryTypeCreator!=  null  &&  typeCreator.isInstance())  {	  if(rawTypeCreator!=    null    &&    typeCreator.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol  primaryTypeCreator	62	None	replace
391	[BUG]  [BUGGY]  if(rawTypeCreator  >=  null  &&  typeCreator.isInstance())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  >=  null  &&  typeCreator.isInstance())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  >=  null  &&  typeCreator.isInstance())  {	  if(rawTypeCreator!=    null    &&    typeCreator.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	62	None	replace
392	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  rawTypeCreator.isConstructor())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  rawTypeCreator.isConstructor())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  rawTypeCreator.isConstructor())  {	  if(typeCreator    ==    null)    {    if(typeCreator    ==    null    ||    typeCreator.isConstructor())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	13	None	replace
393	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  ||  defaultConstructor!=  null)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  ||  defaultConstructor!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  ||  defaultConstructor!=  null)  {	  if(rawTypeCreator!=    null    ||    rawTypeCreator!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	76	None	replace
394	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  targetTypeCreator!=  typeCreator)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  targetTypeCreator!=  typeCreator)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  targetTypeCreator!=  typeCreator)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    targetTypeCreator)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	131	None	replace
395	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  targetTypeCreator!=  typeCreator)  {  [CE]  cannot  find  symbol  targetTypeCreator  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  targetTypeCreator!=  typeCreator)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  targetTypeCreator!=  typeCreator)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    targetTypeCreator)    {    	non-compiled	[CE]  cannot  find  symbol  targetTypeCreator	131	None	replace
396	[BUG]  [BUGGY]  if(sourceCreator  ==  null  ||  rawTypeCreator!=  null)  {  [CE]  cannot  find  symbol  sourceCreator  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(sourceCreator  ==  null  ||  rawTypeCreator!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(sourceCreator  ==  null  ||  rawTypeCreator!=  null)  {	  if(typeCreator    ==    null    ||    rawTypeCreator!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  sourceCreator	51	None	replace
397	[BUG]  [BUGGY]  final  UnsafeAllocator  <  T>  unsafeAllocator  =(UnsafeAllocator  <  T>)rawTypeCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  UnsafeAllocator  <  T>  unsafeAllocator  =(UnsafeAllocator  <  T>)rawTypeCreators.get(rawType);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  UnsafeAllocator  <  T>  unsafeAllocator  =(UnsafeAllocator  <  T>)rawTypeCreators.get(rawType);	  final    UnsafeAllocator    <    T>    unsafeAllocator    =(UnsafeAllocator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
398	[BUG]  [BUGGY]  final  UnsafeAllocator  <  T>  unsafeAllocator  =(UnsafeAllocator  <  T>)unsafeTypeCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  UnsafeAllocator  <  T>  unsafeAllocator  =(UnsafeAllocator  <  T>)unsafeTypeCreators.get(rawType);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  UnsafeAllocator  <  T>  unsafeAllocator  =(UnsafeAllocator  <  T>)unsafeTypeCreators.get(rawType);	  final    UnsafeAllocator    <    T>    unsafeAllocator    =(UnsafeAllocator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
399	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  rawTypeCreator.hasInstanceType())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]              NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  rawTypeCreator.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  rawTypeCreator.hasInstanceType())  {	  if(typeCreator    ==    null    ||    rawTypeCreator.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	110	None	replace
400	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  rawType.hasInstanceType())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  rawType.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  rawType.hasInstanceType())  {	  if(typeCreator    ==    null    ||    rawTypeCreator.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	110	None	replace
401	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  rawType.isConstructor())  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  ||  rawType.isConstructor())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  ||  rawType.isConstructor())  {	  if(typeCreator!=    null    ||    typeCreator.isConstructor())    {    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
402	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  rawType.isAssignableFrom(typeCreator))  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  rawType.isAssignableFrom(typeCreator))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  rawType.isAssignableFrom(typeCreator))  {	  if(rawTypeCreator    ==    null    ||    typeCreator.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	7	None	replace
403	[BUG]  [BUGGY]  if(rawTypeCapacity  ==  null  ||  typeCreator.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  rawTypeCapacity  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCapacity  ==  null  ||  typeCreator.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCapacity  ==  null  ||  typeCreator.isAssignableFrom(rawType))  {	  if(rawTypeCreator    ==    null    ||    typeCreator.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCapacity	7	None	replace
404	[BUG]  [BUGGY]  if(rawTypeToken  ==  null)  {  if(typeCreator!=  null)  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeToken  ==  null)  {  if(typeCreator!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeToken  ==  null)  {  if(typeCreator!=  null)  {	  if(typeCreator    ==    null)    {    if(typeCreator!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
405	[BUG]  [BUGGY]  if(rawTypeToken  ==  null  ||  typeCreator!=  typeToken)  {  [CE]  cannot  find  symbol  rawTypeToken  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeToken  ==  null  ||  typeCreator!=  typeToken)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeToken  ==  null  ||  typeCreator!=  typeToken)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    typeToken)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	36	None	replace
406	[BUG]  [BUGGY]  if(primaryTypeCreator  ==  null  ||  typeCreator!=  defaultImplementation)  {  [CE]  cannot  find  symbol  primaryTypeCreator  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(primaryTypeCreator  ==  null  ||  typeCreator!=  defaultImplementation)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(primaryTypeCreator  ==  null  ||  typeCreator!=  defaultImplementation)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    defaultImplementation)    {    	non-compiled	[CE]  cannot  find  symbol  primaryTypeCreator	33	None	replace
407	[BUG]  [BUGGY]  if(rootTypeCreator  ==  null  ||  typeCreator!=  defaultImplementation)  {  [CE]  cannot  find  symbol  rootTypeCreator  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rootTypeCreator  ==  null  ||  typeCreator!=  defaultImplementation)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rootTypeCreator  ==  null  ||  typeCreator!=  defaultImplementation)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    defaultImplementation)    {    	non-compiled	[CE]  cannot  find  symbol  rootTypeCreator	33	None	replace
408	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  &&  instances.hasInstanceType())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  &&  instances.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  &&  instances.hasInstanceType())  {	  if(rawTypeCreator!=    null    &&    instanceCreators.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	74	None	replace
409	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  &&  instanceCreators.hasInstanceType())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  &&  instanceCreators.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  &&  instanceCreators.hasInstanceType())  {	  if(rawTypeCreator!=    null    &&    instanceCreators.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	74	None	replace
410	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  &&  typeCreators.hasInstanceType())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  &&  typeCreators.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  &&  typeCreators.hasInstanceType())  {	  if(rawTypeCreator!=    null    &&    instanceCreators.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	74	None	replace
411	[BUG]  [BUGGY]  if(rawTypeToken  ==  null)  {  if(typeCreator  ==  null  ||  typeCreator!=  null)  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeToken  ==  null)  {  if(typeCreator  ==  null  ||  typeCreator!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeToken  ==  null)  {  if(typeCreator  ==  null  ||  typeCreator!=  null)  {	  if(typeCreator    ==    null)    {    if(typeCreator    ==    null    ||    typeCreator!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
412	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawType  ==  null  ||  typeCreator.equals(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(rawType  ==  null  ||  typeCreator.equals(rawType))  {	  if(typeCreator    ==    null    ||    rawType.equals(typeCreator))    {    	compilable	  [FE]  NullPointerException  	112	43	replace
413	[BUG]  [BUGGY]  if(rawType  ==  null  ||  typeCreator.equals(rawType))  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawType  ==  null  ||  typeCreator.equals(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawType  ==  null  ||  typeCreator.equals(rawType))  {	  if(typeCreator    ==    null    ||    rawType.equals(typeCreator))    {    	compilable	  [FE]  NullPointerException  	112	43	replace
414	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawType  ==  null  ||  rawType.equals(typeCreator))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(rawType  ==  null  ||  rawType.equals(typeCreator))  {	  if(typeCreator    ==    null    ||    rawType.equals(typeCreator))    {    	compilable	  [FE]  ClassCastException  	112	2	replace
415	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.equals(typeCreator))  {  [FE]  ClassCastException  [FE]      NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawType  ==  null  ||  rawType.equals(typeCreator))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawType  ==  null  ||  rawType.equals(typeCreator))  {	  if(typeCreator    ==    null    ||    rawType.equals(typeCreator))    {    	compilable	  [FE]  ClassCastException  	112	2	replace
416	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawType!=  null  ||  typeCreator.equals(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(rawType!=  null  ||  typeCreator.equals(rawType))  {	  if(typeCreator    ==    null    ||    rawType.equals(typeCreator))    {    	compilable	  [FE]  NullPointerException  	112	22	replace
417	[BUG]  [BUGGY]  if(rawType!=  null  ||  typeCreator.equals(rawType))  {  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawType!=  null  ||  typeCreator.equals(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawType!=  null  ||  typeCreator.equals(rawType))  {	  if(typeCreator    ==    null    ||    rawType.equals(typeCreator))    {    	compilable	  [FE]  NullPointerException  	112	22	replace
418	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  rawType.equals(typeCreator))  {  if(rawType!=  null  ||  rawType.equals(typeCreator))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  rawType.equals(typeCreator))  {  if(rawType!=  null  ||  rawType.equals(typeCreator))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator    ==    null    ||    rawType.equals(typeCreator))    {    if(rawType!=  null  ||  rawType.equals(typeCreator))  {	  	non-compiled	[CE]  illegal  start  of  expression	111	None	add
419	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  null)  {  if(rawTypeCreator  ==  null  ||  typeCreator!=  null)  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  null)  {  if(rawTypeCreator  ==  null  ||  typeCreator!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator    ==    null    ||    typeCreator!=    null)    {    if(rawTypeCreator  ==  null  ||  typeCreator!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	48	None	add
420	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instances.get(rawType);  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instances.get(rawType);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =  instances.get(rawType);	  ObjectConstructor    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
421	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(typeToken);  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(typeToken);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(typeToken);	  ObjectConstructor    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
422	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  rawType.isInterface())  {  if(rawTypeCreator!=  null  ||  rawType.isInterface())  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  ||  rawType.isInterface())  {  if(rawTypeCreator!=  null  ||  rawType.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=    null    ||    rawType.isInterface())    {    if(rawTypeCreator!=  null  ||  rawType.isInterface())  {	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
423	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  rawType.isInterface())  {  if(rawTypeCreator!=  null  &&  rawType.isInterface())  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  rawType.isInterface())  {  if(rawTypeCreator!=  null  &&  rawType.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=    null    &&    rawType.isInterface())    {    if(rawTypeCreator!=  null  &&  rawType.isInterface())  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
424	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeCreator  ==  null)  {  if(rawTypeCreator  ==  null  ||  typeCreator  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeCreator  ==  null)  {  if(rawTypeCreator  ==  null  ||  typeCreator  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator    ==    null    ||    typeCreator    ==    null)    {    if(rawTypeCreator  ==  null  ||  typeCreator  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
425	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  ||  rawType.isPrimitive())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]          NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  ||  rawType.isPrimitive())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  ||  rawType.isPrimitive())  {	  if(typeCreator    ==    null)    {    if(typeCreator    ==    null    ||    rawType.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	122	None	replace
426	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  parentType!=  null)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  parentType!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  parentType!=  null)  {	  if(rawTypeCreator    ==    null    ||    rawTypeCreator!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	80	None	replace
427	[BUG]  [BUGGY]  if(rawTypeCreator  >=  null  ||  typeCreator  ==  null)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  >=  null  ||  typeCreator  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  >=  null  ||  typeCreator  ==  null)  {	  if(resultTypeCreator!=    null    ||    typeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	106	None	replace
428	[BUG]  [BUGGY]  if(typeCreator  ==  null  &&  rawType.hasInstanceType())  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  &&  rawType.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  &&  rawType.hasInstanceType())  {	  if(typeCreator    ==    null    &&    typeCreator.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
429	[BUG]  [BUGGY]  if(rafTypeCreator!=  null  ||  typeCreator.isInterface())  {  [CE]  cannot  find  symbol  rafTypeCreator  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rafTypeCreator!=  null  ||  typeCreator.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rafTypeCreator!=  null  ||  typeCreator.isInterface())  {	  if(rawTypeCreator!=    null    ||    typeCreator.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  rafTypeCreator	40	None	replace
430	[BUG]  [BUGGY]  if(primaryTypeCreator!=  null  ||  typeCreator.isInterface())  {  [CE]  cannot  find  symbol  primaryTypeCreator  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(primaryTypeCreator!=  null  ||  typeCreator.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(primaryTypeCreator!=  null  ||  typeCreator.isInterface())  {	  if(rawTypeCreator!=    null    ||    typeCreator.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  primaryTypeCreator	40	None	replace
431	[BUG]  [BUGGY]  if(rawTypeCreator  >=  null  ||  typeCreator.isInterface())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  >=  null  ||  typeCreator.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  >=  null  ||  typeCreator.isInterface())  {	  if(rawTypeCreator!=    null    ||    typeCreator.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	40	None	replace
432	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeCreator.canInstanceType())  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeCreator.canInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  typeCreator.canInstanceType())  {	  if(typeCreator    ==    null    ||    typeCreator.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
433	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  &&  sourceType.isInstance())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  &&  sourceType.isInstance())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  &&  sourceType.isInstance())  {	  if(typeCreator!=    null    &&    rawType.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	67	None	replace
434	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  rawTypeCreator!=  unsafeAllocator)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  rawTypeCreator!=  unsafeAllocator)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  rawTypeCreator!=  unsafeAllocator)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    unsafeAllocator)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	32	None	replace
435	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator!=  safeAllocator)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator!=  safeAllocator)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  typeCreator!=  safeAllocator)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    unsafeAllocator)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	32	None	replace
436	[BUG]  [BUGGY]  if(instanceCreators!=  null)  {  if(outstanceCreators!=  null)  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(instanceCreators!=  null)  {  if(outstanceCreators!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(instanceCreators!=    null)    {    if(outstanceCreators!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
437	[BUG]  [BUGGY]  if(instanceCreators!=  null)  {  if(instanceCreators  >=  null)  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(instanceCreators!=  null)  {  if(instanceCreators  >=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(instanceCreators!=    null)    {    if(instanceCreators  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
438	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator!=  rawTypeCreator)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator!=  rawTypeCreator)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  typeCreator!=  rawTypeCreator)  {	  if(typeCreator    ==    null    ||    rawTypeCreator!=    typeCreator)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	103	None	replace
439	[BUG]  [BUGGY]  if(rafTypeCreator!=  null  &&  typeCreator.isInterface())  {  [CE]  cannot  find  symbol  rafTypeCreator  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rafTypeCreator!=  null  &&  typeCreator.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rafTypeCreator!=  null  &&  typeCreator.isInterface())  {	  if(rawTypeCreator!=    null    &&    typeCreator.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  rafTypeCreator	55	None	replace
440	[BUG]  [BUGGY]  if(primaryTypeCreator!=  null  &&  typeCreator.isInterface())  {  [CE]  cannot  find  symbol  primaryTypeCreator  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(primaryTypeCreator!=  null  &&  typeCreator.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(primaryTypeCreator!=  null  &&  typeCreator.isInterface())  {	  if(rawTypeCreator!=    null    &&    typeCreator.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  primaryTypeCreator	55	None	replace
441	[BUG]  [BUGGY]  if(rawTypeCreator  >=  null  &&  typeCreator.isInterface())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  >=  null  &&  typeCreator.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  >=  null  &&  typeCreator.isInterface())  {	  if(rawTypeCreator!=    null    &&    typeCreator.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	55	None	replace
442	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawTypeToken);  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawTypeToken);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawTypeToken);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
443	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(typeToken,  rawType);  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(typeToken,  rawType);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(typeToken,  rawType);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
444	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  &&  sourceType.hasInstanceType())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  &&  sourceType.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  &&  sourceType.hasInstanceType())  {	  if(typeCreator!=    null    &&    rawType.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	22	None	replace
445	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)instanceCreators.get(typeToken);  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)instanceCreators.get(typeToken);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)instanceCreators.get(typeToken);	  final    Class    <?    super    T>    rawTypeCreator    =(Class    <?    super    T>)instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
446	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)outputCreators.get(type);  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)outputCreators.get(type);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)outputCreators.get(type);	  final    Class    <?    super    T>    rawTypeCreator    =(Class    <?    super    T>)instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
447	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  rawTypeToken.isInterface())  {  [CE]  cannot  find  symbol  rawTypeToken  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  rawTypeToken.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  rawTypeToken.isInterface())  {	  if(typeCreator!=    null    &&    typeToken.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	60	None	replace
448	[BUG]  [BUGGY]  if(typeCreator  ==  null  &&  typeCreator.isConstructor())  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  &&  typeCreator.isConstructor())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  &&  typeCreator.isConstructor())  {	  if(typeCreator    ==    null    &&    typeCreator.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
449	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  rawTypeToken.isInstance())  {  [CE]  cannot  find  symbol  rawTypeToken  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  rawTypeToken.isInstance())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  rawTypeToken.isInstance())  {	  if(typeCreator!=    null    &&    typeToken.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	66	None	replace
450	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  typeCreator  ==  null)  {  if(typeCreator  >>  null  ||  typeCreator  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  ||  typeCreator  ==  null)  {  if(typeCreator  >>  null  ||  typeCreator  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=    null    ||    typeCreator    ==    null)    {    if(typeCreator  >>  null  ||  typeCreator  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
451	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  this.typeCreator!=  null)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]              NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  this.typeCreator!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  this.typeCreator!=  null)  {	  if(typeCreator    ==    null)    {    if(typeCreator    ==    null    ||    rawTypeCreator!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	12	None	replace
452	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator.isAssignedFrom(rawType))  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator.isAssignedFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  typeCreator.isAssignedFrom(rawType))  {	  if(rawTypeCreator    ==    null    ||    typeCreator.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	7	None	replace
453	[BUG]  [BUGGY]  if(rawTypeCapacity!=  null  &&  typeCreator.hasInstanceType())  {  [CE]  cannot  find  symbol  rawTypeCapacity  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCapacity!=  null  &&  typeCreator.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCapacity!=  null  &&  typeCreator.hasInstanceType())  {	  if(typeCreator!=    null    &&    rawType.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCapacity	22	None	replace
454	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  &&  classType.hasInstanceType())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  &&  classType.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  &&  classType.hasInstanceType())  {	  if(typeCreator!=    null    &&    rawType.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	22	None	replace
455	[BUG]  [BUGGY]  if(processor  ==  null  ||  typeCreator.isConstructor())  {  [CE]  cannot  find  symbol  processor  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(processor  ==  null  ||  typeCreator.isConstructor())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(processor  ==  null  ||  typeCreator.isConstructor())  {	  if(rawTypeCreator    ==    null    ||    typeCreator.isConstructor())    {    	non-compiled	[CE]  cannot  find  symbol  processor	8	None	replace
456	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  typeCreator  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(typeCreator!=  null  &&  typeCreator  ==  null)  {	  if(typeCreator!=    null    ||    typeCreator    ==    null)    {    	compilable	  [FE]  ClassCastException  	26	2	replace
457	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  typeCreator  ==  null)  {  [FE]  ClassCastException  [FE]    NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  typeCreator  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  typeCreator  ==  null)  {	  if(typeCreator!=    null    ||    typeCreator    ==    null)    {    	compilable	  [FE]  ClassCastException  	26	2	replace
458	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  bufferedTypeCreator  ==  null)  {  [CE]  cannot  find  symbol  bufferedTypeCreator  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  bufferedTypeCreator  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  bufferedTypeCreator  ==  null)  {	  if(typeCreator    ==    null    ||    rawTypeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  bufferedTypeCreator	30	None	replace
459	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  defaultConstructor  ==  null)  {  [CE]  cannot  find  symbol  defaultConstructor  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  defaultConstructor  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  defaultConstructor  ==  null)  {	  if(typeCreator    ==    null    ||    rawTypeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	30	None	replace
460	[BUG]  [BUGGY]  if(instanceCreators!=  null)  {  If(instanceCreators!=  null)  {  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(instanceCreators!=  null)  {  If(instanceCreators!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(instanceCreators!=    null)    {    If(instanceCreators!=  null)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
461	[BUG]  [BUGGY]  if(instanceCreators!=  null)  {  if(instanceCreators  >>  null)  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(instanceCreators!=  null)  {  if(instanceCreators  >>  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(instanceCreators!=    null)    {    if(instanceCreators  >>  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
462	[BUG]  [BUGGY]  if(instanceCreators!=  null)  {  if(instanceCreators  [BUGGY]  null)  {  [CE]  ')'  expected  [FE]        NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(instanceCreators!=  null)  {  if(instanceCreators  [BUGGY]  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(instanceCreators!=    null)    {    if(instanceCreators  [BUGGY]  null)  {	  	non-compiled	[CE]  ')'  expected	3	None	add
463	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  rawType.isInterface())  {  if(typeCreator!=  null  &&  rawType.isInterface()  ||  typeCreator.isInterface())  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  rawType.isInterface())  {  if(typeCreator!=  null  &&  rawType.isInterface()  ||  typeCreator.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=    null    &&    rawType.isInterface())    {    if(typeCreator!=  null  &&  rawType.isInterface()  ||  typeCreator.isInterface())  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
464	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  rawType.isInterface())  {  if(typeCreator!=  null  &&  rawType.isInterface())  <  return  new  ObjectConstructor  <  T>()  {  [CE]  illegal  start  of  type  [FE]      ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  rawType.isInterface())  {  if(typeCreator!=  null  &&  rawType.isInterface())  <  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=    null    &&    rawType.isInterface())    {    if(typeCreator!=  null  &&  rawType.isInterface())  <  return  new  ObjectConstructor  <  T>()  {	  	non-compiled	[CE]  illegal  start  of  type	93	None	add
465	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  defaultConstructor.isInstance())  {  [CE]  cannot  find  symbol  defaultConstructor  [FE]        NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  defaultConstructor.isInstance())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  defaultConstructor.isInstance())  {	  if(typeCreator    ==    null    ||    rawTypeCreator.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	107	None	replace
466	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  defaultConstructor.isInterface())  {  [CE]  cannot  find  symbol  defaultConstructor  [FE]          NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  defaultConstructor.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  defaultConstructor.isInterface())  {	  if(typeCreator    ==    null    ||    rawTypeCreator.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	108	None	replace
467	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  defaultConstructor!=  defaultConstructor)  {  [CE]  cannot  find  symbol  defaultConstructor  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  defaultConstructor!=  defaultConstructor)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  defaultConstructor!=  defaultConstructor)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    defaultConstructor)    {    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	130	None	replace
468	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  typeCreator!=  defaultConstructor)  {  [CE]  cannot  find  symbol  defaultConstructor  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(defaultConstructor  ==  null  ||  typeCreator!=  defaultConstructor)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(defaultConstructor  ==  null  ||  typeCreator!=  defaultConstructor)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    defaultConstructor)    {    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	130	None	replace
469	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  rawTypeCreator.isConstructor())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  rawTypeCreator.isConstructor())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  rawTypeCreator.isConstructor())  {	  if(typeCreator    >=    null)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	2	None	replace
470	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  rawTypeCreator.isUnknownType())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  rawTypeCreator.isUnknownType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  rawTypeCreator.isUnknownType())  {	  if(typeCreator    >=    null)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	2	None	replace
471	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawType.equals(typeCreator))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(rawType.equals(typeCreator))  {	  if(typeCreator    ==    null)    {    if(typeCreator!=    null)    {    	compilable	  [FE]  ClassCastException  	10	2	replace
472	[BUG]  [BUGGY]  if(rawType.equals(typeCreator))  {  [FE]  ClassCastException  [FE]          NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawType.equals(typeCreator))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawType.equals(typeCreator))  {	  if(typeCreator    ==    null)    {    if(typeCreator!=    null)    {    	compilable	  [FE]  ClassCastException  	10	2	replace
473	[BUG]  [BUGGY]  if(typeToken!=  null  &&  typeToken.isInterface())  {  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeToken!=  null  &&  typeToken.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeToken!=  null  &&  typeToken.isInterface())  {	  if(typeCreator!=    null    &&    typeToken.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
474	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeCreator.equals(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(typeCreator  ==  null  ||  typeCreator.equals(rawType))  {	  if(typeCreator    ==    null    ||    typeCreator.isInterface())    {    	compilable	  [FE]  NullPointerException  	41	22	replace
475	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeCreator.equals(rawType))  {  [FE]  NullPointerException  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeCreator.equals(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  typeCreator.equals(rawType))  {	  if(typeCreator    ==    null    ||    typeCreator.isInterface())    {    	compilable	  [FE]  NullPointerException  	41	22	replace
476	[BUG]  [BUGGY]  if(defaultImplementation  ==  null  ||  typeCreator!=  defaultImplementation)  {  [CE]  cannot  find  symbol  defaultImplementation  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(defaultImplementation  ==  null  ||  typeCreator!=  defaultImplementation)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(defaultImplementation  ==  null  ||  typeCreator!=  defaultImplementation)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    defaultImplementation)    {    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	33	None	replace
477	[BUG]  [BUGGY]  if(resultTypeCreator!=  null  &&  typeCreator.isInterface())  {  [CE]  cannot  find  symbol  resultTypeCreator  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(resultTypeCreator!=  null  &&  typeCreator.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(resultTypeCreator!=  null  &&  typeCreator.isInterface())  {	  if(rawTypeCreator!=    null    &&    rawTypeCreator.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  resultTypeCreator	95	None	replace
478	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  defaultConstructor  ==  null)  {  [CE]  cannot  find  symbol  defaultConstructor  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  ||  defaultConstructor  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  ||  defaultConstructor  ==  null)  {	  if(typeCreator!=    null    ||    rawTypeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	29	None	replace
479	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  ||  rawType.isPrimitive())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(typeCreator!=  null  ||  rawType.isPrimitive())  {	  if(typeCreator!=    null    ||    rawTypeCreator    ==    null)    {    	compilable	  [FE]  ClassCastException  	29	2	replace
480	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  rawType.isPrimitive())  {  [FE]  ClassCastException  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  ||  rawType.isPrimitive())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  ||  rawType.isPrimitive())  {	  if(typeCreator!=    null    ||    rawTypeCreator    ==    null)    {    	compilable	  [FE]  ClassCastException  	29	2	replace
481	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeCreator  ==  null)  {  if(typeCrator  ==  null  ||  typeCreator  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeCreator  ==  null)  {  if(typeCrator  ==  null  ||  typeCreator  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator    ==    null    ||    typeCreator    ==    null)    {    if(typeCrator  ==  null  ||  typeCreator  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
482	[BUG]  [BUGGY]  if(typeToken!=  null  ||  typeToken.isInterface())  {  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeToken!=  null  ||  typeToken.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeToken!=  null  ||  typeToken.isInterface())  {	  if(typeCreator!=    null    ||    typeToken.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
483	[BUG]  [BUGGY]  if(primaryTypeCreator  ==  null  ||  typeCreator  ==  null)  {  [CE]  cannot  find  symbol  primaryTypeCreator  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(primaryTypeCreator  ==  null  ||  typeCreator  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(primaryTypeCreator  ==  null  ||  typeCreator  ==  null)  {	  if(rawTypeCreator    ==    null    ||    typeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  primaryTypeCreator	24	None	replace
484	[BUG]  [BUGGY]  if(rafTypeCreator  ==  null  ||  typeCreator  ==  null)  {  [CE]  cannot  find  symbol  rafTypeCreator  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rafTypeCreator  ==  null  ||  typeCreator  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rafTypeCreator  ==  null  ||  typeCreator  ==  null)  {	  if(rawTypeCreator    ==    null    ||    typeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  rafTypeCreator	24	None	replace
485	[BUG]  [BUGGY]  if(resultTypeCreator!=  null  &&  typeCreator.hasInstanceType())  {  [CE]  cannot  find  symbol  resultTypeCreator  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(resultTypeCreator!=  null  &&  typeCreator.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(resultTypeCreator!=  null  &&  typeCreator.hasInstanceType())  {	  if(rawTypeCreator!=    null    &&    typeCreator.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol  resultTypeCreator	18	None	replace
486	[BUG]  [BUGGY]  if(rafTypeCreator!=  null  &&  typeCreator.hasInstanceType())  {  [CE]  cannot  find  symbol  rafTypeCreator  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rafTypeCreator!=  null  &&  typeCreator.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rafTypeCreator!=  null  &&  typeCreator.hasInstanceType())  {	  if(rawTypeCreator!=    null    &&    typeCreator.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol  rafTypeCreator	18	None	replace
487	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  rawType.isInterface())  {  if(typeCreator!=  null  ||  rawType.isinterface())  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  ||  rawType.isInterface())  {  if(typeCreator!=  null  ||  rawType.isinterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=    null    ||    rawType.isInterface())    {    if(typeCreator!=  null  ||  rawType.isinterface())  {	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
488	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  rawTypeCreator)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  rawTypeCreator)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  typeCreator!=  rawTypeCreator)  {	  if(typeCreator    ==    null    ||    typeCreator!=    unsafeAllocator)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	34	None	replace
489	[BUG]  [BUGGY]  if(primaryTypeCreator!=  null  &&  instanceCreators.hasInstanceType())  {  [CE]  cannot  find  symbol  primaryTypeCreator  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(primaryTypeCreator!=  null  &&  instanceCreators.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(primaryTypeCreator!=  null  &&  instanceCreators.hasInstanceType())  {	  if(rawTypeCreator!=    null    &&    instanceCreators.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol  primaryTypeCreator	74	None	replace
490	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawType.isPrimitive())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(rawType.isPrimitive())  {	  if(typeCreator    ==    null)    {    if(typeCreator    ==    null    ||    rawType.isPrimitive())    {    	compilable	  [FE]  ClassCastException  	122	2	replace
491	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  [FE]  ClassCastException  [FE]          NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawType.isPrimitive())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawType.isPrimitive())  {	  if(typeCreator    ==    null)    {    if(typeCreator    ==    null    ||    rawType.isPrimitive())    {    	compilable	  [FE]  ClassCastException  	122	2	replace
492	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawType.isPrimitive()  ||  typeCreator  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(rawType.isPrimitive()  ||  typeCreator  ==  null)  {	  if(typeCreator    ==    null)    {    if(typeCreator    ==    null    ||    rawType.isPrimitive())    {    	compilable	  [FE]  NullPointerException  	122	22	replace
493	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  typeCreator  ==  null)  {  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawType.isPrimitive()  ||  typeCreator  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawType.isPrimitive()  ||  typeCreator  ==  null)  {	  if(typeCreator    ==    null)    {    if(typeCreator    ==    null    ||    rawType.isPrimitive())    {    	compilable	  [FE]  NullPointerException  	122	22	replace
494	[BUG]  [BUGGY]  if(rhinoTypeCreator  ==  null  ||  typeCreator!=  null)  {  [CE]  cannot  find  symbol  rhinoTypeCreator  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rhinoTypeCreator  ==  null  ||  typeCreator!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rhinoTypeCreator  ==  null  ||  typeCreator!=  null)  {	  if(primaryTypeCreator    ==    null    ||    typeCreator!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  rhinoTypeCreator	81	None	replace
495	[BUG]  [BUGGY]  if(typeCreator  ==  null  &&  typeCreator.canInstanceType())  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  &&  typeCreator.canInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  &&  typeCreator.canInstanceType())  {	  if(typeCreator    ==    null    &&    typeCreator.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
496	[BUG]  [BUGGY]  if(typeCreator  ==  null  &&  typeCreator.isInstanceType())  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  &&  typeCreator.isInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  &&  typeCreator.isInstanceType())  {	  if(typeCreator    ==    null    &&    typeCreator.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
497	[BUG]  [BUGGY]  if(resultTypeCreator!=  null  &&  typeCreator.isInstance())  {  [CE]  cannot  find  symbol  resultTypeCreator  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(resultTypeCreator!=  null  &&  typeCreator.isInstance())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(resultTypeCreator!=  null  &&  typeCreator.isInstance())  {	  if(rawTypeCreator!=    null    &&    typeCreator.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol  resultTypeCreator	62	None	replace
498	[BUG]  [BUGGY]  if(rafTypeCreator!=  null  &&  typeCreator.isInstance())  {  [CE]  cannot  find  symbol  rafTypeCreator  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rafTypeCreator!=  null  &&  typeCreator.isInstance())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rafTypeCreator!=  null  &&  typeCreator.isInstance())  {	  if(rawTypeCreator!=    null    &&    typeCreator.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol  rafTypeCreator	62	None	replace
499	[BUG]  [BUGGY]  if(sourceCreator!=  null  &&  typeCreator.isInstance())  {  [CE]  cannot  find  symbol  sourceCreator  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(sourceCreator!=  null  &&  typeCreator.isInstance())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(sourceCreator!=  null  &&  typeCreator.isInstance())  {	  if(rawTypeCreator!=    null    &&    typeCreator.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol  sourceCreator	62	None	replace
500	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  this.typeCreator  ==  null)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]            NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  this.typeCreator  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  this.typeCreator  ==  null)  {	  if(typeCreator    ==    null)    {    if(typeCreator    ==    null    ||    rawTypeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	11	None	replace
501	[BUG]  [BUGGY]  if(resultTypeCreator!=  null  ||  rawTypeCreator  ==  null)  {  [CE]  cannot  find  symbol  resultTypeCreator  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(resultTypeCreator!=  null  ||  rawTypeCreator  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(resultTypeCreator!=  null  ||  rawTypeCreator  ==  null)  {	  if(rawTypeCreator!=    null    ||    rawTypeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  resultTypeCreator	90	None	replace
502	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(typeToken);  [CE]  illegal  start  of  type  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(typeToken);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(typeToken);	  final    InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
503	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  <  T>)instanceCreators.get(type);  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  <  T>)instanceCreators.get(type);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  <  T>)instanceCreators.get(type);	  final    InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
504	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  instanceCreators.containsKey(typeToken.toString()))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(typeCreator!=  null  &&  instanceCreators.containsKey(typeToken.toString()))  {	  if(typeCreator!=    null    &&    instanceCreators.isInterface())    {    	compilable	  [FE]  ClassCastException  	57	2	replace
505	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  instanceCreators.containsKey(typeToken.toString()))  {  [FE]  ClassCastException  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  instanceCreators.containsKey(typeToken.toString()))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  instanceCreators.containsKey(typeToken.toString()))  {	  if(typeCreator!=    null    &&    instanceCreators.isInterface())    {    	compilable	  [FE]  ClassCastException  	57	2	replace
506	[BUG]  [BUGGY]  if(rerawTypeCreator!=  null)  {  [CE]  cannot  find  symbol  rerawTypeCreator  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rerawTypeCreator!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rerawTypeCreator!=  null)  {	  if(resultTypeCreator!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  rerawTypeCreator	1	None	replace
507	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  factory.isInterface())  {  [CE]  cannot  find  symbol  factory  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  factory.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  factory.isInterface())  {	  if(typeCreator!=    null    &&    defaultConstructor.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  factory	123	None	replace
508	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  method.isInterface())  {  [CE]  cannot  find  symbol  method  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  method.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  method.isInterface())  {	  if(typeCreator!=    null    &&    defaultConstructor.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  method	123	None	replace
509	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawType.equals(typeToken))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(rawType.equals(typeToken))  {	  if(typeCreator    ==    null)    {    if(typeCreator    ==    null    ||    rawType.equals(typeToken))    {    	compilable	  [FE]  ClassCastException  	121	2	replace
510	[BUG]  [BUGGY]  if(rawType.equals(typeToken))  {  [FE]  ClassCastException  [FE]        NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawType.equals(typeToken))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawType.equals(typeToken))  {	  if(typeCreator    ==    null)    {    if(typeCreator    ==    null    ||    rawType.equals(typeToken))    {    	compilable	  [FE]  ClassCastException  	121	2	replace
511	[BUG]  [BUGGY]  if(rawTypeToken  ==  null)  {  [CE]  cannot  find  symbol  rawTypeToken  [FE]          NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeToken  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeToken  ==  null)  {	  if(typeCreator    ==    null)    {    if(typeCreator    ==    null    ||    rawType.equals(typeToken))    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	121	None	replace
512	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeToken  ==  null  ||  typeCreator  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(typeToken  ==  null  ||  typeCreator  ==  null)  {	  if(typeToken    ==    null    ||    typeCreator!=    null)    {    	compilable	  [FE]  NullPointerException  	53	22	replace
513	[BUG]  [BUGGY]  if(typeToken  ==  null  ||  typeCreator  ==  null)  {  [FE]  NullPointerException  [FE]    ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeToken  ==  null  ||  typeCreator  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeToken  ==  null  ||  typeCreator  ==  null)  {	  if(typeToken    ==    null    ||    typeCreator!=    null)    {    	compilable	  [FE]  NullPointerException  	53	22	replace
514	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  rawType.equals(typeToken))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(typeCreator  ==  null  ||  rawType.equals(typeToken))  {	  if(typeToken    ==    null    ||    typeCreator!=    null)    {    	compilable	  [FE]  NullPointerException  	53	22	replace
515	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  rawType.equals(typeToken))  {  [FE]  NullPointerException  [FE]      ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  rawType.equals(typeToken))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  rawType.equals(typeToken))  {	  if(typeToken    ==    null    ||    typeCreator!=    null)    {    	compilable	  [FE]  NullPointerException  	53	22	replace
516	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeToken!=  null  ||  typeCreator  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(typeToken!=  null  ||  typeCreator  ==  null)  {	  if(typeToken    ==    null    ||    typeCreator!=    null)    {    	compilable	  [FE]  NullPointerException  	53	22	replace
517	[BUG]  [BUGGY]  if(typeToken!=  null  ||  typeCreator  ==  null)  {  [FE]  NullPointerException  [FE]        ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeToken!=  null  ||  typeCreator  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeToken!=  null  ||  typeCreator  ==  null)  {	  if(typeToken    ==    null    ||    typeCreator!=    null)    {    	compilable	  [FE]  NullPointerException  	53	22	replace
518	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  rawType.isInstance()  &&  typeToken.isInterface())  {  [CE]  method  isInstance  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  rawType.isInstance()  &&  typeToken.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  rawType.isInstance()  &&  typeToken.isInterface())  {	  if(typeCreator!=    null    &&    rawType.isInstance())    {    	non-compiled	[CE]  method  isInstance  in  class  Class<T>  cannot  be  applied  to  given  types;	67	None	replace
519	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  rawType.isInstance()  &&  typeToken.isPrimitive())  {  [CE]  method  isInstance  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  rawType.isInstance()  &&  typeToken.isPrimitive())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  rawType.isInstance()  &&  typeToken.isPrimitive())  {	  if(typeCreator!=    null    &&    rawType.isInstance())    {    	non-compiled	[CE]  method  isInstance  in  class  Class<T>  cannot  be  applied  to  given  types;	67	None	replace
520	[BUG]  [BUGGY]  if(rafTypeCreator!=  null  ||  typeCreator!=  null)  {  [CE]  cannot  find  symbol  rafTypeCreator  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rafTypeCreator!=  null  ||  typeCreator!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rafTypeCreator!=  null  ||  typeCreator!=  null)  {	  if(rawTypeCreator!=    null    ||    rawTypeCreator!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  rafTypeCreator	76	None	replace
521	[BUG]  [BUGGY]  Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)instanceCreators.get(rawType,  typeCreator);  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)instanceCreators.get(rawType,  typeCreator);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)instanceCreators.get(rawType,  typeCreator);	  Class    <?    super    T>    rawTypeCreator    =(Class    <?    super    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
522	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator!=  unsafeTypeCreator)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator!=  unsafeTypeCreator)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  typeCreator!=  unsafeTypeCreator)  {	  if(typeCreator    ==    null    ||    rawType!=    typeCreator)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	35	None	replace
523	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  factory.hasInstanceType())  {  [CE]  cannot  find  symbol  factory  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  factory.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  factory.hasInstanceType())  {	  if(typeCreator!=    null    &&    defaultConstructor.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol  factory	119	None	replace
524	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  types.hasInstanceType())  {  [CE]  cannot  find  symbol  types  [FE]              NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  types.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  types.hasInstanceType())  {	  if(typeCreator    ==    null    ||    rawTypeCreator.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol  types	110	None	replace
525	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  factory.isInstance())  {  [CE]  cannot  find  symbol  factory  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  factory.isInstance())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  factory.isInstance())  {	  if(typeCreator!=    null    &&    defaultConstructor.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol  factory	78	None	replace
526	[BUG]  [BUGGY]  if(rafTypeCreator!=  null  ||  typeCreator  ==  null)  {  [CE]  cannot  find  symbol  rafTypeCreator  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rafTypeCreator!=  null  ||  typeCreator  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rafTypeCreator!=  null  ||  typeCreator  ==  null)  {	  if(resultTypeCreator!=    null    ||    typeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  rafTypeCreator	106	None	replace
527	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  parent.isConstructor())  {  [CE]  cannot  find  symbol  parent  [FE]            NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  parent.isConstructor())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  parent.isConstructor())  {	  if(typeCreator    ==    null    ||    rawTypeCreator.isConstructor())    {    	non-compiled	[CE]  cannot  find  symbol  parent	109	None	replace
528	[BUG]  [BUGGY]  if(rerawTypeCreator  ==  null)  {  [CE]  cannot  find  symbol  rerawTypeCreator  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rerawTypeCreator  ==  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rerawTypeCreator  ==  null)  {	  if(primaryTypeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  rerawTypeCreator	85	None	replace
529	[BUG]  [BUGGY]  if(primaryTypeCreator  ==  null  ||  rawTypeCreator!=  null)  {  [CE]  cannot  find  symbol  primaryTypeCreator  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(primaryTypeCreator  ==  null  ||  rawTypeCreator!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(primaryTypeCreator  ==  null  ||  rawTypeCreator!=  null)  {	  if(rawTypeCreator    ==    null    ||    rawTypeCreator!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  primaryTypeCreator	80	None	replace
530	[BUG]  [BUGGY]  Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)this.instanceCreators.get(type);  [CE]  illegal  start  of  type  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)this.instanceCreators.get(type);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)this.instanceCreators.get(type);	  Class    <?    super    T>    rawTypeCreator    =(Class    <?    super    T>)instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
531	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  typeCreator.canInstance())  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  typeCreator.canInstance())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  typeCreator.canInstance())  {	  if(typeCreator!=    null    &&    typeCreator.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
532	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  unsafeAllocator)  {  [CE]  cannot  find  symbol  unsafeAllocator  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  unsafeAllocator)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  unsafeAllocator)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    unsafeAllocator)    {    	non-compiled	[CE]  cannot  find  symbol  unsafeAllocator	32	None	replace
533	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  bufferedTypeCreator!=  null)  {  [CE]  cannot  find  symbol  bufferedTypeCreator  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  bufferedTypeCreator!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  bufferedTypeCreator!=  null)  {	  if(typeCreator    ==    null    ||    rawTypeCreator!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  bufferedTypeCreator	51	None	replace
534	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  oldTypeCreator!=  null)  {  [CE]  cannot  find  symbol  oldTypeCreator  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  oldTypeCreator!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  oldTypeCreator!=  null)  {	  if(typeCreator    ==    null    ||    rawTypeCreator!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  oldTypeCreator	51	None	replace
535	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  defaultConstructor!=  null)  {  [CE]  cannot  find  symbol  defaultConstructor  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  defaultConstructor!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  defaultConstructor!=  null)  {	  if(typeCreator    ==    null    ||    rawTypeCreator!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	51	None	replace
536	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  typeCreator!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(typeCreator!=  null  &&  typeCreator!=  null)  {	  if(typeCreator!=    null    ||    typeCreator!=    null)    {    	compilable	  [FE]  ClassCastException  	47	2	replace
537	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  typeCreator!=  null)  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  typeCreator!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  typeCreator!=  null)  {	  if(typeCreator!=    null    ||    typeCreator!=    null)    {    	compilable	  [FE]  ClassCastException  	47	2	replace
538	[BUG]  [BUGGY]  if(instanceCreators  ==  null)  {  if(instanceCreators  {  null)  {  [CE]  ')'  expected  [FE]    ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(instanceCreators  ==  null)  {  if(instanceCreators  {  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(instanceCreators    ==    null)    {    if(instanceCreators  {  null)  {	  	non-compiled	[CE]  ')'  expected	86	None	add
539	[BUG]  [BUGGY]  if(rawType.isUnsafeAllocator()  ||  typeCreator.isUnsafeAllocator())  {  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawType.isUnsafeAllocator()  ||  typeCreator.isUnsafeAllocator())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawType.isUnsafeAllocator()  ||  typeCreator.isUnsafeAllocator())  {	  if(typeCreator    ==    null    ||    rawType.isUnsafeAllocator())    {    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
540	[BUG]  [BUGGY]  if(rawType  >>  null  ||  typeCreator.isUnsafeAllocator())  {  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]          NullPointerException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawType  >>  null  ||  typeCreator.isUnsafeAllocator())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawType  >>  null  ||  typeCreator.isUnsafeAllocator())  {	  if(typeCreator    ==    null    ||    rawType.isUnsafeAllocator())    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	37	None	replace
541	[BUG]  [BUGGY]  if(processorCreator!=  null)  {  [CE]  cannot  find  symbol  processorCreator  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(processorCreator!=  null)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(processorCreator!=  null)  {	  if(rafTypeCreator!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  processorCreator	82	None	replace
542	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator.isUnsafeInstance())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator.isUnsafeInstance())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  typeCreator.isUnsafeInstance())  {	  if(rawTypeCreator    ==    null    ||    typeCreator.isUnsafeAllocator())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	6	None	replace
543	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  instanceCreators)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(typeCreator  ==  null  ||  typeCreator!=  instanceCreators)  {	  if(typeCreator    ==    null    ||    rawTypeCreator!=    typeCreator)    {    	compilable	  [FE]  NullPointerException  	103	22	replace
544	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  instanceCreators)  {  [FE]  NullPointerException  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  instanceCreators)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  typeCreator!=  instanceCreators)  {	  if(typeCreator    ==    null    ||    rawTypeCreator!=    typeCreator)    {    	compilable	  [FE]  NullPointerException  	103	22	replace
545	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  sourceType)  {  [CE]  cannot  find  symbol  sourceType  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  sourceType)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  typeCreator!=  sourceType)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    sourceType)    {    	non-compiled	[CE]  cannot  find  symbol  sourceType	105	None	replace
546	[BUG]  [BUGGY]  final  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);	  ObjectConstructor    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
547	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  typeCreator);  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  typeCreator);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  typeCreator);	  ObjectConstructor    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
548	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  instanceCreators.hasInstance(typeToken))  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  instanceCreators.hasInstance(typeToken))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  instanceCreators.hasInstance(typeToken))  {	  if(typeCreator!=    null    &&    instanceCreators.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
549	[BUG]  [BUGGY]  if(targetTypeCreator  ==  null  ||  typeCreator!=  targetTypeCreator)  {  [CE]  cannot  find  symbol  targetTypeCreator  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(targetTypeCreator  ==  null  ||  typeCreator!=  targetTypeCreator)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(targetTypeCreator  ==  null  ||  typeCreator!=  targetTypeCreator)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    targetTypeCreator)    {    	non-compiled	[CE]  cannot  find  symbol  targetTypeCreator	131	None	replace
550	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  targetTypeCreator!=  rawTypeCreator)  {  [CE]  cannot  find  symbol  targetTypeCreator  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  targetTypeCreator!=  rawTypeCreator)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  targetTypeCreator!=  rawTypeCreator)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    targetTypeCreator)    {    	non-compiled	[CE]  cannot  find  symbol  targetTypeCreator	131	None	replace
551	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  rawTypeCreator.isUnknownType())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator  ==  null  ||  rawTypeCreator.isUnknownType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  rawTypeCreator.isUnknownType())  {	  if(rafTypeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	84	None	replace
552	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  &&  factory.isInterface())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(rawTypeCreator!=  null  &&  factory.isInterface())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  &&  factory.isInterface())  {	  if(typeCreator!=    null    &&    typeTypeCreator.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	59	None	replace
553	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(0);  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(0);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(0);	  final    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
554	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawSuperType();  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawSuperType();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawSuperType();	  final    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
555	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawSuperClass();  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawSuperClass();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawSuperClass();	  final    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
556	[BUG]  [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)instanceCreators.get(rawType,  typeCreator);  [CE]  illegal  start  of  type  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)instanceCreators.get(rawType,  typeCreator);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)instanceCreators.get(rawType,  typeCreator);	  Constructor    <    T>    rawTypeCreator    =(Constructor    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
557	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  instanceCreators.isInstanceType())  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  instanceCreators.isInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  instanceCreators.isInstanceType())  {	  if(typeCreator!=    null    &&    instanceCreators.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
558	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  constructor.hasInstanceType())  {  [CE]  cannot  find  symbol  constructor  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);      [BUGGY]  if(typeCreator!=  null  &&  constructor.hasInstanceType())  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  constructor.hasInstanceType())  {	  if(typeCreator!=    null    &&    context.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol  constructor	120	None	replace
