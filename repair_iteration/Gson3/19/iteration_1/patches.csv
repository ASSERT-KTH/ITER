bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(resultTypeCreator!=  null)  {  [CE]  cannot  find  symbol  resultTypeCreator  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(resultTypeCreator!=  null)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(resultTypeCreator!=  null)  {	  if(rawTypeCreator!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  resultTypeCreator	2	None	replace
2	[BUG]  [BUGGY]  if(typeCreator  >=  null)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator  >=  null)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  >=  null)  {	  if(rawTypeCreator!=    null)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	2	None	replace
3	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(instanceCreators!=  null)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(instanceCreators!=  null)  {	  if(rawTypeCreator!=    null)    {    	compilable	  [FE]  NullPointerException  	2	22	replace
4	[BUG]  [BUGGY]  if(instanceCreators!=  null)  {  [FE]  NullPointerException  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(instanceCreators!=  null)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(instanceCreators!=  null)  {	  if(rawTypeCreator!=    null)    {    	compilable	  [FE]  NullPointerException  	2	22	replace
5	[BUG]  [BUGGY]  if(resultTypeCreator  ==  null)  {  [CE]  cannot  find  symbol  resultTypeCreator  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(resultTypeCreator  ==  null)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(resultTypeCreator  ==  null)  {	  if(rawTypeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  resultTypeCreator	1	None	replace
6	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator.isUnsafeAllocator())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator.isUnsafeAllocator())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  typeCreator.isUnsafeAllocator())  {	  if(rawTypeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	1	None	replace
7	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  typeCreator.isAssignableFrom(rawType))  {	  if(rawTypeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	1	None	replace
8	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator.isConstructor())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator.isConstructor())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  typeCreator.isConstructor())  {	  if(rawTypeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	1	None	replace
9	[BUG]  [BUGGY]  if(typeCreator  ==  null)  {  if(typeCreator  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator  ==  null)  {  if(typeCreator  ==  null)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator    ==    null)    {    if(typeCreator  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
10	[BUG]  [BUGGY]  if(typeCreator  ==  null)  {  if(typeCreator!=  null)  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator  ==  null)  {  if(typeCreator!=  null)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator    ==    null)    {    if(typeCreator!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
11	[BUG]  [BUGGY]  if(typeCreator  ==  null)  {  if(typeCreator  ==  null  ||  rawTypeCreator  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator  ==  null)  {  if(typeCreator  ==  null  ||  rawTypeCreator  ==  null)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator    ==    null)    {    if(typeCreator  ==  null  ||  rawTypeCreator  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
12	[BUG]  [BUGGY]  if(typeCreator  ==  null)  {  if(typeCreator  ==  null  ||  rawTypeCreator!=  null)  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator  ==  null)  {  if(typeCreator  ==  null  ||  rawTypeCreator!=  null)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator    ==    null)    {    if(typeCreator  ==  null  ||  rawTypeCreator!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
13	[BUG]  [BUGGY]  if(typeCreator  ==  null)  {  if(typeCreator  ==  null  ||  typeCreator.isConstructor())  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator  ==  null)  {  if(typeCreator  ==  null  ||  typeCreator.isConstructor())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator    ==    null)    {    if(typeCreator  ==  null  ||  typeCreator.isConstructor())  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
14	[BUG]  [BUGGY]  if(typeCreator  ==  null)  {  if(typeCreator  ==  null  ||  rawTypeCreator.isConstructor())  {  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator  ==  null)  {  if(typeCreator  ==  null  ||  rawTypeCreator.isConstructor())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator    ==    null)    {    if(typeCreator  ==  null  ||  rawTypeCreator.isConstructor())  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
15	[BUG]  [BUGGY]  if(typeCreator  ==  null)  {  if(rawTypeCreator  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator  ==  null)  {  if(rawTypeCreator  ==  null)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator    ==    null)    {    if(rawTypeCreator  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
16	[BUG]  [BUGGY]  if(typeCreator  ==  null)  {  if(typeCreator  ==  null  ||  typeCreator.isInterface())  {  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator  ==  null)  {  if(typeCreator  ==  null  ||  typeCreator.isInterface())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator    ==    null)    {    if(typeCreator  ==  null  ||  typeCreator.isInterface())  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
17	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  typeCreator.hasInstanceType())  {  [CE]  cannot  find  symbol  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator!=  null  &&  typeCreator.hasInstanceType())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  typeCreator.hasInstanceType())  {	  if(typeCreator!=    null    &&    rawTypeCreator.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
18	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  &&  typeCreator.hasInstanceType())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(rawTypeCreator!=  null  &&  typeCreator.hasInstanceType())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  &&  typeCreator.hasInstanceType())  {	  if(typeCreator!=    null    &&    rawTypeCreator.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	10	None	replace
19	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  instanceCreators.hasInstanceType())  {  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator!=  null  &&  instanceCreators.hasInstanceType())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  instanceCreators.hasInstanceType())  {	  if(typeCreator!=    null    &&    rawTypeCreator.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
20	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  type.hasInstanceType())  {  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator!=  null  &&  type.hasInstanceType())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  type.hasInstanceType())  {	  if(typeCreator!=    null    &&    rawTypeCreator.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
21	[BUG]  [BUGGY]  if(typeCreator  ==  null  &&  typeCreator.hasInstanceType())  {  [CE]  cannot  find  symbol  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator  ==  null  &&  typeCreator.hasInstanceType())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  &&  typeCreator.hasInstanceType())  {	  if(typeCreator!=    null    &&    rawTypeCreator.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
22	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  rawType.hasInstanceType())  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator!=  null  &&  rawType.hasInstanceType())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  rawType.hasInstanceType())  {	  if(typeCreator!=    null    &&    rawTypeCreator.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
23	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  typeToken.hasInstanceType())  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator!=  null  &&  typeToken.hasInstanceType())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  typeToken.hasInstanceType())  {	  if(typeCreator!=    null    &&    rawTypeCreator.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
24	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator  ==  null)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator  ==  null)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  typeCreator  ==  null)  {	  if(rawTypeCreator!=    null    ||    typeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	9	None	replace
25	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator!=  null  ||  typeCreator  ==  null)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(typeCreator!=  null  ||  typeCreator  ==  null)  {	  if(rawTypeCreator!=    null    ||    typeCreator    ==    null)    {    	compilable	  [FE]  NullPointerException  	9	22	replace
26	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  typeCreator  ==  null)  {  [FE]  NullPointerException  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator!=  null  ||  typeCreator  ==  null)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  ||  typeCreator  ==  null)  {	  if(rawTypeCreator!=    null    ||    typeCreator    ==    null)    {    	compilable	  [FE]  NullPointerException  	9	22	replace
27	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator  ==  null  ||  typeCreator  ==  null)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(typeCreator  ==  null  ||  typeCreator  ==  null)  {	  if(rawTypeCreator!=    null    ||    typeCreator    ==    null)    {    	compilable	  [FE]  NullPointerException  	9	22	replace
28	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeCreator  ==  null)  {  [FE]  NullPointerException  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator  ==  null  ||  typeCreator  ==  null)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  typeCreator  ==  null)  {	  if(rawTypeCreator!=    null    ||    typeCreator    ==    null)    {    	compilable	  [FE]  NullPointerException  	9	22	replace
29	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  rawTypeCreator  ==  null)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator!=  null  ||  rawTypeCreator  ==  null)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  ||  rawTypeCreator  ==  null)  {	  if(rawTypeCreator!=    null    ||    typeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	9	None	replace
30	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  rawTypeCreator  ==  null)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator  ==  null  ||  rawTypeCreator  ==  null)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  rawTypeCreator  ==  null)  {	  if(rawTypeCreator!=    null    ||    typeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	9	None	replace
31	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  rawType)  {  [CE]  incomparable  types:  InstanceCreator<T>  and  Class<CAP#1>  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  rawType)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  typeCreator!=  rawType)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    rawType)    {    	non-compiled	[CE]  incomparable  types:  InstanceCreator<T>  and  Class<CAP#1>	6	None	replace
32	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator!=  unsafeAllocator)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator!=  unsafeAllocator)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  typeCreator!=  unsafeAllocator)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    rawType)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	6	None	replace
33	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator!=  defaultImplementation)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator!=  defaultImplementation)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  typeCreator!=  defaultImplementation)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    rawType)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	6	None	replace
34	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  unsafeAllocator)  {  [CE]  cannot  find  symbol  unsafeAllocator  [FE]                      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  unsafeAllocator)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  typeCreator!=  unsafeAllocator)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    rawType)    {    	non-compiled	[CE]  cannot  find  symbol  unsafeAllocator	6	None	replace
35	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  rawType!=  typeCreator)  {  [CE]  incomparable  types:  Class<CAP#1>  and  InstanceCreator<T>  [FE]                        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator  ==  null  ||  rawType!=  typeCreator)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  rawType!=  typeCreator)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    rawType)    {    	non-compiled	[CE]  incomparable  types:  Class<CAP#1>  and  InstanceCreator<T>	6	None	replace
36	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator!=  typeToken)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator!=  typeToken)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  typeCreator!=  typeToken)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    rawType)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	6	None	replace
37	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  rawType.isUnsafeAllocator())  {  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator  ==  null  ||  rawType.isUnsafeAllocator())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  rawType.isUnsafeAllocator())  {	  if(typeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
38	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator.isInterface())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]      NullPointerException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator.isInterface())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  typeCreator.isInterface())  {	  if(typeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	4	None	replace
39	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  typeCreator.isInterface())  {  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator!=  null  ||  typeCreator.isInterface())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  ||  typeCreator.isInterface())  {	  if(typeCreator!=    null    ||    rawTypeCreator.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
40	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  ||  typeCreator.isInterface())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(rawTypeCreator!=  null  ||  typeCreator.isInterface())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  ||  typeCreator.isInterface())  {	  if(typeCreator!=    null    ||    rawTypeCreator.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	13	None	replace
41	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeCreator.isInterface())  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator  ==  null  ||  typeCreator.isInterface())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  typeCreator.isInterface())  {	  if(typeCreator!=    null    ||    rawTypeCreator.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
42	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  type.isInterface())  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator!=  null  ||  type.isInterface())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  ||  type.isInterface())  {	  if(typeCreator!=    null    ||    rawTypeCreator.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
43	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  typeToken.isInterface())  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator!=  null  ||  typeToken.isInterface())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  ||  typeToken.isInterface())  {	  if(typeCreator!=    null    ||    rawTypeCreator.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
44	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator!=  null  ||  rawType.isInterface())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(typeCreator!=  null  ||  rawType.isInterface())  {	  if(typeCreator!=    null    ||    rawTypeCreator.isInterface())    {    	compilable	  [FE]  NullPointerException  	13	18	replace
45	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  rawType.isInterface())  {  [FE]  NullPointerException  [FE]                        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator!=  null  ||  rawType.isInterface())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  ||  rawType.isInterface())  {	  if(typeCreator!=    null    ||    rawTypeCreator.isInterface())    {    	compilable	  [FE]  NullPointerException  	13	18	replace
46	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator!=  null  ||  typeCreator!=  null)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(typeCreator!=  null  ||  typeCreator!=  null)  {	  if(rawTypeCreator!=    null    ||    typeCreator!=    null)    {    	compilable	  [FE]  ClassCastException  	8	2	replace
47	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  typeCreator!=  null)  {  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator!=  null  ||  typeCreator!=  null)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  ||  typeCreator!=  null)  {	  if(rawTypeCreator!=    null    ||    typeCreator!=    null)    {    	compilable	  [FE]  ClassCastException  	8	2	replace
48	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  null)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(typeCreator  ==  null  ||  typeCreator!=  null)  {	  if(rawTypeCreator!=    null    ||    typeCreator!=    null)    {    	compilable	  [FE]  NullPointerException  	8	22	replace
49	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  null)  {  [FE]  NullPointerException  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator  ==  null  ||  typeCreator!=  null)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  typeCreator!=  null)  {	  if(rawTypeCreator!=    null    ||    typeCreator!=    null)    {    	compilable	  [FE]  NullPointerException  	8	22	replace
50	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  rawTypeCreator!=  null)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator!=  null  ||  rawTypeCreator!=  null)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  ||  rawTypeCreator!=  null)  {	  if(rawTypeCreator!=    null    ||    typeCreator!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	8	None	replace
51	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  rawTypeCreator!=  null)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator  ==  null  ||  rawTypeCreator!=  null)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  rawTypeCreator!=  null)  {	  if(rawTypeCreator!=    null    ||    typeCreator!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	8	None	replace
52	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeToken  ==  null  ||  typeCreator!=  null)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(typeToken  ==  null  ||  typeCreator!=  null)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    null)    {    	compilable	  [FE]  ClassCastException  	5	2	replace
53	[BUG]  [BUGGY]  if(typeToken  ==  null  ||  typeCreator!=  null)  {  [FE]  ClassCastException  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeToken  ==  null  ||  typeCreator!=  null)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeToken  ==  null  ||  typeCreator!=  null)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    null)    {    	compilable	  [FE]  ClassCastException  	5	2	replace
54	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  typeCreator.isInterface())  {  [CE]  cannot  find  symbol  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator!=  null  &&  typeCreator.isInterface())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  typeCreator.isInterface())  {	  if(typeCreator!=    null    &&    rawTypeCreator.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
55	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  &&  typeCreator.isInterface())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(rawTypeCreator!=  null  &&  typeCreator.isInterface())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  &&  typeCreator.isInterface())  {	  if(typeCreator!=    null    &&    rawTypeCreator.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	11	None	replace
56	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  type.isInterface())  {  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator!=  null  &&  type.isInterface())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  type.isInterface())  {	  if(typeCreator!=    null    &&    rawTypeCreator.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
57	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  instanceCreators.isInterface())  {  [CE]  cannot  find  symbol  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator!=  null  &&  instanceCreators.isInterface())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  instanceCreators.isInterface())  {	  if(typeCreator!=    null    &&    rawTypeCreator.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
58	[BUG]  [BUGGY]  if(typeCreator  ==  null  &&  typeCreator.isInterface())  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator  ==  null  &&  typeCreator.isInterface())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  &&  typeCreator.isInterface())  {	  if(typeCreator!=    null    &&    rawTypeCreator.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
59	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  typeTypeCreator.isInterface())  {  [CE]  cannot  find  symbol  typeTypeCreator  [FE]                    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator!=  null  &&  typeTypeCreator.isInterface())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  typeTypeCreator.isInterface())  {	  if(typeCreator!=    null    &&    rawTypeCreator.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  typeTypeCreator	11	None	replace
60	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  typeToken.isInterface())  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator!=  null  &&  typeToken.isInterface())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  typeToken.isInterface())  {	  if(typeCreator!=    null    &&    rawTypeCreator.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
61	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  typeCreator.isInstance())  {  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator!=  null  &&  typeCreator.isInstance())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  typeCreator.isInstance())  {	  if(typeCreator!=    null    &&    rawTypeCreator.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
62	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  &&  typeCreator.isInstance())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(rawTypeCreator!=  null  &&  typeCreator.isInstance())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  &&  typeCreator.isInstance())  {	  if(typeCreator!=    null    &&    rawTypeCreator.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	12	None	replace
63	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  type.isInstance())  {  [CE]  cannot  find  symbol  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator!=  null  &&  type.isInstance())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  type.isInstance())  {	  if(typeCreator!=    null    &&    rawTypeCreator.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
64	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  instanceCreators.isInstance())  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator!=  null  &&  instanceCreators.isInstance())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  instanceCreators.isInstance())  {	  if(typeCreator!=    null    &&    rawTypeCreator.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
65	[BUG]  [BUGGY]  if(typeCreator  ==  null  &&  typeCreator.isInstance())  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator  ==  null  &&  typeCreator.isInstance())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  &&  typeCreator.isInstance())  {	  if(typeCreator!=    null    &&    rawTypeCreator.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
66	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  typeToken.isInstance())  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator!=  null  &&  typeToken.isInstance())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  typeToken.isInstance())  {	  if(typeCreator!=    null    &&    rawTypeCreator.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
67	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  rawType.isInstance())  {  [CE]  method  isInstance  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator!=  null  &&  rawType.isInstance())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  rawType.isInstance())  {	  if(typeCreator!=    null    &&    rawTypeCreator.isInstance())    {    	non-compiled	[CE]  method  isInstance  in  class  Class<T>  cannot  be  applied  to  given  types;	12	None	replace
68	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type);  [CE]  illegal  start  of  type  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type);  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
69	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(type);  [CE]  illegal  start  of  type  [FE]                    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(type);  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(type);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
70	[BUG]  [BUGGY]  final  UnsafeAllocator  <  T>  unsafeAllocator  =(UnsafeAllocator  <  T>)instanceCreators.get(type);  [CE]  illegal  start  of  type  [FE]                      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  final  UnsafeAllocator  <  T>  unsafeAllocator  =(UnsafeAllocator  <  T>)instanceCreators.get(type);  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  UnsafeAllocator  <  T>  unsafeAllocator  =(UnsafeAllocator  <  T>)instanceCreators.get(type);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
71	[BUG]  [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)instanceCreators.get(type);  [CE]  illegal  start  of  type  [FE]                        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)instanceCreators.get(type);  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)instanceCreators.get(type);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
72	[BUG]  [BUGGY]  final  UnsafeAllocator  <  T>  unsafeAllocator  =(UnsafeAllocator  <  T>)instanceCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  final  UnsafeAllocator  <  T>  unsafeAllocator  =(UnsafeAllocator  <  T>)instanceCreators.get(rawType);  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  UnsafeAllocator  <  T>  unsafeAllocator  =(UnsafeAllocator  <  T>)instanceCreators.get(rawType);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
73	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
74	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  &&  instanceCreators.hasInstanceType())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(rawTypeCreator!=  null  &&  instanceCreators.hasInstanceType())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  &&  instanceCreators.hasInstanceType())  {	  if(typeCreator!=    null    &&    rawTypeCreator.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	10	None	replace
75	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  &&  rawTypeCreator.hasInstanceType())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(rawTypeCreator!=  null  &&  rawTypeCreator.hasInstanceType())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  &&  rawTypeCreator.hasInstanceType())  {	  if(typeCreator!=    null    &&    rawTypeCreator.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	10	None	replace
76	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  ||  rawTypeCreator!=  null)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(rawTypeCreator!=  null  ||  rawTypeCreator!=  null)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  ||  rawTypeCreator!=  null)  {	  if(rawTypeCreator!=    null    ||    typeCreator!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	8	None	replace
77	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  &&  rawTypeCreator.isInstance())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(rawTypeCreator!=  null  &&  rawTypeCreator.isInstance())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  &&  rawTypeCreator.isInstance())  {	  if(typeCreator!=    null    &&    rawTypeCreator.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	12	None	replace
78	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  defaultConstructor.isInstance())  {  [CE]  cannot  find  symbol  defaultConstructor  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator!=  null  &&  defaultConstructor.isInstance())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  defaultConstructor.isInstance())  {	  if(typeCreator!=    null    &&    rawTypeCreator.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	12	None	replace
79	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  rawTypeCreator  ==  null)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]    NullPointerException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(rawTypeCreator  ==  null  ||  rawTypeCreator  ==  null)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  rawTypeCreator  ==  null)  {	  if(typeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	4	None	replace
80	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  rawTypeCreator!=  null)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(rawTypeCreator  ==  null  ||  rawTypeCreator!=  null)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  rawTypeCreator!=  null)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	5	None	replace
81	[BUG]  [BUGGY]  if(primaryTypeCreator  ==  null  ||  typeCreator!=  null)  {  [CE]  cannot  find  symbol  primaryTypeCreator  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(primaryTypeCreator  ==  null  ||  typeCreator!=  null)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(primaryTypeCreator  ==  null  ||  typeCreator!=  null)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  primaryTypeCreator	5	None	replace
82	[BUG]  [BUGGY]  if(rafTypeCreator!=  null)  {  [CE]  cannot  find  symbol  rafTypeCreator  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(rafTypeCreator!=  null)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rafTypeCreator!=  null)  {	  if(rawTypeCreator!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  rafTypeCreator	2	None	replace
83	[BUG]  [BUGGY]  if(primaryTypeCreator!=  null)  {  [CE]  cannot  find  symbol  primaryTypeCreator  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(primaryTypeCreator!=  null)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(primaryTypeCreator!=  null)  {	  if(rawTypeCreator!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  primaryTypeCreator	2	None	replace
84	[BUG]  [BUGGY]  if(rafTypeCreator  ==  null)  {  [CE]  cannot  find  symbol  rafTypeCreator  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(rafTypeCreator  ==  null)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rafTypeCreator  ==  null)  {	  if(rawTypeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  rafTypeCreator	1	None	replace
85	[BUG]  [BUGGY]  if(primaryTypeCreator  ==  null)  {  [CE]  cannot  find  symbol  primaryTypeCreator  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(primaryTypeCreator  ==  null)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(primaryTypeCreator  ==  null)  {	  if(rawTypeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  primaryTypeCreator	1	None	replace
86	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(instanceCreators  ==  null)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(instanceCreators  ==  null)  {	  if(rawTypeCreator    ==    null)    {    	compilable	  [FE]  ClassCastException  	1	2	replace
87	[BUG]  [BUGGY]  if(instanceCreators  ==  null)  {  [FE]  ClassCastException  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(instanceCreators  ==  null)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(instanceCreators  ==  null)  {	  if(rawTypeCreator    ==    null)    {    	compilable	  [FE]  ClassCastException  	1	2	replace
88	[BUG]  [BUGGY]  if(typeCreator  ==  null)  {  if(typeCreator  ==  null  ||  typeCreator  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator  ==  null)  {  if(typeCreator  ==  null  ||  typeCreator  ==  null)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator    ==    null)    {    if(typeCreator  ==  null  ||  typeCreator  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
89	[BUG]  [BUGGY]  if(typeCreator  ==  null)  {  if(typeCreator  ==  null  ||  typeCreator!=  null)  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator  ==  null)  {  if(typeCreator  ==  null  ||  typeCreator!=  null)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator    ==    null)    {    if(typeCreator  ==  null  ||  typeCreator!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
90	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  ||  rawTypeCreator  ==  null)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(rawTypeCreator!=  null  ||  rawTypeCreator  ==  null)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  ||  rawTypeCreator  ==  null)  {	  if(rawTypeCreator!=    null    ||    typeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	9	None	replace
91	[BUG]  [BUGGY]  if(primaryTypeCreator!=  null  ||  typeCreator  ==  null)  {  [CE]  cannot  find  symbol  primaryTypeCreator  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(primaryTypeCreator!=  null  ||  typeCreator  ==  null)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(primaryTypeCreator!=  null  ||  typeCreator  ==  null)  {	  if(rawTypeCreator!=    null    ||    typeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  primaryTypeCreator	9	None	replace
92	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  ||  rawTypeCreator.isInterface())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(rawTypeCreator!=  null  ||  rawTypeCreator.isInterface())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  ||  rawTypeCreator.isInterface())  {	  if(typeCreator!=    null    ||    rawTypeCreator.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	13	None	replace
93	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator!=  null  &&  rawType.isInterface())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(typeCreator!=  null  &&  rawType.isInterface())  {	  if(typeCreator!=    null    &&    rawTypeCreator.isInterface())    {    	compilable	  [FE]  ClassCastException  	11	2	replace
94	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  rawType.isInterface())  {  [FE]  ClassCastException  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator!=  null  &&  rawType.isInterface())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  rawType.isInterface())  {	  if(typeCreator!=    null    &&    rawTypeCreator.isInterface())    {    	compilable	  [FE]  ClassCastException  	11	2	replace
95	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  &&  rawTypeCreator.isInterface())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(rawTypeCreator!=  null  &&  rawTypeCreator.isInterface())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  &&  rawTypeCreator.isInterface())  {	  if(typeCreator!=    null    &&    rawTypeCreator.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	11	None	replace
96	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  &&  rawType.isInterface())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(rawTypeCreator!=  null  &&  rawType.isInterface())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator!=  null  &&  rawType.isInterface())  {	  if(typeCreator!=    null    &&    rawTypeCreator.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	11	None	replace
97	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType);  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
98	[BUG]  [BUGGY]  Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)instanceCreators.get(type);  [CE]  illegal  start  of  type  [FE]                    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)instanceCreators.get(type);  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)instanceCreators.get(type);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
99	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)instanceCreators.get(type);  [CE]  illegal  start  of  type  [FE]                      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  final  Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)instanceCreators.get(type);  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)instanceCreators.get(type);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
100	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
101	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(typeToken);  [CE]  illegal  start  of  type  [FE]                          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(typeToken);  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(typeToken);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
102	[BUG]  [BUGGY]  Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)instanceCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)instanceCreators.get(rawType);  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)instanceCreators.get(rawType);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
103	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  rawTypeCreator!=  typeCreator)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator  ==  null  ||  rawTypeCreator!=  typeCreator)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  rawTypeCreator!=  typeCreator)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    rawType)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	6	None	replace
104	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  rawTypeCreator!=  typeCreator)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(rawTypeCreator  ==  null  ||  rawTypeCreator!=  typeCreator)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  rawTypeCreator!=  typeCreator)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    rawType)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	6	None	replace
105	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator!=  sourceType)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator!=  sourceType)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  typeCreator!=  sourceType)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    rawType)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	6	None	replace
106	[BUG]  [BUGGY]  if(resultTypeCreator!=  null  ||  typeCreator  ==  null)  {  [CE]  cannot  find  symbol  resultTypeCreator  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(resultTypeCreator!=  null  ||  typeCreator  ==  null)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(resultTypeCreator!=  null  ||  typeCreator  ==  null)  {	  if(rawTypeCreator!=    null    ||    typeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  resultTypeCreator	9	None	replace
107	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  rawTypeCreator.isInstance())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]    NullPointerException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator  ==  null  ||  rawTypeCreator.isInstance())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  rawTypeCreator.isInstance())  {	  if(typeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	4	None	replace
108	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  rawTypeCreator.isInterface())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]      NullPointerException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator  ==  null  ||  rawTypeCreator.isInterface())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  rawTypeCreator.isInterface())  {	  if(typeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	4	None	replace
109	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  rawTypeCreator.isConstructor())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]        NullPointerException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator  ==  null  ||  rawTypeCreator.isConstructor())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  rawTypeCreator.isConstructor())  {	  if(typeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	4	None	replace
110	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  rawTypeCreator.hasInstanceType())  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]          NullPointerException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator  ==  null  ||  rawTypeCreator.hasInstanceType())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  rawTypeCreator.hasInstanceType())  {	  if(typeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	4	None	replace
111	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator  ==  null  ||  rawType.equals(typeCreator))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	if(typeCreator  ==  null  ||  rawType.equals(typeCreator))  {	  if(typeCreator    ==    null)    {    	compilable	  [FE]  NullPointerException  	4	22	replace
112	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  rawType.equals(typeCreator))  {  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator  ==  null  ||  rawType.equals(typeCreator))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  rawType.equals(typeCreator))  {	  if(typeCreator    ==    null)    {    	compilable	  [FE]  NullPointerException  	4	22	replace
113	[BUG]  [BUGGY]  if(primaryTypeCreator!=  null  ||  typeCreator!=  null)  {  [CE]  cannot  find  symbol  primaryTypeCreator  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(primaryTypeCreator!=  null  ||  typeCreator!=  null)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(primaryTypeCreator!=  null  ||  typeCreator!=  null)  {	  if(rawTypeCreator!=    null    ||    typeCreator!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  primaryTypeCreator	8	None	replace
114	[BUG]  [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)instanceCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)instanceCreators.get(rawType);  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)instanceCreators.get(rawType);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
115	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(type);  [CE]  illegal  start  of  type  [FE]                    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(type);  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(type);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
116	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  [CE]  illegal  start  of  type  [FE]                      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawType();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
117	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [CE]  illegal  start  of  type  [FE]                        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
118	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  context.isInstance())  {  [CE]  cannot  find  symbol  context  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator!=  null  &&  context.isInstance())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  context.isInstance())  {	  if(typeCreator!=    null    &&    rawTypeCreator.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol  context	12	None	replace
119	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  defaultConstructor.hasInstanceType())  {  [CE]  cannot  find  symbol  defaultConstructor  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator!=  null  &&  defaultConstructor.hasInstanceType())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  defaultConstructor.hasInstanceType())  {	  if(typeCreator!=    null    &&    rawTypeCreator.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	10	None	replace
120	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  context.hasInstanceType())  {  [CE]  cannot  find  symbol  context  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator!=  null  &&  context.hasInstanceType())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  context.hasInstanceType())  {	  if(typeCreator!=    null    &&    rawTypeCreator.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol  context	10	None	replace
121	[BUG]  [BUGGY]  if(typeCreator  ==  null)  {  if(typeCreator  ==  null  ||  rawType.equals(typeToken))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator  ==  null)  {  if(typeCreator  ==  null  ||  rawType.equals(typeToken))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator    ==    null)    {    if(typeCreator  ==  null  ||  rawType.equals(typeToken))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
122	[BUG]  [BUGGY]  if(typeCreator  ==  null)  {  if(typeCreator  ==  null  ||  rawType.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator  ==  null)  {  if(typeCreator  ==  null  ||  rawType.isPrimitive())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator    ==    null)    {    if(typeCreator  ==  null  ||  rawType.isPrimitive())  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
123	[BUG]  [BUGGY]  if(typeCreator!=  null  &&  defaultConstructor.isInterface())  {  [CE]  cannot  find  symbol  defaultConstructor  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator!=  null  &&  defaultConstructor.isInterface())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  &&  defaultConstructor.isInterface())  {	  if(typeCreator!=    null    &&    rawTypeCreator.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	11	None	replace
124	[BUG]  [BUGGY]  if(rafTypeCreator  ==  null  ||  typeCreator!=  null)  {  [CE]  cannot  find  symbol  rafTypeCreator  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(rafTypeCreator  ==  null  ||  typeCreator!=  null)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rafTypeCreator  ==  null  ||  typeCreator!=  null)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  rafTypeCreator	5	None	replace
125	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeCreator.isConstructor())  {  [CE]  cannot  find  symbol  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator  ==  null  ||  typeCreator.isConstructor())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  typeCreator.isConstructor())  {	  if(rawTypeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
126	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeCreator.isInstance())  {  [CE]  cannot  find  symbol  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator  ==  null  ||  typeCreator.isInstance())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  typeCreator.isInstance())  {	  if(rawTypeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
127	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeCreator.hasInstanceType())  {  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator  ==  null  ||  typeCreator.hasInstanceType())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator  ==  null  ||  typeCreator.hasInstanceType())  {	  if(rawTypeCreator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
128	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  typeCreator.isConstructor())  {  [CE]  cannot  find  symbol  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator!=  null  ||  typeCreator.isConstructor())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  ||  typeCreator.isConstructor())  {	  if(rawTypeCreator!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
129	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  typeTypeCreator.isInterface())  {  [CE]  cannot  find  symbol  typeTypeCreator  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(typeCreator!=  null  ||  typeTypeCreator.isInterface())  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(typeCreator!=  null  ||  typeTypeCreator.isInterface())  {	  if(typeCreator!=    null    ||    rawTypeCreator.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  typeTypeCreator	13	None	replace
130	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator!=  defaultConstructor)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator!=  defaultConstructor)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  typeCreator!=  defaultConstructor)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    rawType)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	6	None	replace
131	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator!=  targetTypeCreator)  {  [CE]  cannot  find  symbol  rawTypeCreator  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);    [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator!=  targetTypeCreator)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  rawTypeCreator  =  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	if(rawTypeCreator  ==  null  ||  typeCreator!=  targetTypeCreator)  {	  if(rawTypeCreator    ==    null    ||    typeCreator!=    rawType)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	6	None	replace
