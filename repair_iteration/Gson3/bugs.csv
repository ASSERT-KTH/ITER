bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] return new ObjectConstructor<T>() { [FE] ClassCastException [CONTEXT] return new ObjectConstructor<T>() { @Override public T construct() { return (T) new ArrayList<Object>(); } }; } } if (Map.class.isAssignableFrom(rawType)) { if (SortedMap.class.isAssignableFrom(rawType)) { [BUGGY] return new ObjectConstructor<T>() { [BUGGY] @Override public T construct() { return (T) new TreeMap<Object, Object>(); } }; } else if (type instanceof ParameterizedType && !(String.class.isAssignableFrom( TypeToken.get(((ParameterizedType) type).getActualTypeArguments()[0]).getRawType()))) { return new ObjectConstructor<T>() { @Override public T construct() { return (T) new LinkedHashMap<Object, Object>(); } [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12 [METHOD] newDefaultImplementationConstructor [RETURN_TYPE] <T>  Type type Class<? super T> rawType [VARIABLES] Type elementType type Class rawType UnsafeAllocator unsafeAllocator boolean Map instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	
2	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] return new ObjectConstructor<T>() { @Override public T construct() { return (T) new ArrayList<Object>(); } }; } } if (Map.class.isAssignableFrom(rawType)) { if (SortedMap.class.isAssignableFrom(rawType)) { [BUGGY] [BUGGY] return new ObjectConstructor<T>() { @Override public T construct() { return (T) new TreeMap<Object, Object>(); } }; } else if (type instanceof ParameterizedType && !(String.class.isAssignableFrom( TypeToken.get(((ParameterizedType) type).getActualTypeArguments()[0]).getRawType()))) { return new ObjectConstructor<T>() { @Override public T construct() { return (T) new LinkedHashMap<Object, Object>(); } [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12 [METHOD] newDefaultImplementationConstructor [RETURN_TYPE] <T>  Type type Class<? super T> rawType [VARIABLES] Type elementType type Class rawType UnsafeAllocator unsafeAllocator boolean Map instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	add	
3	[BUG] [BUGGY] return new ObjectConstructor<T>() { [FE] ClassCastException [CONTEXT] if (Map.class.isAssignableFrom(rawType)) { if (SortedMap.class.isAssignableFrom(rawType)) { return new ObjectConstructor<T>() { @Override public T construct() { return (T) new TreeMap<Object, Object>(); } }; } else if (type instanceof ParameterizedType && !(String.class.isAssignableFrom( TypeToken.get(((ParameterizedType) type).getActualTypeArguments()[0]).getRawType()))) { [BUGGY] return new ObjectConstructor<T>() { [BUGGY] @Override public T construct() { return (T) new LinkedHashMap<Object, Object>(); } }; } else { return new ObjectConstructor<T>() { @Override public T construct() { return (T) new LinkedTreeMap<String, Object>(); } }; [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12 [METHOD] newDefaultImplementationConstructor [RETURN_TYPE] <T>  Type type Class<? super T> rawType [VARIABLES] Type elementType type Class rawType UnsafeAllocator unsafeAllocator boolean Map instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	
4	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] if (Map.class.isAssignableFrom(rawType)) { if (SortedMap.class.isAssignableFrom(rawType)) { return new ObjectConstructor<T>() { @Override public T construct() { return (T) new TreeMap<Object, Object>(); } }; } else if (type instanceof ParameterizedType && !(String.class.isAssignableFrom( TypeToken.get(((ParameterizedType) type).getActualTypeArguments()[0]).getRawType()))) { [BUGGY] [BUGGY] return new ObjectConstructor<T>() { @Override public T construct() { return (T) new LinkedHashMap<Object, Object>(); } }; } else { return new ObjectConstructor<T>() { @Override public T construct() { return (T) new LinkedTreeMap<String, Object>(); } }; [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12 [METHOD] newDefaultImplementationConstructor [RETURN_TYPE] <T>  Type type Class<? super T> rawType [VARIABLES] Type elementType type Class rawType UnsafeAllocator unsafeAllocator boolean Map instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	add	
5	[BUG] [BUGGY] ObjectConstructor<T> defaultImplementation = newDefaultImplementationConstructor(type, rawType); [FE] ClassCastException [CONTEXT] return rawTypeCreator.createInstance(type); } }; } ObjectConstructor<T> defaultConstructor = newDefaultConstructor(rawType); if (defaultConstructor != null) { return defaultConstructor; } [BUGGY] ObjectConstructor<T> defaultImplementation = newDefaultImplementationConstructor(type, rawType); [BUGGY] if (defaultImplementation != null) { return defaultImplementation; }  return newUnsafeAllocator(type, rawType); } [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12 [METHOD] get [RETURN_TYPE] <T>  TypeToken<T> typeToken [VARIABLES] Type type UnsafeAllocator unsafeAllocator boolean InstanceCreator rawTypeCreator typeCreator TypeToken typeToken ObjectConstructor defaultConstructor defaultImplementation Class rawType Map instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	84	84	2	replace	
6	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] return rawTypeCreator.createInstance(type); } }; } ObjectConstructor<T> defaultConstructor = newDefaultConstructor(rawType); if (defaultConstructor != null) { return defaultConstructor; } [BUGGY] [BUGGY] ObjectConstructor<T> defaultImplementation = newDefaultImplementationConstructor(type, rawType); if (defaultImplementation != null) { return defaultImplementation; }  return newUnsafeAllocator(type, rawType); } [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12 [METHOD] get [RETURN_TYPE] <T>  TypeToken<T> typeToken [VARIABLES] Type type UnsafeAllocator unsafeAllocator boolean InstanceCreator rawTypeCreator typeCreator TypeToken typeToken ObjectConstructor defaultConstructor defaultImplementation Class rawType Map instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	84	84	2	add	
7	[BUG] [BUGGY] if (defaultImplementation != null) { [FE] ClassCastException [CONTEXT] } }; } ObjectConstructor<T> defaultConstructor = newDefaultConstructor(rawType); if (defaultConstructor != null) { return defaultConstructor; } ObjectConstructor<T> defaultImplementation = newDefaultImplementationConstructor(type, rawType); [BUGGY] if (defaultImplementation != null) { [BUGGY] return defaultImplementation; }  return newUnsafeAllocator(type, rawType); } [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12 [METHOD] get [RETURN_TYPE] <T>  TypeToken<T> typeToken [VARIABLES] Type type UnsafeAllocator unsafeAllocator boolean InstanceCreator rawTypeCreator typeCreator TypeToken typeToken ObjectConstructor defaultConstructor defaultImplementation Class rawType Map instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	85	85	2	replace	
8	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] } }; } ObjectConstructor<T> defaultConstructor = newDefaultConstructor(rawType); if (defaultConstructor != null) { return defaultConstructor; } ObjectConstructor<T> defaultImplementation = newDefaultImplementationConstructor(type, rawType); [BUGGY] [BUGGY] if (defaultImplementation != null) { return defaultImplementation; }  return newUnsafeAllocator(type, rawType); } [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12 [METHOD] get [RETURN_TYPE] <T>  TypeToken<T> typeToken [VARIABLES] Type type UnsafeAllocator unsafeAllocator boolean InstanceCreator rawTypeCreator typeCreator TypeToken typeToken ObjectConstructor defaultConstructor defaultImplementation Class rawType Map instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	85	85	2	add	
9	[BUG] [BUGGY] return defaultImplementation; [FE] ClassCastException [CONTEXT] }; } ObjectConstructor<T> defaultConstructor = newDefaultConstructor(rawType); if (defaultConstructor != null) { return defaultConstructor; } ObjectConstructor<T> defaultImplementation = newDefaultImplementationConstructor(type, rawType); if (defaultImplementation != null) { [BUGGY] return defaultImplementation; [BUGGY] }  return newUnsafeAllocator(type, rawType); } [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12 [METHOD] get [RETURN_TYPE] <T>  TypeToken<T> typeToken [VARIABLES] Type type UnsafeAllocator unsafeAllocator boolean InstanceCreator rawTypeCreator typeCreator TypeToken typeToken ObjectConstructor defaultConstructor defaultImplementation Class rawType Map instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	86	86	2	replace	
10	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] }; } ObjectConstructor<T> defaultConstructor = newDefaultConstructor(rawType); if (defaultConstructor != null) { return defaultConstructor; } ObjectConstructor<T> defaultImplementation = newDefaultImplementationConstructor(type, rawType); if (defaultImplementation != null) { [BUGGY] [BUGGY] return defaultImplementation; }  return newUnsafeAllocator(type, rawType); } [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12 [METHOD] get [RETURN_TYPE] <T>  TypeToken<T> typeToken [VARIABLES] Type type UnsafeAllocator unsafeAllocator boolean InstanceCreator rawTypeCreator typeCreator TypeToken typeToken ObjectConstructor defaultConstructor defaultImplementation Class rawType Map instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	86	86	2	add	
11	[BUG] [BUGGY] } catch (NoSuchMethodException e) { [FE] ClassCastException [CONTEXT] } catch (InvocationTargetException e) {   throw new RuntimeException("Failed to invoke " + constructor + " with no args", e.getTargetException()); } catch (IllegalAccessException e) { throw new AssertionError(e); } } }; [BUGGY] } catch (NoSuchMethodException e) { [BUGGY] return null; } } [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12 [METHOD] newDefaultConstructor [RETURN_TYPE] <T>  Class<? super T> rawType [VARIABLES] UnsafeAllocator unsafeAllocator boolean Constructor constructor Class rawType Map instanceCreators Object[] args InvocationTargetException e InstantiationException e IllegalAccessException e NoSuchMethodException e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	
12	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] } catch (InvocationTargetException e) {   throw new RuntimeException("Failed to invoke " + constructor + " with no args", e.getTargetException()); } catch (IllegalAccessException e) { throw new AssertionError(e); } } }; [BUGGY] [BUGGY] } catch (NoSuchMethodException e) { return null; } } [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12 [METHOD] newDefaultConstructor [RETURN_TYPE] <T>  Class<? super T> rawType [VARIABLES] UnsafeAllocator unsafeAllocator boolean Constructor constructor Class rawType Map instanceCreators Object[] args InvocationTargetException e InstantiationException e IllegalAccessException e NoSuchMethodException e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	add	
13	[BUG] [BUGGY] return null; [FE] ClassCastException [CONTEXT]   throw new RuntimeException("Failed to invoke " + constructor + " with no args", e.getTargetException()); } catch (IllegalAccessException e) { throw new AssertionError(e); } } }; } catch (NoSuchMethodException e) { [BUGGY] return null; [BUGGY] } } [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12 [METHOD] newDefaultConstructor [RETURN_TYPE] <T>  Class<? super T> rawType [VARIABLES] UnsafeAllocator unsafeAllocator boolean Constructor constructor Class rawType Map instanceCreators Object[] args InvocationTargetException e InstantiationException e IllegalAccessException e NoSuchMethodException e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	119	119	2	replace	
14	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT]   throw new RuntimeException("Failed to invoke " + constructor + " with no args", e.getTargetException()); } catch (IllegalAccessException e) { throw new AssertionError(e); } } }; } catch (NoSuchMethodException e) { [BUGGY] [BUGGY] return null; } } [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12 [METHOD] newDefaultConstructor [RETURN_TYPE] <T>  Class<? super T> rawType [VARIABLES] UnsafeAllocator unsafeAllocator boolean Constructor constructor Class rawType Map instanceCreators Object[] args InvocationTargetException e InstantiationException e IllegalAccessException e NoSuchMethodException e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	119	119	2	add	
15	[BUG] [BUGGY] if (Collection.class.isAssignableFrom(rawType)) { [FE] ClassCastException [CONTEXT] final Type type, Class<? super T> rawType) { [BUGGY] if (Collection.class.isAssignableFrom(rawType)) { [BUGGY] if (SortedSet.class.isAssignableFrom(rawType)) { return new ObjectConstructor<T>() { @Override public T construct() { return (T) new TreeSet<Object>(); } }; } else if (EnumSet.class.isAssignableFrom(rawType)) { return new ObjectConstructor<T>() { @SuppressWarnings("rawtypes") @Override public T construct() { [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12 [METHOD] newDefaultImplementationConstructor [RETURN_TYPE] <T>  Type type Class<? super T> rawType [VARIABLES] Type elementType type Class rawType UnsafeAllocator unsafeAllocator boolean Map instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	
16	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] final Type type, Class<? super T> rawType) { [BUGGY] [BUGGY] if (Collection.class.isAssignableFrom(rawType)) { if (SortedSet.class.isAssignableFrom(rawType)) { return new ObjectConstructor<T>() { @Override public T construct() { return (T) new TreeSet<Object>(); } }; } else if (EnumSet.class.isAssignableFrom(rawType)) { return new ObjectConstructor<T>() { @SuppressWarnings("rawtypes") @Override public T construct() { [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12 [METHOD] newDefaultImplementationConstructor [RETURN_TYPE] <T>  Type type Class<? super T> rawType [VARIABLES] Type elementType type Class rawType UnsafeAllocator unsafeAllocator boolean Map instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	
17	[BUG] [BUGGY] if (Map.class.isAssignableFrom(rawType)) { [FE] ClassCastException [CONTEXT] }; } else { return new ObjectConstructor<T>() { @Override public T construct() { return (T) new ArrayList<Object>(); } }; } } [BUGGY] if (Map.class.isAssignableFrom(rawType)) { [BUGGY] if (SortedMap.class.isAssignableFrom(rawType)) { return new ObjectConstructor<T>() { @Override public T construct() { return (T) new TreeMap<Object, Object>(); } }; } else if (type instanceof ParameterizedType && !(String.class.isAssignableFrom( TypeToken.get(((ParameterizedType) type).getActualTypeArguments()[0]).getRawType()))) { return new ObjectConstructor<T>() { @Override public T construct() { [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12 [METHOD] newDefaultImplementationConstructor [RETURN_TYPE] <T>  Type type Class<? super T> rawType [VARIABLES] Type elementType type Class rawType UnsafeAllocator unsafeAllocator boolean Map instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	174	174	2	replace	
18	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] }; } else { return new ObjectConstructor<T>() { @Override public T construct() { return (T) new ArrayList<Object>(); } }; } } [BUGGY] [BUGGY] if (Map.class.isAssignableFrom(rawType)) { if (SortedMap.class.isAssignableFrom(rawType)) { return new ObjectConstructor<T>() { @Override public T construct() { return (T) new TreeMap<Object, Object>(); } }; } else if (type instanceof ParameterizedType && !(String.class.isAssignableFrom( TypeToken.get(((ParameterizedType) type).getActualTypeArguments()[0]).getRawType()))) { return new ObjectConstructor<T>() { @Override public T construct() { [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12 [METHOD] newDefaultImplementationConstructor [RETURN_TYPE] <T>  Type type Class<? super T> rawType [VARIABLES] Type elementType type Class rawType UnsafeAllocator unsafeAllocator boolean Map instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	174	174	2	add	
19	[BUG] [BUGGY] if (SortedMap.class.isAssignableFrom(rawType)) { [FE] ClassCastException [CONTEXT] } else { return new ObjectConstructor<T>() { @Override public T construct() { return (T) new ArrayList<Object>(); } }; } } if (Map.class.isAssignableFrom(rawType)) { [BUGGY] if (SortedMap.class.isAssignableFrom(rawType)) { [BUGGY] return new ObjectConstructor<T>() { @Override public T construct() { return (T) new TreeMap<Object, Object>(); } }; } else if (type instanceof ParameterizedType && !(String.class.isAssignableFrom( TypeToken.get(((ParameterizedType) type).getActualTypeArguments()[0]).getRawType()))) { return new ObjectConstructor<T>() { @Override public T construct() { return (T) new LinkedHashMap<Object, Object>(); [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12 [METHOD] newDefaultImplementationConstructor [RETURN_TYPE] <T>  Type type Class<? super T> rawType [VARIABLES] Type elementType type Class rawType UnsafeAllocator unsafeAllocator boolean Map instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	
20	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] } else { return new ObjectConstructor<T>() { @Override public T construct() { return (T) new ArrayList<Object>(); } }; } } if (Map.class.isAssignableFrom(rawType)) { [BUGGY] [BUGGY] if (SortedMap.class.isAssignableFrom(rawType)) { return new ObjectConstructor<T>() { @Override public T construct() { return (T) new TreeMap<Object, Object>(); } }; } else if (type instanceof ParameterizedType && !(String.class.isAssignableFrom( TypeToken.get(((ParameterizedType) type).getActualTypeArguments()[0]).getRawType()))) { return new ObjectConstructor<T>() { @Override public T construct() { return (T) new LinkedHashMap<Object, Object>(); [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12 [METHOD] newDefaultImplementationConstructor [RETURN_TYPE] <T>  Type type Class<? super T> rawType [VARIABLES] Type elementType type Class rawType UnsafeAllocator unsafeAllocator boolean Map instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	
21	[BUG] [BUGGY] final InstanceCreator<T> rawTypeCreator = (InstanceCreator<T>) instanceCreators.get(rawType); [FE] ClassCastException [CONTEXT] if (typeCreator != null) { return new ObjectConstructor<T>() { @Override public T construct() { return typeCreator.createInstance(type); } }; }  @SuppressWarnings("unchecked") // types must agree [BUGGY] final InstanceCreator<T> rawTypeCreator =  (InstanceCreator<T>) instanceCreators.get(rawType); [BUGGY] (InstanceCreator<T>) instanceCreators.get(rawType); if (rawTypeCreator != null) { return new ObjectConstructor<T>() { @Override public T construct() { return rawTypeCreator.createInstance(type); } }; } ObjectConstructor<T> defaultConstructor = newDefaultConstructor(rawType); [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12 [METHOD] get [RETURN_TYPE] <T>  TypeToken<T> typeToken [VARIABLES] Type type UnsafeAllocator unsafeAllocator boolean InstanceCreator rawTypeCreator typeCreator TypeToken typeToken ObjectConstructor defaultConstructor defaultImplementation Class rawType Map instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	
22	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] if (typeCreator != null) { return new ObjectConstructor<T>() { @Override public T construct() { return typeCreator.createInstance(type); } }; }  @SuppressWarnings("unchecked") // types must agree [BUGGY] [BUGGY] final InstanceCreator<T> rawTypeCreator =  (InstanceCreator<T>) instanceCreators.get(rawType); (InstanceCreator<T>) instanceCreators.get(rawType); if (rawTypeCreator != null) { return new ObjectConstructor<T>() { @Override public T construct() { return rawTypeCreator.createInstance(type); } }; } ObjectConstructor<T> defaultConstructor = newDefaultConstructor(rawType); [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12 [METHOD] get [RETURN_TYPE] <T>  TypeToken<T> typeToken [VARIABLES] Type type UnsafeAllocator unsafeAllocator boolean InstanceCreator rawTypeCreator typeCreator TypeToken typeToken ObjectConstructor defaultConstructor defaultImplementation Class rawType Map instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	add	
23	[BUG] [BUGGY] if (rawTypeCreator != null) { [FE] ClassCastException [CONTEXT] @Override public T construct() { return typeCreator.createInstance(type); } }; }  @SuppressWarnings("unchecked") // types must agree final InstanceCreator<T> rawTypeCreator = (InstanceCreator<T>) instanceCreators.get(rawType); [BUGGY] if (rawTypeCreator != null) { [BUGGY] return new ObjectConstructor<T>() { @Override public T construct() { return rawTypeCreator.createInstance(type); } }; } ObjectConstructor<T> defaultConstructor = newDefaultConstructor(rawType); if (defaultConstructor != null) { return defaultConstructor; [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12 [METHOD] get [RETURN_TYPE] <T>  TypeToken<T> typeToken [VARIABLES] Type type UnsafeAllocator unsafeAllocator boolean InstanceCreator rawTypeCreator typeCreator TypeToken typeToken ObjectConstructor defaultConstructor defaultImplementation Class rawType Map instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	71	71	2	replace	
24	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] @Override public T construct() { return typeCreator.createInstance(type); } }; }  @SuppressWarnings("unchecked") // types must agree final InstanceCreator<T> rawTypeCreator = (InstanceCreator<T>) instanceCreators.get(rawType); [BUGGY] [BUGGY] if (rawTypeCreator != null) { return new ObjectConstructor<T>() { @Override public T construct() { return rawTypeCreator.createInstance(type); } }; } ObjectConstructor<T> defaultConstructor = newDefaultConstructor(rawType); if (defaultConstructor != null) { return defaultConstructor; [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12 [METHOD] get [RETURN_TYPE] <T>  TypeToken<T> typeToken [VARIABLES] Type type UnsafeAllocator unsafeAllocator boolean InstanceCreator rawTypeCreator typeCreator TypeToken typeToken ObjectConstructor defaultConstructor defaultImplementation Class rawType Map instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	71	71	2	add	
25	[BUG] [BUGGY] ObjectConstructor<T> defaultConstructor = newDefaultConstructor(rawType); [FE] ClassCastException [CONTEXT] final InstanceCreator<T> rawTypeCreator = (InstanceCreator<T>) instanceCreators.get(rawType); if (rawTypeCreator != null) { return new ObjectConstructor<T>() { @Override public T construct() { return rawTypeCreator.createInstance(type); } }; } [BUGGY] ObjectConstructor<T> defaultConstructor = newDefaultConstructor(rawType); [BUGGY] if (defaultConstructor != null) { return defaultConstructor; } ObjectConstructor<T> defaultImplementation = newDefaultImplementationConstructor(type, rawType); if (defaultImplementation != null) { return defaultImplementation; }   [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12 [METHOD] get [RETURN_TYPE] <T>  TypeToken<T> typeToken [VARIABLES] Type type UnsafeAllocator unsafeAllocator boolean InstanceCreator rawTypeCreator typeCreator TypeToken typeToken ObjectConstructor defaultConstructor defaultImplementation Class rawType Map instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	79	79	2	replace	
26	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] final InstanceCreator<T> rawTypeCreator = (InstanceCreator<T>) instanceCreators.get(rawType); if (rawTypeCreator != null) { return new ObjectConstructor<T>() { @Override public T construct() { return rawTypeCreator.createInstance(type); } }; } [BUGGY] [BUGGY] ObjectConstructor<T> defaultConstructor = newDefaultConstructor(rawType); if (defaultConstructor != null) { return defaultConstructor; } ObjectConstructor<T> defaultImplementation = newDefaultImplementationConstructor(type, rawType); if (defaultImplementation != null) { return defaultImplementation; }   [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12 [METHOD] get [RETURN_TYPE] <T>  TypeToken<T> typeToken [VARIABLES] Type type UnsafeAllocator unsafeAllocator boolean InstanceCreator rawTypeCreator typeCreator TypeToken typeToken ObjectConstructor defaultConstructor defaultImplementation Class rawType Map instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	79	79	2	add	
27	[BUG] [BUGGY] if (defaultConstructor != null) { [FE] ClassCastException [CONTEXT] (InstanceCreator<T>) instanceCreators.get(rawType); if (rawTypeCreator != null) { return new ObjectConstructor<T>() { @Override public T construct() { return rawTypeCreator.createInstance(type); } }; } ObjectConstructor<T> defaultConstructor = newDefaultConstructor(rawType); [BUGGY] if (defaultConstructor != null) { [BUGGY] return defaultConstructor; } ObjectConstructor<T> defaultImplementation = newDefaultImplementationConstructor(type, rawType); if (defaultImplementation != null) { return defaultImplementation; }  return newUnsafeAllocator(type, rawType); [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12 [METHOD] get [RETURN_TYPE] <T>  TypeToken<T> typeToken [VARIABLES] Type type UnsafeAllocator unsafeAllocator boolean InstanceCreator rawTypeCreator typeCreator TypeToken typeToken ObjectConstructor defaultConstructor defaultImplementation Class rawType Map instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	
28	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] (InstanceCreator<T>) instanceCreators.get(rawType); if (rawTypeCreator != null) { return new ObjectConstructor<T>() { @Override public T construct() { return rawTypeCreator.createInstance(type); } }; } ObjectConstructor<T> defaultConstructor = newDefaultConstructor(rawType); [BUGGY] [BUGGY] if (defaultConstructor != null) { return defaultConstructor; } ObjectConstructor<T> defaultImplementation = newDefaultImplementationConstructor(type, rawType); if (defaultImplementation != null) { return defaultImplementation; }  return newUnsafeAllocator(type, rawType); [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12 [METHOD] get [RETURN_TYPE] <T>  TypeToken<T> typeToken [VARIABLES] Type type UnsafeAllocator unsafeAllocator boolean InstanceCreator rawTypeCreator typeCreator TypeToken typeToken ObjectConstructor defaultConstructor defaultImplementation Class rawType Map instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	
29	[BUG] [BUGGY] final Constructor<? super T> constructor = rawType.getDeclaredConstructor(); [FE] ClassCastException [CONTEXT] private <T> ObjectConstructor<T> newDefaultConstructor(Class<? super T> rawType) { try { [BUGGY] final Constructor<? super T> constructor = rawType.getDeclaredConstructor(); [BUGGY] if (!constructor.isAccessible()) { constructor.setAccessible(true); } return new ObjectConstructor<T>() { @SuppressWarnings("unchecked") // T is the same raw type as is requested @Override public T construct() { try { Object[] args = null; return (T) constructor.newInstance(args); } catch (InstantiationException e) { [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12 [METHOD] newDefaultConstructor [RETURN_TYPE] <T>  Class<? super T> rawType [VARIABLES] UnsafeAllocator unsafeAllocator boolean Constructor constructor Class rawType Map instanceCreators Object[] args InvocationTargetException e InstantiationException e IllegalAccessException e NoSuchMethodException e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	95	95	2	replace	
30	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] private <T> ObjectConstructor<T> newDefaultConstructor(Class<? super T> rawType) { try { [BUGGY] [BUGGY] final Constructor<? super T> constructor = rawType.getDeclaredConstructor(); if (!constructor.isAccessible()) { constructor.setAccessible(true); } return new ObjectConstructor<T>() { @SuppressWarnings("unchecked") // T is the same raw type as is requested @Override public T construct() { try { Object[] args = null; return (T) constructor.newInstance(args); } catch (InstantiationException e) { [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12 [METHOD] newDefaultConstructor [RETURN_TYPE] <T>  Class<? super T> rawType [VARIABLES] UnsafeAllocator unsafeAllocator boolean Constructor constructor Class rawType Map instanceCreators Object[] args InvocationTargetException e InstantiationException e IllegalAccessException e NoSuchMethodException e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	95	95	2	add	
31	[BUG] [BUGGY] final Type type = typeToken.getType(); [FE] ClassCastException [CONTEXT] public <T> ObjectConstructor<T> get(TypeToken<T> typeToken) { [BUGGY] final Type type = typeToken.getType(); [BUGGY] final Class<? super T> rawType = typeToken.getRawType();   @SuppressWarnings("unchecked") // types must agree final InstanceCreator<T> typeCreator = (InstanceCreator<T>) instanceCreators.get(type); if (typeCreator != null) { return new ObjectConstructor<T>() { @Override public T construct() { return typeCreator.createInstance(type); [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12 [METHOD] get [RETURN_TYPE] <T>  TypeToken<T> typeToken [VARIABLES] Type type UnsafeAllocator unsafeAllocator boolean InstanceCreator rawTypeCreator typeCreator TypeToken typeToken ObjectConstructor defaultConstructor defaultImplementation Class rawType Map instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	
32	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] public <T> ObjectConstructor<T> get(TypeToken<T> typeToken) { [BUGGY] [BUGGY] final Type type = typeToken.getType(); final Class<? super T> rawType = typeToken.getRawType();   @SuppressWarnings("unchecked") // types must agree final InstanceCreator<T> typeCreator = (InstanceCreator<T>) instanceCreators.get(type); if (typeCreator != null) { return new ObjectConstructor<T>() { @Override public T construct() { return typeCreator.createInstance(type); [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12 [METHOD] get [RETURN_TYPE] <T>  TypeToken<T> typeToken [VARIABLES] Type type UnsafeAllocator unsafeAllocator boolean InstanceCreator rawTypeCreator typeCreator TypeToken typeToken ObjectConstructor defaultConstructor defaultImplementation Class rawType Map instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	add	
33	[BUG] [BUGGY] final Class<? super T> rawType = typeToken.getRawType(); [FE] ClassCastException [CONTEXT] public <T> ObjectConstructor<T> get(TypeToken<T> typeToken) { final Type type = typeToken.getType(); [BUGGY] final Class<? super T> rawType = typeToken.getRawType(); [BUGGY]   @SuppressWarnings("unchecked") // types must agree final InstanceCreator<T> typeCreator = (InstanceCreator<T>) instanceCreators.get(type); if (typeCreator != null) { return new ObjectConstructor<T>() { @Override public T construct() { return typeCreator.createInstance(type); } [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12 [METHOD] get [RETURN_TYPE] <T>  TypeToken<T> typeToken [VARIABLES] Type type UnsafeAllocator unsafeAllocator boolean InstanceCreator rawTypeCreator typeCreator TypeToken typeToken ObjectConstructor defaultConstructor defaultImplementation Class rawType Map instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	replace	
34	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] public <T> ObjectConstructor<T> get(TypeToken<T> typeToken) { final Type type = typeToken.getType(); [BUGGY] [BUGGY] final Class<? super T> rawType = typeToken.getRawType();   @SuppressWarnings("unchecked") // types must agree final InstanceCreator<T> typeCreator = (InstanceCreator<T>) instanceCreators.get(type); if (typeCreator != null) { return new ObjectConstructor<T>() { @Override public T construct() { return typeCreator.createInstance(type); } [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12 [METHOD] get [RETURN_TYPE] <T>  TypeToken<T> typeToken [VARIABLES] Type type UnsafeAllocator unsafeAllocator boolean InstanceCreator rawTypeCreator typeCreator TypeToken typeToken ObjectConstructor defaultConstructor defaultImplementation Class rawType Map instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	53	53	2	add	
35	[BUG] [BUGGY] final InstanceCreator<T> typeCreator = (InstanceCreator<T>) instanceCreators.get(type); [FE] ClassCastException [CONTEXT] public <T> ObjectConstructor<T> get(TypeToken<T> typeToken) { final Type type = typeToken.getType(); final Class<? super T> rawType = typeToken.getRawType();   @SuppressWarnings("unchecked") // types must agree [BUGGY] final InstanceCreator<T> typeCreator = (InstanceCreator<T>) instanceCreators.get(type); [BUGGY] if (typeCreator != null) { return new ObjectConstructor<T>() { @Override public T construct() { return typeCreator.createInstance(type); } }; }  @SuppressWarnings("unchecked") // types must agree [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12 [METHOD] get [RETURN_TYPE] <T>  TypeToken<T> typeToken [VARIABLES] Type type UnsafeAllocator unsafeAllocator boolean InstanceCreator rawTypeCreator typeCreator TypeToken typeToken ObjectConstructor defaultConstructor defaultImplementation Class rawType Map instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	
36	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] public <T> ObjectConstructor<T> get(TypeToken<T> typeToken) { final Type type = typeToken.getType(); final Class<? super T> rawType = typeToken.getRawType();   @SuppressWarnings("unchecked") // types must agree [BUGGY] [BUGGY] final InstanceCreator<T> typeCreator = (InstanceCreator<T>) instanceCreators.get(type); if (typeCreator != null) { return new ObjectConstructor<T>() { @Override public T construct() { return typeCreator.createInstance(type); } }; }  @SuppressWarnings("unchecked") // types must agree [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12 [METHOD] get [RETURN_TYPE] <T>  TypeToken<T> typeToken [VARIABLES] Type type UnsafeAllocator unsafeAllocator boolean InstanceCreator rawTypeCreator typeCreator TypeToken typeToken ObjectConstructor defaultConstructor defaultImplementation Class rawType Map instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	add	
37	[BUG] [BUGGY] if (typeCreator != null) { [FE] ClassCastException [CONTEXT] public <T> ObjectConstructor<T> get(TypeToken<T> typeToken) { final Type type = typeToken.getType(); final Class<? super T> rawType = typeToken.getRawType();   @SuppressWarnings("unchecked") // types must agree final InstanceCreator<T> typeCreator = (InstanceCreator<T>) instanceCreators.get(type); [BUGGY] if (typeCreator != null) { [BUGGY] return new ObjectConstructor<T>() { @Override public T construct() { return typeCreator.createInstance(type); } }; }  @SuppressWarnings("unchecked") // types must agree final InstanceCreator<T> rawTypeCreator = [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12 [METHOD] get [RETURN_TYPE] <T>  TypeToken<T> typeToken [VARIABLES] Type type UnsafeAllocator unsafeAllocator boolean InstanceCreator rawTypeCreator typeCreator TypeToken typeToken ObjectConstructor defaultConstructor defaultImplementation Class rawType Map instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	replace	
38	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] public <T> ObjectConstructor<T> get(TypeToken<T> typeToken) { final Type type = typeToken.getType(); final Class<? super T> rawType = typeToken.getRawType();   @SuppressWarnings("unchecked") // types must agree final InstanceCreator<T> typeCreator = (InstanceCreator<T>) instanceCreators.get(type); [BUGGY] [BUGGY] if (typeCreator != null) { return new ObjectConstructor<T>() { @Override public T construct() { return typeCreator.createInstance(type); } }; }  @SuppressWarnings("unchecked") // types must agree final InstanceCreator<T> rawTypeCreator = [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12 [METHOD] get [RETURN_TYPE] <T>  TypeToken<T> typeToken [VARIABLES] Type type UnsafeAllocator unsafeAllocator boolean InstanceCreator rawTypeCreator typeCreator TypeToken typeToken ObjectConstructor defaultConstructor defaultImplementation Class rawType Map instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	59	59	2	add	
39	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] private final Map<Type, InstanceCreator<?>> instanceCreators; [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12  [VARIABLES] 	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21081851067789195	47	47	2	replace	
40	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] private final Map<Type, InstanceCreator<?>> instanceCreators; [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12  [VARIABLES] 	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21081851067789195	47	47	2	add	
41	[BUG] [BUGGY] this.instanceCreators = instanceCreators; [FE] ClassCastException [CONTEXT] public ConstructorConstructor(Map<Type, InstanceCreator<?>> instanceCreators) { [BUGGY] this.instanceCreators = instanceCreators; [BUGGY] } [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12 [METHOD] <init> [RETURN_TYPE] Map)  InstanceCreator<?>> instanceCreators [VARIABLES] Map instanceCreators UnsafeAllocator unsafeAllocator boolean  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21081851067789195	48	48	2	replace	
42	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] public ConstructorConstructor(Map<Type, InstanceCreator<?>> instanceCreators) { [BUGGY] [BUGGY] this.instanceCreators = instanceCreators; } [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12 [METHOD] <init> [RETURN_TYPE] Map)  InstanceCreator<?>> instanceCreators [VARIABLES] Map instanceCreators UnsafeAllocator unsafeAllocator boolean  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21081851067789195	48	48	2	add	
43	[BUG] [BUGGY] } [FE] ClassCastException [CONTEXT] public ConstructorConstructor(Map<Type, InstanceCreator<?>> instanceCreators) { this.instanceCreators = instanceCreators; [BUGGY] } [BUGGY]  [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12 [METHOD] <init> [RETURN_TYPE] Map)  InstanceCreator<?>> instanceCreators [VARIABLES] Map instanceCreators UnsafeAllocator unsafeAllocator boolean  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21081851067789195	49	49	2	replace	
44	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] public ConstructorConstructor(Map<Type, InstanceCreator<?>> instanceCreators) { this.instanceCreators = instanceCreators; [BUGGY] [BUGGY] } [CLASS] ConstructorConstructor 1 2 3 4 5 6 7 8 9 10 11 12 [METHOD] <init> [RETURN_TYPE] Map)  InstanceCreator<?>> instanceCreators [VARIABLES] Map instanceCreators UnsafeAllocator unsafeAllocator boolean  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21081851067789195	49	49	2	add	
