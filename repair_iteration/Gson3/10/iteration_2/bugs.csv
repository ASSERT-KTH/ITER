bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Map.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	15	3	replace
2	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]    ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	15	3	replace
3	[BUG]  [BUGGY]  if(GradientMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]      ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(GradientMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(GradientMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
4	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(rawType.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	15	3	replace
5	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]        ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	15	3	replace
6	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Object.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	15	3	replace
7	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]          ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	15	3	replace
8	[BUG]  [BUGGY]  if(Reflection.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Reflection.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Reflection.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
9	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
10	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(Map.Class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(Map.Class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(Map.Class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
11	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignableFrom(rawType)||  Map.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignableFrom(rawType)||  Map.Class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)||  Map.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
12	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignedFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignedFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignedFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
13	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    If(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	9	None	add
14	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
15	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(Map.Class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(Map.Class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(Map.Class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
16	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignedFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignedFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignedFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
17	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    If(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	7	None	add
18	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignableFrom(rawType)||  SortedMap.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignableFrom(rawType)||  SortedMap.Class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)||  SortedMap.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
19	[BUG]  [BUGGY]  if(ReferenceMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(ReferenceMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReferenceMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
20	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(TreeMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	12	3	replace
21	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	12	3	replace
22	[BUG]  [BUGGY]  if(ReflectionMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]        ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(ReflectionMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReflectionMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
23	[BUG]  [BUGGY]  if(GradientMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(GradientMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(GradientMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
24	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(TreeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	19	3	replace
25	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	19	3	replace
26	[BUG]  [BUGGY]  if(GradientMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(GradientMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(GradientMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
27	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(rawType.isAssignableFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	19	3	replace
28	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	19	3	replace
29	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Object.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	19	3	replace
30	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	19	3	replace
31	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
32	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignableFrom(rawType)||  Map.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignableFrom(rawType)||  Map.Class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(SortedMap.class.isAssignableFrom(rawType)||  Map.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
33	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(SortedMap.Class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(SortedMap.Class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(SortedMap.Class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
34	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    If(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	18	None	add
35	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignedFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignedFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(SortedMap.class.isAssignedFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
36	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(SpecifiedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(SpecifiedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(SpecifiedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
37	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	4	3	replace
38	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	4	3	replace
39	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
40	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType))  {  if(TreeMap.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType))  {  if(TreeMap.Class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
41	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]        ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType))    {    If(TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	1	None	add
42	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignedableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignedableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignedableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
43	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType))  {  if(ReeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType))  {  if(ReeMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType))    {    if(ReeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
44	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType))  {  if(TreeMap.CLASS.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType))  {  if(TreeMap.CLASS.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.CLASS.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
45	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
46	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignedFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignedFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(SortedMap.class.isAssignedFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
47	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]        ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    If(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	14	None	add
48	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(SortedMap.Class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(SortedMap.Class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(SortedMap.Class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
49	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.Class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
50	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignABLEFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignABLEFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignABLEFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
51	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
52	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignedFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignedFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignedFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
53	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.Class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
54	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(TreeMap.Class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(TreeMap.Class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.Class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
55	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]            ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    If(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	16	None	add
56	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignABLEFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignABLEFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignABLEFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
57	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	2	3	replace
58	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	2	3	replace
59	[BUG]  [BUGGY]  if(ReflectionMap.class.isAssignableFrom(rawType)||  ReflectionMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(ReflectionMap.class.isAssignableFrom(rawType)||  ReflectionMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReflectionMap.class.isAssignableFrom(rawType)||  ReflectionMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
60	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]      ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(type))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(type))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	17	None	replace
61	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(rawType.isAssignableFrom(TreeMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(rawType.isAssignableFrom(TreeMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	17	3	replace
62	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(TreeMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]        ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(rawType.isAssignableFrom(TreeMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(TreeMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	17	3	replace
63	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
64	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignedFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignedFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignedFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
65	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(TreeMap.Class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(TreeMap.Class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(TreeMap.Class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
66	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]          ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    If(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	11	None	add
67	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.Class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
68	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
69	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignedFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignedFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(SortedMap.class.isAssignedFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
70	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]        ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    If(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	5	None	add
71	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(SortedMap.Class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(SortedMap.Class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(SortedMap.Class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
72	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.Class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
73	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Map.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	8	2	replace
74	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	8	2	replace
75	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(rawType.isAssignableFrom(Map.class)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	8	3	replace
76	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(Map.class)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	8	3	replace
77	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(rawType.isAssignableFrom(Map.class)||  Map.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	10	3	replace
78	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  Map.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(Map.class)||  Map.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	10	3	replace
79	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]      NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(type))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(type))  {	  if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	10	None	replace
80	[BUG]  [BUGGY]  Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  LinkedHashMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [CE]  ';'  expected  [FE]                    ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  LinkedHashMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  LinkedHashMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()	      	non-compiled	[CE]  ';'  expected	13	None	replace
81	[BUG]  [BUGGY]  Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  LinkedHashMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]  [CE]  ';'  expected  [FE]                      ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  LinkedHashMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  LinkedHashMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]	      	non-compiled	[CE]  ';'  expected	13	None	replace
82	[BUG]  [BUGGY]  Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  LinkedHashMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActual  [CE]  ';'  expected  [FE]                        ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  LinkedHashMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActual  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  LinkedHashMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActual	      	non-compiled	[CE]  ';'  expected	13	None	replace
83	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Map.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
84	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Map.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
85	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Map.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
86	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Map.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
87	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignableFrom(rawType)&&  type  instanceof  TreeMap  <  Object,  Object>)  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Map.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignableFrom(rawType)&&  type  instanceof  TreeMap  <  Object,  Object>)  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)&&  type  instanceof  TreeMap  <  Object,  Object>)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
88	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType))  {  if(Reflection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Map.class.isAssignableFrom(rawType))  {  if(Reflection.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType))    {    if(Reflection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
89	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(type))  {  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Map.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(type))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(type))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
90	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType))  {  if(Map.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Map.class.isAssignableFrom(rawType))  {  if(Map.Class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType))    {    if(Map.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
91	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Object.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	6	3	replace
92	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]    ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	6	3	replace
93	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(rawType.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	6	3	replace
94	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]      ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	6	3	replace
95	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Type.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	6	2	replace
96	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Type.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	6	2	replace
97	[BUG]  [BUGGY]  if(ReflectionMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(ReflectionMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReflectionMap.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
98	[BUG]  [BUGGY]  if(Treemap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Treemap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Treemap.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
99	[BUG]  [BUGGY]  Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {  @Override  [CE]  >,  extends,  or  super  expected  [FE]                    ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {  @Override  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {  @Override	      	non-compiled	[CE]  >,  extends,  or  super  expected	13	None	replace
100	[BUG]  [BUGGY]  Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {  @Override  public  [CE]  >,  extends,  or  super  expected  [FE]                      ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {  @Override  public  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {  @Override  public	      	non-compiled	[CE]  >,  extends,  or  super  expected	13	None	replace
101	[BUG]  [BUGGY]  Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [CE]  >,  extends,  or  super  expected  [FE]                        ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor  <  T>	      	non-compiled	[CE]  >,  extends,  or  super  expected	13	None	replace
102	[BUG]  [BUGGY]  Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  [CE]  >,  extends,  or  super  expected  [FE]                          ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()	      	non-compiled	[CE]  >,  extends,  or  super  expected	13	None	replace
103	[BUG]  [BUGGY]  Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  [CE]  >,  extends,  or  super  expected  [FE]                            ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {	      	non-compiled	[CE]  >,  extends,  or  super  expected	13	None	replace
104	[BUG]  [BUGGY]  Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor  <  [CE]  >,  extends,  or  super  expected  [FE]                              ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor  <  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor  <	      	non-compiled	[CE]  >,  extends,  or  super  expected	13	None	replace
105	[BUG]  [BUGGY]  Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {  @Override  [CE]  >,  extends,  or  super  expected  [FE]                                ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {  @Override  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {  @Override	      	non-compiled	[CE]  >,  extends,  or  super  expected	13	None	replace
106	[BUG]  [BUGGY]  if(ReflectionMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(ReflectionMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReflectionMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
107	[BUG]  [BUGGY]  if(Reference.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Reference.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Reference.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
108	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType))  {  if(ReflectionMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Map.class.isAssignableFrom(rawType))  {  if(ReflectionMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType))    {    if(ReflectionMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
109	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType))  {  if(Reference.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Map.class.isAssignableFrom(rawType))  {  if(Reference.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType))    {    if(Reference.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
110	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Map.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType))    {    if(Object.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
111	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType))  {  if(Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Map.class.isAssignableFrom(rawType))  {  if(Collection.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType))    {    if(Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
112	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(SuperMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(SuperMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(SuperMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
113	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(Reference.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(Reference.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(Reference.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
114	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(Object.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
115	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(Set.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(Set.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(Set.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
116	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(Array.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(Array.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(Array.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
117	[BUG]  [BUGGY]  if(Reference.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Reference.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Reference.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
118	[BUG]  [BUGGY]  if(Reflection.class.isAssignableFrom(rawType)||  Reflection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Reflection.class.isAssignableFrom(rawType)||  Reflection.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Reflection.class.isAssignableFrom(rawType)||  Reflection.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
119	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	6	2	replace
120	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	6	2	replace
121	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(String.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(String.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	6	2	replace
122	[BUG]  [BUGGY]  if(String.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(String.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(String.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	6	2	replace
123	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(ObjectConstructor.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	12	2	replace
124	[BUG]  [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ObjectConstructor.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	12	2	replace
125	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(ObjectConstructor.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	17	3	replace
126	[BUG]  [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ObjectConstructor.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	17	3	replace
127	[BUG]  [BUGGY]  if(ReferenceMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]      ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(ReferenceMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReferenceMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
128	[BUG]  [BUGGY]  if(ReflectionMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]        ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(ReflectionMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReflectionMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
129	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(String.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(String.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	17	3	replace
130	[BUG]  [BUGGY]  if(String.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]          ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(String.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(String.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	17	3	replace
131	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(Object.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
132	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(Reference.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(Reference.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(Reference.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
133	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
134	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(Reflection.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(Reflection.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(Reflection.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
135	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType))  {  for(TreeMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]    ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType))  {  for(TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType))    {    for(TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	1	None	add
136	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
137	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
138	[BUG]  [BUGGY]  Type  elementType  =  getElementType(rawType);  [CE]  illegal  start  of  type  [FE]                    ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  Type  elementType  =  getElementType(rawType);  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Type  elementType  =  getElementType(rawType);	      	non-compiled	[CE]  illegal  start  of  type	13	None	replace
139	[BUG]  [BUGGY]  Class  <?  superType  =  type.getSuperClass();  [CE]  >,  extends,  or  super  expected  [FE]                      ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  Class  <?  superType  =  type.getSuperClass();  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  =  type.getSuperClass();	      	non-compiled	[CE]  >,  extends,  or  super  expected	13	None	replace
140	[BUG]  [BUGGY]  Type  elementType  =  type.getElementType();  [CE]  illegal  start  of  type  [FE]                        ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  Type  elementType  =  type.getElementType();  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Type  elementType  =  type.getElementType();	      	non-compiled	[CE]  illegal  start  of  type	13	None	replace
141	[BUG]  [BUGGY]  Class  <?  superType  =  type.getSuperclass();  [CE]  >,  extends,  or  super  expected  [FE]                          ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  Class  <?  superType  =  type.getSuperclass();  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  =  type.getSuperclass();	      	non-compiled	[CE]  >,  extends,  or  super  expected	13	None	replace
142	[BUG]  [BUGGY]  Object  <?  super  T>  rawType  =  type.getRawType();  [CE]  illegal  start  of  type  [FE]                            ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  Object  <?  super  T>  rawType  =  type.getRawType();  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Object  <?  super  T>  rawType  =  type.getRawType();	      	non-compiled	[CE]  illegal  start  of  type	13	None	replace
143	[BUG]  [BUGGY]  Object  <?>  rawType  =  type.getRawType();  [CE]  illegal  start  of  type  [FE]                              ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  Object  <?>  rawType  =  type.getRawType();  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Object  <?>  rawType  =  type.getRawType();	      	non-compiled	[CE]  illegal  start  of  type	13	None	replace
144	[BUG]  [BUGGY]  Class  <?  superType  =  type.getRawClass();  [CE]  >,  extends,  or  super  expected  [FE]                                ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  Class  <?  superType  =  type.getRawClass();  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  =  type.getRawClass();	      	non-compiled	[CE]  >,  extends,  or  super  expected	13	None	replace
145	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(Collection.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(Collection.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(Collection.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
146	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignedFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignedFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignedFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
147	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignABLEFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignABLEFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignABLEFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
148	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(SortedMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	19	2	replace
149	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	19	2	replace
150	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Collection.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	19	3	replace
151	[BUG]  [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]      NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Collection.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	19	3	replace
152	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Object.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Object.class.isAssignableFrom(rawType)||  Object.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	10	3	replace
153	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Object.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Object.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||  Object.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	10	3	replace
154	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.equals(rawType))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.equals(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.equals(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
155	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]    ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(type))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(type))  {	  if(TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	2	None	replace
156	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(SortedMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	15	3	replace
157	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	15	3	replace
158	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Collection.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	15	3	replace
159	[BUG]  [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Collection.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	15	3	replace
160	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignedFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignedFrom(rawType))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignedFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
161	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]    NullPointerException    [CONTEXT]    }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {    [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(type))  {  [BUGGY]    return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(type))  {	  if(Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	4	None	replace
