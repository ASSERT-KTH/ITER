bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(type,  rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;  [FE]        ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(type,  rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(type,  rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)&&    TreeMap.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;	155	None	replace
2	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(type))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(type))  {	  if(TreeMap.class.isAssignableFrom(rawType)&&    TreeMap.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	155	None	replace
3	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(type)&&  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]            ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(type)&&  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(type)&&  TreeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)&&    TreeMap.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	155	None	replace
4	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(type,  type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(type,  type))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(type,  type))  {	  if(TreeMap.class.isAssignableFrom(rawType)&&    TreeMap.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	155	None	replace
5	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(type,  elementType))  {  [CE]  cannot  find  symbol  elementType  [FE]                ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(type,  elementType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(type,  elementType))  {	  if(TreeMap.class.isAssignableFrom(rawType)&&    TreeMap.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  elementType	155	None	replace
6	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                  ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(type))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Type.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(type))  {	  if(TreeMap.class.isAssignableFrom(rawType)&&    TreeMap.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	155	None	replace
7	[BUG]  [BUGGY]  Class  <?  superType  =  rawType.getSuperClass();  [CE]  >,  extends,  or  super  expected  [FE]                          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  =  rawType.getSuperClass();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  =  rawType.getSuperClass();	  Class    <?    superType    =    type.getSuperClass();    	non-compiled	[CE]  >,  extends,  or  super  expected	139	None	replace
8	[BUG]  [BUGGY]  Class  <?  superType  =  elementType.getSuperClass();  [CE]  >,  extends,  or  super  expected  [FE]                            ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  =  elementType.getSuperClass();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  =  elementType.getSuperClass();	  Class    <?    superType    =    type.getSuperClass();    	non-compiled	[CE]  >,  extends,  or  super  expected	139	None	replace
9	[BUG]  [BUGGY]  Class  <?  superType  =  type.getSuperClass()  ||  elementType.isAssignableFrom(rawType);  [CE]  >,  extends,  or  super  expected  [FE]                              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  =  type.getSuperClass()  ||  elementType.isAssignableFrom(rawType);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  =  type.getSuperClass()  ||  elementType.isAssignableFrom(rawType);	  Class    <?    superType    =    type.getSuperClass();    	non-compiled	[CE]  >,  extends,  or  super  expected	139	None	replace
10	[BUG]  [BUGGY]  Class  <?  superType  =  type.getSuperClass()  ||  rawType.isPrimitive();  [CE]  >,  extends,  or  super  expected  [FE]                                ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  =  type.getSuperClass()  ||  rawType.isPrimitive();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  =  type.getSuperClass()  ||  rawType.isPrimitive();	  Class    <?    superType    =    type.getSuperClass();    	non-compiled	[CE]  >,  extends,  or  super  expected	139	None	replace
11	[BUG]  [BUGGY]  Class  <?  superType  =  type.getSuperClass()  ||  rawType.isAssignableFrom(rawType);  [CE]  >,  extends,  or  super  expected  [FE]                                  ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  =  type.getSuperClass()  ||  rawType.isAssignableFrom(rawType);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  =  type.getSuperClass()  ||  rawType.isAssignableFrom(rawType);	  Class    <?    superType    =    type.getSuperClass();    	non-compiled	[CE]  >,  extends,  or  super  expected	139	None	replace
12	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(TreeMap.class)&&  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(rawType.isAssignableFrom(TreeMap.class)&&  TreeMap.class.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(TreeMap.class)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	62	3	replace
13	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(TreeMap.class)&&  TreeMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(TreeMap.class)&&  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(TreeMap.class)&&  TreeMap.class.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(TreeMap.class)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	62	3	replace
14	[BUG]  [BUGGY]  if(Type.isAssignableFrom(TreeMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Type.isAssignableFrom(TreeMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Type.isAssignableFrom(TreeMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(TreeMap.class)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
15	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAs  [CE]  ')'  expected  [FE]              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAs  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAs	  if(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    If(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ')'  expected	66	None	replace
16	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAs  [CE]  ')'  expected  [FE]                ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAs  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAs	  if(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    If(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ')'  expected	66	None	replace
17	[BUG]  [BUGGY]  if(ReferenceMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAs  [CE]  ')'  expected  [FE]                  ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ReferenceMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAs  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReferenceMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAs	  if(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    If(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ')'  expected	66	None	replace
18	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAs  [CE]  ')'  expected  [FE]                    ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAs  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAs	  if(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    If(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ')'  expected	66	None	replace
19	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssign  [CE]  ')'  expected  [FE]                      ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssign  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssign	  if(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    If(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ')'  expected	66	None	replace
20	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom  [CE]  ')'  expected  [FE]                        ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom	  if(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    If(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ')'  expected	66	None	replace
21	[BUG]  [BUGGY]  if(SortedMap.class.isAssignedFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignedFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignedFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(SortedMap.class.isAssignedFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
22	[BUG]  [BUGGY]  if(Reflection.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                  NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Reflection.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Reflection.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(SortedMap.class.isAssignedFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
23	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Reference.class)||  Map.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Reference.class)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(Reference.class)||  Map.class.isAssignableFrom(rawType))  {	  if(Reference.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
24	[BUG]  [BUGGY]  if(R.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(R.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(R.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(Reference.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
25	[BUG]  [BUGGY]  if(Rendering.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Rendering.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Rendering.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(Reference.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
26	[BUG]  [BUGGY]  if(Reference.class.isAssignableFrom(rawType)||  Reference.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Reference.class.isAssignableFrom(rawType)||  Reference.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Reference.class.isAssignableFrom(rawType)||  Reference.class.isAssignableFrom(rawType))  {	  if(Reference.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
27	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Collection.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(Reference.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	107	3	replace
28	[BUG]  [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Collection.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(Reference.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	107	3	replace
29	[BUG]  [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(Collection.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(Collection.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Collection.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(Collection.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	158	None	add
30	[BUG]  [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(Collection.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]      ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(Collection.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Collection.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    If(Collection.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	158	None	add
31	[BUG]  [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(Collection.class.isAssignedFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(Collection.class.isAssignedFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Collection.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(Collection.class.isAssignedFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	158	None	add
32	[BUG]  [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(Collection.class.isAssignableFrom(rawType)||  TreeMap.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(Collection.class.isAssignableFrom(rawType)||  TreeMap.Class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Collection.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(Collection.class.isAssignableFrom(rawType)||  TreeMap.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	158	None	add
33	[BUG]  [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(Collection.Class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(Collection.Class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Collection.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(Collection.Class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	158	None	add
34	[BUG]  [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(Collection.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignedableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(Collection.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignedableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Collection.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(Collection.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignedableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	158	None	add
35	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(ReflectionMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(ReflectionMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(ReflectionMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(ReflectionMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
36	[BUG]  [BUGGY]  if(RenderingMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(RenderingMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(RenderingMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(ReflectionMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
37	[BUG]  [BUGGY]  if(ReflectionMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ReflectionMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReflectionMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {	  if(ReflectionMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
38	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                  ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Collection.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(ReflectionMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	22	2	replace
39	[BUG]  [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]                  ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Collection.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(ReflectionMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	22	2	replace
40	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]              NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Collection.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType))    {    if(Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	111	3	replace
41	[BUG]  [BUGGY]  if(Collection.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]              NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Collection.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType))    {    if(Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	111	3	replace
42	[BUG]  [BUGGY]  if(Reflection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Reflection.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Reflection.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType))    {    if(Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
43	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Map.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType))    {    if(Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	111	3	replace
44	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType))    {    if(Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	111	3	replace
45	[BUG]  [BUGGY]  if(Reference.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                    NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Reference.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Reference.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType))    {    if(Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
46	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Map.class)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(rawType.isAssignableFrom(Map.class)&&  SortedMap.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)&&    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	74	3	replace
47	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Map.class)&&  SortedMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Map.class)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(Map.class)&&  SortedMap.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)&&    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	74	3	replace
48	[BUG]  [BUGGY]  if(GradientMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]      ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(GradientMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(GradientMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)&&    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
49	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Type.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)&&    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	74	3	replace
50	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Type.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)&&    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	74	3	replace
51	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(TreeMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(rawType.isAssignableFrom(TreeMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	63	3	replace
52	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(TreeMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]        ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(TreeMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(TreeMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	63	3	replace
53	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(rawType.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	63	3	replace
54	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	63	3	replace
55	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)&&    TreeMap.class.isAssignableFrom(rawType))    {    if(SortedMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	156	None	add
56	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignedFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignedFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)&&    TreeMap.class.isAssignableFrom(rawType))    {    if(SortedMap.class.isAssignedFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	156	None	add
57	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]        ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)&&    TreeMap.class.isAssignableFrom(rawType))    {    If(SortedMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	156	None	add
58	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  if(SortedMap.Class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  if(SortedMap.Class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)&&    TreeMap.class.isAssignableFrom(rawType))    {    if(SortedMap.Class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	156	None	add
59	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignableFrom(rawType)&&  TreeMap.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignableFrom(rawType)&&  TreeMap.Class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)&&    TreeMap.class.isAssignableFrom(rawType))    {    if(SortedMap.class.isAssignableFrom(rawType)&&  TreeMap.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	156	None	add
60	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignedFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignedFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)&&    TreeMap.class.isAssignableFrom(rawType))    {    if(SortedMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignedFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	156	None	add
61	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignableFrom(rawType)&&  TreeMap.class.equals(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignableFrom(rawType)&&  TreeMap.class.equals(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)&&    TreeMap.class.isAssignableFrom(rawType))    {    if(SortedMap.class.isAssignableFrom(rawType)&&  TreeMap.class.equals(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	156	None	add
62	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Type.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(Object.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	7	3	replace
63	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Type.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(Object.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	7	3	replace
64	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Object.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {	  if(Object.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	7	3	replace
65	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]      NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {	  if(Object.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	7	3	replace
66	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(GradientMap.class)||  Map.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(GradientMap.class)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(GradientMap.class)||  Map.class.isAssignableFrom(rawType))  {	  if(GradientMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
67	[BUG]  [BUGGY]  if(ReferenceMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ReferenceMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReferenceMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(GradientMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
68	[BUG]  [BUGGY]  if(TreeMap.class.isAssignedFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignedFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignedFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignedFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
69	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(SortedMap.class)||    TreeMap.class.isAssignableFrom(rawType))    {    if(rawType.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
70	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignedFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignedFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(SortedMap.class)||    TreeMap.class.isAssignableFrom(rawType))    {    if(rawType.isAssignedFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
71	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(OrtedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(OrtedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(SortedMap.class)||    TreeMap.class.isAssignableFrom(rawType))    {    if(rawType.isAssignableFrom(OrtedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
72	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(SortedMap.class)||  TreeMap.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(SortedMap.class)||  TreeMap.Class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(SortedMap.class)||    TreeMap.class.isAssignableFrom(rawType))    {    if(rawType.isAssignableFrom(SortedMap.class)||  TreeMap.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
73	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  If(rawType.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  If(rawType.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(SortedMap.class)||    TreeMap.class.isAssignableFrom(rawType))    {    If(rawType.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	4	None	add
74	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(String.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(rawType.isAssignableFrom(String.class)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(String.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	130	3	replace
75	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(String.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(String.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(String.class)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(String.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	130	3	replace
76	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(String.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(String.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(String.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	130	3	replace
77	[BUG]  [BUGGY]  if(String.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]      ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(String.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(String.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(String.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	130	3	replace
78	[BUG]  [BUGGY]  if(ReferenceMap.class.isAssignableFrom(rawType)||  ReferenceMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ReferenceMap.class.isAssignableFrom(rawType)||  ReferenceMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReferenceMap.class.isAssignableFrom(rawType)||  ReferenceMap.class.isAssignableFrom(rawType))  {	  if(ReferenceMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
79	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(ReferenceMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(ReferenceMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(ReferenceMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(ReferenceMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
80	[BUG]  [BUGGY]  if(TreeMap.Class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  Class  [FE]            ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.Class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.Class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(TreeMap.Class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  Class	65	None	replace
81	[BUG]  [BUGGY]  if(String.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(String.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(String.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(String.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(String.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(String.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	129	None	add
82	[BUG]  [BUGGY]  if(String.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(String.class.isAssignedFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(String.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(String.class.isAssignedFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(String.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(String.class.isAssignedFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	129	None	add
83	[BUG]  [BUGGY]  if(String.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(String.class.isAssignableFrom(rawType)||  TreeMap.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(String.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(String.class.isAssignableFrom(rawType)||  TreeMap.Class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(String.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(String.class.isAssignableFrom(rawType)||  TreeMap.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	129	None	add
84	[BUG]  [BUGGY]  if(String.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(String.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]          ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(String.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(String.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(String.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    If(String.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	129	None	add
85	[BUG]  [BUGGY]  if(String.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(String.Class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(String.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(String.Class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(String.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(String.Class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	129	None	add
86	[BUG]  [BUGGY]  if(String.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(String.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignABLEFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(String.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(String.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignABLEFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(String.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(String.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignABLEFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	129	None	add
87	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(TreeMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(TreeMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(TreeMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(TreeMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(TreeMap.class)||    TreeMap.class.isAssignableFrom(rawType))    {    if(rawType.isAssignableFrom(TreeMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
88	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(TreeMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignedFrom(TreeMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(TreeMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignedFrom(TreeMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(TreeMap.class)||    TreeMap.class.isAssignableFrom(rawType))    {    if(rawType.isAssignedFrom(TreeMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
89	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(TreeMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(TreeMap.class)||  TreeMap.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(TreeMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(TreeMap.class)||  TreeMap.Class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(TreeMap.class)||    TreeMap.class.isAssignableFrom(rawType))    {    if(rawType.isAssignableFrom(TreeMap.class)||  TreeMap.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
90	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(TreeMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  If(rawType.isAssignableFrom(TreeMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(TreeMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  If(rawType.isAssignableFrom(TreeMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(TreeMap.class)||    TreeMap.class.isAssignableFrom(rawType))    {    If(rawType.isAssignableFrom(TreeMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	61	None	add
91	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(TreeMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(ReeMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(TreeMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(ReeMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(TreeMap.class)||    TreeMap.class.isAssignableFrom(rawType))    {    if(rawType.isAssignableFrom(ReeMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
92	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.Class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  Class  [FE]                ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.Class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.Class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  Class	49	None	replace
93	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                      NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Map.class))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(rawType.isAssignableFrom(Map.class))  {	  if(Map.class.isAssignableFrom(rawType))    {    if(Map.Class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	90	4	replace
94	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Map.class))  {  [FE]  NullPointerException  [FE]                      NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Map.class))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(Map.class))  {	  if(Map.class.isAssignableFrom(rawType))    {    if(Map.Class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	90	4	replace
95	[BUG]  [BUGGY]  if(GradientMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                        NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(GradientMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(GradientMap.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType))    {    if(Map.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
96	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                          NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Type.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType))    {    if(Map.Class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	90	3	replace
97	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]                          NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Type.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType))    {    if(Map.Class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	90	3	replace
98	[BUG]  [BUGGY]  if(Map.Class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  Class  [FE]                            NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.Class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.Class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType))    {    if(Map.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  Class	90	None	replace
99	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]          NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TypeUtils.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TypeUtils.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	137	None	replace
100	[BUG]  [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(type))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Collection.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(type))  {	  if(Collection.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	159	None	replace
101	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Collection.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Collection.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {	  if(Collection.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	159	3	replace
102	[BUG]  [BUGGY]  if(Collection.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Collection.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Collection.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {	  if(Collection.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	159	3	replace
103	[BUG]  [BUGGY]  Type  elementType  =  rawType.getElementType();  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Type  elementType  =  rawType.getElementType();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Type  elementType  =  rawType.getElementType();	  Type    elementType    =    type.getElementType();    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
104	[BUG]  [BUGGY]  Type  elementType  =(Type)type.getElementType();  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Type  elementType  =(Type)type.getElementType();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Type  elementType  =(Type)type.getElementType();	  Type    elementType    =    type.getElementType();    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
105	[BUG]  [BUGGY]  Type  elementType  =  type.getRawType();  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Type  elementType  =  type.getRawType();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Type  elementType  =  type.getRawType();	  Type    elementType    =    type.getElementType();    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
106	[BUG]  [BUGGY]  Type  elementType  =  type.getDeclaredType();  [CE]  illegal  start  of  type  [FE]                                  ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Type  elementType  =  type.getDeclaredType();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Type  elementType  =  type.getDeclaredType();	  Type    elementType    =    type.getElementType();    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
107	[BUG]  [BUGGY]  Type  elementType  =  type.getConstructor();  [CE]  illegal  start  of  type  [FE]                                    ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Type  elementType  =  type.getConstructor();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Type  elementType  =  type.getConstructor();	  Type    elementType    =    type.getElementType();    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
108	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  SortedMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(Map.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  SortedMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(Map.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(Map.class)||    SortedMap.class.isAssignableFrom(rawType))    {    if(rawType.isAssignableFrom(Map.class)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	75	None	add
109	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  SortedMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignedFrom(Map.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  SortedMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignedFrom(Map.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(Map.class)||    SortedMap.class.isAssignableFrom(rawType))    {    if(rawType.isAssignedFrom(Map.class)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	75	None	add
110	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  SortedMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(Map.Class)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  SortedMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(Map.Class)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(Map.class)||    SortedMap.class.isAssignableFrom(rawType))    {    if(rawType.isAssignableFrom(Map.Class)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	75	None	add
111	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  SortedMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(Map.class)||  SortedMap.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  SortedMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(Map.class)||  SortedMap.Class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(Map.class)||    SortedMap.class.isAssignableFrom(rawType))    {    if(rawType.isAssignableFrom(Map.class)||  SortedMap.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	75	None	add
112	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  SortedMap.class.isAssignableFrom(rawType))  {  If(rawType.isAssignableFrom(Map.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  SortedMap.class.isAssignableFrom(rawType))  {  If(rawType.isAssignableFrom(Map.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(Map.class)||    SortedMap.class.isAssignableFrom(rawType))    {    If(rawType.isAssignableFrom(Map.class)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	75	None	add
113	[BUG]  [BUGGY]  if(GradientMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(GradientMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(GradientMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {	  if(GradientMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
114	[BUG]  [BUGGY]  if(reflection.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(reflection.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(reflection.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(Reflection.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
115	[BUG]  [BUGGY]  if(Reflection.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Reflection.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Reflection.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(Reflection.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
116	[BUG]  [BUGGY]  Constructor.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  not  a  statement  [FE]                  NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Constructor.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Constructor.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(Reflection.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  not  a  statement	134	None	replace
117	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Treemap.class))  {  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Treemap.class))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(Treemap.class))  {	  if(Treemap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
118	[BUG]  [BUGGY]  if(rawType.class.isAssignableFrom(Treemap.class))  {  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.class.isAssignableFrom(Treemap.class))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.class.isAssignableFrom(Treemap.class))  {	  if(Treemap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
119	[BUG]  [BUGGY]  if(ReferenceMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ReferenceMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReferenceMap.class.isAssignableFrom(rawType))  {	  if(Treemap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
120	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
121	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType)||  Map.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType)||  Map.Class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignableFrom(rawType)||  Map.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
122	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(TreeMap.Class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(TreeMap.Class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(TreeMap.Class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
123	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignedFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignedFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignedFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
124	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    If(TreeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	24	None	add
125	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(ReeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(ReeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(ReeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
126	[BUG]  [BUGGY]  Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [CE]  >,  extends,  or  super  expected  [FE]                        ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>	  Class    <?    superType    &&    type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    ObjectConstructor    <    T>()    {    @Override    	non-compiled	[CE]  >,  extends,  or  super  expected	99	None	replace
127	[BUG]  [BUGGY]  Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  [CE]  >,  extends,  or  super  expected  [FE]                          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <	  Class    <?    superType    &&    type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    ObjectConstructor    <    T>()    {    @Override    	non-compiled	[CE]  >,  extends,  or  super  expected	99	None	replace
128	[BUG]  [BUGGY]  Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstruct  [CE]  >,  extends,  or  super  expected  [FE]                            ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstruct  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstruct	  Class    <?    superType    &&    type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    ObjectConstructor    <    T>()    {    @Override    	non-compiled	[CE]  >,  extends,  or  super  expected	99	None	replace
129	[BUG]  [BUGGY]  Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  Object  [CE]  >,  extends,  or  super  expected  [FE]                              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  Object  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  Object	  Class    <?    superType    &&    type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    ObjectConstructor    <    T>()    {    @Override    	non-compiled	[CE]  >,  extends,  or  super  expected	99	None	replace
130	[BUG]  [BUGGY]  if(Map.Class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  Class  [FE]          NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.Class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.Class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(Map.Class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  Class	15	None	replace
131	[BUG]  [BUGGY]  if(Map.class.isAssignedFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignedFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignedFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignedFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
132	[BUG]  [BUGGY]  Object  <?>  rawType  =  elementType.getRawType();  [CE]  illegal  start  of  type  [FE]                                  ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Object  <?>  rawType  =  elementType.getRawType();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Object  <?>  rawType  =  elementType.getRawType();	  Object    <?>    rawType    =    type.getRawType();    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
133	[BUG]  [BUGGY]  Object  <?>  rawType  =  type.getRawClass();  [CE]  illegal  start  of  type  [FE]                                    ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Object  <?>  rawType  =  type.getRawClass();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Object  <?>  rawType  =  type.getRawClass();	  Object    <?>    rawType    =    type.getRawType();    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
134	[BUG]  [BUGGY]  Object  <?>  rawType  =  type.getReturnType();  [CE]  illegal  start  of  type  [FE]                                      ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Object  <?>  rawType  =  type.getReturnType();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Object  <?>  rawType  =  type.getReturnType();	  Object    <?>    rawType    =    type.getRawType();    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
135	[BUG]  [BUGGY]  Object  <?>  rawType  =  types.getRawType();  [CE]  illegal  start  of  type  [FE]                                        ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Object  <?>  rawType  =  types.getRawType();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Object  <?>  rawType  =  types.getRawType();	  Object    <?>    rawType    =    type.getRawType();    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
136	[BUG]  [BUGGY]  Object  <?>  rawType  =  objectType.getRawType();  [CE]  illegal  start  of  type  [FE]                                          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Object  <?>  rawType  =  objectType.getRawType();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Object  <?>  rawType  =  objectType.getRawType();	  Object    <?>    rawType    =    type.getRawType();    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
137	[BUG]  [BUGGY]  Object  <?>  rawType  =  type.getRawType(0);  [CE]  illegal  start  of  type  [FE]                                            ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Object  <?>  rawType  =  type.getRawType(0);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Object  <?>  rawType  =  type.getRawType(0);	  Object    <?>    rawType    =    type.getRawType();    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
138	[BUG]  [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  if(Collection.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  if(Collection.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Collection.class.isAssignableFrom(rawType)||    Collection.class.isAssignableFrom(rawType))    {    if(Collection.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	150	None	add
139	[BUG]  [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  If(Collection.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]      ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  If(Collection.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Collection.class.isAssignableFrom(rawType)||    Collection.class.isAssignableFrom(rawType))    {    If(Collection.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	150	None	add
140	[BUG]  [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Collection.class.isAssignableFrom(rawType)||    Collection.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	150	None	add
141	[BUG]  [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Collection.class.isAssignableFrom(rawType)||    Collection.class.isAssignableFrom(rawType))    {    if(Object.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	150	None	add
142	[BUG]  [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  if(Collection.Class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  if(Collection.Class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Collection.class.isAssignableFrom(rawType)||    Collection.class.isAssignableFrom(rawType))    {    if(Collection.Class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	150	None	add
143	[BUG]  [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  if(Collection.class.isAssignedFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  if(Collection.class.isAssignedFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Collection.class.isAssignableFrom(rawType)||    Collection.class.isAssignableFrom(rawType))    {    if(Collection.class.isAssignedFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	150	None	add
144	[BUG]  [BUGGY]  if(Type.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Type.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Type.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(SortedMap.class)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
145	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Map.class.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(SortedMap.class)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	5	3	replace
146	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(SortedMap.class)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	5	3	replace
147	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)&&  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(rawType.isAssignableFrom(SortedMap.class)&&  TreeMap.class.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(SortedMap.class)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	5	3	replace
148	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)&&  TreeMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]        NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)&&  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(SortedMap.class)&&  TreeMap.class.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(SortedMap.class)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	5	3	replace
149	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(ReflectionMap.class)||  Map.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(ReflectionMap.class)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(ReflectionMap.class)||  Map.class.isAssignableFrom(rawType))  {	  if(ReflectionMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
150	[BUG]  [BUGGY]  if(ReflectionMap.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ReflectionMap.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReflectionMap.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {	  if(ReflectionMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
151	[BUG]  [BUGGY]  if(RenderingMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(RenderingMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(RenderingMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(ReflectionMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
152	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
153	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(Map.Class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(Map.Class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(Map.Class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
154	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignedFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignedFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignedFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
155	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignableFrom(rawType)||  TreeMap.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignableFrom(rawType)||  TreeMap.Class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)||  TreeMap.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
156	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    If(Map.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	1	None	add
157	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(SortedMap.Class.isAssignableFrom(rawType)||  TreeMap.class.isAs  [CE]  <identifier>  expected  [FE]              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(SortedMap.Class.isAssignableFrom(rawType)||  TreeMap.class.isAs  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType  instanceof  SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(SortedMap.Class.isAssignableFrom(rawType)||  TreeMap.class.isAs	  if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(SortedMap.Class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
158	[BUG]  [BUGGY]  if(SortedMap.Class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  Class  [FE]                ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.Class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.Class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(SortedMap.Class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  Class	48	None	replace
159	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Reflection.class)||  Reflection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Reflection.class)||  Reflection.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(Reflection.class)||  Reflection.class.isAssignableFrom(rawType))  {	  if(Reflection.class.isAssignableFrom(rawType)||    Reflection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
160	[BUG]  [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  Reflection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  Reflection.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Collection.class.isAssignableFrom(rawType)||  Reflection.class.isAssignableFrom(rawType))  {	  if(Reflection.class.isAssignableFrom(rawType)||    Reflection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
161	[BUG]  [BUGGY]  if(Rendering.class.isAssignableFrom(rawType)||  Reflection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Rendering.class.isAssignableFrom(rawType)||  Reflection.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Rendering.class.isAssignableFrom(rawType)||  Reflection.class.isAssignableFrom(rawType))  {	  if(Reflection.class.isAssignableFrom(rawType)||    Reflection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
162	[BUG]  [BUGGY]  if(Reflection.class.isAssignableFrom(rawType)&&  Reflection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Reflection.class.isAssignableFrom(rawType)&&  Reflection.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Reflection.class.isAssignableFrom(rawType)&&  Reflection.class.isAssignableFrom(rawType))  {	  if(Reflection.class.isAssignableFrom(rawType)||    Reflection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
163	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Reflection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Reflection.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||  Reflection.class.isAssignableFrom(rawType))  {	  if(Reflection.class.isAssignableFrom(rawType)||    Reflection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
164	[BUG]  [BUGGY]  if(TreeMap.Class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  Class  [FE]              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.Class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.Class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.Class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  Class	54	None	replace
165	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.Class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	54	3	replace
166	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]                ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.Class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	54	3	replace
167	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                  ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(TreeMap.class)||  rawType.isAssignableFrom(TreeMap.class))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(rawType.isAssignableFrom(TreeMap.class)||  rawType.isAssignableFrom(TreeMap.class))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.Class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	54	3	replace
168	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(TreeMap.class)||  rawType.isAssignableFrom(TreeMap.class))  {  [FE]  NullPointerException  [FE]                  ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(TreeMap.class)||  rawType.isAssignableFrom(TreeMap.class))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(TreeMap.class)||  rawType.isAssignableFrom(TreeMap.class))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.Class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	54	3	replace
169	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(rawType.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	31	3	replace
170	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	31	3	replace
171	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Object.class)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(rawType.isAssignableFrom(Object.class)||  Map.class.isAssignableFrom(rawType))  {	  if(Object.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	30	3	replace
172	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Object.class)||  Map.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Object.class)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(Object.class)||  Map.class.isAssignableFrom(rawType))  {	  if(Object.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	30	3	replace
173	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Type.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(Object.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	30	3	replace
174	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Type.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(Object.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	30	3	replace
175	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]        NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(type))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(type))  {	  if(Object.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	30	None	replace
176	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(SortedMap.class)||    SortedMap.class.isAssignableFrom(rawType))    {    if(rawType.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
177	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(OrderedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(OrderedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(SortedMap.class)||    SortedMap.class.isAssignableFrom(rawType))    {    if(rawType.isAssignableFrom(OrderedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
178	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignedFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignedFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(SortedMap.class)||    SortedMap.class.isAssignableFrom(rawType))    {    if(rawType.isAssignedFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
179	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(OrtedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(OrtedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(SortedMap.class)||    SortedMap.class.isAssignableFrom(rawType))    {    if(rawType.isAssignableFrom(OrtedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
180	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  If(rawType.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  If(rawType.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(SortedMap.class)||    SortedMap.class.isAssignableFrom(rawType))    {    If(rawType.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	93	None	add
181	[BUG]  [BUGGY]  Class  <?  superType  =  rawType.getRawClass();  [CE]  >,  extends,  or  super  expected  [FE]                                    ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  =  rawType.getRawClass();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  =  rawType.getRawClass();	  Class    <?    superType    =    type.getRawClass();    	non-compiled	[CE]  >,  extends,  or  super  expected	144	None	replace
182	[BUG]  [BUGGY]  Class  <?  superType  =  elementType.getRawClass();  [CE]  >,  extends,  or  super  expected  [FE]                                      ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  =  elementType.getRawClass();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  =  elementType.getRawClass();	  Class    <?    superType    =    type.getRawClass();    	non-compiled	[CE]  >,  extends,  or  super  expected	144	None	replace
183	[BUG]  [BUGGY]  Class  <?  superType  =  type.getRawSuperClass();  [CE]  >,  extends,  or  super  expected  [FE]                                        ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  =  type.getRawSuperClass();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  =  type.getRawSuperClass();	  Class    <?    superType    =    type.getRawClass();    	non-compiled	[CE]  >,  extends,  or  super  expected	144	None	replace
184	[BUG]  [BUGGY]  Class  <?  superType  =  type.getReturnType();  [CE]  >,  extends,  or  super  expected  [FE]                                          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  =  type.getReturnType();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  =  type.getReturnType();	  Class    <?    superType    =    type.getRawClass();    	non-compiled	[CE]  >,  extends,  or  super  expected	144	None	replace
185	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Type.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	95	None	add
186	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignedFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignedFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Type.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignedFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	95	None	add
187	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(Type.Class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(Type.Class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Type.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(Type.Class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	95	None	add
188	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignableFrom(rawType)||  SortedMap.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignableFrom(rawType)||  SortedMap.Class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Type.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignableFrom(rawType)||  SortedMap.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	95	None	add
189	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(Type.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]            ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(Type.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Type.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    If(Type.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	95	None	add
190	[BUG]  [BUGGY]  if(Reflection.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Reflection.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Reflection.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(Object.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
191	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Object.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType))    {    if(Object.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	110	3	replace
192	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType))    {    if(Object.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	110	3	replace
193	[BUG]  [BUGGY]  if(Type.isAssignableFrom(Map.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Type.isAssignableFrom(Map.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Type.isAssignableFrom(Map.class)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(Map.class)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
194	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(rawType.isAssignableFrom(Map.class)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(Map.class)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	76	4	replace
195	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(Map.class)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(Map.class)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	76	4	replace
196	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Reference.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Reference.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(Reference.class)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(Reference.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
197	[BUG]  [BUGGY]  if(Renderer.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Renderer.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Renderer.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(Reference.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
198	[BUG]  [BUGGY]  if(Reference.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Reference.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Reference.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {	  if(Reference.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
199	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignABLEFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignABLEFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignABLEFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignABLEFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
200	[BUG]  [BUGGY]  if(Reference.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Reference.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Reference.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(Reference.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
201	[BUG]  [BUGGY]  if(reference.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(reference.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(reference.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(Reference.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
202	[BUG]  [BUGGY]  ||  Reference.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  ||  Reference.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	||  Reference.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(Reference.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
203	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.Class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  Class  [FE]                ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.Class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.Class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  Class	67	None	replace
204	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Map.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)&&    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	58	3	replace
205	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)&&    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	58	3	replace
206	[BUG]  [BUGGY]  if(ReflectionMap.class.isAssignableFrom(rawType)||  AbstractMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ReflectionMap.class.isAssignableFrom(rawType)||  AbstractMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReflectionMap.class.isAssignableFrom(rawType)||  AbstractMap.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType))    {    if(ReflectionMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
207	[BUG]  [BUGGY]  if(ReflectionMap.class.isAssignableFrom(rawType)||  Character.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ReflectionMap.class.isAssignableFrom(rawType)||  Character.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReflectionMap.class.isAssignableFrom(rawType)||  Character.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType))    {    if(ReflectionMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
208	[BUG]  [BUGGY]  Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  LinkedHashMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).get  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  LinkedHashMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).get  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  LinkedHashMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).get	  Constructor    <    T>    construct()    {    return(Constructor    <    T>)new    LinkedHashMap    <    Object,    Object>();    }    else    if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]    	non-compiled	[CE]  ';'  expected	81	None	replace
209	[BUG]  [BUGGY]  Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  LinkedHashMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getRawType  [CE]  ';'  expected  [FE]                            ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  LinkedHashMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getRawType  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  LinkedHashMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getRawType	  Constructor    <    T>    construct()    {    return(Constructor    <    T>)new    LinkedHashMap    <    Object,    Object>();    }    else    if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]    	non-compiled	[CE]  ';'  expected	81	None	replace
210	[BUG]  [BUGGY]  Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  LinkedHashMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualType  [CE]  ';'  expected  [FE]                              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  LinkedHashMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualType  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  LinkedHashMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualType	  Constructor    <    T>    construct()    {    return(Constructor    <    T>)new    LinkedHashMap    <    Object,    Object>();    }    else    if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]    	non-compiled	[CE]  ';'  expected	81	None	replace
211	[BUG]  [BUGGY]  Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  LinkedHashMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments  [CE]  ';'  expected  [FE]                                ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  LinkedHashMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  LinkedHashMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments	  Constructor    <    T>    construct()    {    return(Constructor    <    T>)new    LinkedHashMap    <    Object,    Object>();    }    else    if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]    	non-compiled	[CE]  ';'  expected	81	None	replace
212	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Object.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {	  if(Collection.class.isAssignableFrom(rawType)||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	151	3	replace
213	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {	  if(Collection.class.isAssignableFrom(rawType)||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	151	3	replace
214	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Collection.class)||  rawType.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(rawType.isAssignableFrom(Collection.class)||  rawType.isAssignableFrom(rawType))  {	  if(Collection.class.isAssignableFrom(rawType)||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	151	3	replace
215	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Collection.class)||  rawType.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]      ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Collection.class)||  rawType.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(Collection.class)||  rawType.isAssignableFrom(rawType))  {	  if(Collection.class.isAssignableFrom(rawType)||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	151	3	replace
216	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  SortedMap.Class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  Class  [FE]                NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  SortedMap.Class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||  SortedMap.Class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)||    SortedMap.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  Class	18	None	replace
217	[BUG]  [BUGGY]  if(ReturnMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                  NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ReturnMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReturnMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)||    SortedMap.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
218	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(ObjectConstructor.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(ObjectConstructor.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	124	3	replace
219	[BUG]  [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ObjectConstructor.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(ObjectConstructor.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	124	3	replace
220	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(ObjectConstructor.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {	  if(ObjectConstructor.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	124	3	replace
221	[BUG]  [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ObjectConstructor.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {	  if(ObjectConstructor.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	124	3	replace
222	[BUG]  [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]        ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(type))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ObjectConstructor.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(type))  {	  if(ObjectConstructor.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	124	None	replace
223	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  <identifier>  expected  [FE]        NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType  instanceof  SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.equals(rawType))    {    	non-compiled	[CE]  <identifier>  expected	154	None	replace
224	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.equals(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.equals(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.equals(rawType))    {    	compilable	  [FE]  NullPointerException  	154	3	replace
225	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.equals(rawType))  {  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.equals(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.equals(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.equals(rawType))    {    	compilable	  [FE]  NullPointerException  	154	3	replace
226	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.Class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  Class  [FE]            NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.Class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||  Map.Class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)||    Map.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  Class	11	None	replace
227	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    If(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	34	None	replace
228	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    If(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	34	None	replace
229	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType)  [CE]  ')'  expected  [FE]                  NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType)  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType)	  if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    If(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ')'  expected	34	None	replace
230	[BUG]  [BUGGY]  If(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  If(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	If(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    If(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	34	None	replace
231	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType)  [CE]  ')'  expected  [FE]                      NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType)  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType)	  if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    If(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ')'  expected	34	None	replace
232	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    If(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	34	None	replace
233	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Object.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)||  Object.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Object.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)||  Object.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||    Object.class.isAssignableFrom(rawType))    {    if(Object.class.isAssignableFrom(rawType)||  Object.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	152	None	add
234	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Object.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignedFrom(rawType)||  Object.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Object.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignedFrom(rawType)||  Object.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||    Object.class.isAssignableFrom(rawType))    {    if(Object.class.isAssignedFrom(rawType)||  Object.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	152	None	add
235	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Object.class.isAssignableFrom(rawType))  {  if(Object.Class.isAssignableFrom(rawType)||  Object.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Object.class.isAssignableFrom(rawType))  {  if(Object.Class.isAssignableFrom(rawType)||  Object.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||    Object.class.isAssignableFrom(rawType))    {    if(Object.Class.isAssignableFrom(rawType)||  Object.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	152	None	add
236	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Object.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)||  Object.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Object.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)||  Object.Class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||    Object.class.isAssignableFrom(rawType))    {    if(Object.class.isAssignableFrom(rawType)||  Object.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	152	None	add
237	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Object.class.isAssignableFrom(rawType))  {  If(Object.class.isAssignableFrom(rawType)||  Object.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Object.class.isAssignableFrom(rawType))  {  If(Object.class.isAssignableFrom(rawType)||  Object.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||    Object.class.isAssignableFrom(rawType))    {    If(Object.class.isAssignableFrom(rawType)||  Object.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	152	None	add
238	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Object.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)&|  Object.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Object.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)&|  Object.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||    Object.class.isAssignableFrom(rawType))    {    if(Object.class.isAssignableFrom(rawType)&|  Object.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	152	None	add
239	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)&&    SortedMap.class.isAssignableFrom(rawType))    {    if(SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	119	None	add
240	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignedFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignedFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)&&    SortedMap.class.isAssignableFrom(rawType))    {    if(SortedMap.class.isAssignedFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	119	None	add
241	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]        ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)&&    SortedMap.class.isAssignableFrom(rawType))    {    If(SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	119	None	add
242	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(SortedMap.Class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(SortedMap.Class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)&&    SortedMap.class.isAssignableFrom(rawType))    {    if(SortedMap.Class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	119	None	add
243	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.Class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)&&    SortedMap.class.isAssignableFrom(rawType))    {    if(SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	119	None	add
244	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignABLEFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignABLEFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)&&    SortedMap.class.isAssignableFrom(rawType))    {    if(SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignABLEFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	119	None	add
245	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Map.class)&&  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(rawType.isAssignableFrom(Map.class)&&  Map.class.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(Map.class)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	78	4	replace
246	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Map.class)&&  Map.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Map.class)&&  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(Map.class)&&  Map.class.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(Map.class)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	78	4	replace
247	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(TreeMap.class)||  rawType.isAssignableFrom(Map.class))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(rawType.isAssignableFrom(TreeMap.class)||  rawType.isAssignableFrom(Map.class))  {	  if(rawType.isAssignableFrom(Map.class)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	78	3	replace
248	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(TreeMap.class)||  rawType.isAssignableFrom(Map.class))  {  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(TreeMap.class)||  rawType.isAssignableFrom(Map.class))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(TreeMap.class)||  rawType.isAssignableFrom(Map.class))  {	  if(rawType.isAssignableFrom(Map.class)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	78	3	replace
249	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  rawType.isAssignableFrom(Map.class))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(rawType.isAssignableFrom(Map.class)||  rawType.isAssignableFrom(Map.class))  {	  if(rawType.isAssignableFrom(Map.class)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	78	4	replace
250	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  rawType.isAssignableFrom(Map.class))  {  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  rawType.isAssignableFrom(Map.class))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(Map.class)||  rawType.isAssignableFrom(Map.class))  {	  if(rawType.isAssignableFrom(Map.class)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	78	4	replace
251	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  type.isAssignableFrom(Map.class))  {  [CE]  cannot  find  symbol  [FE]          NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  type.isAssignableFrom(Map.class))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(Map.class)||  type.isAssignableFrom(Map.class))  {	  if(rawType.isAssignableFrom(Map.class)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
252	[BUG]  [BUGGY]  Object  <?  super  T>  rawType  =  elementType.getRawType();  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Object  <?  super  T>  rawType  =  elementType.getRawType();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Object  <?  super  T>  rawType  =  elementType.getRawType();	  Object    <?    super    T>    rawType    =    type.getRawType();    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
253	[BUG]  [BUGGY]  Object  <?  super  T>  rawType  =  type.getRawClass();  [CE]  illegal  start  of  type  [FE]                                  ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Object  <?  super  T>  rawType  =  type.getRawClass();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Object  <?  super  T>  rawType  =  type.getRawClass();	  Object    <?    super    T>    rawType    =    type.getRawType();    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
254	[BUG]  [BUGGY]  Object  <?  super  T>  rawType  =  type.getReturnType();  [CE]  illegal  start  of  type  [FE]                                    ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Object  <?  super  T>  rawType  =  type.getReturnType();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Object  <?  super  T>  rawType  =  type.getReturnType();	  Object    <?    super    T>    rawType    =    type.getRawType();    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
255	[BUG]  [BUGGY]  Object  <?  super  T>  rawType  =  type.getElementType();  [CE]  illegal  start  of  type  [FE]                                      ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Object  <?  super  T>  rawType  =  type.getElementType();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Object  <?  super  T>  rawType  =  type.getElementType();	  Object    <?    super    T>    rawType    =    type.getRawType();    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
256	[BUG]  [BUGGY]  Object  <?  super  T>  rawType  =  type.getRawType(0);  [CE]  illegal  start  of  type  [FE]                                        ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Object  <?  super  T>  rawType  =  type.getRawType(0);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Object  <?  super  T>  rawType  =  type.getRawType(0);	  Object    <?    super    T>    rawType    =    type.getRawType();    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
257	[BUG]  [BUGGY]  Object  <?  super  T>  rawType  =  objectType.getRawType();  [CE]  illegal  start  of  type  [FE]                                          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Object  <?  super  T>  rawType  =  objectType.getRawType();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Object  <?  super  T>  rawType  =  objectType.getRawType();	  Object    <?    super    T>    rawType    =    type.getRawType();    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
258	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(TreeMap.class))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(rawType.isAssignableFrom(TreeMap.class))  {	  if(TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.Class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	40	3	replace
259	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(TreeMap.class))  {  [FE]  NullPointerException  [FE]          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(TreeMap.class))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(TreeMap.class))  {	  if(TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.Class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	40	3	replace
260	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]            ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  ==  null  ||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(rawType  ==  null  ||  TreeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.Class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	40	3	replace
261	[BUG]  [BUGGY]  if(rawType  ==  null  ||  TreeMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]            ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  ==  null  ||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType  ==  null  ||  TreeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.Class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	40	3	replace
262	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType!=  null  ||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(rawType!=  null  ||  TreeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.Class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	40	3	replace
263	[BUG]  [BUGGY]  if(rawType!=  null  ||  TreeMap.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType!=  null  ||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType!=  null  ||  TreeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.Class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	40	3	replace
264	[BUG]  [BUGGY]  Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [CE]  >,  extends,  or  super  expected  [FE]                                    ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>	  Class    <?    superType    &&    type    instanceof    ParameterizedType    &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    ObjectConstructor    <    T>()    {    @Override    	non-compiled	[CE]  >,  extends,  or  super  expected	105	None	replace
265	[BUG]  [BUGGY]  Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  [CE]  >,  extends,  or  super  expected  [FE]                                      ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <	  Class    <?    superType    &&    type    instanceof    ParameterizedType    &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    ObjectConstructor    <    T>()    {    @Override    	non-compiled	[CE]  >,  extends,  or  super  expected	105	None	replace
266	[BUG]  [BUGGY]  Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstruct  [CE]  >,  extends,  or  super  expected  [FE]                                        ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstruct  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstruct	  Class    <?    superType    &&    type    instanceof    ParameterizedType    &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    ObjectConstructor    <    T>()    {    @Override    	non-compiled	[CE]  >,  extends,  or  super  expected	105	None	replace
267	[BUG]  [BUGGY]  Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  Object  [CE]  >,  extends,  or  super  expected  [FE]                                          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  Object  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  Object	  Class    <?    superType    &&    type    instanceof    ParameterizedType    &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    ObjectConstructor    <    T>()    {    @Override    	non-compiled	[CE]  >,  extends,  or  super  expected	105	None	replace
268	[BUG]  [BUGGY]  if(SortedMap.Class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  Class  [FE]              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.Class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.Class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(SortedMap.Class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  Class	71	None	replace
269	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  <identifier>  expected  [FE]                ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType  instanceof  SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(SortedMap.Class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  <identifier>  expected	71	None	replace
270	[BUG]  [BUGGY]  if(String.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(String.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(String.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(String.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(String.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(String.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	121	None	add
271	[BUG]  [BUGGY]  if(String.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(String.class.isAssignedFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(String.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(String.class.isAssignedFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(String.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(String.class.isAssignedFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	121	None	add
272	[BUG]  [BUGGY]  if(String.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(String.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]        ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(String.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(String.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(String.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    If(String.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	121	None	add
273	[BUG]  [BUGGY]  if(String.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(String.class.isAssignableFrom(rawType)||  SortedMap.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(String.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(String.class.isAssignableFrom(rawType)||  SortedMap.Class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(String.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(String.class.isAssignableFrom(rawType)||  SortedMap.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	121	None	add
274	[BUG]  [BUGGY]  if(String.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(String.Class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(String.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(String.Class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(String.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(String.Class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	121	None	add
275	[BUG]  [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(ObjectConstructor.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(ObjectConstructor.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ObjectConstructor.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(ObjectConstructor.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	125	None	add
276	[BUG]  [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(ObjectConstructor.Class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(ObjectConstructor.Class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ObjectConstructor.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(ObjectConstructor.Class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	125	None	add
277	[BUG]  [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(ObjectConstructor.class.isAssignedFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(ObjectConstructor.class.isAssignedFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ObjectConstructor.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(ObjectConstructor.class.isAssignedFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	125	None	add
278	[BUG]  [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(ObjectConstructor.class.isAssignableFrom(rawType)||  TreeMap.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(ObjectConstructor.class.isAssignableFrom(rawType)||  TreeMap.Class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ObjectConstructor.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(ObjectConstructor.class.isAssignableFrom(rawType)||  TreeMap.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	125	None	add
279	[BUG]  [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(ObjectConstructor.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]            ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(ObjectConstructor.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ObjectConstructor.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    If(ObjectConstructor.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	125	None	add
280	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(String.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(rawType.isAssignableFrom(String.class)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(String.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	122	2	replace
281	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(String.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(String.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(String.class)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(String.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	122	2	replace
282	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.CLASS.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  CLASS  [FE]                  ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.CLASS.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.CLASS.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.CLASS.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  CLASS	44	None	replace
283	[BUG]  [BUGGY]  Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActual  [CE]  ';'  expected  [FE]                            ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActual  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActual	  Constructor    <    T>    construct()    {    return(Constructor    <    T>)new    LinkedHashMap    <    Object,    Object>();    }    else    if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActual    	non-compiled	[CE]  ';'  expected	82	None	replace
284	[BUG]  [BUGGY]  Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  ArrayList  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActual  [CE]  ';'  expected  [FE]                              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  ArrayList  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActual  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  ArrayList  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActual	  Constructor    <    T>    construct()    {    return(Constructor    <    T>)new    LinkedHashMap    <    Object,    Object>();    }    else    if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActual    	non-compiled	[CE]  ';'  expected	82	None	replace
285	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignABLEFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignABLEFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignABLEFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignABLEFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
286	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  Map.Class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  Class  [FE]          NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  Map.Class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||  Map.Class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(SortedMap.class.isAssignableFrom(rawType)||    Map.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  Class	32	None	replace
287	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]            NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Set.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Set.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(Set.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	115	2	replace
288	[BUG]  [BUGGY]  if(Set.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]            NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Set.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Set.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(Set.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	115	2	replace
289	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(Object.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
290	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignedFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignedFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(Object.class.isAssignedFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
291	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(Object.Class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(Object.Class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(Object.Class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
292	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)||  SortedMap.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)||  SortedMap.Class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(Object.class.isAssignableFrom(rawType)||  SortedMap.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
293	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(Object.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(Object.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    If(Object.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	91	None	add
294	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(ReflectionMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(ReflectionMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(ReflectionMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(ReflectionMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
295	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(TreeMap.class)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(rawType.isAssignableFrom(TreeMap.class)&&  SortedMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)&&    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	21	2	replace
296	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(TreeMap.class)&&  SortedMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(TreeMap.class)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(TreeMap.class)&&  SortedMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)&&    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	21	2	replace
297	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Object.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)&&    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	21	2	replace
298	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)&&    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	21	2	replace
299	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.Class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  Class  [FE]            ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.Class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.Class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  Class	53	None	replace
300	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  TreeMap.Class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  Class  [FE]              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  TreeMap.Class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||  TreeMap.Class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  Class	53	None	replace
301	[BUG]  [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(type))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ObjectConstructor.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(type))  {	  if(ObjectConstructor.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	126	None	replace
302	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(ObjectConstructor.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {	  if(ObjectConstructor.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	126	3	replace
303	[BUG]  [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ObjectConstructor.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {	  if(ObjectConstructor.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	126	3	replace
304	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Reflection.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Reflection.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(Reflection.class)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(Reflection.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
305	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)&&    Map.class.isAssignableFrom(rawType))    {    if(SortedMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	148	None	add
306	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]      ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)&&    Map.class.isAssignableFrom(rawType))    {    If(SortedMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	148	None	add
307	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  if(SortedMap.Class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  if(SortedMap.Class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)&&    Map.class.isAssignableFrom(rawType))    {    if(SortedMap.Class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	148	None	add
308	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignedFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignedFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)&&    Map.class.isAssignableFrom(rawType))    {    if(SortedMap.class.isAssignedFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	148	None	add
309	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignableFrom(rawType)&&  Map.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignableFrom(rawType)&&  Map.Class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)&&    Map.class.isAssignableFrom(rawType))    {    if(SortedMap.class.isAssignableFrom(rawType)&&  Map.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	148	None	add
310	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  if(SpecifiedMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  if(SpecifiedMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)&&    Map.class.isAssignableFrom(rawType))    {    if(SpecifiedMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	148	None	add
311	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  if(OrtedMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  if(OrtedMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)&&    Map.class.isAssignableFrom(rawType))    {    if(OrtedMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	148	None	add
312	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)&&    SortedMap.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
313	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(Map.Class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(Map.Class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)&&    SortedMap.class.isAssignableFrom(rawType))    {    if(Map.Class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
314	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignedFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignedFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)&&    SortedMap.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignedFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
315	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]          ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)&&    SortedMap.class.isAssignableFrom(rawType))    {    If(Map.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	73	None	add
316	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(map.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(map.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)&&    SortedMap.class.isAssignableFrom(rawType))    {    if(map.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
317	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)&&  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(rawType.isAssignableFrom(SortedMap.class)&&  Map.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)&&    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	149	3	replace
318	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)&&  Map.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)&&  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(SortedMap.class)&&  Map.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)&&    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	149	3	replace
319	[BUG]  [BUGGY]  if(GradientMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]      ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(GradientMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(GradientMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)&&    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	149	None	replace
320	[BUG]  [BUGGY]  Class  <?  superType  &&  type  instanceof  Class  <?>  &&!(String.class.isAssignableFrom(TypeToken.get(((ClassizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [CE]  >,  extends,  or  super  expected  [FE]                              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  &&  type  instanceof  Class  <?>  &&!(String.class.isAssignableFrom(TypeToken.get(((ClassizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  &&  type  instanceof  Class  <?>  &&!(String.class.isAssignableFrom(TypeToken.get(((ClassizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>	  Class    <?    superType    &&    type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    ObjectConstructor    <    T>()    	non-compiled	[CE]  >,  extends,  or  super  expected	102	None	replace
321	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(type,  rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;  [FE]          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(type,  rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(type,  rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;	60	None	replace
322	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(type,  type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]            ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(type,  type))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(type,  type))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	60	None	replace
323	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(type)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(type)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(type)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	60	None	replace
324	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(type,  elementType))  {  [CE]  cannot  find  symbol  elementType  [FE]                ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(type,  elementType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(type,  elementType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  elementType	60	None	replace
325	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                  ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(type))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(type))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	60	None	replace
326	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType,  elementType)||  TreeMap.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  elementType  [FE]                    ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType,  elementType)||  TreeMap.class.isAssignableFrom(type))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType,  elementType)||  TreeMap.class.isAssignableFrom(type))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  elementType	60	None	replace
327	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  Map.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(Map.class)||  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  Map.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(Map.class)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(Map.class)||    Map.class.isAssignableFrom(rawType))    {    if(rawType.isAssignableFrom(Map.class)||  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	77	None	add
328	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  Map.class.isAssignableFrom(rawType))  {  if(rawType.isAssignedFrom(Map.class)||  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  Map.class.isAssignableFrom(rawType))  {  if(rawType.isAssignedFrom(Map.class)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(Map.class)||    Map.class.isAssignableFrom(rawType))    {    if(rawType.isAssignedFrom(Map.class)||  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	77	None	add
329	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  Map.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(Map.class)||  Map.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  Map.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(Map.class)||  Map.Class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(Map.class)||    Map.class.isAssignableFrom(rawType))    {    if(rawType.isAssignableFrom(Map.class)||  Map.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	77	None	add
330	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  Map.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(Map.Class)||  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  Map.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(Map.Class)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(Map.class)||    Map.class.isAssignableFrom(rawType))    {    if(rawType.isAssignableFrom(Map.Class)||  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	77	None	add
331	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  Map.class.isAssignableFrom(rawType))  {  If(rawType.isAssignableFrom(Map.class)||  Map.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  Map.class.isAssignableFrom(rawType))  {  If(rawType.isAssignableFrom(Map.class)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(Map.class)||    Map.class.isAssignableFrom(rawType))    {    If(rawType.isAssignableFrom(Map.class)||  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	77	None	add
332	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(Object.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
333	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignedFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignedFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(Object.class.isAssignedFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
334	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)||  Map.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)||  Map.Class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(Object.class.isAssignableFrom(rawType)||  Map.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
335	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(Object.Class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(Object.Class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(Object.Class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
336	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(Object.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
337	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(Object.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(Object.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    If(Object.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	29	None	add
338	[BUG]  [BUGGY]  if(ReeMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ReeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType))    {    if(ReeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
339	[BUG]  [BUGGY]  if(ReeMap.class.isAssignableFrom(rawType)||  ReeMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ReeMap.class.isAssignableFrom(rawType)||  ReeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReeMap.class.isAssignableFrom(rawType)||  ReeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType))    {    if(ReeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
340	[BUG]  [BUGGY]  if(RectangleMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(RectangleMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(RectangleMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType))    {    if(ReeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
341	[BUG]  [BUGGY]  if(ReeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ReeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType))    {    if(ReeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
342	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(!SortedMap.class.isAssignableFrom(rawType)||!Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(!SortedMap.class.isAssignableFrom(rawType)||!Map.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(SuperMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	112	4	replace
343	[BUG]  [BUGGY]  if(!SortedMap.class.isAssignableFrom(rawType)||!Map.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(!SortedMap.class.isAssignableFrom(rawType)||!Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(!SortedMap.class.isAssignableFrom(rawType)||!Map.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(SuperMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	112	4	replace
344	[BUG]  [BUGGY]  If(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  If(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	If(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    If(Map.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	17	None	replace
345	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Type.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    If(Map.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	17	None	replace
346	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType)  [CE]  ')'  expected  [FE]                  NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType)  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Type.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType)	  if(Map.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    If(Map.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ')'  expected	17	None	replace
347	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    If(Map.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	17	None	replace
348	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType)  [CE]  ')'  expected  [FE]                      NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType)  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType)	  if(Map.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    If(Map.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ')'  expected	17	None	replace
349	[BUG]  [BUGGY]  for(TreeMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]        ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  for(TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	for(TreeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType))    {    for(TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	135	None	replace
350	[BUG]  [BUGGY]  For(TreeMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  For(TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	For(TreeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType))    {    for(TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	135	None	replace
351	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(TreeMap.class))  {  for(TreeMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(TreeMap.class))  {  for(TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(TreeMap.class))  {  for(TreeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType))    {    for(TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	135	None	replace
352	[BUG]  [BUGGY]  if(rawType  instanceof  TreeMap.class.isAssignableFrom(rawType))  {  for(TreeMap.class.isAssignableFrom(rawType))  {  [CE]  <identifier>  expected  [FE]              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  TreeMap.class.isAssignableFrom(rawType))  {  for(TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType  instanceof  TreeMap.class.isAssignableFrom(rawType))  {  for(TreeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType))    {    for(TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  <identifier>  expected	135	None	replace
353	[BUG]  [BUGGY]  if(rawType  instanceof  TreeMap.class)  {  for(TreeMap.class.isAssignableFrom(rawType))  {  [CE]  <identifier>  expected  [FE]                ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  TreeMap.class)  {  for(TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType  instanceof  TreeMap.class)  {  for(TreeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType))    {    for(TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  <identifier>  expected	135	None	replace
354	[BUG]  [BUGGY]  Pentru(TreeMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Pentru(TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Pentru(TreeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType))    {    for(TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	135	None	replace
355	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(ReflectionMap.class))  {  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(ReflectionMap.class))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(ReflectionMap.class))  {	  if(ReflectionMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
356	[BUG]  [BUGGY]  if(ReflectionMap.class.equals(rawType))  {  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ReflectionMap.class.equals(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReflectionMap.class.equals(rawType))  {	  if(ReflectionMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
357	[BUG]  [BUGGY]  if(RenderingMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(RenderingMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(RenderingMap.class.isAssignableFrom(rawType))  {	  if(ReflectionMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
358	[BUG]  [BUGGY]  if(RflectionMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(RflectionMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(RflectionMap.class.isAssignableFrom(rawType))  {	  if(ReflectionMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
359	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)&&    TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
360	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignedFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignedFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)&&    TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignedFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
361	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]        ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)&&    TreeMap.class.isAssignableFrom(rawType))    {    If(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	57	None	add
362	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  if(TreeMap.Class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  if(TreeMap.Class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)&&    TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.Class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
363	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.Class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)&&    TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
364	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignedFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignedFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)&&    TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignedFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
365	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  ReflectionMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  ReflectionMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||  ReflectionMap.class.isAssignableFrom(rawType))  {	  if(ReflectionMap.class.isAssignableFrom(rawType)||    ReflectionMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
366	[BUG]  [BUGGY]  if(ReflectionMap.class.isAssignableFrom(rawType)&&  ReflectionMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ReflectionMap.class.isAssignableFrom(rawType)&&  ReflectionMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReflectionMap.class.isAssignableFrom(rawType)&&  ReflectionMap.class.isAssignableFrom(rawType))  {	  if(ReflectionMap.class.isAssignableFrom(rawType)||    ReflectionMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
367	[BUG]  [BUGGY]  if(RenderingMap.class.isAssignableFrom(rawType)||  ReflectionMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(RenderingMap.class.isAssignableFrom(rawType)||  ReflectionMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(RenderingMap.class.isAssignableFrom(rawType)||  ReflectionMap.class.isAssignableFrom(rawType))  {	  if(ReflectionMap.class.isAssignableFrom(rawType)||    ReflectionMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
368	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(ReflectionMap.class)||  ReflectionMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(ReflectionMap.class)||  ReflectionMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(ReflectionMap.class)||  ReflectionMap.class.isAssignableFrom(rawType))  {	  if(ReflectionMap.class.isAssignableFrom(rawType)||    ReflectionMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
369	[BUG]  [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  ReflectionMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  ReflectionMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Collection.class.isAssignableFrom(rawType)||  ReflectionMap.class.isAssignableFrom(rawType))  {	  if(ReflectionMap.class.isAssignableFrom(rawType)||    ReflectionMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
370	[BUG]  [BUGGY]  if(reference.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(reference.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(reference.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(Reference.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
371	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(SortedMap.class)||    Map.class.isAssignableFrom(rawType))    {    if(rawType.isAssignableFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
372	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {  if(rawType.isAssignedFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {  if(rawType.isAssignedFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(SortedMap.class)||    Map.class.isAssignableFrom(rawType))    {    if(rawType.isAssignedFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
373	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(OrderedMap.class)||  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(OrderedMap.class)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(SortedMap.class)||    Map.class.isAssignableFrom(rawType))    {    if(rawType.isAssignableFrom(OrderedMap.class)||  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
374	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(SortedMap.class)||  Map.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(SortedMap.class)||  Map.Class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(SortedMap.class)||    Map.class.isAssignableFrom(rawType))    {    if(rawType.isAssignableFrom(SortedMap.class)||  Map.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
375	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {  If(rawType.isAssignableFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {  If(rawType.isAssignableFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(SortedMap.class)||    Map.class.isAssignableFrom(rawType))    {    If(rawType.isAssignableFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	27	None	add
376	[BUG]  [BUGGY]  Class  <?  superType  &&  type  instanceof  Class  <?>  &&!(String.class.isAssignableFrom(TypeToken.get(((ClassizedType)type).getActualTypeArguments()  [0]).getRawType())  [CE]  >,  extends,  or  super  expected  [FE]                            ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  &&  type  instanceof  Class  <?>  &&!(String.class.isAssignableFrom(TypeToken.get(((ClassizedType)type).getActualTypeArguments()  [0]).getRawType())  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  &&  type  instanceof  Class  <?>  &&!(String.class.isAssignableFrom(TypeToken.get(((ClassizedType)type).getActualTypeArguments()  [0]).getRawType())	  Class    <?    superType    &&    type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  >,  extends,  or  super  expected	101	None	replace
377	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Map.class.isAssignableFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(SortedMap.class)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	28	3	replace
378	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(SortedMap.class)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	28	3	replace
379	[BUG]  [BUGGY]  if(Type.isAssignableFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Type.isAssignableFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Type.isAssignableFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(SortedMap.class)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
380	[BUG]  [BUGGY]  Class  <?  superType  =  rawType.getSuperclass();  [CE]  >,  extends,  or  super  expected  [FE]                              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  =  rawType.getSuperclass();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  =  rawType.getSuperclass();	  Class    <?    superType    =    type.getSuperclass();    	non-compiled	[CE]  >,  extends,  or  super  expected	141	None	replace
381	[BUG]  [BUGGY]  Class  <?  superType  =  elementType.getSuperclass();  [CE]  >,  extends,  or  super  expected  [FE]                                ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  =  elementType.getSuperclass();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  =  elementType.getSuperclass();	  Class    <?    superType    =    type.getSuperclass();    	non-compiled	[CE]  >,  extends,  or  super  expected	141	None	replace
382	[BUG]  [BUGGY]  Class  <?  superType  =  type.getSupertype();  [CE]  >,  extends,  or  super  expected  [FE]                                  ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  =  type.getSupertype();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  =  type.getSupertype();	  Class    <?    superType    =    type.getSuperclass();    	non-compiled	[CE]  >,  extends,  or  super  expected	141	None	replace
383	[BUG]  [BUGGY]  Class  <?  superType  =  type.getSuperclass()  ||  elementType.isAssignableFrom(rawType);  [CE]  >,  extends,  or  super  expected  [FE]                                    ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  =  type.getSuperclass()  ||  elementType.isAssignableFrom(rawType);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  =  type.getSuperclass()  ||  elementType.isAssignableFrom(rawType);	  Class    <?    superType    =    type.getSuperclass();    	non-compiled	[CE]  >,  extends,  or  super  expected	141	None	replace
384	[BUG]  [BUGGY]  Class  <?  superType  =  type.getSuperclass()  ||  rawType.isAssignableFrom(rawType);  [CE]  >,  extends,  or  super  expected  [FE]                                      ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  =  type.getSuperclass()  ||  rawType.isAssignableFrom(rawType);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  =  type.getSuperclass()  ||  rawType.isAssignableFrom(rawType);	  Class    <?    superType    =    type.getSuperclass();    	non-compiled	[CE]  >,  extends,  or  super  expected	141	None	replace
385	[BUG]  [BUGGY]  Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  [CE]  >,  extends,  or  super  expected  [FE]                                  ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor	  Class    <?    superType    &&    type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    ObjectConstructor    <    	non-compiled	[CE]  >,  extends,  or  super  expected	104	None	replace
386	[BUG]  [BUGGY]  Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType  [CE]  >,  extends,  or  super  expected  [FE]                                    ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType	  Class    <?    superType    &&    type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    ObjectConstructor    <    	non-compiled	[CE]  >,  extends,  or  super  expected	104	None	replace
387	[BUG]  [BUGGY]  If(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  If(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	If(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    If(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	13	None	replace
388	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    If(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	13	None	replace
389	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    If(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	13	None	replace
390	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    If(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	13	None	replace
391	[BUG]  [BUGGY]  if(Reference.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Reference.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Reference.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    If(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	13	None	replace
392	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    If(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	13	None	replace
393	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)&&    Map.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
394	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  if(Map.Class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  if(Map.Class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)&&    Map.class.isAssignableFrom(rawType))    {    if(Map.Class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
395	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignedFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignedFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)&&    Map.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignedFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
396	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignableFrom(rawType)&&  Map.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignableFrom(rawType)&&  Map.Class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)&&    Map.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)&&  Map.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
397	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)&&    Map.class.isAssignableFrom(rawType))    {    If(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	37	None	add
398	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)&&    Map.class.isAssignableFrom(rawType))    {    if(Object.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
399	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAs  [CE]  ')'  expected  [FE]            ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAs  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAs	  if(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    If(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ')'  expected	70	None	replace
400	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAs  [CE]  ')'  expected  [FE]              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAs  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAs	  if(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    If(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ')'  expected	70	None	replace
401	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAs  [CE]  ')'  expected  [FE]                ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAs  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAs	  if(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    If(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ')'  expected	70	None	replace
402	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAs  [CE]  ')'  expected  [FE]                  ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAs  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAs	  if(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    If(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ')'  expected	70	None	replace
403	[BUG]  [BUGGY]  if(GradientMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAs  [CE]  ')'  expected  [FE]                    ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(GradientMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAs  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(GradientMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAs	  if(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    If(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ')'  expected	70	None	replace
404	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom  [CE]  ')'  expected  [FE]                      ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom	  if(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    If(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ')'  expected	70	None	replace
405	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssign  [CE]  ')'  expected  [FE]                        ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssign  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssign	  if(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    If(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ')'  expected	70	None	replace
406	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(SortedMap.Class.isAssignableFrom(rawType)||  Map.class.isAs  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(SortedMap.Class.isAssignableFrom(rawType)||  Map.class.isAs  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType  instanceof  SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(SortedMap.Class.isAssignableFrom(rawType)||  Map.class.isAs	  if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(SortedMap.Class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
407	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(SortedMap.Class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType)  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(SortedMap.Class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType)  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType  instanceof  SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(SortedMap.Class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType)	  if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(SortedMap.Class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
408	[BUG]  [BUGGY]  Type  elementType  =  getElementType(type);  [CE]  illegal  start  of  type  [FE]                        ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Type  elementType  =  getElementType(type);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Type  elementType  =  getElementType(type);	  Type    elementType    =    getElementType(rawType);    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
409	[BUG]  [BUGGY]  Type  elementType  =  getElementType(rawType,  type);  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Type  elementType  =  getElementType(rawType,  type);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Type  elementType  =  getElementType(rawType,  type);	  Type    elementType    =    getElementType(rawType);    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
410	[BUG]  [BUGGY]  Type  elementType  =  getElementType(rawType.getComponentType());  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Type  elementType  =  getElementType(rawType.getComponentType());  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Type  elementType  =  getElementType(rawType.getComponentType());	  Type    elementType    =    getElementType(rawType);    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
411	[BUG]  [BUGGY]  Type  elementType  =  getElementType(rawType.getSuperclass());  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Type  elementType  =  getElementType(rawType.getSuperclass());  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Type  elementType  =  getElementType(rawType.getSuperclass());	  Type    elementType    =    getElementType(rawType);    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
412	[BUG]  [BUGGY]  Type  elementType  =  getElementType(rawType.getRawClass());  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Type  elementType  =  getElementType(rawType.getRawClass());  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Type  elementType  =  getElementType(rawType.getRawClass());	  Type    elementType    =    getElementType(rawType);    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
413	[BUG]  [BUGGY]  Type  elementType  =  getElementType(rawType.getReturnType());  [CE]  illegal  start  of  type  [FE]                                  ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Type  elementType  =  getElementType(rawType.getReturnType());  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Type  elementType  =  getElementType(rawType.getReturnType());	  Type    elementType    =    getElementType(rawType);    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
414	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(type)&&  Map.class.isAssignableFrom(rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]        NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(type)&&  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(type)&&  Map.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)&&    Map.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	161	None	replace
415	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(type,  rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;  [FE]          NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(type,  rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(type,  rawType))  {	  if(Map.class.isAssignableFrom(rawType)&&    Map.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;	161	None	replace
416	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(type,  type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]            NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(type,  type))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(type,  type))  {	  if(Map.class.isAssignableFrom(rawType)&&    Map.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	161	None	replace
417	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(type,  elementType))  {  [CE]  cannot  find  symbol  elementType  [FE]              NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(type,  elementType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(type,  elementType))  {	  if(Map.class.isAssignableFrom(rawType)&&    Map.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  elementType	161	None	replace
418	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(type))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Type.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(type))  {	  if(Map.class.isAssignableFrom(rawType)&&    Map.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	161	None	replace
419	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(elementType,  type))  {  [CE]  cannot  find  symbol  elementType  [FE]                  NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(elementType,  type))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(elementType,  type))  {	  if(Map.class.isAssignableFrom(rawType)&&    Map.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  elementType	161	None	replace
420	[BUG]  [BUGGY]  if(Type.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Type.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Type.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(SortedMap.class)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
421	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Object.class.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(SortedMap.class)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	94	3	replace
422	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(SortedMap.class)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	94	3	replace
423	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Map.class.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(SortedMap.class)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	94	3	replace
424	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(SortedMap.class)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	94	3	replace
425	[BUG]  [BUGGY]  if(SortedMap.class.isAssignedFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignedFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignedFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(SortedMap.class.isAssignedFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
426	[BUG]  [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(ObjectConstructor.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(ObjectConstructor.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ObjectConstructor.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(ObjectConstructor.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	123	None	add
427	[BUG]  [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(ObjectConstructor.Class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(ObjectConstructor.Class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ObjectConstructor.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(ObjectConstructor.Class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	123	None	add
428	[BUG]  [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(ObjectConstructor.class.isAssignedFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(ObjectConstructor.class.isAssignedFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ObjectConstructor.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(ObjectConstructor.class.isAssignedFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	123	None	add
429	[BUG]  [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(ObjectConstructor.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]          ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(ObjectConstructor.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ObjectConstructor.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    If(ObjectConstructor.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	123	None	add
430	[BUG]  [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(ObjectConstructor.class.isAssignableFrom(rawType)||  SortedMap.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(ObjectConstructor.class.isAssignableFrom(rawType)||  SortedMap.Class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ObjectConstructor.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(ObjectConstructor.class.isAssignableFrom(rawType)||  SortedMap.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	123	None	add
431	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(ReferenceMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(ReferenceMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(ReferenceMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(ReferenceMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
432	[BUG]  [BUGGY]  if(ReferenceMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ReferenceMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReferenceMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {	  if(ReferenceMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
433	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    If(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	47	None	replace
434	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    If(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	47	None	replace
435	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAs  [CE]  ')'  expected  [FE]                ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAs  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAs	  if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    If(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ')'  expected	47	None	replace
436	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType)  [CE]  ')'  expected  [FE]                  ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType)  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType)	  if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    If(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ')'  expected	47	None	replace
437	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    If(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	47	None	replace
438	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom  [CE]  ')'  expected  [FE]                      ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom	  if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    If(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ')'  expected	47	None	replace
439	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssign  [CE]  ')'  expected  [FE]                        ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssign  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssign	  if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    If(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ')'  expected	47	None	replace
440	[BUG]  [BUGGY]  if(SpecifiedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                  NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SpecifiedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SpecifiedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(SpecifiedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
441	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType))    {    If(TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	41	None	replace
442	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType))    {    If(TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	41	None	replace
443	[BUG]  [BUGGY]  if(Reference.class.isAssignableFrom(rawType))  {  If(ReferenceMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Reference.class.isAssignableFrom(rawType))  {  If(ReferenceMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Reference.class.isAssignableFrom(rawType))  {  If(ReferenceMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType))    {    If(TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	41	None	replace
444	[BUG]  [BUGGY]  if(Reference.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Reference.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Reference.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType))    {    If(TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	41	None	replace
445	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType))    {    If(TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	41	None	replace
446	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(GradientMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(GradientMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(GradientMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(GradientMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
447	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                    NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(type))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(type))  {	  if(Map.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	89	None	replace
448	[BUG]  [BUGGY]  if(Reflection.class.isAssignableFrom(rawType)||  Reflection.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]                      NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Reflection.class.isAssignableFrom(rawType)||  Reflection.class.isAssignableFrom(type))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Reflection.class.isAssignableFrom(rawType)||  Reflection.class.isAssignableFrom(type))  {	  if(Map.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
449	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                        NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(type))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(type))  {	  if(Map.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	89	None	replace
450	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(type)||  Map.class.isAssignableFrom(rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                          NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(type)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(type)||  Map.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	89	None	replace
451	[BUG]  [BUGGY]  if(GradientMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]                            NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(GradientMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(type))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(GradientMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(type))  {	  if(Map.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
452	[BUG]  [BUGGY]  if(Array.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Array.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Array.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(Array.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
453	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Type.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(rawType.isAssignableFrom(Type.class)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	96	2	replace
454	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Type.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Type.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(Type.class)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	96	2	replace
455	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]      ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(type))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Type.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(type))  {	  if(Type.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	96	None	replace
456	[BUG]  [BUGGY]  if(SortedMap.class.isAssignedFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignedFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignedFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(SortedMap.class.isAssignedFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
457	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Object.class)||  Object.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(rawType.isAssignableFrom(Object.class)||  Object.class.isAssignableFrom(rawType))  {	  if(Object.class.isAssignableFrom(rawType)||    Object.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	153	3	replace
458	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Object.class)||  Object.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Object.class)||  Object.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(Object.class)||  Object.class.isAssignableFrom(rawType))  {	  if(Object.class.isAssignableFrom(rawType)||    Object.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	153	3	replace
459	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Object.class.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]      NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Object.class.isAssignableFrom(type))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||  Object.class.isAssignableFrom(type))  {	  if(Object.class.isAssignableFrom(rawType)||    Object.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	153	None	replace
460	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Object.class)||  rawType.isAssignableFrom(Object.class))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(rawType.isAssignableFrom(Object.class)||  rawType.isAssignableFrom(Object.class))  {	  if(Object.class.isAssignableFrom(rawType)||    Object.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	153	3	replace
461	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Object.class)||  rawType.isAssignableFrom(Object.class))  {  [FE]  ClassCastException  [FE]        NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Object.class)||  rawType.isAssignableFrom(Object.class))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(Object.class)||  rawType.isAssignableFrom(Object.class))  {	  if(Object.class.isAssignableFrom(rawType)||    Object.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	153	3	replace
462	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(TreeMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	25	3	replace
463	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	25	3	replace
464	[BUG]  [BUGGY]  Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  [CE]  >,  extends,  or  super  expected  [FE]                                ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {	  Class    <?    superType    &&    type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    	non-compiled	[CE]  >,  extends,  or  super  expected	103	None	replace
465	[BUG]  [BUGGY]  Class  <?  superType  &&  type  instanceof  Class  <?>  &&!(String.class.isAssignableFrom(TypeToken.get(((ClassizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  [CE]  >,  extends,  or  super  expected  [FE]                                  ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  &&  type  instanceof  Class  <?>  &&!(String.class.isAssignableFrom(TypeToken.get(((ClassizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  &&  type  instanceof  Class  <?>  &&!(String.class.isAssignableFrom(TypeToken.get(((ClassizedType)type).getActualTypeArguments()  [0]).getRawType())))  {	  Class    <?    superType    &&    type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    	non-compiled	[CE]  >,  extends,  or  super  expected	103	None	replace
466	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.Class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  Class  [FE]                ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.Class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.Class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  Class	72	None	replace
467	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)&&    SortedMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
468	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignedFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignedFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)&&    SortedMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignedFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
469	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]        ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)&&    SortedMap.class.isAssignableFrom(rawType))    {    If(TreeMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	20	None	add
470	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(TreeMap.Class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(TreeMap.Class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)&&    SortedMap.class.isAssignableFrom(rawType))    {    if(TreeMap.Class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
471	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType)&&  SortedMap.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType)&&  SortedMap.Class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)&&    SortedMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignableFrom(rawType)&&  SortedMap.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
472	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignABLEFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignABLEFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)&&    SortedMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignABLEFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
473	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    If(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	55	None	replace
474	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType)  [CE]  ')'  expected  [FE]                  ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType)  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType)	  if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    If(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ')'  expected	55	None	replace
475	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    If(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	55	None	replace
476	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(raw  [CE]  ')'  expected  [FE]                      ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(raw  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(raw	  if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    If(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ')'  expected	55	None	replace
477	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    If(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	55	None	replace
478	[BUG]  [BUGGY]  if(ReflectionMap.class.isAssignableFrom(rawType)||  ReflectionMap.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAs  [CE]  ')'  expected  [FE]                          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ReflectionMap.class.isAssignableFrom(rawType)||  ReflectionMap.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAs  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReflectionMap.class.isAssignableFrom(rawType)||  ReflectionMap.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAs	  if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    If(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ')'  expected	55	None	replace
479	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignedFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignedFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignedFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignedFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
480	[BUG]  [BUGGY]  if(Map.Class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  Class  [FE]          NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.Class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.Class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(Map.Class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  Class	10	None	replace
481	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Map.class)&&  rawType.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(rawType.isAssignableFrom(Map.class)&&  rawType.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)&&    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	38	4	replace
482	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Map.class)&&  rawType.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Map.class)&&  rawType.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(Map.class)&&  rawType.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)&&    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	38	4	replace
483	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(Object.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
484	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignedFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignedFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(Object.class.isAssignedFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
485	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)||  TreeMap.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)||  TreeMap.Class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(Object.class.isAssignableFrom(rawType)||  TreeMap.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
486	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(Object.Class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(Object.Class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(Object.Class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
487	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)||  TreeMap.CLASS.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)||  TreeMap.CLASS.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(Object.class.isAssignableFrom(rawType)||  TreeMap.CLASS.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
488	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(Object.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(Object.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    If(Object.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	6	None	add
489	[BUG]  [BUGGY]  if(Reference.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Reference.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Reference.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(Collection.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
490	[BUG]  [BUGGY]  if(ReflectionMap.class.isAssignableFrom(rawType)||  ReflectionMap.class.isAssignedFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ReflectionMap.class.isAssignableFrom(rawType)||  ReflectionMap.class.isAssignedFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReflectionMap.class.isAssignableFrom(rawType)||  ReflectionMap.class.isAssignedFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignedFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
491	[BUG]  [BUGGY]  if(TreeMap.class.isAssignedFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignedFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignedFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignedFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
492	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(type,  rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;  [FE]          NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(type,  rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(type,  rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;	79	None	replace
493	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(type,  type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]            NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(type,  type))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(type,  type))  {	  if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	79	None	replace
494	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(type,  elementType))  {  [CE]  cannot  find  symbol  elementType  [FE]              NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(type,  elementType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(type,  elementType))  {	  if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  elementType	79	None	replace
495	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(elementType,  type))  {  [CE]  cannot  find  symbol  elementType  [FE]                NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(elementType,  type))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(elementType,  type))  {	  if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  elementType	79	None	replace
496	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  type  instanceof  TreeMap  <  Object,  Object>)  {  [CE]  illegal  generic  type  for  instanceof  [FE]                NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  type  instanceof  TreeMap  <  Object,  Object>)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)&&  type  instanceof  TreeMap  <  Object,  Object>)  {	  if(Map.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)&&    type    instanceof    TreeMap    <    Object,    Object>)    {    	non-compiled	[CE]  illegal  generic  type  for  instanceof	87	None	replace
497	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  type  instanceof  TreeMap  <  Object,  Object>)  {  [CE]  illegal  generic  type  for  instanceof  [FE]                  NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  type  instanceof  TreeMap  <  Object,  Object>)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||  type  instanceof  TreeMap  <  Object,  Object>)  {	  if(Map.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)&&    type    instanceof    TreeMap    <    Object,    Object>)    {    	non-compiled	[CE]  illegal  generic  type  for  instanceof	87	None	replace
498	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  type  instanceof  TreeMap  <  Object,  Object>)  {  [CE]  illegal  generic  type  for  instanceof  [FE]                    NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  type  instanceof  TreeMap  <  Object,  Object>)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)&&  type  instanceof  TreeMap  <  Object,  Object>)  {	  if(Map.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)&&    type    instanceof    TreeMap    <    Object,    Object>)    {    	non-compiled	[CE]  illegal  generic  type  for  instanceof	87	None	replace
499	[BUG]  [BUGGY]  if(Reflection.class.isAssignableFrom(rawType)&&  type  instanceof  TreeMap  <  Object,  Object>)  {  [CE]  cannot  find  symbol  [FE]                      NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Reflection.class.isAssignableFrom(rawType)&&  type  instanceof  TreeMap  <  Object,  Object>)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Reflection.class.isAssignableFrom(rawType)&&  type  instanceof  TreeMap  <  Object,  Object>)  {	  if(Map.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)&&    type    instanceof    TreeMap    <    Object,    Object>)    {    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
500	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)&&  type  instanceof  TreeMap  <  Object,  Object>)  {  [CE]  illegal  generic  type  for  instanceof  [FE]                        NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)&&  type  instanceof  TreeMap  <  Object,  Object>)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Type.class.isAssignableFrom(rawType)&&  type  instanceof  TreeMap  <  Object,  Object>)  {	  if(Map.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)&&    type    instanceof    TreeMap    <    Object,    Object>)    {    	non-compiled	[CE]  illegal  generic  type  for  instanceof	87	None	replace
501	[BUG]  [BUGGY]  if(Reference.class.isAssignableFrom(rawType)&&  type  instanceof  TreeMap  <  Object,  Object>)  {  [CE]  cannot  find  symbol  [FE]                          NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Reference.class.isAssignableFrom(rawType)&&  type  instanceof  TreeMap  <  Object,  Object>)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Reference.class.isAssignableFrom(rawType)&&  type  instanceof  TreeMap  <  Object,  Object>)  {	  if(Map.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)&&    type    instanceof    TreeMap    <    Object,    Object>)    {    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
502	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)&&  type  instanceof  TreeMap  <  Object,  Object>)  {  [CE]  illegal  generic  type  for  instanceof  [FE]                            NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)&&  type  instanceof  TreeMap  <  Object,  Object>)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)&&  type  instanceof  TreeMap  <  Object,  Object>)  {	  if(Map.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)&&    type    instanceof    TreeMap    <    Object,    Object>)    {    	non-compiled	[CE]  illegal  generic  type  for  instanceof	87	None	replace
503	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(rawType.isAssignableFrom(SortedMap.class)&&  SortedMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)&&    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	120	2	replace
504	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)&&  SortedMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(SortedMap.class)&&  SortedMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)&&    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	120	2	replace
505	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]              NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(TreeMap.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	86	3	replace
506	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]              NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	86	3	replace
507	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(rawType.isAssignableFrom(Map.class)||  Collection.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	86	4	replace
508	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  Collection.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(Map.class)||  Collection.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	86	4	replace
509	[BUG]  [BUGGY]  if(Return.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                  NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Return.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Return.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
510	[BUG]  [BUGGY]  if(Map.class.isAssignedFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignedFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignedFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignedFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
511	[BUG]  [BUGGY]  if(Reference.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Reference.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Reference.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(SortedMap.class.isAssignedFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
512	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(ObjectConstructor.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	39	3	replace
513	[BUG]  [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]        ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ObjectConstructor.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	39	3	replace
514	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  ReeMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  ReeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||  ReeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType))    {    if(ReeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
515	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(Object.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
516	[BUG]  [BUGGY]  if(Record.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Record.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Record.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
517	[BUG]  [BUGGY]  if(Reflection.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Reflection.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Reflection.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {	  if(Reflection.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
518	[BUG]  [BUGGY]  if(ReflectionType.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ReflectionType.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReflectionType.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(Reflection.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
519	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]              NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  ObjectConstructor.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(ObjectConstructor.class.isAssignableFrom(rawType)||  ObjectConstructor.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(Reflection.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	134	3	replace
520	[BUG]  [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  ObjectConstructor.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]              NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  ObjectConstructor.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ObjectConstructor.class.isAssignableFrom(rawType)||  ObjectConstructor.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(Reflection.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	134	3	replace
521	[BUG]  [BUGGY]  if(reflection.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(reflection.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(reflection.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(Reflection.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
522	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(rawType.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignedFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	160	3	replace
523	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]        ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignedFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	160	3	replace
524	[BUG]  [BUGGY]  if(Record.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Record.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Record.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType))    {    if(Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
525	[BUG]  [BUGGY]  if(GradientMap.class.equals(rawType)||  SortedMap.class.equals(rawType))  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(GradientMap.class.equals(rawType)||  SortedMap.class.equals(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(GradientMap.class.equals(rawType)||  SortedMap.class.equals(rawType))  {	  if(GradientMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
526	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom  [CE]  ')'  expected  [FE]            ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom	  if(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    If(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ')'  expected	70	None	replace
527	[BUG]  [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom  [CE]  ')'  expected  [FE]              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ObjectConstructor.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom	  if(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    If(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ')'  expected	70	None	replace
528	[BUG]  [BUGGY]  If(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  If(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	If(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    If(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	70	None	replace
529	[BUG]  [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAs  [CE]  ')'  expected  [FE]                  ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAs  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ObjectConstructor.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAs	  if(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    If(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ')'  expected	70	None	replace
530	[BUG]  [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  List.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  List.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ObjectConstructor.class.isAssignableFrom(rawType)||  List.class.isAssignableFrom(rawType))  {	  if(ObjectConstructor.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
531	[BUG]  [BUGGY]  if(ReflectionMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ReflectionMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReflectionMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)&&    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
532	[BUG]  [BUGGY]  if(rawType.class.isAssignableFrom(ReflectionMap.class))  {  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.class.isAssignableFrom(ReflectionMap.class))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.class.isAssignableFrom(ReflectionMap.class))  {	  if(ReflectionMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
533	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TypeToken.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(TypeToken.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	137	2	replace
534	[BUG]  [BUGGY]  if(TypeToken.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]          NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TypeToken.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TypeToken.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	137	2	replace
535	[BUG]  [BUGGY]  Class  <?  superType  &&  type  instanceof  Type  <?>  &&!(String.class.isAssignableFrom(TypeToken.get(((Type)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [CE]  >,  extends,  or  super  expected  [FE]                        ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  &&  type  instanceof  Type  <?>  &&!(String.class.isAssignableFrom(TypeToken.get(((Type)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  &&  type  instanceof  Type  <?>  &&!(String.class.isAssignableFrom(TypeToken.get(((Type)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>	  Class    <?    superType    &&    type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    ObjectConstructor    <    T>()    {    @Override    	non-compiled	[CE]  >,  extends,  or  super  expected	99	None	replace
536	[BUG]  [BUGGY]  Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  Object  [CE]  >,  extends,  or  super  expected  [FE]                          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  Object  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  Object	  Class    <?    superType    &&    type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    ObjectConstructor    <    T>()    {    @Override    	non-compiled	[CE]  >,  extends,  or  super  expected	99	None	replace
537	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignedableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignedableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(SortedMap.class)||    TreeMap.class.isAssignableFrom(rawType))    {    if(rawType.isAssignedableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
538	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(OrderedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(OrderedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(SortedMap.class)||    TreeMap.class.isAssignableFrom(rawType))    {    if(rawType.isAssignableFrom(OrderedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
539	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]        NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(type))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(type))  {	  if(Map.class.isAssignableFrom(rawType)&&    Map.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	161	None	replace
540	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Type.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)&&    Map.class.isAssignableFrom(type))    {    	compilable	  [FE]  ClassCastException  	161	3	replace
541	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]          NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Type.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)&&    Map.class.isAssignableFrom(type))    {    	compilable	  [FE]  ClassCastException  	161	3	replace
542	[BUG]  [BUGGY]  if(ReferenceMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ReferenceMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(type))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReferenceMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(type))  {	  if(TreeMap.class.isAssignableFrom(rawType)&&    TreeMap.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
543	[BUG]  [BUGGY]  if(RflectionMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(RflectionMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(RflectionMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(ReflectionMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
544	[BUG]  [BUGGY]  if(ReflectionMap.class.isAssignableFrom(rawType)||  TreeMap.class.equals(rawType))  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ReflectionMap.class.isAssignableFrom(rawType)||  TreeMap.class.equals(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReflectionMap.class.isAssignableFrom(rawType)||  TreeMap.class.equals(rawType))  {	  if(ReflectionMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
545	[BUG]  [BUGGY]  if(SortedMap.Class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  Class  [FE]            NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.Class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.Class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(SortedMap.Class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  Class	33	None	replace
546	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(String.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(String.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.Class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	40	3	replace
547	[BUG]  [BUGGY]  if(String.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(String.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(String.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.Class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	40	3	replace
548	[BUG]  [BUGGY]  Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()	  Constructor    <    T>    construct()    {    return(Constructor    <    T>)new    LinkedHashMap    <    Object,    Object>();    }    else    if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    	non-compiled	[CE]  ';'  expected	80	None	replace
549	[BUG]  [BUGGY]  Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  ArrayList  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  ArrayList  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  ArrayList  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()	  Constructor    <    T>    construct()    {    return(Constructor    <    T>)new    LinkedHashMap    <    Object,    Object>();    }    else    if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    	non-compiled	[CE]  ';'  expected	80	None	replace
550	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(String.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(String.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {	  if(String.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	122	3	replace
551	[BUG]  [BUGGY]  if(String.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(String.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(String.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {	  if(String.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	122	3	replace
552	[BUG]  [BUGGY]  Type  elementType  =  getElementType(rawType.getRawType());  [CE]  illegal  start  of  type  [FE]                        ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Type  elementType  =  getElementType(rawType.getRawType());  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Type  elementType  =  getElementType(rawType.getRawType());	  Type    elementType    =    getElementType(rawType);    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
553	[BUG]  [BUGGY]  Type  elementType  =  getElementType(rawType.getDeclaredType());  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Type  elementType  =  getElementType(rawType.getDeclaredType());  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Type  elementType  =  getElementType(rawType.getDeclaredType());	  Type    elementType    =    getElementType(rawType);    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
554	[BUG]  [BUGGY]  if(reflection.class.isAssignableFrom(rawType)||  Reflection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(reflection.class.isAssignableFrom(rawType)||  Reflection.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(reflection.class.isAssignableFrom(rawType)||  Reflection.class.isAssignableFrom(rawType))  {	  if(Reflection.class.isAssignableFrom(rawType)||    Reflection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
555	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Reflection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Reflection.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||  Reflection.class.isAssignableFrom(rawType))  {	  if(Reflection.class.isAssignableFrom(rawType)||    Reflection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
556	[BUG]  [BUGGY]  Class  <?  superType  =  type.getSuperType();  [CE]  >,  extends,  or  super  expected  [FE]                                    ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  =  type.getSuperType();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  =  type.getSuperType();	  Class    <?    superType    =    type.getRawClass();    	non-compiled	[CE]  >,  extends,  or  super  expected	144	None	replace
557	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(String.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(String.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)&&    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	157	3	replace
558	[BUG]  [BUGGY]  if(String.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(String.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(String.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)&&    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	157	3	replace
559	[BUG]  [BUGGY]  ObjectConstructor  <  T>  return  new  ObjectConstructor  <  T>()  {  [CE]  not  a  statement  [FE]        ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  ObjectConstructor  <  T>  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	ObjectConstructor  <  T>  return  new  ObjectConstructor  <  T>()  {	  if(TreeMap.class.isAssignableFrom(rawType))    {    for(TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  not  a  statement	135	None	replace
560	[BUG]  [BUGGY]  for(TreeMap.class.isAssignABLEFrom(rawType))  {  [CE]  ';'  expected  [FE]          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  for(TreeMap.class.isAssignABLEFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	for(TreeMap.class.isAssignABLEFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType))    {    for(TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	135	None	replace
561	[BUG]  [BUGGY]  if(ReflectionMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ReflectionMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReflectionMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {	  if(ReflectionMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
562	[BUG]  [BUGGY]  if(RflectionMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(RflectionMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(RflectionMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(ReflectionMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
563	[BUG]  [BUGGY]  if(ReflectionMap.class.isAssignableFrom(rawType)||  Map.class.equals(rawType))  {  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ReflectionMap.class.isAssignableFrom(rawType)||  Map.class.equals(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReflectionMap.class.isAssignableFrom(rawType)||  Map.class.equals(rawType))  {	  if(ReflectionMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
564	[BUG]  [BUGGY]  Type  elementType  =  type.getElementType(0);  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Type  elementType  =  type.getElementType(0);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Type  elementType  =  type.getElementType(0);	  Type    elementType    =    type.getElementType();    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
565	[BUG]  [BUGGY]  Type  elementType  =  type.getElementType(rawType);  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Type  elementType  =  type.getElementType(rawType);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Type  elementType  =  type.getElementType(rawType);	  Type    elementType    =    type.getElementType();    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
566	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType)  [CE]  ')'  expected  [FE]              NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType)  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType)	  if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    If(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ')'  expected	34	None	replace
567	[BUG]  [BUGGY]  if(Reference.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(Reference.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Reference.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(Reference.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Reference.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  If(Reference.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    If(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	34	None	replace
568	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    If(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	34	None	replace
569	[BUG]  [BUGGY]  Class  <?  superType  &&  type  instanceof  Type  <?>  &&!(Object.class.isAssignableFrom(TypeToken.get(((Type)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [CE]  >,  extends,  or  super  expected  [FE]                                    ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  &&  type  instanceof  Type  <?>  &&!(Object.class.isAssignableFrom(TypeToken.get(((Type)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  &&  type  instanceof  Type  <?>  &&!(Object.class.isAssignableFrom(TypeToken.get(((Type)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>	  Class    <?    superType    &&    type    instanceof    ParameterizedType    &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    ObjectConstructor    <    T>()    {    @Override    	non-compiled	[CE]  >,  extends,  or  super  expected	105	None	replace
570	[BUG]  [BUGGY]  Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [CE]  >,  extends,  or  super  expected  [FE]                                      ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>	  Class    <?    superType    &&    type    instanceof    ParameterizedType    &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    ObjectConstructor    <    T>()    {    @Override    	non-compiled	[CE]  >,  extends,  or  super  expected	105	None	replace
571	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignedableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignedableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)&&    TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignedableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
572	[BUG]  [BUGGY]  if(Range.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Range.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Range.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(Reference.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
573	[BUG]  [BUGGY]  if(Reflection.class.isAssignableFrom(rawType)||  Reflection.class.isAssignableFrom(rawType))  {  If(Reflection.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Reflection.class.isAssignableFrom(rawType)||  Reflection.class.isAssignableFrom(rawType))  {  If(Reflection.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Reflection.class.isAssignableFrom(rawType)||  Reflection.class.isAssignableFrom(rawType))  {  If(Reflection.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    If(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	13	None	replace
574	[BUG]  [BUGGY]  if(Reflection.class.isAssignableFrom(rawType)||  Reflection.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Reflection.class.isAssignableFrom(rawType)||  Reflection.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Reflection.class.isAssignableFrom(rawType)||  Reflection.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    If(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	13	None	replace
575	[BUG]  [BUGGY]  if(Reflection.class.isAssignableFrom(rawType)||  Reflection.class.isAssignableFrom(rawType))  {  If(Reflection.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType)  [CE]  ')'  expected  [FE]                    NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Reflection.class.isAssignableFrom(rawType)||  Reflection.class.isAssignableFrom(rawType))  {  If(Reflection.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType)  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Reflection.class.isAssignableFrom(rawType)||  Reflection.class.isAssignableFrom(rawType))  {  If(Reflection.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType)	  if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    If(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ')'  expected	13	None	replace
576	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(TreeMap.class)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(rawType.isAssignableFrom(TreeMap.class)||  Map.class.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(Map.class)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	78	3	replace
577	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(TreeMap.class)||  Map.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(TreeMap.class)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(TreeMap.class)||  Map.class.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(Map.class)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	78	3	replace
578	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  SortedMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(Set.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  SortedMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(Set.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(Map.class)||    SortedMap.class.isAssignableFrom(rawType))    {    if(rawType.isAssignableFrom(Set.class)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	75	None	add
579	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  SortedMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(Reference.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  SortedMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(Reference.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(Map.class)||    SortedMap.class.isAssignableFrom(rawType))    {    if(rawType.isAssignableFrom(Reference.class)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	75	None	add
580	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  List.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  List.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||  List.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
581	[BUG]  [BUGGY]  if(ReflectionProvider.class.isAssignableFrom(rawType)&&  type  instanceof  TreeMap  <  Object,  Object>)  {  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ReflectionProvider.class.isAssignableFrom(rawType)&&  type  instanceof  TreeMap  <  Object,  Object>)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReflectionProvider.class.isAssignableFrom(rawType)&&  type  instanceof  TreeMap  <  Object,  Object>)  {	  if(Map.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)&&    type    instanceof    TreeMap    <    Object,    Object>)    {    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
582	[BUG]  [BUGGY]  if(Constructor.class.isAssignableFrom(rawType)&&  type  instanceof  TreeMap  <  Object,  Object>)  {  [CE]  illegal  generic  type  for  instanceof  [FE]                  NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Constructor.class.isAssignableFrom(rawType)&&  type  instanceof  TreeMap  <  Object,  Object>)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Constructor.class.isAssignableFrom(rawType)&&  type  instanceof  TreeMap  <  Object,  Object>)  {	  if(Map.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)&&    type    instanceof    TreeMap    <    Object,    Object>)    {    	non-compiled	[CE]  illegal  generic  type  for  instanceof	87	None	replace
583	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  Map.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(Set.class)||  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  Map.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(Set.class)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(Map.class)||    Map.class.isAssignableFrom(rawType))    {    if(rawType.isAssignableFrom(Set.class)||  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	77	None	add
584	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignedableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignedableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(SortedMap.class)||    SortedMap.class.isAssignableFrom(rawType))    {    if(rawType.isAssignedableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
585	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(SuperMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(SuperMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(SortedMap.class)||    SortedMap.class.isAssignableFrom(rawType))    {    if(rawType.isAssignableFrom(SuperMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
586	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  Map.Class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  Class  [FE]            NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  Map.Class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||  Map.Class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)||    Map.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  Class	11	None	replace
587	[BUG]  [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ObjectConstructor.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    If(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	47	None	replace
588	[BUG]  [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType)  [CE]  ')'  expected  [FE]              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType)  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ObjectConstructor.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType)	  if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    If(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ')'  expected	47	None	replace
589	[BUG]  [BUGGY]  if(Reference.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Reference.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Reference.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    If(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	47	None	replace
590	[BUG]  [BUGGY]  If(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  If(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	If(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    If(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	47	None	replace
591	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(Object.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
592	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(Reference.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(Reference.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(Reference.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
593	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(Reflection.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(Reflection.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(Reflection.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
594	[BUG]  [BUGGY]  if(GradientMap.class.isAssignableFrom(rawType)||  TreeMap.class.equals(rawType))  {  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(GradientMap.class.isAssignableFrom(rawType)||  TreeMap.class.equals(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(GradientMap.class.isAssignableFrom(rawType)||  TreeMap.class.equals(rawType))  {	  if(GradientMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
595	[BUG]  [BUGGY]  if(Reference.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Reference.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Reference.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {	  if(Reference.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
596	[BUG]  [BUGGY]  if(Renderer.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Renderer.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Renderer.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(Reference.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
597	[BUG]  [BUGGY]  if(Range.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Range.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Range.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(Reference.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
598	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(type),  rawType)  {  [CE]  ')'  expected  [FE]          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(type),  rawType)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(type),  rawType)  {	  if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(type))    {    	non-compiled	[CE]  ')'  expected	60	None	replace
599	[BUG]  [BUGGY]  if(ReferenceMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ReferenceMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(type))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReferenceMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(type))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
600	[BUG]  [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  if(Array.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  if(Array.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Collection.class.isAssignableFrom(rawType)||    Collection.class.isAssignableFrom(rawType))    {    if(Array.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	150	None	add
601	[BUG]  [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Collection.class.isAssignableFrom(rawType)||    Collection.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	150	None	add
602	[BUG]  [BUGGY]  If(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  If(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	If(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    If(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	66	None	replace
603	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)&&  Object.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Object.class.isAssignableFrom(rawType)&&  Object.class.isAssignableFrom(rawType))  {	  if(Object.class.isAssignableFrom(rawType)||    Object.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	153	3	replace
604	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)&&  Object.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)&&  Object.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)&&  Object.class.isAssignableFrom(rawType))  {	  if(Object.class.isAssignableFrom(rawType)||    Object.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	153	3	replace
605	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(String.class.isAssignableFrom(rawType)||  String.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(String.class.isAssignableFrom(rawType)||  String.class.isAssignableFrom(rawType))  {	  if(Object.class.isAssignableFrom(rawType)||    Object.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	153	3	replace
606	[BUG]  [BUGGY]  if(String.class.isAssignableFrom(rawType)||  String.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]      NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(String.class.isAssignableFrom(rawType)||  String.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(String.class.isAssignableFrom(rawType)||  String.class.isAssignableFrom(rawType))  {	  if(Object.class.isAssignableFrom(rawType)||    Object.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	153	3	replace
607	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  Object.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(TreeMap.class.isAssignableFrom(rawType)||  Object.class.isAssignableFrom(rawType))  {	  if(Object.class.isAssignableFrom(rawType)||    Object.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	153	3	replace
608	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  Object.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  Object.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||  Object.class.isAssignableFrom(rawType))  {	  if(Object.class.isAssignableFrom(rawType)||    Object.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	153	3	replace
609	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(Reference.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(Reference.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)&&    SortedMap.class.isAssignableFrom(rawType))    {    if(Reference.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
610	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)&&    SortedMap.class.isAssignableFrom(rawType))    {    if(Object.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
611	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(Set.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(Set.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)&&    SortedMap.class.isAssignableFrom(rawType))    {    if(Set.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
612	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(Array.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(Array.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)&&    SortedMap.class.isAssignableFrom(rawType))    {    if(Array.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
613	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(Reflection.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(Reflection.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)&&    SortedMap.class.isAssignableFrom(rawType))    {    if(Reflection.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
614	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(String.class.isAssignableFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(String.class.isAssignableFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(SortedMap.class)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	28	3	replace
615	[BUG]  [BUGGY]  if(String.class.isAssignableFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(String.class.isAssignableFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(String.class.isAssignableFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(SortedMap.class)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	28	3	replace
616	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(type,  null))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]          NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(type,  null))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(type,  null))  {	  if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	79	None	replace
617	[BUG]  [BUGGY]  if(String.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(String.class.isAssignableFrom(rawType)||  TreeMap.CLASS.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(String.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(String.class.isAssignableFrom(rawType)||  TreeMap.CLASS.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(String.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(String.class.isAssignableFrom(rawType)||  TreeMap.CLASS.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	129	None	add
618	[BUG]  [BUGGY]  if(SortMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
619	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignedableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignedableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignedableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignedableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
620	[BUG]  [BUGGY]  if(ReferenceMap.class.equals(rawType)||  SortedMap.class.equals(rawType))  {  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ReferenceMap.class.equals(rawType)||  SortedMap.class.equals(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReferenceMap.class.equals(rawType)||  SortedMap.class.equals(rawType))  {	  if(ReferenceMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
621	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Class.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Class.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(SortedMap.Class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	71	2	replace
622	[BUG]  [BUGGY]  if(Class.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Class.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Class.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(SortedMap.Class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	71	2	replace
623	[BUG]  [BUGGY]  If(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  If(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	If(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    If(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	55	None	replace
624	[BUG]  [BUGGY]  Object  <?>  rawType  =  type.getElementType();  [CE]  illegal  start  of  type  [FE]                                  ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Object  <?>  rawType  =  type.getElementType();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Object  <?>  rawType  =  type.getElementType();	  Object    <?>    rawType    =    type.getRawType();    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
625	[BUG]  [BUGGY]  Class  <?  superType  =  type.getSuperClass()  ||  rawType!=  null;  [CE]  >,  extends,  or  super  expected  [FE]                          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  =  type.getSuperClass()  ||  rawType!=  null;  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  =  type.getSuperClass()  ||  rawType!=  null;	  Class    <?    superType    =    type.getSuperClass();    	non-compiled	[CE]  >,  extends,  or  super  expected	139	None	replace
626	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(String.class.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(String.class.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(SortedMap.class)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	5	3	replace
627	[BUG]  [BUGGY]  if(String.class.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(String.class.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(String.class.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(SortedMap.class)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	5	3	replace
628	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {  if(rawType.isAssignedableFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {  if(rawType.isAssignedableFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(SortedMap.class)||    Map.class.isAssignableFrom(rawType))    {    if(rawType.isAssignedableFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
629	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Object.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)&&  Object.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Object.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)&&  Object.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||    Object.class.isAssignableFrom(rawType))    {    if(Object.class.isAssignableFrom(rawType)&&  Object.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	152	None	add
630	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)&&    Map.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
631	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  if(Reference.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  if(Reference.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)&&    Map.class.isAssignableFrom(rawType))    {    if(Reference.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
632	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  if(Reflection.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  if(Reflection.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)&&    Map.class.isAssignableFrom(rawType))    {    if(Reflection.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
633	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  if(Collection.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  if(Collection.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)&&    Map.class.isAssignableFrom(rawType))    {    if(Collection.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
634	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  if(Array.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  if(Array.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)&&    Map.class.isAssignableFrom(rawType))    {    if(Array.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
635	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  if(Set.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  if(Set.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)&&    Map.class.isAssignableFrom(rawType))    {    if(Set.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
636	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Class.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Class.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(SortedMap.Class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	48	3	replace
637	[BUG]  [BUGGY]  if(Class.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Class.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Class.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(SortedMap.Class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	48	3	replace
638	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignedableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignedableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)&&    SortedMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignedableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
639	[BUG]  [BUGGY]  if(SuperMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SuperMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SuperMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(SuperMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
640	[BUG]  [BUGGY]  if(ReflectionMap.class.isAssignableFrom(rawType)||  ReflectionMap.class.equals(rawType))  {  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ReflectionMap.class.isAssignableFrom(rawType)||  ReflectionMap.class.equals(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReflectionMap.class.isAssignableFrom(rawType)||  ReflectionMap.class.equals(rawType))  {	  if(ReflectionMap.class.isAssignableFrom(rawType)||    ReflectionMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
641	[BUG]  [BUGGY]  if(ReferenceMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ReferenceMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReferenceMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {	  if(ReferenceMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
642	[BUG]  [BUGGY]  if(RenderingMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(RenderingMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(RenderingMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(ReferenceMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
643	[BUG]  [BUGGY]  if(ObjectMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ObjectMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ObjectMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(ReferenceMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
644	[BUG]  [BUGGY]  if(ReferenceMap.class.isAssignableFrom(rawType)||  TreeMap.class.equals(rawType))  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ReferenceMap.class.isAssignableFrom(rawType)||  TreeMap.class.equals(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReferenceMap.class.isAssignableFrom(rawType)||  TreeMap.class.equals(rawType))  {	  if(ReferenceMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
645	[BUG]  [BUGGY]  If(TreeMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  If(TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	If(TreeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType))    {    If(TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	41	None	replace
646	[BUG]  [BUGGY]  if(ReflectionMap.class.isAssignableFrom(rawType)||  ReflectionMap.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]                    NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ReflectionMap.class.isAssignableFrom(rawType)||  ReflectionMap.class.isAssignableFrom(type))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReflectionMap.class.isAssignableFrom(rawType)||  ReflectionMap.class.isAssignableFrom(type))  {	  if(Map.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
647	[BUG]  [BUGGY]  if(Reference.class.isAssignableFrom(rawType)||  Reference.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]                      NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Reference.class.isAssignableFrom(rawType)||  Reference.class.isAssignableFrom(type))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Reference.class.isAssignableFrom(rawType)||  Reference.class.isAssignableFrom(type))  {	  if(Map.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
648	[BUG]  [BUGGY]  if(TypeUtil.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]            ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TypeUtil.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TypeUtil.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(TreeMap.Class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	65	None	replace
649	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  if(SuperMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  if(SuperMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)&&    Map.class.isAssignableFrom(rawType))    {    if(SuperMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	148	None	add
650	[BUG]  [BUGGY]  Class  <?  superType  &&  type  instanceof  Class  <?>  &&!(String.class.isAssignableFrom(TypeToken.get(((Class)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [CE]  >,  extends,  or  super  expected  [FE]                            ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  &&  type  instanceof  Class  <?>  &&!(String.class.isAssignableFrom(TypeToken.get(((Class)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  &&  type  instanceof  Class  <?>  &&!(String.class.isAssignableFrom(TypeToken.get(((Class)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>	  Class    <?    superType    &&    type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  >,  extends,  or  super  expected	101	None	replace
651	[BUG]  [BUGGY]  Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType())))  {  [CE]  >,  extends,  or  super  expected  [FE]                                ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType())))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType())))  {	  Class    <?    superType    &&    type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    	non-compiled	[CE]  >,  extends,  or  super  expected	103	None	replace
652	[BUG]  [BUGGY]  Class  <?  superType  &&  type  instanceof  Type  <?>  &&!(String.class.isAssignableFrom(TypeToken.get(((Type)type).getActualTypeArguments()  [0]).getRawType())))  {  [CE]  >,  extends,  or  super  expected  [FE]                                  ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  &&  type  instanceof  Type  <?>  &&!(String.class.isAssignableFrom(TypeToken.get(((Type)type).getActualTypeArguments()  [0]).getRawType())))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  &&  type  instanceof  Type  <?>  &&!(String.class.isAssignableFrom(TypeToken.get(((Type)type).getActualTypeArguments()  [0]).getRawType())))  {	  Class    <?    superType    &&    type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    	non-compiled	[CE]  >,  extends,  or  super  expected	103	None	replace
653	[BUG]  [BUGGY]  if(String.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(String.class.isAssignableFrom(rawType)||  SortedMap.CLASS.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(String.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(String.class.isAssignableFrom(rawType)||  SortedMap.CLASS.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(String.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(String.class.isAssignableFrom(rawType)||  SortedMap.CLASS.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	121	None	add
654	[BUG]  [BUGGY]  Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  [CE]  >,  extends,  or  super  expected  [FE]                                  ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new	  Class    <?    superType    &&    type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    ObjectConstructor    <    	non-compiled	[CE]  >,  extends,  or  super  expected	104	None	replace
655	[BUG]  [BUGGY]  Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  [CE]  >,  extends,  or  super  expected  [FE]                                ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))	  Class    <?    superType    &&    type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    	non-compiled	[CE]  >,  extends,  or  super  expected	103	None	replace
656	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Class.class.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Class.class.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.Class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	54	3	replace
657	[BUG]  [BUGGY]  if(Class.class.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Class.class.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Class.class.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.Class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	54	3	replace
658	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType,  type))  {  [CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;  [FE]          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType,  type))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType,  type))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;	60	None	replace
659	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignedFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignedFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)&&    SortedMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignedFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
660	[BUG]  [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(raw  [CE]  ')'  expected  [FE]            ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(raw  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ObjectConstructor.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(raw	  if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    If(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ')'  expected	47	None	replace
661	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Object.class.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {	  if(Object.class.isAssignableFrom(rawType)||    Object.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	153	3	replace
662	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {	  if(Object.class.isAssignableFrom(rawType)||    Object.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	153	3	replace
663	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(type),  rawType)  {  [CE]  ')'  expected  [FE]        ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(type),  rawType)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(type),  rawType)  {	  if(TreeMap.class.isAssignableFrom(rawType)&&    TreeMap.class.isAssignableFrom(type))    {    	non-compiled	[CE]  ')'  expected	155	None	replace
664	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(type),  this)  {  [CE]  ')'  expected  [FE]          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(type),  this)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(type),  this)  {	  if(TreeMap.class.isAssignableFrom(rawType)&&    TreeMap.class.isAssignableFrom(type))    {    	non-compiled	[CE]  ')'  expected	155	None	replace
665	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(type),  rawType)  {  [CE]  ')'  expected  [FE]          NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(type),  rawType)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(type),  rawType)  {	  if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(type))    {    	non-compiled	[CE]  ')'  expected	79	None	replace
666	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(elementType))  {  [CE]  cannot  find  symbol  elementType  [FE]        NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(elementType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(elementType))  {	  if(Map.class.isAssignableFrom(rawType)&&    Map.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  elementType	161	None	replace
667	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(elementType)&&  Map.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  elementType  [FE]          NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(elementType)&&  Map.class.isAssignableFrom(type))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(elementType)&&  Map.class.isAssignableFrom(type))  {	  if(Map.class.isAssignableFrom(rawType)&&    Map.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  elementType	161	None	replace
668	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(type),  rawType)  {  [CE]  ')'  expected  [FE]            NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(type),  rawType)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(type),  rawType)  {	  if(Map.class.isAssignableFrom(rawType)&&    Map.class.isAssignableFrom(type))    {    	non-compiled	[CE]  ')'  expected	161	None	replace
669	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(String.class.isAssignableFrom(TreeMap.class)||  String.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(String.class.isAssignableFrom(TreeMap.class)||  String.class.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(TreeMap.class)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	62	3	replace
670	[BUG]  [BUGGY]  if(String.class.isAssignableFrom(TreeMap.class)||  String.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(String.class.isAssignableFrom(TreeMap.class)||  String.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(String.class.isAssignableFrom(TreeMap.class)||  String.class.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(TreeMap.class)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	62	3	replace
671	[BUG]  [BUGGY]  if(Reference.class.isAssignedFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Reference.class.isAssignedFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Reference.class.isAssignedFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(Reference.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
672	[BUG]  [BUGGY]  if(TreeMap.class.isAssignedFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignedFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignedFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	133	None	replace
673	[BUG]  [BUGGY]  Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  >,  extends,  or  super  expected  [FE]                        ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {	  Class    <?    superType    &&    type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    ObjectConstructor    <    T>()    {    @Override    	non-compiled	[CE]  >,  extends,  or  super  expected	99	None	replace
674	[BUG]  [BUGGY]  Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  >,  extends,  or  super  expected  [FE]                          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {	  Class    <?    superType    &&    type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    ObjectConstructor    <    T>()    {    @Override    	non-compiled	[CE]  >,  extends,  or  super  expected	99	None	replace
675	[BUG]  [BUGGY]  Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).get  [CE]  ';'  expected  [FE]                            ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).get  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).get	  Constructor    <    T>    construct()    {    return(Constructor    <    T>)new    LinkedHashMap    <    Object,    Object>();    }    else    if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActual    	non-compiled	[CE]  ';'  expected	82	None	replace
676	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignedFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignedFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)&&    SortedMap.class.isAssignableFrom(rawType))    {    if(SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignedFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	119	None	add
677	[BUG]  [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom  [CE]  ')'  expected  [FE]            ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Collection.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom	  if(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    If(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ')'  expected	70	None	replace
678	[BUG]  [BUGGY]  if(Reference.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom  [CE]  ')'  expected  [FE]              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Reference.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Reference.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  If(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom	  if(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    If(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ')'  expected	70	None	replace
679	[BUG]  [BUGGY]  if(ReflectionTreeMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ReflectionTreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReflectionTreeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignABLEFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
680	[BUG]  [BUGGY]  Type  elementType  =  getElementType(rawType).getElementType();  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Type  elementType  =  getElementType(rawType).getElementType();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Type  elementType  =  getElementType(rawType).getElementType();	  Type    elementType    =    type.getElementType();    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
681	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(TreeMap.class)||  RawType.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(TreeMap.class)||  RawType.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(TreeMap.class)||  RawType.class.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(Map.class)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
682	[BUG]  [BUGGY]  if(Type.isAssignableFrom(Map.class)||  Type.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Type.isAssignableFrom(Map.class)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Type.isAssignableFrom(Map.class)||  Type.class.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(Map.class)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
683	[BUG]  [BUGGY]  if(TreeMap.class.isAssignedFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignedFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignedFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignedFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
684	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)&&    SortedMap.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
685	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  if(SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)&&    SortedMap.class.isAssignableFrom(rawType))    {    if(SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
686	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(String.class.isAssignableFrom(SortedMap.class)||  String.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(String.class.isAssignableFrom(SortedMap.class)||  String.class.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(SortedMap.class)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	28	3	replace
687	[BUG]  [BUGGY]  if(String.class.isAssignableFrom(SortedMap.class)||  String.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(String.class.isAssignableFrom(SortedMap.class)||  String.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(String.class.isAssignableFrom(SortedMap.class)||  String.class.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(SortedMap.class)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	28	3	replace
688	[BUG]  [BUGGY]  Class  <?  superType  =  type.getSuperClass()  ||(type  instanceof  Class  <?  superType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  TreeMap  <  Object,  Object>();  [CE]  >,  extends,  or  super  expected  [FE]                          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  =  type.getSuperClass()  ||(type  instanceof  Class  <?  superType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  TreeMap  <  Object,  Object>();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  =  type.getSuperClass()  ||(type  instanceof  Class  <?  superType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  TreeMap  <  Object,  Object>();	  Class    <?    superType    =    type.getSuperClass();    	non-compiled	[CE]  >,  extends,  or  super  expected	139	None	replace
689	[BUG]  [BUGGY]  Class  <?  superType  =  type.getSuperClass()  ||(type  instanceof  Class  <?  superType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  >,  extends,  or  super  expected  [FE]                            ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  =  type.getSuperClass()  ||(type  instanceof  Class  <?  superType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  =  type.getSuperClass()  ||(type  instanceof  Class  <?  superType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  TreeMap  <  Object,  Object>();  }	  Class    <?    superType    =    type.getSuperClass();    	non-compiled	[CE]  >,  extends,  or  super  expected	139	None	replace
690	[BUG]  [BUGGY]  Class  <?  superType  =  type.getSuperClass()  ||(type  instanceof  Class  <?  superType  &&  type.isAssignableFrom(((ParameterizedType)type).getRawType()))  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  >,  extends,  or  super  expected  [FE]                              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  =  type.getSuperClass()  ||(type  instanceof  Class  <?  superType  &&  type.isAssignableFrom(((ParameterizedType)type).getRawType()))  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  =  type.getSuperClass()  ||(type  instanceof  Class  <?  superType  &&  type.isAssignableFrom(((ParameterizedType)type).getRawType()))  {  return  new  TreeMap  <  Object,  Object>();  }	  Class    <?    superType    =    type.getSuperClass();    	non-compiled	[CE]  >,  extends,  or  super  expected	139	None	replace
691	[BUG]  [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  if(Arrays.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  if(Arrays.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Collection.class.isAssignableFrom(rawType)||    Collection.class.isAssignableFrom(rawType))    {    if(Arrays.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	150	None	add
692	[BUG]  [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  if(Reference.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  if(Reference.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Collection.class.isAssignableFrom(rawType)||    Collection.class.isAssignableFrom(rawType))    {    if(Reference.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	150	None	add
693	[BUG]  [BUGGY]  if(ReeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ReeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType))    {    if(ReeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
694	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Object.class.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(SortedMap.class)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	5	3	replace
695	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(SortedMap.class)||    TreeMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	5	3	replace
696	[BUG]  [BUGGY]  if(Type.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Type.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Type.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(Object.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
697	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(TreeMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
698	[BUG]  [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(ObjectConstructor.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignedFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(ObjectConstructor.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignedFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ObjectConstructor.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(ObjectConstructor.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignedFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	125	None	add
699	[BUG]  [BUGGY]  if(ReflectionTree.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ReflectionTree.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReflectionTree.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType))    {    if(Object.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
700	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(type))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(type))  {	  if(Object.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	7	None	replace
701	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  Map.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(Map.class)||  Map.class.equals(rawType))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  Map.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(Map.class)||  Map.class.equals(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(Map.class)||    Map.class.isAssignableFrom(rawType))    {    if(rawType.isAssignableFrom(Map.class)||  Map.class.equals(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	77	None	add
702	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  Map.class.isAssignableFrom(rawType))  {  if(rawType.equals(Map.class)||  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(Map.class)||  Map.class.isAssignableFrom(rawType))  {  if(rawType.equals(Map.class)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(Map.class)||    Map.class.isAssignableFrom(rawType))    {    if(rawType.equals(Map.class)||  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	77	None	add
703	[BUG]  [BUGGY]  Class  <?  superType  =  objectType.getRawClass();  [CE]  >,  extends,  or  super  expected  [FE]                                    ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  =  objectType.getRawClass();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  =  objectType.getRawClass();	  Class    <?    superType    =    type.getRawClass();    	non-compiled	[CE]  >,  extends,  or  super  expected	144	None	replace
704	[BUG]  [BUGGY]  Class  <?  superType  =  parent.getRawClass();  [CE]  >,  extends,  or  super  expected  [FE]                                      ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  =  parent.getRawClass();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  =  parent.getRawClass();	  Class    <?    superType    =    type.getRawClass();    	non-compiled	[CE]  >,  extends,  or  super  expected	144	None	replace
705	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Class.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Class.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(SortedMap.Class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	33	3	replace
706	[BUG]  [BUGGY]  if(Class.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Class.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Class.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(SortedMap.Class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	33	3	replace
707	[BUG]  [BUGGY]  if(ReflectionTreeBuilder.class.isAssignableFrom(rawType)||  ReflectionTree.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ReflectionTreeBuilder.class.isAssignableFrom(rawType)||  ReflectionTree.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReflectionTreeBuilder.class.isAssignableFrom(rawType)||  ReflectionTree.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
708	[BUG]  [BUGGY]  if(String.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(String.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignedFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(String.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  if(String.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignedFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(String.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(String.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignedFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	121	None	add
709	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Collection.class.isAssignableFrom(rawType)&&  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Collection.class.isAssignableFrom(rawType)&&  Collection.class.isAssignableFrom(rawType))  {	  if(Collection.class.isAssignableFrom(rawType)||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	151	3	replace
710	[BUG]  [BUGGY]  if(Collection.class.isAssignableFrom(rawType)&&  Collection.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Collection.class.isAssignableFrom(rawType)&&  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Collection.class.isAssignableFrom(rawType)&&  Collection.class.isAssignableFrom(rawType))  {	  if(Collection.class.isAssignableFrom(rawType)||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	151	3	replace
711	[BUG]  [BUGGY]  Class  <?  superType  =  type.getSuperclass()  :  null;  [CE]  >,  extends,  or  super  expected  [FE]                              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  =  type.getSuperclass()  :  null;  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  =  type.getSuperclass()  :  null;	  Class    <?    superType    =    type.getSuperclass();    	non-compiled	[CE]  >,  extends,  or  super  expected	141	None	replace
712	[BUG]  [BUGGY]  Class  <?  superType  =  type.getSuperclass()  :  rawType;  [CE]  >,  extends,  or  super  expected  [FE]                                ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  =  type.getSuperclass()  :  rawType;  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  =  type.getSuperclass()  :  rawType;	  Class    <?    superType    =    type.getSuperclass();    	non-compiled	[CE]  >,  extends,  or  super  expected	141	None	replace
713	[BUG]  [BUGGY]  Class  <?  superType  =  type.getSuperclass()  :  elementType;  [CE]  >,  extends,  or  super  expected  [FE]                                  ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  =  type.getSuperclass()  :  elementType;  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  =  type.getSuperclass()  :  elementType;	  Class    <?    superType    =    type.getSuperclass();    	non-compiled	[CE]  >,  extends,  or  super  expected	141	None	replace
714	[BUG]  [BUGGY]  if(String.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(String.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignedFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(String.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(String.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignedFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(String.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(String.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignedFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	129	None	add
715	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(String.class.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(String.class.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(SortedMap.class)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	94	2	replace
716	[BUG]  [BUGGY]  if(String.class.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(String.class.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(String.class.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(SortedMap.class)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	94	2	replace
717	[BUG]  [BUGGY]  final  Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  LinkedHashMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActual  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  final  Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  LinkedHashMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActual  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	final  Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  LinkedHashMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActual	  Constructor    <    T>    construct()    {    return(Constructor    <    T>)new    LinkedHashMap    <    Object,    Object>();    }    else    if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    	non-compiled	[CE]  ';'  expected	80	None	replace
718	[BUG]  [BUGGY]  if(Type.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Type.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Type.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(Object.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
719	[BUG]  [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ObjectConstructor.class.isAssignableFrom(rawType))  {  If(TreeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType))    {    If(TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	41	None	replace
720	[BUG]  [BUGGY]  if(GradientMap.class.isAssignableFrom(rawType)||  SortedMap.Class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(GradientMap.class.isAssignableFrom(rawType)||  SortedMap.Class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(GradientMap.class.isAssignableFrom(rawType)||  SortedMap.Class.isAssignableFrom(rawType))  {	  if(GradientMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
721	[BUG]  [BUGGY]  Type  elementType  =  getElementType(rawType,  Object.class);  [CE]  illegal  start  of  type  [FE]                        ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Type  elementType  =  getElementType(rawType,  Object.class);  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Type  elementType  =  getElementType(rawType,  Object.class);	  Type    elementType    =    getElementType(rawType);    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
722	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(Object.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
723	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)||  Map.class.equals(rawType))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)||  Map.class.equals(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(Object.class.isAssignableFrom(rawType)||  Map.class.equals(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
724	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(Object.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
725	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)||  TreeMap.class.equals(rawType))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(Object.class.isAssignableFrom(rawType)||  TreeMap.class.equals(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(Object.class.isAssignableFrom(rawType)||  TreeMap.class.equals(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
726	[BUG]  [BUGGY]  Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  >,  extends,  or  super  expected  [FE]                                    ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {	  Class    <?    superType    &&    type    instanceof    ParameterizedType    &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    ObjectConstructor    <    T>()    {    @Override    	non-compiled	[CE]  >,  extends,  or  super  expected	105	None	replace
727	[BUG]  [BUGGY]  Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  >,  extends,  or  super  expected  [FE]                                      ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {	  Class    <?    superType    &&    type    instanceof    ParameterizedType    &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    ObjectConstructor    <    T>()    {    @Override    	non-compiled	[CE]  >,  extends,  or  super  expected	105	None	replace
728	[BUG]  [BUGGY]  Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  Object  [CE]  >,  extends,  or  super  expected  [FE]                                        ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  Object  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  Object	  Class    <?    superType    &&    type    instanceof    ParameterizedType    &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    ObjectConstructor    <    T>()    {    @Override    	non-compiled	[CE]  >,  extends,  or  super  expected	105	None	replace
729	[BUG]  [BUGGY]  Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {  @Overrid  [CE]  >,  extends,  or  super  expected  [FE]                                          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {  @Overrid  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {  @Overrid	  Class    <?    superType    &&    type    instanceof    ParameterizedType    &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    ObjectConstructor    <    T>()    {    @Override    	non-compiled	[CE]  >,  extends,  or  super  expected	105	None	replace
730	[BUG]  [BUGGY]  Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {  @Overrid  [CE]  >,  extends,  or  super  expected  [FE]                                            ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {  @Overrid  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  &&  type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {  @Overrid	  Class    <?    superType    &&    type    instanceof    ParameterizedType    &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    ObjectConstructor    <    T>()    {    @Override    	non-compiled	[CE]  >,  extends,  or  super  expected	105	None	replace
731	[BUG]  [BUGGY]  if(RenderingConstructor.class.isAssignableFrom(rawType)||  Reflection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(RenderingConstructor.class.isAssignableFrom(rawType)||  Reflection.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(RenderingConstructor.class.isAssignableFrom(rawType)||  Reflection.class.isAssignableFrom(rawType))  {	  if(Reflection.class.isAssignableFrom(rawType)||    Reflection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
732	[BUG]  [BUGGY]  if(Reflection.class.isAssignableFrom(rawType)||  Reflection.class.equals(rawType))  {  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Reflection.class.isAssignableFrom(rawType)||  Reflection.class.equals(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Reflection.class.isAssignableFrom(rawType)||  Reflection.class.equals(rawType))  {	  if(Reflection.class.isAssignableFrom(rawType)||    Reflection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
733	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(SortedMap.class)||  TreeMap.class.equals(rawType))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  TreeMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(SortedMap.class)||  TreeMap.class.equals(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(SortedMap.class)||    TreeMap.class.isAssignableFrom(rawType))    {    if(rawType.isAssignableFrom(SortedMap.class)||  TreeMap.class.equals(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
734	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  if(SortedMap.class.equals(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  if(SortedMap.class.equals(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)&&    Map.class.isAssignableFrom(rawType))    {    if(SortedMap.class.equals(rawType)&&  Map.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	148	None	add
735	[BUG]  [BUGGY]  if(reflectionMap.class.isAssignableFrom(rawType)||  ReflectionMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(reflectionMap.class.isAssignableFrom(rawType)||  ReflectionMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(reflectionMap.class.isAssignableFrom(rawType)||  ReflectionMap.class.isAssignableFrom(rawType))  {	  if(ReflectionMap.class.isAssignableFrom(rawType)||    ReflectionMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
736	[BUG]  [BUGGY]  Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  [CE]  >,  extends,  or  super  expected  [FE]                              ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Class  <?  superType  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()	  Class    <?    superType    &&    type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    ObjectConstructor    <    T>()    	non-compiled	[CE]  >,  extends,  or  super  expected	102	None	replace
737	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(ObjectConstructor.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)&&    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	38	3	replace
738	[BUG]  [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ObjectConstructor.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)&&    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	38	3	replace
739	[BUG]  [BUGGY]  if(Class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  non-static  method  isAssignableFrom(Class<?>)  cannot  be  referenced  from  a  static  context  [FE]            ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    if(TreeMap.Class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  non-static  method  isAssignableFrom(Class<?>)  cannot  be  referenced  from  a  static  context	65	None	replace
740	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(SortedMap.class)||  SortedMap.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  SortedMap.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(SortedMap.class)||  SortedMap.Class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(SortedMap.class)||    SortedMap.class.isAssignableFrom(rawType))    {    if(rawType.isAssignableFrom(SortedMap.class)||  SortedMap.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
741	[BUG]  [BUGGY]  Object  <?  super  T>  rawType  =(type  instanceof  Class  <?  super  T>)?((  Class  <?  super  T>)type).getRawType()  :  type.getRawType();  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Object  <?  super  T>  rawType  =(type  instanceof  Class  <?  super  T>)?((  Class  <?  super  T>)type).getRawType()  :  type.getRawType();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Object  <?  super  T>  rawType  =(type  instanceof  Class  <?  super  T>)?((  Class  <?  super  T>)type).getRawType()  :  type.getRawType();	  Object    <?    super    T>    rawType    =    type.getRawType();    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
742	[BUG]  [BUGGY]  Object  <?  super  T>  rawType  =(type  instanceof  Class  <?  super  T>)?((  Class  <?  super  T>)type).getRawType()  :  type;  [CE]  illegal  start  of  type  [FE]                                  ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Object  <?  super  T>  rawType  =(type  instanceof  Class  <?  super  T>)?((  Class  <?  super  T>)type).getRawType()  :  type;  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Object  <?  super  T>  rawType  =(type  instanceof  Class  <?  super  T>)?((  Class  <?  super  T>)type).getRawType()  :  type;	  Object    <?    super    T>    rawType    =    type.getRawType();    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
743	[BUG]  [BUGGY]  Object  <?  super  T>  rawType  =(type  instanceof  Class  <?  super  T>)?(Class  <?  super  T>)type  :  type.getRawType();  [CE]  illegal  start  of  type  [FE]                                    ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Object  <?  super  T>  rawType  =(type  instanceof  Class  <?  super  T>)?(Class  <?  super  T>)type  :  type.getRawType();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Object  <?  super  T>  rawType  =(type  instanceof  Class  <?  super  T>)?(Class  <?  super  T>)type  :  type.getRawType();	  Object    <?    super    T>    rawType    =    type.getRawType();    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
744	[BUG]  [BUGGY]  Object  <?  super  T>  rawType  =(type  instanceof  Class  <?  super  T>)?((  Class  <?  super  T>)type).getRawType()  :  null;  [CE]  illegal  start  of  type  [FE]                                      ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Object  <?  super  T>  rawType  =(type  instanceof  Class  <?  super  T>)?((  Class  <?  super  T>)type).getRawType()  :  null;  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Object  <?  super  T>  rawType  =(type  instanceof  Class  <?  super  T>)?((  Class  <?  super  T>)type).getRawType()  :  null;	  Object    <?    super    T>    rawType    =    type.getRawType();    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
745	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(String.class.isAssignableFrom(Map.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(String.class.isAssignableFrom(Map.class)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(Map.class)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	76	2	replace
746	[BUG]  [BUGGY]  if(String.class.isAssignableFrom(Map.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(String.class.isAssignableFrom(Map.class)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(String.class.isAssignableFrom(Map.class)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(Map.class)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	76	2	replace
747	[BUG]  [BUGGY]  while(TreeMap.class.isAssignableFrom(rawType))  {  for(TreeMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]        ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  while(TreeMap.class.isAssignableFrom(rawType))  {  for(TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	while(TreeMap.class.isAssignableFrom(rawType))  {  for(TreeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType))    {    for(TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	135	None	replace
748	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType))  {  for(TreeMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType))  {  for(TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType))  {  for(TreeMap.class.isAssignableFrom(rawType))  {	  if(TreeMap.class.isAssignableFrom(rawType))    {    for(TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	135	None	replace
749	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  if(Map.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
750	[BUG]  [BUGGY]  Object  <?>  rawType  =  object.getRawType();  [CE]  illegal  start  of  type  [FE]                                  ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Object  <?>  rawType  =  object.getRawType();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Object  <?>  rawType  =  object.getRawType();	  Object    <?>    rawType    =    type.getRawType();    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
751	[BUG]  [BUGGY]  Object  <?>  rawType  =  elements.getRawType();  [CE]  illegal  start  of  type  [FE]                                    ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Object  <?>  rawType  =  elements.getRawType();  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Object  <?>  rawType  =  elements.getRawType();	  Object    <?>    rawType    =    type.getRawType();    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
752	[BUG]  [BUGGY]  if(Reflection.class.isAssignedFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Reflection.class.isAssignedFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Reflection.class.isAssignedFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    if(Reflection.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
753	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(SortedMap.class)||  Map.class.equals(rawType))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  Map.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(SortedMap.class)||  Map.class.equals(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(rawType.isAssignableFrom(SortedMap.class)||    Map.class.isAssignableFrom(rawType))    {    if(rawType.isAssignableFrom(SortedMap.class)||  Map.class.equals(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
754	[BUG]  [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  ObjectConstructor.class.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                    NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  ObjectConstructor.class.isAssignableFrom(type))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ObjectConstructor.class.isAssignableFrom(rawType)||  ObjectConstructor.class.isAssignableFrom(type))  {	  if(Map.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	89	None	replace
755	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(ObjectConstructor.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {	  if(ObjectConstructor.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	124	3	replace
756	[BUG]  [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ObjectConstructor.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {	  if(ObjectConstructor.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	124	3	replace
757	[BUG]  [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  ObjectConstructor.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  ObjectConstructor.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ObjectConstructor.class.isAssignableFrom(rawType)||  ObjectConstructor.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    If(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	13	None	replace
758	[BUG]  [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  ObjectConstructor.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType)  [CE]  ')'  expected  [FE]                  NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  ObjectConstructor.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType)  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ObjectConstructor.class.isAssignableFrom(rawType)||  ObjectConstructor.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType)	  if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    If(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ')'  expected	13	None	replace
759	[BUG]  [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  ObjectConstructor.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(raw  [CE]  ')'  expected  [FE]                    NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ObjectConstructor.class.isAssignableFrom(rawType)||  ObjectConstructor.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(raw  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ObjectConstructor.class.isAssignableFrom(rawType)||  ObjectConstructor.class.isAssignableFrom(rawType))  {  If(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(raw	  if(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    If(Map.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ')'  expected	13	None	replace
760	[BUG]  [BUGGY]  if(ReflectionMap.class!=  null  ||  Map.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ReflectionMap.class!=  null  ||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReflectionMap.class!=  null  ||  Map.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType))    {    if(ReflectionMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
761	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Object.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {	  if(Object.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	30	3	replace
762	[BUG]  [BUGGY]  if(Object.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Object.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Object.class.isAssignableFrom(rawType)&&  Map.class.isAssignableFrom(rawType))  {	  if(Object.class.isAssignableFrom(rawType)||    Map.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  NullPointerException  	30	3	replace
763	[BUG]  [BUGGY]  Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments	  Constructor    <    T>    construct()    {    return(Constructor    <    T>)new    LinkedHashMap    <    Object,    Object>();    }    else    if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]    	non-compiled	[CE]  ';'  expected	81	None	replace
764	[BUG]  [BUGGY]  Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  LinkedHashMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getRawType()  [CE]  ';'  expected  [FE]                            ClassCastException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  LinkedHashMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getRawType()  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	Constructor  <  T>  construct()  {  return(Constructor  <  T>)new  LinkedHashMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getRawType()	  Constructor    <    T>    construct()    {    return(Constructor    <    T>)new    LinkedHashMap    <    Object,    Object>();    }    else    if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]    	non-compiled	[CE]  ';'  expected	81	None	replace
765	[BUG]  [BUGGY]  if(ReflectionTreeMap.class.isAssignableFrom(rawType)||  ReflectionTreeMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ReflectionTreeMap.class.isAssignableFrom(rawType)||  ReflectionTreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReflectionTreeMap.class.isAssignableFrom(rawType)||  ReflectionTreeMap.class.isAssignableFrom(rawType))  {	  if(Map.class.isAssignableFrom(rawType))    {    if(TreeMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
766	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(type)&&  rawType  instanceof  TreeMap  <  Object,  Object>)  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(type)&&  rawType  instanceof  TreeMap  <  Object,  Object>)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(type)&&  rawType  instanceof  TreeMap  <  Object,  Object>)  {	  if(Map.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)&&    type    instanceof    TreeMap    <    Object,    Object>)    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	87	None	replace
767	[BUG]  [BUGGY]  if(ReflectionProvider.class.isAssignableFrom(rawType)||  ReflectionProvider.class.isAssignableFrom(rawType)&&  type  instanceof  TreeMap  <  Object,  Object>)  {  [CE]  cannot  find  symbol  [FE]                  NullPointerException      [CONTEXT]      }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ReflectionProvider.class.isAssignableFrom(rawType)||  ReflectionProvider.class.isAssignableFrom(rawType)&&  type  instanceof  TreeMap  <  Object,  Object>)  {  [BUGGY]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(ReflectionProvider.class.isAssignableFrom(rawType)||  ReflectionProvider.class.isAssignableFrom(rawType)&&  type  instanceof  TreeMap  <  Object,  Object>)  {	  if(Map.class.isAssignableFrom(rawType))    {    if(Map.class.isAssignableFrom(rawType)&&    type    instanceof    TreeMap    <    Object,    Object>)    {    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
