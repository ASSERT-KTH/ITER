bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException  [CONTEXT]  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(TreeMap.class.isAssignableFrom(rawType))  {	if  (SortedMap.class.isAssignableFrom(rawType))  {  	compilable	  [FE]  ClassCastException  	19	3	replace
2	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException  [CONTEXT]  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType))  {	if  (SortedMap.class.isAssignableFrom(rawType))  {  	compilable	  [FE]  ClassCastException  	19	3	replace
3	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      ClassCastException  [CONTEXT]  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  [BUGGY]  if(Map.class.isAssignableFrom(rawType))  {  [BUGGY]  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Map.class.isAssignableFrom(rawType))  {	if  (SortedMap.class.isAssignableFrom(rawType))  {  	compilable	  [FE]  NullPointerException  	19	3	replace
4	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]      ClassCastException  [CONTEXT]  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  [BUGGY]  if(Map.class.isAssignableFrom(rawType))  {  [BUGGY]  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType))  {	if  (SortedMap.class.isAssignableFrom(rawType))  {  	compilable	  [FE]  NullPointerException  	19	3	replace
5	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ClassCastException  [CONTEXT]  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	if  (SortedMap.class.isAssignableFrom(rawType))  {  	compilable	  [FE]  ClassCastException  	19	2	replace
6	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]        ClassCastException  [CONTEXT]  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	if  (SortedMap.class.isAssignableFrom(rawType))  {  	compilable	  [FE]  ClassCastException  	19	2	replace
7	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          ClassCastException  [CONTEXT]  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	if  (SortedMap.class.isAssignableFrom(rawType))  {  	compilable	  [FE]  NullPointerException  	19	3	replace
8	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]          ClassCastException  [CONTEXT]  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	if  (SortedMap.class.isAssignableFrom(rawType))  {  	compilable	  [FE]  NullPointerException  	19	3	replace
9	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            ClassCastException  [CONTEXT]  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	if  (SortedMap.class.isAssignableFrom(rawType))  {  	compilable	  [FE]  NullPointerException  	19	3	replace
10	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]            ClassCastException  [CONTEXT]  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  [BUGGY]  if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(Map.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	if  (SortedMap.class.isAssignableFrom(rawType))  {  	compilable	  [FE]  NullPointerException  	19	3	replace
11	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]              ClassCastException  [CONTEXT]  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	if  (SortedMap.class.isAssignableFrom(rawType))  {  	compilable	  [FE]  ClassCastException  	19	2	replace
12	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]              ClassCastException  [CONTEXT]  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	if  (SortedMap.class.isAssignableFrom(rawType))  {  	compilable	  [FE]  ClassCastException  	19	2	replace
13	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]                ClassCastException  [CONTEXT]  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  [BUGGY]    [BUGGY]  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	  	if  (SortedMap.class.isAssignableFrom(rawType))  {  	non-compiled	[CE]  illegal  start  of  type	19	None	replace
14	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException  [CONTEXT]  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	if  (SortedMap.class.isAssignableFrom(rawType))  {  	compilable	  [FE]  ClassCastException  	19	2	replace
15	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException  [CONTEXT]  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	if  (SortedMap.class.isAssignableFrom(rawType))  {  	compilable	  [FE]  ClassCastException  	19	2	replace
16	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException  [CONTEXT]  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	if  (SortedMap.class.isAssignableFrom(rawType))  {  	compilable	  [FE]  ClassCastException  	19	3	replace
17	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]      ClassCastException  [CONTEXT]  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	if  (SortedMap.class.isAssignableFrom(rawType))  {  	compilable	  [FE]  ClassCastException  	19	3	replace
18	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    ClassCastException  [CONTEXT]  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	add	if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	if  (SortedMap.class.isAssignableFrom(rawType))  {  	compilable	  [FE]  NullPointerException  	19	3	replace
19	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [FE]  NullPointerException  [FE]    ClassCastException  [CONTEXT]  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	175	175	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	if  (SortedMap.class.isAssignableFrom(rawType))  {  	compilable	  [FE]  NullPointerException  	19	3	replace
