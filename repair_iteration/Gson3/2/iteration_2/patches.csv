bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  '('  or  '['  expected  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  if(rawType    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  '('  or  '['  expected	4	None	replace
2	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {	  if(type    instanceof    ParameterizedType)    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	11	None	replace
3	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {	  if(type    instanceof    ParameterizedType)    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	11	None	replace
4	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[1]).getRawType())))  {  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[1]).getRawType())))  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[1]).getRawType())))  {	  if(type    instanceof    ParameterizedType)    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	11	None	replace
5	[BUG]  [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( "  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( "  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( "	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
6	[BUG]  [BUGGY]  &&  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( "  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  &&  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( "  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	&&  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( "	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
7	[BUG]  [BUGGY]  return  new  ArrayList  <  Object,  Object>();  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  ArrayList  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  ArrayList  <  Object,  Object>();	  return    new    ArrayList    <    Object,    Object>()    {    	non-compiled	[CE]  ';'  expected	32	None	replace
8	[BUG]  [BUGGY]  new  LinkedHashMap  <  Object,  Object>()  {  [CE]  method  does  not  override  or  implement  a  method  from  a  supertype  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  new  LinkedHashMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	new  LinkedHashMap  <  Object,  Object>()  {	  return    new    ArrayList    <    Object,    Object>()    {    	non-compiled	[CE]  method  does  not  override  or  implement  a  method  from  a  supertype	32	None	replace
9	[BUG]  [BUGGY]  return(T)new  ArrayList  <  Object,  Object>()  {  [CE]  wrong  number  of  type  arguments;  required  1  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(T)new  ArrayList  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(T)new  ArrayList  <  Object,  Object>()  {	  return    new    ArrayList    <    Object,    Object>()    {    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  1	32	None	replace
10	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  ArrayList  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  ArrayList  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType)  {  return(T)new  ArrayList  <  Object,  Object>();  }	  return(T)new    ArrayList    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	47	None	replace
11	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return(T)new  ArrayList  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return(T)new  ArrayList  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return(T)new  ArrayList  <  Object,  Object>();  }	  return(T)new    ArrayList    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	47	None	replace
12	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return(T)new  ArrayList  <  Object,  Object>();  }  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return(T)new  ArrayList  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return(T)new  ArrayList  <  Object,  Object>();  }	  return(T)new    ArrayList    <    Object,    Object>();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
13	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  ArrayList  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  ArrayList  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  ArrayList  <  Object,  Object>();  }	  return(T)new    ArrayList    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	47	None	replace
14	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  return(T)new  ArrayList  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  return(T)new  ArrayList  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  return(T)new  ArrayList  <  Object,  Object>();  }	  return(T)new    ArrayList    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	47	None	replace
15	[BUG]  [BUGGY]  return  new  SortedHashMap  <  Object,  Object>();  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  SortedHashMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  SortedHashMap  <  Object,  Object>();	  return    new    SortedHashMap    <    Object,    Object>()    {    	non-compiled	[CE]  ';'  expected	6	None	replace
16	[BUG]  [BUGGY]  return  new  SortedSortedMap  <  Object,  Object>()  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  SortedSortedMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  SortedSortedMap  <  Object,  Object>()  {	  return    new    SortedHashMap    <    Object,    Object>()    {    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
17	[BUG]  [BUGGY]  return  new  SortedSortedHashMap  <  Object,  Object>()  {  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  SortedSortedHashMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  SortedSortedHashMap  <  Object,  Object>()  {	  return    new    SortedHashMap    <    Object,    Object>()    {    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
18	[BUG]  [BUGGY]  return(T)new  TreeMap  <  Object,  Object>()  {  [CE]  method  does  not  override  or  implement  a  method  from  a  supertype  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(T)new  TreeMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(T)new  TreeMap  <  Object,  Object>()  {	  return(T)new    LinkedTreeMap    <    Object,    Object>()    {    	non-compiled	[CE]  method  does  not  override  or  implement  a  method  from  a  supertype	30	None	replace
19	[BUG]  [BUGGY]  return(T)new  ArrayHashMap  <  Object,  Object>()  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(T)new  ArrayHashMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(T)new  ArrayHashMap  <  Object,  Object>()  {	  return(T)new    LinkedTreeMap    <    Object,    Object>()    {    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
20	[BUG]  [BUGGY]  return(T)create  LinkedHashMap  <  Object,  Object>()  {  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(T)create  LinkedHashMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(T)create  LinkedHashMap  <  Object,  Object>()  {	  return(T)new    LinkedTreeMap    <    Object,    Object>()    {    	non-compiled	[CE]  ';'  expected	30	None	replace
21	[BUG]  [BUGGY]  Return(T)new  LinkedHashMap  <  Object,  Object>()  {  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  Return(T)new  LinkedHashMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	Return(T)new  LinkedHashMap  <  Object,  Object>()  {	  return(T)new    LinkedTreeMap    <    Object,    Object>()    {    	non-compiled	[CE]  ';'  expected	30	None	replace
22	[BUG]  [BUGGY]  (T)new  LinkedHashMap  <  Object,  Object>()  {  [CE]  not  a  statement  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  (T)new  LinkedHashMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	(T)new  LinkedHashMap  <  Object,  Object>()  {	  return(T)new    LinkedTreeMap    <    Object,    Object>()    {    	non-compiled	[CE]  not  a  statement	30	None	replace
23	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?>  &&  rawType.isAssignableFrom(TypeToken.get(((Class)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  Class  <?>  &&  rawType.isAssignableFrom(TypeToken.get(((Class)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  Class  <?>  &&  rawType.isAssignableFrom(TypeToken.get(((Class)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(rawType    instanceof    ParameterizedType    &&    rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
24	[BUG]  [BUGGY]  ||  rawType  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||  rawType  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||  rawType  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  if(rawType    instanceof    ParameterizedType    &&    rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
25	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <  T>  &&  rawType.isAssignableFrom(TypeToken.get(((Class  <  T>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  Class  <  T>  &&  rawType.isAssignableFrom(TypeToken.get(((Class  <  T>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  Class  <  T>  &&  rawType.isAssignableFrom(TypeToken.get(((Class  <  T>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(rawType    instanceof    ParameterizedType    &&    rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
26	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return(T)new  LinkedList  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return(T)new  LinkedList  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return(T)new  LinkedList  <  Object,  Object>();  }	  return(T)new    LinkedList    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	81	None	replace
27	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedList  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedList  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedList  <  Object,  Object>();  }	  return(T)new    LinkedList    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	81	None	replace
28	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return(T)new  LinkedList  <  Object,  Object>();  }  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return(T)new  LinkedList  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return(T)new  LinkedList  <  Object,  Object>();  }	  return(T)new    LinkedList    <    Object,    Object>();    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
29	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedList  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedList  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedList  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }	  return(T)new    LinkedList    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	81	None	replace
30	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedList  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedList  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedList  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }	  return(T)new    LinkedList    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	81	None	replace
31	[BUG]  [BUGGY]  if(type  instanceof  CharacterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  '('  or  '['  expected  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  CharacterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  CharacterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  '('  or  '['  expected	21	None	replace
32	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  '('  or  '['  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?>  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  '('  or  '['  expected	21	None	replace
33	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  '('  or  '['  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  '('  or  '['  expected	21	None	replace
34	[BUG]  [BUGGY]  if(type  instanceof  Class  <?  extends  T>  &&  type.isAssignableFrom(TypeToken.get(((Class)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  '('  or  '['  expected  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?  extends  T>  &&  type.isAssignableFrom(TypeToken.get(((Class)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?  extends  T>  &&  type.isAssignableFrom(TypeToken.get(((Class)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  '('  or  '['  expected	21	None	replace
35	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?>)  {	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  ';'  expected	21	None	replace
36	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType,  type)  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType,  type)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  DefaultImplementationConstructor  <  T>(rawType,  type)  {	  return    new    DefaultImplementationConstructor    <    T>(type)    {    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
37	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(type,  rawType)  {  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(type,  rawType)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  DefaultImplementationConstructor  <  T>(type,  rawType)  {	  return    new    DefaultImplementationConstructor    <    T>(type)    {    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
38	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(elementType,  type)  {  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(elementType,  type)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  DefaultImplementationConstructor  <  T>(elementType,  type)  {	  return    new    DefaultImplementationConstructor    <    T>(type)    {    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
39	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(elementType)  {  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(elementType)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  DefaultImplementationConstructor  <  T>(elementType)  {	  return    new    DefaultImplementationConstructor    <    T>(type)    {    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
40	[BUG]  [BUGGY]  return(T)new  DefaultImplementationConstructor  <  T>(type)  {  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(T)new  DefaultImplementationConstructor  <  T>(type)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(T)new  DefaultImplementationConstructor  <  T>(type)  {	  return    new    DefaultImplementationConstructor    <    T>(type)    {    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
41	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType)  {  if(rawType  instanceof  ParameterizedType)  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType)  {  if(rawType  instanceof  ParameterizedType)  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType)  {  if(rawType  instanceof  ParameterizedType)  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }	  if(rawType    instanceof    ParameterizedType)    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	15	None	replace
42	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  if(rawType  instanceof  ParameterizedType)  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  if(rawType  instanceof  ParameterizedType)  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?>)  {  if(rawType  instanceof  ParameterizedType)  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }	  if(rawType    instanceof    ParameterizedType)    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	15	None	replace
43	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return(T)new  List  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return(T)new  List  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return(T)new  List  <  Object,  Object>();  }	  return(T)new    List    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	82	None	replace
44	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  List  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  List  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType)  {  return(T)new  List  <  Object,  Object>();  }	  return(T)new    List    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	82	None	replace
45	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return(T)new  List  <  Object,  Object>();  }  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return(T)new  List  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return(T)new  List  <  Object,  Object>();  }	  return(T)new    List    <    Object,    Object>();    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
46	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  List  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  List  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  List  <  Object,  Object>();  }	  return(T)new    List    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	82	None	replace
47	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  List  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  List  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  List  <  Object,  Object>();  }	  return(T)new    List    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	82	None	replace
48	[BUG]  [BUGGY]  return(T)new  DefaultImplementationConstructor  <  T>()  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(T)new  DefaultImplementationConstructor  <  T>()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(T)new  DefaultImplementationConstructor  <  T>()	  return    new    DefaultImplementationConstructor    <    T>()    ==    	non-compiled	[CE]  ';'  expected	69	None	replace
49	[BUG]  [BUGGY]  return(T)new  DefaultImplementationConstructor  <  T>();  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(T)new  DefaultImplementationConstructor  <  T>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(T)new  DefaultImplementationConstructor  <  T>();	  return    new    DefaultImplementationConstructor    <    T>()    ==    	non-compiled	[CE]  ';'  expected	69	None	replace
50	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>()  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  DefaultImplementationConstructor  <  T>()	  return    new    DefaultImplementationConstructor    <    T>()    ==    	non-compiled	[CE]  ';'  expected	69	None	replace
51	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType)  {  return  new  DefaultImplementationConstructor  <  T>()  ==  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType)  {  return  new  DefaultImplementationConstructor  <  T>()  ==  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType)  {  return  new  DefaultImplementationConstructor  <  T>()  ==	  return    new    DefaultImplementationConstructor    <    T>()    ==    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
52	[BUG]  [BUGGY]  if(rawType  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }	  if(type    instanceof    ParameterizedType    &&    rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
53	[BUG]  [BUGGY]  ||  type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( "  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||  type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( "  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||  type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( "	  if(type    instanceof    ParameterizedType    &&    rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
54	[BUG]  [BUGGY]  if(rawType  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( "  [CE]  illegal  start  of  expression  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( "  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( "	  if(type    instanceof    ParameterizedType    &&    rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
55	[BUG]  [BUGGY]  ||  type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException(  [CE]  illegal  start  of  expression  [FE]                            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||  type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException(  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||  type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException(	  if(type    instanceof    ParameterizedType    &&    rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
56	[BUG]  [BUGGY]  if(rawType  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }	  if(type    instanceof    ParameterizedType    &&    rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
57	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }	  if(type    instanceof    ParameterizedType    &&    rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	26	None	replace
58	[BUG]  [BUGGY]  ||(type  instanceof  ParameterizedType  &&!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||(type  instanceof  ParameterizedType  &&!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||(type  instanceof  ParameterizedType  &&!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
59	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  }  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  }	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    }    	non-compiled	[CE]  ';'  expected	23	None	replace
60	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(Type.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  }  [CE]  ')'  expected  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(Type.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(Type.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  }	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    }    	non-compiled	[CE]  ')'  expected	23	None	replace
61	[BUG]  [BUGGY]  ||(type  instanceof  ParameterizedType  &&!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||(type  instanceof  ParameterizedType  &&!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||(type  instanceof  ParameterizedType  &&!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
62	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  }  [CE]  ')'  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  }	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    }    	non-compiled	[CE]  ')'  expected	23	None	replace
63	[BUG]  [BUGGY]  if(rawType  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  '('  or  '['  expected  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&    rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  '('  or  '['  expected	42	None	replace
64	[BUG]  [BUGGY]  if(type  instanceof  Class  <  T>  &&  rawType.isAssignableFrom(TypeToken.get(((Class  <  T>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  '('  or  '['  expected  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <  T>  &&  rawType.isAssignableFrom(TypeToken.get(((Class  <  T>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <  T>  &&  rawType.isAssignableFrom(TypeToken.get(((Class  <  T>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&    rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  '('  or  '['  expected	42	None	replace
65	[BUG]  [BUGGY]  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  illegal  start  of  expression  [FE]                            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	&&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&    rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
66	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  '('  or  '['  expected  [FE]                              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&    rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  '('  or  '['  expected	42	None	replace
67	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  LinkedHashMap  <  Object  [CE]  >  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  LinkedHashMap  <  Object  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  LinkedHashMap  <  Object	  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  >  expected	77	None	replace
68	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  LinkedHashMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  LinkedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  LinkedHashMap  <  Object,  Object>();  }	  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	77	None	replace
69	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  LinkedHashMap  <  Object,  Object>  [CE]  '('  or  '['  expected  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  LinkedHashMap  <  Object,  Object>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  LinkedHashMap  <  Object,  Object>	  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  '('  or  '['  expected	77	None	replace
70	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  LinkedHashMap  <  Object,  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  LinkedHashMap  <  Object,  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  LinkedHashMap  <  Object,	  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
71	[BUG]  [BUGGY]  ||  rawType  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  illegal  start  of  expression  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||  rawType  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||  rawType  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  ||    type    instanceof    ParameterizedType    &&    rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
72	[BUG]  [BUGGY]  ||  type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  illegal  start  of  expression  [FE]                            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||  type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||  type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  ||    type    instanceof    ParameterizedType    &&    rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
73	[BUG]  [BUGGY]  ||  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  illegal  start  of  expression  [FE]                              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  ||    type    instanceof    ParameterizedType    &&    rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
74	[BUG]  [BUGGY]  ||  elementType  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  illegal  start  of  expression  [FE]                                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||  elementType  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||  elementType  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  ||    type    instanceof    ParameterizedType    &&    rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
75	[BUG]  [BUGGY]  ||  type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  [CE]  illegal  start  of  expression  [FE]                                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||  type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||  type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <	  ||    type    instanceof    ParameterizedType    &&    rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
76	[BUG]  [BUGGY]  return(T)create  TreeMap  <  Object,  Object>();  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(T)create  TreeMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(T)create  TreeMap  <  Object,  Object>();	  return(T)create    LinkedHashMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	49	None	replace
77	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return(T)create  LinkedHashMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return(T)create  LinkedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return(T)create  LinkedHashMap  <  Object,  Object>();  }	  return(T)create    LinkedHashMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	49	None	replace
78	[BUG]  [BUGGY]  return(T)create  LinkedTreeMap  <  Object,  Object>();  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(T)create  LinkedTreeMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(T)create  LinkedTreeMap  <  Object,  Object>();	  return(T)create    LinkedHashMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	49	None	replace
79	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)create  LinkedHashMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)create  LinkedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)create  LinkedHashMap  <  Object,  Object>();  }	  return(T)create    LinkedHashMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	49	None	replace
80	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return(T)create  LinkedHashMap  <  Object,  Object>()  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return(T)create  LinkedHashMap  <  Object,  Object>()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return(T)create  LinkedHashMap  <  Object,  Object>()	  return(T)create    LinkedHashMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	49	None	replace
81	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return(T)create  LinkedHashMap  <  Object,  Object>();  }  [CE]  illegal  start  of  expression  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return(T)create  LinkedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return(T)create  LinkedHashMap  <  Object,  Object>();  }	  return(T)create    LinkedHashMap    <    Object,    Object>();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
82	[BUG]  [BUGGY]  if(type  instanceof  DefaultImplementationConstructor  <  T>)  {  return(T)new  DefaultImplementationConstructor  <  T>()  {  }  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  DefaultImplementationConstructor  <  T>)  {  return(T)new  DefaultImplementationConstructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  DefaultImplementationConstructor  <  T>)  {  return(T)new  DefaultImplementationConstructor  <  T>()  {  }	  return(T)new    DefaultImplementationConstructor    <    T>()    {    	non-compiled	[CE]  ';'  expected	52	None	replace
83	[BUG]  [BUGGY]  if(type  instanceof  DefaultImplementationConstructor  <  T>)  {  return(T)new  DefaultImplementationConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  DefaultImplementationConstructor  <  T>)  {  return(T)new  DefaultImplementationConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  DefaultImplementationConstructor  <  T>)  {  return(T)new  DefaultImplementationConstructor  <  T>()  {	  return(T)new    DefaultImplementationConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
84	[BUG]  [BUGGY]  if(type  instanceof  DefaultImplementationConstructor  <  T>  ||  type  instanceof  DefaultImplementationConstructor  <  T>)  {  return(T)new  DefaultImplementationConstructor  <  T>()  {  }  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  DefaultImplementationConstructor  <  T>  ||  type  instanceof  DefaultImplementationConstructor  <  T>)  {  return(T)new  DefaultImplementationConstructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  DefaultImplementationConstructor  <  T>  ||  type  instanceof  DefaultImplementationConstructor  <  T>)  {  return(T)new  DefaultImplementationConstructor  <  T>()  {  }	  return(T)new    DefaultImplementationConstructor    <    T>()    {    	non-compiled	[CE]  ';'  expected	52	None	replace
85	[BUG]  [BUGGY]  if(type  instanceof  DefaultImplementationConstructor  <  T>  ||  type  instanceof  DefaultImplementationConstructor  <  T>)  {  return(T)new  DefaultImplementationConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  DefaultImplementationConstructor  <  T>  ||  type  instanceof  DefaultImplementationConstructor  <  T>)  {  return(T)new  DefaultImplementationConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  DefaultImplementationConstructor  <  T>  ||  type  instanceof  DefaultImplementationConstructor  <  T>)  {  return(T)new  DefaultImplementationConstructor  <  T>()  {	  return(T)new    DefaultImplementationConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
86	[BUG]  [BUGGY]  if(type  instanceof  DefaultImplementationConstructor  <  T>  ||  type  instanceof  DefaultImplementationConstructor)  {  return(T)new  DefaultImplementationConstructor  <  T>()  {  }  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  DefaultImplementationConstructor  <  T>  ||  type  instanceof  DefaultImplementationConstructor)  {  return(T)new  DefaultImplementationConstructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  DefaultImplementationConstructor  <  T>  ||  type  instanceof  DefaultImplementationConstructor)  {  return(T)new  DefaultImplementationConstructor  <  T>()  {  }	  return(T)new    DefaultImplementationConstructor    <    T>()    {    	non-compiled	[CE]  ';'  expected	52	None	replace
87	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType,  elementType)  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType,  elementType)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  DefaultImplementationConstructor  <  T>(rawType,  elementType)  {	  return    new    DefaultImplementationConstructor    <    T>(rawType)    {    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
88	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType,  null)  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType,  null)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  DefaultImplementationConstructor  <  T>(rawType,  null)  {	  return    new    DefaultImplementationConstructor    <    T>(rawType)    {    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
89	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(elementType,  rawType)  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(elementType,  rawType)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  DefaultImplementationConstructor  <  T>(elementType,  rawType)  {	  return    new    DefaultImplementationConstructor    <    T>(rawType)    {    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
90	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType,  rawType)  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType,  rawType)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  DefaultImplementationConstructor  <  T>(rawType,  rawType)  {	  return    new    DefaultImplementationConstructor    <    T>(rawType)    {    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
91	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  Constructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  Constructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  Constructor  <  T>()  {	  return    new    Constructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
92	[BUG]  [BUGGY]  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types;  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types;  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types;	  return    new    Constructor    <    T>()    {    	non-compiled	[CE]  ';'  expected	16	None	replace
93	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  Constructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  Constructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  Constructor  <  T>()  {	  return    new    Constructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
94	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  Constructor  <  T>()  {  }  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  Constructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  Constructor  <  T>()  {  }	  return    new    Constructor    <    T>()    {    	non-compiled	[CE]  ';'  expected	16	None	replace
95	[BUG]  [BUGGY]  if(type  instanceof  Constructor  <  T>)  {  return  new  Constructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Constructor  <  T>)  {  return  new  Constructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Constructor  <  T>)  {  return  new  Constructor  <  T>()  {	  return    new    Constructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
96	[BUG]  [BUGGY]  if(type  instanceof  CharacterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  CharacterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  CharacterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	13	None	replace
97	[BUG]  [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())  {  return(T)new  LinkedHashMap  <  Object,  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())  {  return(T)new  LinkedHashMap  <  Object,  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())  {  return(T)new  LinkedHashMap  <  Object,	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
98	[BUG]  [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())  {  return(T)new  LinkedHashMap  <  Object,  Object>  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())  {  return(T)new  LinkedHashMap  <  Object,  Object>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())  {  return(T)new  LinkedHashMap  <  Object,  Object>	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
99	[BUG]  [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())  {  return(T)new  LinkedHashMap  <  Object  [CE]  illegal  start  of  expression  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())  {  return(T)new  LinkedHashMap  <  Object  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())  {  return(T)new  LinkedHashMap  <  Object	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
100	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  ClassConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  ClassConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  ClassConstructor  <  T>()  {	  return    new    ClassConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
101	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  ClassConstructor  <  T>()  {  }  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  ClassConstructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  ClassConstructor  <  T>()  {  }	  return    new    ClassConstructor    <    T>()    {    	non-compiled	[CE]  ';'  expected	18	None	replace
102	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ClassConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ClassConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ClassConstructor  <  T>()  {	  return    new    ClassConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
103	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ClassConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ClassConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ClassConstructor  <  T>()  {	  return    new    ClassConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
104	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ClassConstructor  <  T>()  {  }  [CE]  illegal  start  of  expression  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ClassConstructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ClassConstructor  <  T>()  {  }	  return    new    ClassConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
105	[BUG]  [BUGGY]  if(type  instanceof  CharacterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [CE]  '('  or  '['  expected  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  CharacterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  CharacterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType())))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    CharacterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType())))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  '('  or  '['  expected	34	None	replace
106	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  CharacterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((Class)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [CE]  '('  or  '['  expected  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  CharacterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((Class)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?>  ||  type  instanceof  CharacterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((Class)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    CharacterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType())))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  '('  or  '['  expected	34	None	replace
107	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [CE]  '('  or  '['  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType())))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    CharacterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType())))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  '('  or  '['  expected	34	None	replace
108	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  [CE]  illegal  start  of  type  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <	  if(type    instanceof    CharacterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType())))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
109	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  &&  type.isAssignableFrom(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  '('  or  '['  expected  [FE]              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?>  &&  type.isAssignableFrom(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?>  &&  type.isAssignableFrom(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    Class    <?>    &&    type.isAssignableFrom(TypeToken.get(((Class    <?>)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  '('  or  '['  expected	59	None	replace
110	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  &&  type.isAssignableFrom(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?>  &&  type.isAssignableFrom(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?>  &&  type.isAssignableFrom(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(type    instanceof    Class    <?>    &&    type.isAssignableFrom(TypeToken.get(((Class    <?>)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
111	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  &&  rawType.isAssignableFrom(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?>  &&  rawType.isAssignableFrom(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?>  &&  rawType.isAssignableFrom(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(type    instanceof    Class    <?>    &&    type.isAssignableFrom(TypeToken.get(((Class    <?>)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
112	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  &&  elementType.isAssignableFrom(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?>  &&  elementType.isAssignableFrom(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?>  &&  elementType.isAssignableFrom(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(type    instanceof    Class    <?>    &&    type.isAssignableFrom(TypeToken.get(((Class    <?>)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
113	[BUG]  [BUGGY]  ||  type  instanceof  Class  <?>  &&  type.isAssignableFrom(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||  type  instanceof  Class  <?>  &&  type.isAssignableFrom(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||  type  instanceof  Class  <?>  &&  type.isAssignableFrom(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    Class    <?>    &&    type.isAssignableFrom(TypeToken.get(((Class    <?>)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
114	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?>  &&  rawType.isAssignableFrom(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  Class  <?>  &&  rawType.isAssignableFrom(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  Class  <?>  &&  rawType.isAssignableFrom(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(type    instanceof    Class    <?>    &&    type.isAssignableFrom(TypeToken.get(((Class    <?>)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
115	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?>  &&  type.isAssignableFrom(TypeToken.get(((Class)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  Class  <?>  &&  type.isAssignableFrom(TypeToken.get(((Class)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  Class  <?>  &&  type.isAssignableFrom(TypeToken.get(((Class)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(rawType    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
116	[BUG]  [BUGGY]  ||(type  instanceof  ParameterizedType  &&!String.class.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||(type  instanceof  ParameterizedType  &&!String.class.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||(type  instanceof  ParameterizedType  &&!String.class.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  ||(type    instanceof    ParameterizedType    &&!String.class.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
117	[BUG]  [BUGGY]  ||(type  instanceof  ParameterizedType  &&!String.class.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||(type  instanceof  ParameterizedType  &&!String.class.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||(type  instanceof  ParameterizedType  &&!String.class.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>	  ||(type    instanceof    ParameterizedType    &&!String.class.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
118	[BUG]  [BUGGY]  ||(type  instanceof  ParameterizedType  &&!String.class.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {  }  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||(type  instanceof  ParameterizedType  &&!String.class.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||(type  instanceof  ParameterizedType  &&!String.class.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {  }	  ||(type    instanceof    ParameterizedType    &&!String.class.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
119	[BUG]  [BUGGY]  if(type  instanceof  ClassType  &&!(String.class.isAssignableFrom(TypeToken.get(((ClassType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  ')'  expected  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ClassType  &&!(String.class.isAssignableFrom(TypeToken.get(((ClassType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ClassType  &&!(String.class.isAssignableFrom(TypeToken.get(((ClassType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  ')'  expected	3	None	replace
120	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(Type.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  ')'  expected  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(Type.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(Type.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  ')'  expected	3	None	replace
121	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  ')'  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  ')'  expected	3	None	replace
122	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())  [CE]  ')'  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  ')'  expected	3	None	replace
123	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType  [CE]  ')'  expected  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?>)  {  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  ')'  expected	3	None	replace
124	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return(T)new  LinkedTreeMap  <  String,  Object>();  }  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return(T)new  LinkedTreeMap  <  String,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return(T)new  LinkedTreeMap  <  String,  Object>();  }	  return(T)new    LinkedTreeMap    <    String,    Object>();    	non-compiled	[CE]  ';'  expected	48	None	replace
125	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedTreeMap  <  String,  Object>();  }  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedTreeMap  <  String,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedTreeMap  <  String,  Object>();  }	  return(T)new    LinkedTreeMap    <    String,    Object>();    	non-compiled	[CE]  ';'  expected	48	None	replace
126	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  LinkedTreeMap  <  String,  Object>();  }  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  LinkedTreeMap  <  String,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  LinkedTreeMap  <  String,  Object>();  }	  return(T)new    LinkedTreeMap    <    String,    Object>();    	non-compiled	[CE]  ';'  expected	48	None	replace
127	[BUG]  [BUGGY]  if(TypeToken.class.isAssignableFrom(type))  {  return(T)new  LinkedTreeMap  <  String,  Object>();  }  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(TypeToken.class.isAssignableFrom(type))  {  return(T)new  LinkedTreeMap  <  String,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(TypeToken.class.isAssignableFrom(type))  {  return(T)new  LinkedTreeMap  <  String,  Object>();  }	  return(T)new    LinkedTreeMap    <    String,    Object>();    	non-compiled	[CE]  ';'  expected	48	None	replace
128	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  return(T)new  LinkedTreeMap  <  String,  Object>();  }  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  return(T)new  LinkedTreeMap  <  String,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  return(T)new  LinkedTreeMap  <  String,  Object>();  }	  return(T)new    LinkedTreeMap    <    String,    Object>();    	non-compiled	[CE]  ';'  expected	48	None	replace
129	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return(T)new  LinkedTreeMap  <  String,  Object>();  }  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return(T)new  LinkedTreeMap  <  String,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return(T)new  LinkedTreeMap  <  String,  Object>();  }	  return(T)new    LinkedTreeMap    <    String,    Object>();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
130	[BUG]  [BUGGY]  if(type  instanceof  ClassType  &&!(String.class.isAssignableFrom(TypeToken.get(((ClassType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [CE]  '('  or  '['  expected  [FE]            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ClassType  &&!(String.class.isAssignableFrom(TypeToken.get(((ClassType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ClassType  &&!(String.class.isAssignableFrom(TypeToken.get(((ClassType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType())))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  '('  or  '['  expected	1	None	replace
131	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(Type.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [CE]  '('  or  '['  expected  [FE]              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(Type.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(Type.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType())))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  '('  or  '['  expected	1	None	replace
132	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((Class)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [CE]  '('  or  '['  expected  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((Class)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?>  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((Class)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType())))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  '('  or  '['  expected	1	None	replace
133	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  LinkedTreeMap  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  LinkedTreeMap  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  LinkedTreeMap  <  T>()  {	  return    new    LinkedTreeMap    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
134	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  LinkedTreeMap  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  LinkedTreeMap  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  LinkedTreeMap  <  T>()  {	  return    new    LinkedTreeMap    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
135	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[1]).getRawType())))  {  return  new  LinkedTreeMap  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[1]).getRawType())))  {  return  new  LinkedTreeMap  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[1]).getRawType())))  {  return  new  LinkedTreeMap  <  T>()  {	  return    new    LinkedTreeMap    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
136	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  LinkedTreeMap  <  T>()  {  }  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  LinkedTreeMap  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  LinkedTreeMap  <  T>()  {  }	  return    new    LinkedTreeMap    <    T>()    {    	non-compiled	[CE]  ';'  expected	58	None	replace
137	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(type    instanceof    ParameterizedType)    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    else    if(type    instanceof    ParameterizedType    &&    type.getActualTypeArguments().length    >    0)    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	14	None	replace
138	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(type    instanceof    ParameterizedType)    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    else    if(type    instanceof    ParameterizedType    &&    type.getActualTypeArguments().length    >    0)    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	14	None	replace
139	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return  new  TreeMap  <  Object,  Object>();  }	  if(type    instanceof    ParameterizedType)    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    else    if(type    instanceof    ParameterizedType    &&    type.getActualTypeArguments().length    >    0)    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	14	None	replace
140	[BUG]  [BUGGY]  if(type  instanceof  Class  <?  extends  T>)  {  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?  extends  T>)  {  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?  extends  T>)  {  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(type    instanceof    ParameterizedType)    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    else    if(type    instanceof    ParameterizedType    &&    type.getActualTypeArguments().length    >    0)    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	14	None	replace
141	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return  new  TreeMap  <  Object,  Object>();  }	  if(type    instanceof    ParameterizedType)    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    else    if(type    instanceof    ParameterizedType    &&    type.getActualTypeArguments().length    >    0)    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	14	None	replace
142	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  TreeMap  <  Object,  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  TreeMap  <  Object,  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  TreeMap  <  Object,	  if(type    instanceof    ParameterizedType)    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    else    if(type    instanceof    ParameterizedType    &&    type.getActualTypeArguments().length    >    0)    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
143	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return  new  TreeMap  <  Object,  Object>();  }	  if(type    instanceof    ParameterizedType)    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    else    if(type    instanceof    ParameterizedType    &&    type.getActualTypeArguments().length    >    0)    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	14	None	replace
144	[BUG]  [BUGGY]  return  new  TreeMap  <  Object,  Object>();  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  TreeMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  TreeMap  <  Object,  Object>();	  return    new    LinkedHashMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	44	None	replace
145	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  LinkedHashMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  LinkedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  LinkedHashMap  <  Object,  Object>();  }	  return    new    LinkedHashMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	44	None	replace
146	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  LinkedHashMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  LinkedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  LinkedHashMap  <  Object,  Object>();  }	  return    new    LinkedHashMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	44	None	replace
147	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  LinkedHashMap  <  Object,  Object>();  }  [CE]  ')'  expected  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  LinkedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  LinkedHashMap  <  Object,  Object>();  }	  return    new    LinkedHashMap    <    Object,    Object>();    	non-compiled	[CE]  ')'  expected	44	None	replace
148	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return(T)new  TreeMap  <  Object,  Object>();  }	  return(T)new    TreeMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	9	None	replace
149	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType)  {  return(T)new  TreeMap  <  Object,  Object>();  }	  return(T)new    TreeMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	9	None	replace
150	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return(T)new  TreeMap  <  Object,  Object>();  }	  return(T)new    TreeMap    <    Object,    Object>();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
151	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  TreeMap  <  Object,  Object>();  }	  return(T)new    TreeMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	9	None	replace
152	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[1]).getRawType()))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[1]).getRawType()))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[1]).getRawType()))  {  return(T)new  TreeMap  <  Object,  Object>();  }	  return(T)new    TreeMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	9	None	replace
153	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  LinkedTreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  LinkedTreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  LinkedTreeMap  <  Object,  Object>();  }	  return    new    LinkedTreeMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	33	None	replace
154	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  LinkedTreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  LinkedTreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  LinkedTreeMap  <  Object,  Object>();  }	  return    new    LinkedTreeMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	33	None	replace
155	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  LinkedTreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  LinkedTreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  LinkedTreeMap  <  Object,  Object>();  }	  return    new    LinkedTreeMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	33	None	replace
156	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[1]).getRawType())))  {  return  new  LinkedTreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[1]).getRawType())))  {  return  new  LinkedTreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[1]).getRawType())))  {  return  new  LinkedTreeMap  <  Object,  Object>();  }	  return    new    LinkedTreeMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	33	None	replace
157	[BUG]  [BUGGY]  return  new  ArrayListConstructor  <  T>()  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  ArrayListConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  ArrayListConstructor  <  T>()  {	  return    new    LinkedListConstructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
158	[BUG]  [BUGGY]  return  new  TreeMapConstructor  <  T>()  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  TreeMapConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  TreeMapConstructor  <  T>()  {	  return    new    LinkedListConstructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
159	[BUG]  [BUGGY]  return  new  ListConstructor  <  T>()  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  ListConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  ListConstructor  <  T>()  {	  return    new    LinkedListConstructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
160	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [CE]  ')'  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()	  if(type    instanceof    ParameterizedType    &&    type    instanceof    ParameterizedType)    {    if(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    	non-compiled	[CE]  ')'  expected	62	None	replace
161	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRa  [CE]  ')'  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRa  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRa	  if(type    instanceof    ParameterizedType    &&    type    instanceof    ParameterizedType)    {    if(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    	non-compiled	[CE]  ')'  expected	62	None	replace
162	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [CE]  ')'  expected  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()	  if(type    instanceof    ParameterizedType    &&    type    instanceof    ParameterizedType)    {    if(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    	non-compiled	[CE]  ')'  expected	62	None	replace
163	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getR  [CE]  ')'  expected  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getR  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getR	  if(type    instanceof    ParameterizedType    &&    type    instanceof    ParameterizedType)    {    if(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    	non-compiled	[CE]  ')'  expected	62	None	replace
164	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  if(Type.class.isAssignableFrom(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  [CE]  <identifier>  expected  [FE]                            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  if(Type.class.isAssignableFrom(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?>)  {  if(Type.class.isAssignableFrom(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new	  if(type    instanceof    ParameterizedType    &&    type    instanceof    ParameterizedType)    {    if(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    	non-compiled	[CE]  <identifier>  expected	62	None	replace
165	[BUG]  [BUGGY]  if(rawType  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( "   "));  }  [CE]  illegal  start  of  expression  [FE]                            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( "   "));  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( "   "));  }	  if(type    instanceof    ParameterizedType    &&    rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   "));    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
166	[BUG]  [BUGGY]  ((  ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  not  a  statement  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ((  ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	((  ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  TreeMap  <  Object,  Object>();  }	  ((    ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  not  a  statement	79	None	replace
167	[BUG]  [BUGGY]  ((  ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  LinkedHashMap  <  Object,  Object>();  }  [CE]  not  a  statement  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ((  ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  LinkedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	((  ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  LinkedHashMap  <  Object,  Object>();  }	  ((    ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  not  a  statement	79	None	replace
168	[BUG]  [BUGGY]  ((  ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  LinkedHashMap  <  Object,  Object>();  [CE]  not  a  statement  [FE]                            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ((  ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  LinkedHashMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	((  ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  LinkedHashMap  <  Object,  Object>();	  ((    ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  not  a  statement	79	None	replace
169	[BUG]  [BUGGY]  ((  ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ArrayMap  <  Object,  Object>();  }  [CE]  not  a  statement  [FE]                              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ((  ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ArrayMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	((  ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ArrayMap  <  Object,  Object>();  }	  ((    ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  not  a  statement	79	None	replace
170	[BUG]  [BUGGY]  ((  ParameterizedType)type).getActualTypeArguments().length  [0]).getRawType()))  {  return  new  LinkedHashMap  <  Object,  Object>();  }  [CE]  not  a  statement  [FE]                                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ((  ParameterizedType)type).getActualTypeArguments().length  [0]).getRawType()))  {  return  new  LinkedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	((  ParameterizedType)type).getActualTypeArguments().length  [0]).getRawType()))  {  return  new  LinkedHashMap  <  Object,  Object>();  }	  ((    ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  not  a  statement	79	None	replace
171	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  T>  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    DefaultImplementationConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
172	[BUG]  [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  T>  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    DefaultImplementationConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
173	[BUG]  [BUGGY]  if(rawType  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  T>  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    DefaultImplementationConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
174	[BUG]  [BUGGY]  if(type  instanceof  CharacterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  CharacterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  CharacterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  T>()  {	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    DefaultImplementationConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
175	[BUG]  [BUGGY]  if(type  instanceof  CharacterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  T>  [CE]  illegal  start  of  expression  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  CharacterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  CharacterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    DefaultImplementationConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
176	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedTreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedTreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedTreeMap  <  Object,  Object>();  }	  return(T)new    LinkedTreeMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	10	None	replace
177	[BUG]  [BUGGY]  if(TypeToken.class.isAssignableFrom(type))  {  return(T)new  LinkedTreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(TypeToken.class.isAssignableFrom(type))  {  return(T)new  LinkedTreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(TypeToken.class.isAssignableFrom(type))  {  return(T)new  LinkedTreeMap  <  Object,  Object>();  }	  return(T)new    LinkedTreeMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	10	None	replace
178	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  LinkedTreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  LinkedTreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  LinkedTreeMap  <  Object,  Object>();  }	  return(T)new    LinkedTreeMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	10	None	replace
179	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedTreeMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  LinkedTreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedTreeMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  LinkedTreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedTreeMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  LinkedTreeMap  <  Object,  Object>();  }	  return(T)new    LinkedTreeMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	10	None	replace
180	[BUG]  [BUGGY]  if(rawType  instanceof  ParameterizedType)  {  return(T)new  LinkedTreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  ParameterizedType)  {  return(T)new  LinkedTreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  ParameterizedType)  {  return(T)new  LinkedTreeMap  <  Object,  Object>();  }	  return(T)new    LinkedTreeMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	10	None	replace
181	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedTreeMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  return(T)new  LinkedTreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedTreeMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  return(T)new  LinkedTreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedTreeMap  <  Object,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  return(T)new  LinkedTreeMap  <  Object,  Object>();  }	  return(T)new    LinkedTreeMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	10	None	replace
182	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  elementType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  '('  or  '['  expected  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  elementType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  elementType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&    elementType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  '('  or  '['  expected	73	None	replace
183	[BUG]  [BUGGY]  if(rawType  instanceof  ParameterizedType  &&  elementType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  '('  or  '['  expected  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  ParameterizedType  &&  elementType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  ParameterizedType  &&  elementType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&    elementType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  '('  or  '['  expected	73	None	replace
184	[BUG]  [BUGGY]  if(rawType  instanceof  ParameterizedType  &&  elementType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  ParameterizedType  &&  elementType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  ParameterizedType  &&  elementType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(type    instanceof    ParameterizedType    &&    elementType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
185	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  elementType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  elementType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  elementType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(type    instanceof    ParameterizedType    &&    elementType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
186	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  if(String.class.isAssignableFrom(  TypeToken.get(  [CE]  illegal  start  of  expression  [FE]                                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  if(String.class.isAssignableFrom(  TypeToken.get(  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  if(String.class.isAssignableFrom(  TypeToken.get(	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    if(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
187	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  if(String.class.isAssignableFrom(  TypeToken.get  [CE]  illegal  start  of  expression  [FE]                                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  if(String.class.isAssignableFrom(  TypeToken.get  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  if(String.class.isAssignableFrom(  TypeToken.get	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    if(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
188	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  if(String.class.isAssignableFrom(  [CE]  illegal  start  of  expression  [FE]                                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  if(String.class.isAssignableFrom(  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  if(String.class.isAssignableFrom(	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    if(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
189	[BUG]  [BUGGY]  if(rawType  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  if(String.class.isAssignableFrom(  [CE]  illegal  start  of  expression  [FE]                                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  if(String.class.isAssignableFrom(  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  if(String.class.isAssignableFrom(	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    if(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
190	[BUG]  [BUGGY]  if(rawType  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  if(String.class.isAssignableFrom(  TypeToken.get(  [CE]  illegal  start  of  expression  [FE]                                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  if(String.class.isAssignableFrom(  TypeToken.get(  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  if(String.class.isAssignableFrom(  TypeToken.get(	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    if(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
191	[BUG]  [BUGGY]  if(rawType  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(type    instanceof    ParameterizedType    &&    rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [1]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
192	[BUG]  [BUGGY]  if(rawType  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  '('  or  '['  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&    rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [1]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  '('  or  '['  expected	46	None	replace
193	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?>  &&  rawType.isAssignableFrom(TypeToken.get(((Class)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  '('  or  '['  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  Class  <?>  &&  rawType.isAssignableFrom(TypeToken.get(((Class)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  Class  <?>  &&  rawType.isAssignableFrom(TypeToken.get(((Class)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  if(rawType    instanceof    ParameterizedType    &&    rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  '('  or  '['  expected	40	None	replace
194	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?  extends  T>  &&  rawType.isAssignableFrom(TypeToken.get(((Class)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  '('  or  '['  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  Class  <?  extends  T>  &&  rawType.isAssignableFrom(TypeToken.get(((Class)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  Class  <?  extends  T>  &&  rawType.isAssignableFrom(TypeToken.get(((Class)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  if(rawType    instanceof    ParameterizedType    &&    rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  '('  or  '['  expected	40	None	replace
195	[BUG]  [BUGGY]  return(HashMap  <  Object,  Object>)new  HashMap  <  Object,  Object>()  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(HashMap  <  Object,  Object>)new  HashMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(HashMap  <  Object,  Object>)new  HashMap  <  Object,  Object>()  {	  return    new    HashMap    <    Object,    Object>()    {    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
196	[BUG]  [BUGGY]  return  new  HashMap  <  Object,  Object>();  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  HashMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  HashMap  <  Object,  Object>();	  return    new    HashMap    <    Object,    Object>()    {    	non-compiled	[CE]  ';'  expected	61	None	replace
197	[BUG]  [BUGGY]  return(HashMap  <  Object,  Object>)new  TreeMap  <  Object,  Object>()  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(HashMap  <  Object,  Object>)new  TreeMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(HashMap  <  Object,  Object>)new  TreeMap  <  Object,  Object>()  {	  return    new    HashMap    <    Object,    Object>()    {    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
198	[BUG]  [BUGGY]  ||  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(type    instanceof    ParameterizedType    ||    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
199	[BUG]  [BUGGY]  new  DefaultImplementationConstructor  <  T>()  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  new  DefaultImplementationConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	new  DefaultImplementationConstructor  <  T>()  {	  Return    new    DefaultImplementationConstructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
200	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>  [CE]  '('  or  '['  expected  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    DefaultImplementationConstructor    <    T>()    {    	non-compiled	[CE]  '('  or  '['  expected	35	None	replace
201	[BUG]  [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    DefaultImplementationConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
202	[BUG]  [BUGGY]  if(type  instanceof  CharacterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  CharacterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  CharacterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>()  {	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    DefaultImplementationConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
203	[BUG]  [BUGGY]  if(type  instanceof  CharacterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>  [CE]  '('  or  '['  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  CharacterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  CharacterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    DefaultImplementationConstructor    <    T>()    {    	non-compiled	[CE]  '('  or  '['  expected	35	None	replace
204	[BUG]  [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  DefaultImplementationConstructor  <	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    DefaultImplementationConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
205	[BUG]  [BUGGY]  if(rawType  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  LinkedHashMap  <  Object,  Object>();  }  [CE]  illegal  start  of  expression  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  LinkedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  LinkedHashMap  <  Object,  Object>();  }	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
206	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  ||  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  LinkedHashMap  <  Object,  Object>();  }  [CE]  illegal  start  of  expression  [FE]                            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  ||  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  LinkedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  ||  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  LinkedHashMap  <  Object,  Object>();  }	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
207	[BUG]  [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  LinkedHashMap  <  Object,  [CE]  illegal  start  of  expression  [FE]                              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  LinkedHashMap  <  Object,  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  LinkedHashMap  <  Object,	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
208	[BUG]  [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  LinkedHashMap  <  Object  [CE]  illegal  start  of  expression  [FE]                                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  LinkedHashMap  <  Object  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  LinkedHashMap  <  Object	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
209	[BUG]  [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return(T)new  LinkedHashMap  <  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return(T)new  LinkedHashMap  <  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return(T)new  LinkedHashMap  <  	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
210	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return(T)new  LinkedHashMap  <  Object  [CE]  >  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return(T)new  LinkedHashMap  <  Object  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return(T)new  LinkedHashMap  <  Object	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  >  expected	12	None	replace
211	[BUG]  [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return(T)new  LinkedHashMap  <  Object  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return(T)new  LinkedHashMap  <  Object  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return(T)new  LinkedHashMap  <  Object	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
212	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return(T)new  LinkedHashMap  <  Object,  [CE]  illegal  start  of  type  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return(T)new  LinkedHashMap  <  Object,  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return(T)new  LinkedHashMap  <  Object,	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
213	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return(T)new  LinkedHashMap  <  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return(T)new  LinkedHashMap  <  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return(T)new  LinkedHashMap  <  	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
214	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  TreeMap  <  Object,  Object>()  {  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  TreeMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  TreeMap  <  Object,  Object>()  {	  return    new    TreeMap    <    Object,    Object>()    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
215	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  TreeMap  <  Object,  Object>()  {  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  TreeMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  TreeMap  <  Object,  Object>()  {	  return    new    TreeMap    <    Object,    Object>()    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
216	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  TreeMap  <  Object,  Object>()  {  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  TreeMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  TreeMap  <  Object,  Object>()  {	  return    new    TreeMap    <    Object,    Object>()    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
217	[BUG]  [BUGGY]  ||  type  instanceof  CharacterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||  type  instanceof  CharacterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||  type  instanceof  CharacterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    CharacterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
218	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  &&  type.isAssignableFrom(TypeToken.get(((Class)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?>  &&  type.isAssignableFrom(TypeToken.get(((Class)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?>  &&  type.isAssignableFrom(TypeToken.get(((Class)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(type    instanceof    CharacterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
219	[BUG]  [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [CE]  illegal  start  of  expression  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
220	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>();  }  [CE]  ';'  expected  [FE]                            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>();  }	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  ';'  expected	28	None	replace
221	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  [CE]  illegal  start  of  expression  [FE]                              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
222	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [CE]  illegal  start  of  expression  [FE]                                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
223	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  ParameterizedMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  ParameterizedMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  ParameterizedMap  <  Object,  Object>();  }	  return    new    ParameterizedMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	7	None	replace
224	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType)  {  return  new  ParameterizedMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType)  {  return  new  ParameterizedMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType)  {  return  new  ParameterizedMap  <  Object,  Object>();  }	  return    new    ParameterizedMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	7	None	replace
225	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ParameterizedMap  <  Object,  Object>();  }  [CE]  illegal  start  of  expression  [FE]                            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ParameterizedMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ParameterizedMap  <  Object,  Object>();  }	  return    new    ParameterizedMap    <    Object,    Object>();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
226	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  return  new  ParameterizedMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  return  new  ParameterizedMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  return  new  ParameterizedMap  <  Object,  Object>();  }	  return    new    ParameterizedMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	7	None	replace
227	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[1]).getRawType()))  {  return  new  ParameterizedMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[1]).getRawType()))  {  return  new  ParameterizedMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[1]).getRawType()))  {  return  new  ParameterizedMap  <  Object,  Object>();  }	  return    new    ParameterizedMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	7	None	replace
228	[BUG]  [BUGGY]  return  new  TreeMap  <  Class  <?>()  {  [CE]  >  expected  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  TreeMap  <  Class  <?>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  TreeMap  <  Class  <?>()  {	  return    new    LinkedHashMap    <    Class    <?>()    {    	non-compiled	[CE]  >  expected	84	None	replace
229	[BUG]  [BUGGY]  return  new  LinkedTreeMap  <  Class  <?>()  {  [CE]  >  expected  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  LinkedTreeMap  <  Class  <?>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  LinkedTreeMap  <  Class  <?>()  {	  return    new    LinkedHashMap    <    Class    <?>()    {    	non-compiled	[CE]  >  expected	84	None	replace
230	[BUG]  [BUGGY]  return  new  LinkedHashMap  <  Class  <?>();  [CE]  >  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  LinkedHashMap  <  Class  <?>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  LinkedHashMap  <  Class  <?>();	  return    new    LinkedHashMap    <    Class    <?>()    {    	non-compiled	[CE]  >  expected	84	None	replace
231	[BUG]  [BUGGY]  return(T)new  LinkedHashMap  <  Class  <?>()  {  [CE]  >  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(T)new  LinkedHashMap  <  Class  <?>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(T)new  LinkedHashMap  <  Class  <?>()  {	  return    new    LinkedHashMap    <    Class    <?>()    {    	non-compiled	[CE]  >  expected	84	None	replace
232	[BUG]  [BUGGY]  return  new  ArrayList  <  Class  <?>()  {  [CE]  >  expected  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  ArrayList  <  Class  <?>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  ArrayList  <  Class  <?>()  {	  return    new    LinkedHashMap    <    Class    <?>()    {    	non-compiled	[CE]  >  expected	84	None	replace
233	[BUG]  [BUGGY]  return  new  LinkedHashMap  <  Class  <?>(rawType)  {  [CE]  >  expected  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  LinkedHashMap  <  Class  <?>(rawType)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  LinkedHashMap  <  Class  <?>(rawType)  {	  return    new    LinkedHashMap    <    Class    <?>()    {    	non-compiled	[CE]  >  expected	84	None	replace
234	[BUG]  [BUGGY]  return  new  TreeMap  <  T>()  {  [CE]  wrong  number  of  type  arguments;  required  2  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  TreeMap  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  TreeMap  <  T>()  {	  return    new    LinkedHashMap    <    T>()    {    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  2	17	None	replace
235	[BUG]  [BUGGY]  return  new  LinkedHashMap  <  T>();  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  LinkedHashMap  <  T>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  LinkedHashMap  <  T>();	  return    new    LinkedHashMap    <    T>()    {    	non-compiled	[CE]  ';'  expected	17	None	replace
236	[BUG]  [BUGGY]  return(T)new  LinkedHashMap  <  T>()  {  [CE]  wrong  number  of  type  arguments;  required  2  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(T)new  LinkedHashMap  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(T)new  LinkedHashMap  <  T>()  {	  return    new    LinkedHashMap    <    T>()    {    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  2	17	None	replace
237	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType)  {  return  new  LinkedHashMap  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType)  {  return  new  LinkedHashMap  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType)  {  return  new  LinkedHashMap  <  T>()  {	  return    new    LinkedHashMap    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
238	[BUG]  [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  ||    type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
239	[BUG]  [BUGGY]  ||(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>	  ||    type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
240	[BUG]  [BUGGY]  ||  elementType  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||  elementType  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||  elementType  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  ||    type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
241	[BUG]  [BUGGY]  return  new  TreeMap  <  T,  Object>()  {  [CE]  method  does  not  override  or  implement  a  method  from  a  supertype  [FE]              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  TreeMap  <  T,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  TreeMap  <  T,  Object>()  {	  return    new    LinkedHashMap    <    T,    Object>()    {    	non-compiled	[CE]  method  does  not  override  or  implement  a  method  from  a  supertype	83	None	replace
242	[BUG]  [BUGGY]  return(T)new  LinkedHashMap  <  T,  Object>()  {  [CE]  method  does  not  override  or  implement  a  method  from  a  supertype  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(T)new  LinkedHashMap  <  T,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(T)new  LinkedHashMap  <  T,  Object>()  {	  return    new    LinkedHashMap    <    T,    Object>()    {    	non-compiled	[CE]  method  does  not  override  or  implement  a  method  from  a  supertype	83	None	replace
243	[BUG]  [BUGGY]  return  new  LinkedTreeMap  <  T,  Object>()  {  [CE]  cannot  inherit  from  final  LinkedTreeMap  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  LinkedTreeMap  <  T,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  LinkedTreeMap  <  T,  Object>()  {	  return    new    LinkedHashMap    <    T,    Object>()    {    	non-compiled	[CE]  cannot  inherit  from  final  LinkedTreeMap	83	None	replace
244	[BUG]  [BUGGY]  return  new  ArrayList  <  T,  Object>()  {  [CE]  wrong  number  of  type  arguments;  required  1  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  ArrayList  <  T,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  ArrayList  <  T,  Object>()  {	  return    new    LinkedHashMap    <    T,    Object>()    {    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  1	83	None	replace
245	[BUG]  [BUGGY]  return  new  SortedMap  <  T,  Object>()  {  [CE]  <anonymous  com.google.gson.internal.ConstructorConstructor$10>  is  not  abstract  and  does  not  override  abstract  method  entrySet()  in  SortedMap  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  SortedMap  <  T,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  SortedMap  <  T,  Object>()  {	  return    new    LinkedHashMap    <    T,    Object>()    {    	non-compiled	[CE]  <anonymous  com.google.gson.internal.ConstructorConstructor$10>  is  not  abstract  and  does  not  override  abstract  method  entrySet()  in  SortedMap	83	None	replace
246	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  &&  type.equals(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?>  &&  type.equals(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?>  &&  type.equals(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(type    instanceof    ParameterizedType    &&    type.equals(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
247	[BUG]  [BUGGY]  if(type  instanceof  CharacterizedType  &&  type.equals(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  CharacterizedType  &&  type.equals(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  CharacterizedType  &&  type.equals(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(type    instanceof    ParameterizedType    &&    type.equals(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
248	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.equals(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.equals(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.equals(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(type    instanceof    ParameterizedType    &&    type.equals(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
249	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  &&  type.equals(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?>  &&  type.equals(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?>  &&  type.equals(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(type    instanceof    ParameterizedType    &&    type.equals(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
250	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  &&  type.equals(TypeToken.get(((Class)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?>  &&  type.equals(TypeToken.get(((Class)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?>  &&  type.equals(TypeToken.get(((Class)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(type    instanceof    ParameterizedType    &&    type.equals(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
251	[BUG]  [BUGGY]  return  new  LocalizedMap  <  Object,  Object>();  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  LocalizedMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  LocalizedMap  <  Object,  Object>();	  return    new    LocalizedMap    <    Object,    Object>()    {    	non-compiled	[CE]  ';'  expected	51	None	replace
252	[BUG]  [BUGGY]  return(LocalizedMap  <  Object,  Object>)new  LocalizedMap  <  Object,  Object>()  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(LocalizedMap  <  Object,  Object>)new  LocalizedMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(LocalizedMap  <  Object,  Object>)new  LocalizedMap  <  Object,  Object>()  {	  return    new    LocalizedMap    <    Object,    Object>()    {    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
253	[BUG]  [BUGGY]  return  new  LocalizedHashMap  <  Object,  Object>()  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  LocalizedHashMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  LocalizedHashMap  <  Object,  Object>()  {	  return    new    LocalizedMap    <    Object,    Object>()    {    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
254	[BUG]  [BUGGY]  return(LocalizedMap  <  Object,  Object>)new  LinkedHashMap  <  Object,  Object>()  {  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(LocalizedMap  <  Object,  Object>)new  LinkedHashMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(LocalizedMap  <  Object,  Object>)new  LinkedHashMap  <  Object,  Object>()  {	  return    new    LocalizedMap    <    Object,    Object>()    {    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
255	[BUG]  [BUGGY]  return(LocalizedMap  <  Object,  Object>)new  TreeMap  <  Object,  Object>()  {  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(LocalizedMap  <  Object,  Object>)new  TreeMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(LocalizedMap  <  Object,  Object>)new  TreeMap  <  Object,  Object>()  {	  return    new    LocalizedMap    <    Object,    Object>()    {    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
256	[BUG]  [BUGGY]  return  new  SortedMap  <  Object,  Object>();  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  SortedMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  SortedMap  <  Object,  Object>();	  return    new    SortedMap    <    Object,    Object>()    {    	non-compiled	[CE]  ';'  expected	8	None	replace
257	[BUG]  [BUGGY]  return(SortedMap  <  Object,  Object>)new  SortedMap  <  Object,  Object>()  {  [CE]  <anonymous  com.google.gson.internal.ConstructorConstructor$10>  is  not  abstract  and  does  not  override  abstract  method  entrySet()  in  SortedMap  [FE]                            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(SortedMap  <  Object,  Object>)new  SortedMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(SortedMap  <  Object,  Object>)new  SortedMap  <  Object,  Object>()  {	  return    new    SortedMap    <    Object,    Object>()    {    	non-compiled	[CE]  <anonymous  com.google.gson.internal.ConstructorConstructor$10>  is  not  abstract  and  does  not  override  abstract  method  entrySet()  in  SortedMap	8	None	replace
258	[BUG]  [BUGGY]  return(SortedMap  <  Object,  Object>)new  LinkedHashMap  <  Object,  Object>();  [CE]  ';'  expected  [FE]                              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(SortedMap  <  Object,  Object>)new  LinkedHashMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(SortedMap  <  Object,  Object>)new  LinkedHashMap  <  Object,  Object>();	  return    new    SortedMap    <    Object,    Object>()    {    	non-compiled	[CE]  ';'  expected	8	None	replace
259	[BUG]  [BUGGY]  return(SortedMap  <  Object,  Object>)new  SortedHashMap  <  Object,  Object>()  {  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(SortedMap  <  Object,  Object>)new  SortedHashMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(SortedMap  <  Object,  Object>)new  SortedHashMap  <  Object,  Object>()  {	  return    new    SortedMap    <    Object,    Object>()    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
260	[BUG]  [BUGGY]  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType())))    {    return    new    ObjectConstructor    <    T>()    {    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
261	[BUG]  [BUGGY]  ||(type  instanceof  ParameterizedType  &&!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||(type  instanceof  ParameterizedType  &&!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||(type  instanceof  ParameterizedType  &&!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType())))    {    return    new    ObjectConstructor    <    T>()    {    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
262	[BUG]  [BUGGY]  ||(type  instanceof  ParameterizedType  &&!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||(type  instanceof  ParameterizedType  &&!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||(type  instanceof  ParameterizedType  &&!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType())))    {    return    new    ObjectConstructor    <    T>()    {    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
263	[BUG]  [BUGGY]  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType())))    {    return    new    ObjectConstructor    <    T>()    {    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
264	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [CE]  ')'  expected  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()	  if(type    instanceof    ParameterizedType    &&    type    instanceof    ParameterizedType)    {    if(!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()    	non-compiled	[CE]  ')'  expected	64	None	replace
265	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [CE]  ')'  expected  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()	  if(type    instanceof    ParameterizedType    &&    type    instanceof    ParameterizedType)    {    if(!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()    	non-compiled	[CE]  ')'  expected	64	None	replace
266	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  if(!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [CE]  ')'  expected  [FE]                            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  if(!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  if(!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()	  if(type    instanceof    ParameterizedType    &&    type    instanceof    ParameterizedType)    {    if(!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()    	non-compiled	[CE]  ')'  expected	64	None	replace
267	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [CE]  ')'  expected  [FE]                              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()	  if(type    instanceof    ParameterizedType    &&    type    instanceof    ParameterizedType)    {    if(!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()    	non-compiled	[CE]  ')'  expected	64	None	replace
268	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRa  [CE]  ')'  expected  [FE]                                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRa  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRa	  if(type    instanceof    ParameterizedType    &&    type    instanceof    ParameterizedType)    {    if(!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()    	non-compiled	[CE]  ')'  expected	64	None	replace
269	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRa  [CE]  ')'  expected  [FE]                                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRa  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRa	  if(type    instanceof    ParameterizedType    &&    type    instanceof    ParameterizedType)    {    if(!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()    	non-compiled	[CE]  ')'  expected	64	None	replace
270	[BUG]  [BUGGY]  return  new  TreeMap  <  String,  Object>()  {  [CE]  method  does  not  override  or  implement  a  method  from  a  supertype  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  TreeMap  <  String,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  TreeMap  <  String,  Object>()  {	  return    new    LinkedHashMap    <    String,    Object>()    {    	non-compiled	[CE]  method  does  not  override  or  implement  a  method  from  a  supertype	60	None	replace
271	[BUG]  [BUGGY]  return  new  LinkedTreeMap  <  String,  Object>()  {  [CE]  cannot  inherit  from  final  LinkedTreeMap  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  LinkedTreeMap  <  String,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  LinkedTreeMap  <  String,  Object>()  {	  return    new    LinkedHashMap    <    String,    Object>()    {    	non-compiled	[CE]  cannot  inherit  from  final  LinkedTreeMap	60	None	replace
272	[BUG]  [BUGGY]  return(T)new  LinkedHashMap  <  String,  Object>()  {  [CE]  method  does  not  override  or  implement  a  method  from  a  supertype  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(T)new  LinkedHashMap  <  String,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(T)new  LinkedHashMap  <  String,  Object>()  {	  return    new    LinkedHashMap    <    String,    Object>()    {    	non-compiled	[CE]  method  does  not  override  or  implement  a  method  from  a  supertype	60	None	replace
273	[BUG]  [BUGGY]  return  new  LinkedHashMap  <  String,  Object>();  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  LinkedHashMap  <  String,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  LinkedHashMap  <  String,  Object>();	  return    new    LinkedHashMap    <    String,    Object>()    {    	non-compiled	[CE]  ';'  expected	60	None	replace
274	[BUG]  [BUGGY]  return  new  ArrayList  <  String,  Object>()  {  [CE]  wrong  number  of  type  arguments;  required  1  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  ArrayList  <  String,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  ArrayList  <  String,  Object>()  {	  return    new    LinkedHashMap    <    String,    Object>()    {    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  1	60	None	replace
275	[BUG]  [BUGGY]  if(type  instanceof  ClassType  &&!(String.class.isAssignableFrom(TypeToken.get(((ClassType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  ')'  expected  [FE]              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ClassType  &&!(String.class.isAssignableFrom(TypeToken.get(((ClassType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ClassType  &&!(String.class.isAssignableFrom(TypeToken.get(((ClassType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  ')'  expected	2	None	replace
276	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(Type.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  ')'  expected  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(Type.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(Type.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  ')'  expected	2	None	replace
277	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  ')'  expected  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?>  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  ')'  expected	2	None	replace
278	[BUG]  [BUGGY]  if(type  instanceof  ClassCastException  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ClassCastException)type).getActualTypeArguments()  [0]).getRawType()))  {  [CE]  ')'  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ClassCastException  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ClassCastException)type).getActualTypeArguments()  [0]).getRawType()))  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ClassCastException  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ClassCastException)type).getActualTypeArguments()  [0]).getRawType()))  {	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  ')'  expected	2	None	replace
279	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  ')'  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?>  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  ')'  expected	2	None	replace
280	[BUG]  [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
281	[BUG]  [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
282	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
283	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type  instanceof  Class  <?>)  {  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType  [CE]  ')'  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type  instanceof  Class  <?>)  {  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type  instanceof  Class  <?>)  {  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType	  if(type    instanceof    ParameterizedType    &&    type    instanceof    ParameterizedType)    {    if(!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType    	non-compiled	[CE]  ')'  expected	63	None	replace
284	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType  [CE]  ')'  expected  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType	  if(type    instanceof    ParameterizedType    &&    type    instanceof    ParameterizedType)    {    if(!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType    	non-compiled	[CE]  ')'  expected	63	None	replace
285	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  <  return  new  ObjectConstructor  <  T>  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  <  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  <  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    <    return    new    ObjectConstructor    <    T>()    {    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
286	[BUG]  [BUGGY]  if(type  instanceof  ClassType  &&!(String.class.isAssignableFrom(TypeToken.get(((ClassType)type).getActualTypeArguments()  [0]).getRawType()))  <  return  new  ObjectConstructor  <  T>()  {  }  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ClassType  &&!(String.class.isAssignableFrom(TypeToken.get(((ClassType)type).getActualTypeArguments()  [0]).getRawType()))  <  return  new  ObjectConstructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ClassType  &&!(String.class.isAssignableFrom(TypeToken.get(((ClassType)type).getActualTypeArguments()  [0]).getRawType()))  <  return  new  ObjectConstructor  <  T>()  {  }	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    <    return    new    ObjectConstructor    <    T>()    {    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
287	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  [CE]  ')'  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    <    return    new    ObjectConstructor    <    T>()    {    }    	non-compiled	[CE]  ')'  expected	76	None	replace
288	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  ==  return  new  ObjectConstructor  <  T>()  {  }  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  ==  return  new  ObjectConstructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  ==  return  new  ObjectConstructor  <  T>()  {  }	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    <    return    new    ObjectConstructor    <    T>()    {    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
289	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  <  return  new  ObjectConstructor  <  T>  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  <  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?>  ||  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  <  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    <    return    new    ObjectConstructor    <    T>()    {    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
290	[BUG]  [BUGGY]  &&  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  &&  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	&&  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    DefaultImplementationConstructor    <    T>()    {    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
291	[BUG]  [BUGGY]  if(type  instanceof  CharacterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>()  {  }  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  CharacterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  CharacterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>()  {  }	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    DefaultImplementationConstructor    <    T>()    {    }    	non-compiled	[CE]  ';'  expected	37	None	replace
292	[BUG]  [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  DefaultImplementationConstructor  <	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    DefaultImplementationConstructor    <    T>()    {    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
293	[BUG]  [BUGGY]  &&  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  T>  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  &&  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	&&  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    DefaultImplementationConstructor    <    T>()    {    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
294	[BUG]  [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  DefaultImplementation  [CE]  illegal  start  of  expression  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  DefaultImplementation  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  DefaultImplementation	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    DefaultImplementationConstructor    <    T>()    {    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
295	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }	  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	78	None	replace
296	[BUG]  [BUGGY]  ||!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }	  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
297	[BUG]  [BUGGY]  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	&&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }	  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
298	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return(T)new  ArrayHashMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return(T)new  ArrayHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return(T)new  ArrayHashMap  <  Object,  Object>();  }	  return(T)new    ArrayHashMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	50	None	replace
299	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  ArrayHashMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  ArrayHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType)  {  return(T)new  ArrayHashMap  <  Object,  Object>();  }	  return(T)new    ArrayHashMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	50	None	replace
300	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  ArrayHashMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  ArrayHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  ArrayHashMap  <  Object,  Object>();  }	  return(T)new    ArrayHashMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	50	None	replace
301	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType);  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  DefaultImplementationConstructor  <  T>(rawType);	  return    new    DefaultImplementationConstructor    <    T>(type);    	non-compiled	[CE]  ';'  expected	70	None	replace
302	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType)  {  return  new  DefaultImplementationConstructor  <  T>(type);  }  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType)  {  return  new  DefaultImplementationConstructor  <  T>(type);  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType)  {  return  new  DefaultImplementationConstructor  <  T>(type);  }	  return    new    DefaultImplementationConstructor    <    T>(type);    	non-compiled	[CE]  ';'  expected	70	None	replace
303	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(type,  rawType);  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(type,  rawType);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  DefaultImplementationConstructor  <  T>(type,  rawType);	  return    new    DefaultImplementationConstructor    <    T>(type);    	non-compiled	[CE]  ';'  expected	70	None	replace
304	[BUG]  [BUGGY]  return(T)new  DefaultImplementationConstructor  <  T>(type);  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(T)new  DefaultImplementationConstructor  <  T>(type);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(T)new  DefaultImplementationConstructor  <  T>(type);	  return    new    DefaultImplementationConstructor    <    T>(type);    	non-compiled	[CE]  ';'  expected	70	None	replace
305	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType)  {  return  new  DefaultImplementationConstructor  <  T>(type);  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [CE]  ')'  expected  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType)  {  return  new  DefaultImplementationConstructor  <  T>(type);  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType)  {  return  new  DefaultImplementationConstructor  <  T>(type);  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()	  return    new    DefaultImplementationConstructor    <    T>(type);    	non-compiled	[CE]  ')'  expected	70	None	replace
306	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType)  {  return  new  DefaultImplementationConstructor  <  T>(type);  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]  [CE]  ')'  expected  [FE]                            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType)  {  return  new  DefaultImplementationConstructor  <  T>(type);  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType)  {  return  new  DefaultImplementationConstructor  <  T>(type);  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]	  return    new    DefaultImplementationConstructor    <    T>(type);    	non-compiled	[CE]  ')'  expected	70	None	replace
307	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType)  {  return  new  DefaultImplementationConstructor  <  T>(type);  }  else  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [CE]  ')'  expected  [FE]                              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType)  {  return  new  DefaultImplementationConstructor  <  T>(type);  }  else  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType)  {  return  new  DefaultImplementationConstructor  <  T>(type);  }  else  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()	  return    new    DefaultImplementationConstructor    <    T>(type);    	non-compiled	[CE]  ')'  expected	70	None	replace
308	[BUG]  [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
309	[BUG]  [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( "  [CE]  illegal  start  of  expression  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( "  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( "	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
310	[BUG]  [BUGGY]  if(type  instanceof  CharacterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  CharacterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  CharacterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	27	None	replace
311	[BUG]  [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
312	[BUG]  [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>();  [CE]  illegal  start  of  expression  [FE]                            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>();	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
313	[BUG]  [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>();  }  [CE]  illegal  start  of  expression  [FE]                              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>();  }	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
314	[BUG]  [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  illegal  start  of  expression  [FE]                                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
315	[BUG]  [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  [CE]  illegal  start  of  expression  [FE]                                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
316	[BUG]  [BUGGY]  ObjectConstructor  <  T>  return  new  ObjectConstructor  <  T>();  [CE]  not  a  statement  [FE]                                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ObjectConstructor  <  T>  return  new  ObjectConstructor  <  T>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	ObjectConstructor  <  T>  return  new  ObjectConstructor  <  T>();	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  not  a  statement	66	None	replace
317	[BUG]  [BUGGY]  return(T)new  TreeMap  <  String,  Object>();  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(T)new  TreeMap  <  String,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(T)new  TreeMap  <  String,  Object>();	  return(T)new    LinkedHashMap    <    String,    Object>();    	non-compiled	[CE]  ';'  expected	80	None	replace
318	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return(T)new  LinkedHashMap  <  String,  Object>();  }  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return(T)new  LinkedHashMap  <  String,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return(T)new  LinkedHashMap  <  String,  Object>();  }	  return(T)new    LinkedHashMap    <    String,    Object>();    	non-compiled	[CE]  ';'  expected	80	None	replace
319	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedHashMap  <  String,  Object>();  }  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedHashMap  <  String,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedHashMap  <  String,  Object>();  }	  return(T)new    LinkedHashMap    <    String,    Object>();    	non-compiled	[CE]  ';'  expected	80	None	replace
320	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  LinkedHashMap  <  String,  Object>();  }  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  LinkedHashMap  <  String,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  LinkedHashMap  <  String,  Object>();  }	  return(T)new    LinkedHashMap    <    String,    Object>();    	non-compiled	[CE]  ';'  expected	80	None	replace
321	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return(T)new  LinkedHashMap  <  String,  Object>()  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return(T)new  LinkedHashMap  <  String,  Object>()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return(T)new  LinkedHashMap  <  String,  Object>()	  return(T)new    LinkedHashMap    <    String,    Object>();    	non-compiled	[CE]  ';'  expected	80	None	replace
322	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  return(T)new  LinkedHashMap  <  String,  Object>();  }  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  return(T)new  LinkedHashMap  <  String,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  return(T)new  LinkedHashMap  <  String,  Object>();  }	  return(T)new    LinkedHashMap    <    String,    Object>();    	non-compiled	[CE]  ';'  expected	80	None	replace
323	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>();  }  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>();  }	  return    new    DefaultImplementationConstructor    <    T>();    	non-compiled	[CE]  ';'  expected	54	None	replace
324	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType)  {  return  new  DefaultImplementationConstructor  <  T>();  }  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType)  {  return  new  DefaultImplementationConstructor  <  T>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType)  {  return  new  DefaultImplementationConstructor  <  T>();  }	  return    new    DefaultImplementationConstructor    <    T>();    	non-compiled	[CE]  ';'  expected	54	None	replace
325	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[1]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>();  }  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[1]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[1]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>();  }	  return    new    DefaultImplementationConstructor    <    T>();    	non-compiled	[CE]  ';'  expected	54	None	replace
326	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType)  {  return  new  DefaultImplementationConstructor  <  T>();  }  else  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [CE]  ')'  expected  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType)  {  return  new  DefaultImplementationConstructor  <  T>();  }  else  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType)  {  return  new  DefaultImplementationConstructor  <  T>();  }  else  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()	  return    new    DefaultImplementationConstructor    <    T>();    	non-compiled	[CE]  ')'  expected	54	None	replace
327	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>()  [CE]  ';'  expected  [FE]                            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>()	  return    new    DefaultImplementationConstructor    <    T>();    	non-compiled	[CE]  ';'  expected	54	None	replace
328	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  else  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  else  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  else  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }	  return(T)new    List    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	82	None	replace
329	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  List  <  Object,  Object>();  }  else  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  List  <  Object,  Object>();  }  else  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType)  {  return(T)new  List  <  Object,  Object>();  }  else  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }	  return(T)new    List    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	82	None	replace
330	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  else  {  return  new  LinkedHashMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  else  {  return  new  LinkedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  else  {  return  new  LinkedHashMap  <  Object,  Object>();  }	  return(T)new    List    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	82	None	replace
331	[BUG]  [BUGGY]  ((  ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ArrayHashMap  <  Object,  Object>();  }  [CE]  not  a  statement  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ((  ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ArrayHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	((  ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ArrayHashMap  <  Object,  Object>();  }	  ((    ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  not  a  statement	79	None	replace
332	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?>  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?>  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(type    instanceof    CharacterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
333	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(TypeToken.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  ')'  expected  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(TypeToken.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(TypeToken.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  ')'  expected	3	None	replace
334	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  '('  or  '['  expected  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  '('  or  '['  expected	3	None	replace
335	[BUG]  [BUGGY]  return  new  ArrayHashMap  <  Class  <?>()  {  [CE]  >  expected  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  ArrayHashMap  <  Class  <?>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  ArrayHashMap  <  Class  <?>()  {	  return    new    LinkedHashMap    <    Class    <?>()    {    	non-compiled	[CE]  >  expected	84	None	replace
336	[BUG]  [BUGGY]  return  new  LinkedList  <  Class  <?>()  {  [CE]  >  expected  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  LinkedList  <  Class  <?>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  LinkedList  <  Class  <?>()  {	  return    new    LinkedHashMap    <    Class    <?>()    {    	non-compiled	[CE]  >  expected	84	None	replace
337	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(TypeToken.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  }  [CE]  ')'  expected  [FE]              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(TypeToken.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(TypeToken.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  }	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    }    	non-compiled	[CE]  ')'  expected	23	None	replace
338	[BUG]  [BUGGY]  Type  rawType  =  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  }  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  Type  rawType  =  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	Type  rawType  =  type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  }	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    }    	non-compiled	[CE]  ';'  expected	23	None	replace
339	[BUG]  [BUGGY]  Preconditions.checkState(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  }  [CE]  ')'  expected  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  Preconditions.checkState(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	Preconditions.checkState(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  }	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    }    	non-compiled	[CE]  ')'  expected	23	None	replace
340	[BUG]  [BUGGY]  Preconditions.checkState(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  Preconditions.checkState(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	Preconditions.checkState(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  ';'  expected	28	None	replace
341	[BUG]  [BUGGY]  Preconditions.checkState(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  [CE]  ';'  expected  [FE]                            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  Preconditions.checkState(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	Preconditions.checkState(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  ';'  expected	28	None	replace
342	[BUG]  [BUGGY]  Preconditions.checkState(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>();  }  [CE]  ';'  expected  [FE]                              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  Preconditions.checkState(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	Preconditions.checkState(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>();  }	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  ';'  expected	28	None	replace
343	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?>  &&  type.isAssignableFrom(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  Class  <?>  &&  type.isAssignableFrom(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  Class  <?>  &&  type.isAssignableFrom(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(rawType    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
344	[BUG]  [BUGGY]  return(Constructor  <  T>)new  Constructor  <  T>()  {  [CE]  constructor  Constructor  in  class  Constructor<T#2>  cannot  be  applied  to  given  types;  [FE]              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(Constructor  <  T>)new  Constructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(Constructor  <  T>)new  Constructor  <  T>()  {	  return    new    Constructor    <    T>()    {    	non-compiled	[CE]  constructor  Constructor  in  class  Constructor<T#2>  cannot  be  applied  to  given  types;	16	None	replace
345	[BUG]  [BUGGY]  return  constructor  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types;  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  constructor  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types;  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  constructor  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types;	  return    new    Constructor    <    T>()    {    	non-compiled	[CE]  ';'  expected	16	None	replace
346	[BUG]  [BUGGY]  final  Constructor  <  T>  constructor  =  new  Constructor  <  T>()  {  [CE]  constructor  Constructor  in  class  Constructor<T#2>  cannot  be  applied  to  given  types;  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  final  Constructor  <  T>  constructor  =  new  Constructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	final  Constructor  <  T>  constructor  =  new  Constructor  <  T>()  {	  return    new    Constructor    <    T>()    {    	non-compiled	[CE]  constructor  Constructor  in  class  Constructor<T#2>  cannot  be  applied  to  given  types;	16	None	replace
347	[BUG]  [BUGGY]  return  new  Constructor  <  T>(rawType)  {  [CE]  constructor  Constructor  in  class  Constructor<T#2>  cannot  be  applied  to  given  types;  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  Constructor  <  T>(rawType)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  Constructor  <  T>(rawType)  {	  return    new    Constructor    <    T>()    {    	non-compiled	[CE]  constructor  Constructor  in  class  Constructor<T#2>  cannot  be  applied  to  given  types;	16	None	replace
348	[BUG]  [BUGGY]  return  constructor  in  class  Constructor  <  T#2>unable  to  be  applied  to  given  types;  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  constructor  in  class  Constructor  <  T#2>unable  to  be  applied  to  given  types;  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  constructor  in  class  Constructor  <  T#2>unable  to  be  applied  to  given  types;	  return    new    Constructor    <    T>()    {    	non-compiled	[CE]  ';'  expected	16	None	replace
349	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>()  ||  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>()  ||  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  DefaultImplementationConstructor  <  T>()  ||	  return    new    DefaultImplementationConstructor    <    T>()    ==    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
350	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  Class  <?>()  {  [CE]  >  expected  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  Class  <?>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  DefaultImplementationConstructor  <  Class  <?>()  {	  return    new    DefaultImplementationConstructor    <    T>()    ==    	non-compiled	[CE]  >  expected	69	None	replace
351	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(TypeToken.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {  }  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(TypeToken.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(TypeToken.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {  }	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType())))    {    return    new    ObjectConstructor    <    T>()    {    }    	non-compiled	[CE]  ';'  expected	24	None	replace
352	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {  }  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {  }	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType())))    {    return    new    ObjectConstructor    <    T>()    {    }    	non-compiled	[CE]  ';'  expected	24	None	replace
353	[BUG]  [BUGGY]  ||(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType())))    {    return    new    ObjectConstructor    <    T>()    {    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
354	[BUG]  [BUGGY]  ||(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType())))    {    return    new    ObjectConstructor    <    T>()    {    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
355	[BUG]  [BUGGY]  return  new  SortedArrayMap  <  Object,  Object>()  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  SortedArrayMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  SortedArrayMap  <  Object,  Object>()  {	  return    new    SortedHashMap    <    Object,    Object>()    {    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
356	[BUG]  [BUGGY]  return(SortedMap  <  Object,  Object>)new  LinkedHashMap  <  Object,  Object>()  {  [CE]  method  does  not  override  or  implement  a  method  from  a  supertype  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(SortedMap  <  Object,  Object>)new  LinkedHashMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(SortedMap  <  Object,  Object>)new  LinkedHashMap  <  Object,  Object>()  {	  return    new    SortedMap    <    Object,    Object>()    {    	non-compiled	[CE]  method  does  not  override  or  implement  a  method  from  a  supertype	8	None	replace
357	[BUG]  [BUGGY]  Preconditions.checkState(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  Preconditions.checkState(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	Preconditions.checkState(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	27	None	replace
358	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	27	None	replace
359	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]                            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " "));  }	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	27	None	replace
360	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( "  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( "	  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  unclosed  string  literal	78	None	replace
361	[BUG]  [BUGGY]  if(type  instanceof  Class  <?  super  ||  type  instanceof  CharacterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [CE]  illegal  start  of  type  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?  super  ||  type  instanceof  CharacterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?  super  ||  type  instanceof  CharacterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    CharacterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType())))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
362	[BUG]  [BUGGY]  if(type  instanceof  Class  <?  super  ||  type  instanceof  CharacterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((Class  <?  super)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [CE]  illegal  start  of  type  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?  super  ||  type  instanceof  CharacterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((Class  <?  super)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?  super  ||  type  instanceof  CharacterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((Class  <?  super)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    CharacterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType())))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
363	[BUG]  [BUGGY]  if(type  instanceof  Class  <?  super  ||  type  instanceof  CharacterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [CE]  illegal  start  of  type  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?  super  ||  type  instanceof  CharacterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?  super  ||  type  instanceof  CharacterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    CharacterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType())))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
364	[BUG]  [BUGGY]  if(type  instanceof  Class  <?  super  ||  type  instanceof  CharacterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((Class)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [CE]  illegal  start  of  type  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?  super  ||  type  instanceof  CharacterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((Class)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?  super  ||  type  instanceof  CharacterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((Class)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    CharacterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType())))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
365	[BUG]  [BUGGY]  if(type  instanceof  Class  <?  super  ||  type  instanceof  CharacterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  Object  [CE]  illegal  start  of  type  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?  super  ||  type  instanceof  CharacterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  Object  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?  super  ||  type  instanceof  CharacterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  Object	  if(type    instanceof    CharacterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType())))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
366	[BUG]  [BUGGY]  return(T)new  HashMap  <  Object,  Object>();  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(T)new  HashMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(T)new  HashMap  <  Object,  Object>();	  return(T)new    ArrayList    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	47	None	replace
367	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?>  &&  rawType.isAssignableFrom(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  '('  or  '['  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  Class  <?>  &&  rawType.isAssignableFrom(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  Class  <?>  &&  rawType.isAssignableFrom(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  if(rawType    instanceof    ParameterizedType    &&    rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  '('  or  '['  expected	40	None	replace
368	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?  super  T>  &&  rawType.isAssignableFrom(TypeToken.get(((Class  <?  super  T>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  '('  or  '['  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  Class  <?  super  T>  &&  rawType.isAssignableFrom(TypeToken.get(((Class  <?  super  T>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  Class  <?  super  T>  &&  rawType.isAssignableFrom(TypeToken.get(((Class  <?  super  T>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  if(rawType    instanceof    ParameterizedType    &&    rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  '('  or  '['  expected	40	None	replace
369	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?  super  T>  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  '('  or  '['  expected  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  Class  <?  super  T>  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  Class  <?  super  T>  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  if(rawType    instanceof    ParameterizedType    &&    rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  '('  or  '['  expected	40	None	replace
370	[BUG]  [BUGGY]  Preconditions.checkState(type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  Preconditions.checkState(type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	Preconditions.checkState(type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }	  if(type    instanceof    ParameterizedType    &&    rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	26	None	replace
371	[BUG]  [BUGGY]  Preconditions.checkState(type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( "  [CE]  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  Preconditions.checkState(type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( "  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	Preconditions.checkState(type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( "	  if(type    instanceof    ParameterizedType    &&    rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	26	None	replace
372	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  &&  rawType.isAssignableFrom(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  '('  or  '['  expected  [FE]              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?>  &&  rawType.isAssignableFrom(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?>  &&  rawType.isAssignableFrom(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    Class    <?>    &&    type.isAssignableFrom(TypeToken.get(((Class    <?>)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  '('  or  '['  expected	59	None	replace
373	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?  super  ||  rawType  instanceof  Class  <?  super)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [CE]  illegal  start  of  type  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  Class  <?  super  ||  rawType  instanceof  Class  <?  super)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  Class  <?  super  ||  rawType  instanceof  Class  <?  super)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()	  if(type    instanceof    ParameterizedType    &&    type    instanceof    ParameterizedType)    {    if(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
374	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?  super  ||  rawType  instanceof  Class  <?  super)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getR  [CE]  illegal  start  of  type  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  Class  <?  super  ||  rawType  instanceof  Class  <?  super)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getR  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  Class  <?  super  ||  rawType  instanceof  Class  <?  super)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getR	  if(type    instanceof    ParameterizedType    &&    type    instanceof    ParameterizedType)    {    if(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
375	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?  super  ||  rawType  instanceof  Class  <?  super)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).get  [CE]  illegal  start  of  type  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  Class  <?  super  ||  rawType  instanceof  Class  <?  super)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).get  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  Class  <?  super  ||  rawType  instanceof  Class  <?  super)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).get	  if(type    instanceof    ParameterizedType    &&    type    instanceof    ParameterizedType)    {    if(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
376	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?  super  ||  rawType  instanceof  Class  <?  super)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  Class  <?  super  ||  rawType  instanceof  Class  <?  super)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  Class  <?  super  ||  rawType  instanceof  Class  <?  super)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).	  if(type    instanceof    ParameterizedType    &&    type    instanceof    ParameterizedType)    {    if(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
377	[BUG]  [BUGGY]  return  new  ArrayHashMap  <  T>()  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  ArrayHashMap  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  ArrayHashMap  <  T>()  {	  return    new    LinkedTreeMap    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
378	[BUG]  [BUGGY]  return  new  ArrayList  <  T>()  {  [CE]  method  does  not  override  or  implement  a  method  from  a  supertype  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  ArrayList  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  ArrayList  <  T>()  {	  return    new    LinkedTreeMap    <    T>()    {    	non-compiled	[CE]  method  does  not  override  or  implement  a  method  from  a  supertype	58	None	replace
379	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?  super  ||  rawType  instanceof  Class  <?  super)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [CE]  illegal  start  of  type  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  Class  <?  super  ||  rawType  instanceof  Class  <?  super)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  Class  <?  super  ||  rawType  instanceof  Class  <?  super)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()	  if(type    instanceof    ParameterizedType    &&    type    instanceof    ParameterizedType)    {    if(!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
380	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?  super  ||  rawType  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  Class  <?  super  ||  rawType  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  Class  <?  super  ||  rawType  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()	  if(type    instanceof    ParameterizedType    &&    type    instanceof    ParameterizedType)    {    if(!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
381	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?  super  ||  rawType  instanceof  Class  <?  super)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  Class  <?  super  ||  rawType  instanceof  Class  <?  super)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  Class  <?  super  ||  rawType  instanceof  Class  <?  super)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).	  if(type    instanceof    ParameterizedType    &&    type    instanceof    ParameterizedType)    {    if(!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
382	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?  super  ||  rawType  instanceof  Class  <?  super)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  Class  <?  super  ||  rawType  instanceof  Class  <?  super)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  Class  <?  super  ||  rawType  instanceof  Class  <?  super)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()	  if(type    instanceof    ParameterizedType    &&    type    instanceof    ParameterizedType)    {    if(!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
383	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?  super  ||  rawType  instanceof  Class  >=?  super)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  Class  <?  super  ||  rawType  instanceof  Class  >=?  super)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  Class  <?  super  ||  rawType  instanceof  Class  >=?  super)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()	  if(type    instanceof    ParameterizedType    &&    type    instanceof    ParameterizedType)    {    if(!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
384	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?  super  ||  rawType  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [CE]  illegal  start  of  type  [FE]                                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  Class  <?  super  ||  rawType  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  Class  <?  super  ||  rawType  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()	  if(type    instanceof    ParameterizedType    &&    type    instanceof    ParameterizedType)    {    if(!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
385	[BUG]  [BUGGY]  return(DefaultImplementationConstructor  <  T>)new  LinkedHashMap  <  Object,  Object>();  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(DefaultImplementationConstructor  <  T>)new  LinkedHashMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(DefaultImplementationConstructor  <  T>)new  LinkedHashMap  <  Object,  Object>();	  Return    new    DefaultImplementationConstructor    <    T>()    {    	non-compiled	[CE]  ';'  expected	55	None	replace
386	[BUG]  [BUGGY]  if(rawType  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  if(String.class.isAssignableFrom(  [CE]  illegal  start  of  expression  [FE]                                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  if(String.class.isAssignableFrom(  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  if(String.class.isAssignableFrom(	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    if(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
387	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  if(String.class.isAssignableFrom(  TypeToken.  [CE]  illegal  start  of  expression  [FE]                                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  if(String.class.isAssignableFrom(  TypeToken.  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  if(String.class.isAssignableFrom(  TypeToken.	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    if(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
388	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  if(String.class.isAssignableFrom(  [CE]  illegal  start  of  expression  [FE]                                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  if(String.class.isAssignableFrom(  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  if(String.class.isAssignableFrom(	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    if(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
389	[BUG]  [BUGGY]  return(T)createSortedMap  <  Object,  Object>();  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(T)createSortedMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(T)createSortedMap  <  Object,  Object>();	  return(T)create    LinkedHashMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	49	None	replace
390	[BUG]  [BUGGY]  return(T)createEmptyMap  <  Object,  Object>();  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(T)createEmptyMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(T)createEmptyMap  <  Object,  Object>();	  return(T)create    LinkedHashMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	49	None	replace
391	[BUG]  [BUGGY]  Type  elementType  =  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  Type  elementType  =  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	Type  elementType  =  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	67	None	replace
392	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  elementType.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  elementType.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  elementType.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
393	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
394	[BUG]  [BUGGY]  }  else  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  }  else  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	}  else  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(type    instanceof    ParameterizedType)    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    else    if(type    instanceof    ParameterizedType    &&    type.getActualTypeArguments().length    >    0)    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	14	None	replace
395	[BUG]  [BUGGY]  }  else  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  ==  0)  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  }  else  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  ==  0)  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	}  else  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  ==  0)  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(type    instanceof    ParameterizedType)    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    else    if(type    instanceof    ParameterizedType    &&    type.getActualTypeArguments().length    >    0)    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	14	None	replace
396	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  Class  <?>  rawType  =  type.getRawType();  if(rawType!=  null)  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  Class  <?>  rawType  =  type.getRawType();  if(rawType!=  null)  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?>)  {  Class  <?>  rawType  =  type.getRawType();  if(rawType!=  null)  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }	  if(type    instanceof    ParameterizedType)    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    else    if(type    instanceof    ParameterizedType    &&    type.getActualTypeArguments().length    >    0)    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	14	None	replace
397	[BUG]  [BUGGY]  }  else  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  1)  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  }  else  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  1)  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	}  else  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  1)  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(type    instanceof    ParameterizedType)    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    else    if(type    instanceof    ParameterizedType    &&    type.getActualTypeArguments().length    >    0)    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	14	None	replace
398	[BUG]  [BUGGY]  }  else  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length!=  0)  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  }  else  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length!=  0)  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	}  else  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length!=  0)  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(type    instanceof    ParameterizedType)    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    else    if(type    instanceof    ParameterizedType    &&    type.getActualTypeArguments().length    >    0)    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	14	None	replace
399	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  Class  <?>  rawType  =  type.getRawType();  if(rawType!=  null)  {  return  new  LinkedHashMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  Class  <?>  rawType  =  type.getRawType();  if(rawType!=  null)  {  return  new  LinkedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?>)  {  Class  <?>  rawType  =  type.getRawType();  if(rawType!=  null)  {  return  new  LinkedHashMap  <  Object,  Object>();  }	  if(type    instanceof    ParameterizedType)    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    else    if(type    instanceof    ParameterizedType    &&    type.getActualTypeArguments().length    >    0)    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	14	None	replace
400	[BUG]  [BUGGY]  }  else  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  }  else  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	}  else  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >  0)  {  return  new  TreeMap  <  Object,  Object>();  }	  if(type    instanceof    ParameterizedType)    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    else    if(type    instanceof    ParameterizedType    &&    type.getActualTypeArguments().length    >    0)    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	14	None	replace
401	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  LinkedHashMap  <  [CE]  illegal  start  of  type  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  LinkedHashMap  <  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  LinkedHashMap  <  	  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
402	[BUG]  [BUGGY]  return  new  Class  <?>()  :  new  ParameterizedMap  <  Object,  Object>();  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  Class  <?>()  :  new  ParameterizedMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  Class  <?>()  :  new  ParameterizedMap  <  Object,  Object>();	  return    new    ParameterizedMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	7	None	replace
403	[BUG]  [BUGGY]  return(T)new  ParameterizedMap  <  Object,  Object>();  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(T)new  ParameterizedMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(T)new  ParameterizedMap  <  Object,  Object>();	  return    new    ParameterizedMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	7	None	replace
404	[BUG]  [BUGGY]  return  new  ParameterizedMap  <  String,  Object>();  [CE]  ';'  expected  [FE]                            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  ParameterizedMap  <  String,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  ParameterizedMap  <  String,  Object>();	  return    new    ParameterizedMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	7	None	replace
405	[BUG]  [BUGGY]  return(T)new  ObjectMap  <  Object,  Object>()  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(T)new  ObjectMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(T)new  ObjectMap  <  Object,  Object>()  {	  return(T)new    LinkedTreeMap    <    Object,    Object>()    {    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
406	[BUG]  [BUGGY]  if(type  instanceof  Class  <?  super  T>  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  '('  or  '['  expected  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?  super  T>  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?  super  T>  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  '('  or  '['  expected	21	None	replace
407	[BUG]  [BUGGY]  if(type  instanceof  Class  <?  super  T>  &&  type.isAssignableFrom(TypeToken.get(((Class  <?  super  T>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  '('  or  '['  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?  super  T>  &&  type.isAssignableFrom(TypeToken.get(((Class  <?  super  T>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?  super  T>  &&  type.isAssignableFrom(TypeToken.get(((Class  <?  super  T>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  '('  or  '['  expected	21	None	replace
408	[BUG]  [BUGGY]  if(type  instanceof  Class  <?  super  T>  &&  rawType.isAssignableFrom(TypeToken.get(((Class  <?  super  T>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  '('  or  '['  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?  super  T>  &&  rawType.isAssignableFrom(TypeToken.get(((Class  <?  super  T>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?  super  T>  &&  rawType.isAssignableFrom(TypeToken.get(((Class  <?  super  T>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  '('  or  '['  expected	21	None	replace
409	[BUG]  [BUGGY]  return  new  LinkedList  <  Object,  Object>()  {  [CE]  wrong  number  of  type  arguments;  required  1  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  LinkedList  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  LinkedList  <  Object,  Object>()  {	  return    new    ArrayList    <    Object,    Object>()    {    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  1	32	None	replace
410	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType,  objectType)  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType,  objectType)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  DefaultImplementationConstructor  <  T>(rawType,  objectType)  {	  return    new    DefaultImplementationConstructor    <    T>(rawType)    {    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
411	[BUG]  [BUGGY]  return(T)new  ClassConstructor  <  T>()  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(T)new  ClassConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(T)new  ClassConstructor  <  T>()  {	  return    new    ClassConstructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
412	[BUG]  [BUGGY]  return  new  TypeConstructor  <  T>()  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  TypeConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  TypeConstructor  <  T>()  {	  return    new    ClassConstructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
413	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())  {  return(T)new  LinkedHashMap  <  Object,  Object>()  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())  {  return(T)new  LinkedHashMap  <  Object,  Object>()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())  {  return(T)new  LinkedHashMap  <  Object,  Object>()	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	13	None	replace
414	[BUG]  [BUGGY]  ((  ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ((  ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	((  ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  not  a  statement	13	None	replace
415	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType())  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType())  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType())  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	13	None	replace
416	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }	  if(type    instanceof    ParameterizedType)    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	11	None	replace
417	[BUG]  [BUGGY]  }  else  if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  }  else  if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	}  else  if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }	  if(type    instanceof    ParameterizedType)    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	11	None	replace
418	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?>)  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }	  if(type    instanceof    ParameterizedType)    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	11	None	replace
419	[BUG]  [BUGGY]  }  else  if(type  instanceof  ParameterizedType)  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  }  else  if(type  instanceof  ParameterizedType)  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	}  else  if(type  instanceof  ParameterizedType)  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(type    instanceof    ParameterizedType)    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	11	None	replace
420	[BUG]  [BUGGY]  return  new  ArrayHashMap  <  Object,  Object>();  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  ArrayHashMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  ArrayHashMap  <  Object,  Object>();	  return    new    LinkedTreeMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	33	None	replace
421	[BUG]  [BUGGY]  if(TypeToken.isAssignableFrom(type)||  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  '('  or  '['  expected  [FE]              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(TypeToken.isAssignableFrom(type)||  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(TypeToken.isAssignableFrom(type)||  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    ||    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  '('  or  '['  expected	72	None	replace
422	[BUG]  [BUGGY]  if(type  instanceof  Class  <?  super  T>  &&  elementType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?  super  T>  &&  elementType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?  super  T>  &&  elementType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(type    instanceof    ParameterizedType    &&    elementType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
423	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedTreeMap  <  Object,  Object>();  }  else  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedTreeMap  <  Object,  Object>();  }  else  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedTreeMap  <  Object,  Object>();  }  else  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }	  return(T)new    LinkedTreeMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	10	None	replace
424	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedTreeMap  <  Object,  Object>();  }  else  {  return  new  LinkedHashMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedTreeMap  <  Object,  Object>();  }  else  {  return  new  LinkedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedTreeMap  <  Object,  Object>();  }  else  {  return  new  LinkedHashMap  <  Object,  Object>();  }	  return(T)new    LinkedTreeMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	10	None	replace
425	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedTreeMap  <  String,  Object>();  }  else  {  return(T)new  LinkedHashMap  <  String,  Object>();  }  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedTreeMap  <  String,  Object>();  }  else  {  return(T)new  LinkedHashMap  <  String,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedTreeMap  <  String,  Object>();  }  else  {  return(T)new  LinkedHashMap  <  String,  Object>();  }	  return(T)new    LinkedTreeMap    <    String,    Object>();    	non-compiled	[CE]  ';'  expected	48	None	replace
426	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedTreeMap  <  String,  Object>();  }  else  if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedHashMap  <  String,  Object>();  }  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedTreeMap  <  String,  Object>();  }  else  if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedHashMap  <  String,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedTreeMap  <  String,  Object>();  }  else  if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedHashMap  <  String,  Object>();  }	  return(T)new    LinkedTreeMap    <    String,    Object>();    	non-compiled	[CE]  ';'  expected	48	None	replace
427	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedTreeMap  <  String,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  return(T)new  LinkedHashMap  <  String,  Object>();  }  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedTreeMap  <  String,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  return(T)new  LinkedHashMap  <  String,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedTreeMap  <  String,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  return(T)new  LinkedHashMap  <  String,  Object>();  }	  return(T)new    LinkedTreeMap    <    String,    Object>();    	non-compiled	[CE]  ';'  expected	48	None	replace
428	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedTreeMap  <  String,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [CE]  ')'  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedTreeMap  <  String,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType)  {  return(T)new  LinkedTreeMap  <  String,  Object>();  }  else  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()	  return(T)new    LinkedTreeMap    <    String,    Object>();    	non-compiled	[CE]  ')'  expected	48	None	replace
429	[BUG]  [BUGGY]  if(type  instanceof  Class  <?  super  T>  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  '('  or  '['  expected  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?  super  T>  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?  super  T>  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&    rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  '('  or  '['  expected	42	None	replace
430	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  T>()  {	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    DefaultImplementationConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
431	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  T>  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    DefaultImplementationConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
432	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  elementType.equals(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  elementType.equals(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  elementType.equals(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(type    instanceof    ParameterizedType    &&    type.equals(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
433	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  rawType.equals(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  rawType.equals(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  rawType.equals(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(type    instanceof    ParameterizedType    &&    type.equals(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
434	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  &&  rawType.equals(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?>  &&  rawType.equals(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?>  &&  rawType.equals(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(type    instanceof    ParameterizedType    &&    type.equals(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
435	[BUG]  [BUGGY]  return(T)new  ArrayList  <  String,  Object>();  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(T)new  ArrayList  <  String,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(T)new  ArrayList  <  String,  Object>();	  return(T)new    LinkedHashMap    <    String,    Object>();    	non-compiled	[CE]  ';'  expected	80	None	replace
436	[BUG]  [BUGGY]  return(T)create  LinkedHashMap  <  String,  Object>();  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(T)create  LinkedHashMap  <  String,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(T)create  LinkedHashMap  <  String,  Object>();	  return(T)new    LinkedHashMap    <    String,    Object>();    	non-compiled	[CE]  ';'  expected	80	None	replace
437	[BUG]  [BUGGY]  return(T)new  ArrayHashMap  <  String,  Object>();  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(T)new  ArrayHashMap  <  String,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(T)new  ArrayHashMap  <  String,  Object>();	  return(T)new    LinkedHashMap    <    String,    Object>();    	non-compiled	[CE]  ';'  expected	80	None	replace
438	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( "  [CE]  illegal  start  of  expression  [FE]                            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( "  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( "	  if(type    instanceof    ParameterizedType    &&    rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   "));    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
439	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(TypeToken.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  ')'  expected  [FE]              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(TypeToken.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(TypeToken.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  ')'  expected	2	None	replace
440	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  ')'  expected  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  ')'  expected	2	None	replace
441	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(TypeToken.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  ')'  expected  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(TypeToken.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(TypeToken.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  ')'  expected	2	None	replace
442	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  Class  <?>>();  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  Class  <?>>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  DefaultImplementationConstructor  <  Class  <?>>();	  return    new    DefaultImplementationConstructor    <    T>();    	non-compiled	[CE]  ';'  expected	54	None	replace
443	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  K>();  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  K>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  DefaultImplementationConstructor  <  K>();	  return    new    DefaultImplementationConstructor    <    T>();    	non-compiled	[CE]  ';'  expected	54	None	replace
444	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType,  type);  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType,  type);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  DefaultImplementationConstructor  <  T>(rawType,  type);	  return    new    DefaultImplementationConstructor    <    T>(type);    	non-compiled	[CE]  ';'  expected	70	None	replace
445	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType,  rawType);  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType,  rawType);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  DefaultImplementationConstructor  <  T>(rawType,  rawType);	  return    new    DefaultImplementationConstructor    <    T>(type);    	non-compiled	[CE]  ';'  expected	70	None	replace
446	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(elementType);  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(elementType);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  DefaultImplementationConstructor  <  T>(elementType);	  return    new    DefaultImplementationConstructor    <    T>(type);    	non-compiled	[CE]  ';'  expected	70	None	replace
447	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(TypeToken.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [CE]  '('  or  '['  expected  [FE]            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(TypeToken.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(TypeToken.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType())))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  '('  or  '['  expected	1	None	replace
448	[BUG]  [BUGGY]  return(LocalizedMap  <  Object,  Object>)  {  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(LocalizedMap  <  Object,  Object>)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(LocalizedMap  <  Object,  Object>)  {	  return    new    LocalizedMap    <    Object,    Object>()    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
449	[BUG]  [BUGGY]  Return  new  LocalizedMap  <  Object,  Object>()  {  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  Return  new  LocalizedMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	Return  new  LocalizedMap  <  Object,  Object>()  {	  return    new    LocalizedMap    <    Object,    Object>()    {    	non-compiled	[CE]  not  a  statement	51	None	replace
450	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>()  {	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    DefaultImplementationConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
451	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  [CE]  illegal  start  of  type  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  DefaultImplementationConstructor  <	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    DefaultImplementationConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
452	[BUG]  [BUGGY]  &&  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  &&  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	&&  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  ||    type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
453	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>()  {  }  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>()  {  }	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    DefaultImplementationConstructor    <    T>()    {    }    	non-compiled	[CE]  ';'  expected	37	None	replace
454	[BUG]  [BUGGY]  ((  ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>();  }  [CE]  not  a  statement  [FE]                            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ((  ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	((  ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>();  }	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  not  a  statement	66	None	replace
455	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>();  }  [CE]  illegal  start  of  expression  [FE]                              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>();  }	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
456	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>();  }  [CE]  illegal  start  of  expression  [FE]                                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>();  }	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
457	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  &&  type.isAssignableFrom(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>();  }  [CE]  illegal  start  of  expression  [FE]                                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?>  &&  type.isAssignableFrom(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?>  &&  type.isAssignableFrom(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>();  }	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
458	[BUG]  [BUGGY]  return  new  Constructor  <  Object,  Object>()  {  [CE]  wrong  number  of  type  arguments;  required  1  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  Constructor  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  Constructor  <  Object,  Object>()  {	  return    new    HashMap    <    Object,    Object>()    {    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  1	61	None	replace
459	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(TypeToken.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  <  return  new  ObjectConstructor  <  T>()  {  }  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(TypeToken.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  <  return  new  ObjectConstructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(TypeToken.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  <  return  new  ObjectConstructor  <  T>()  {  }	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    <    return    new    ObjectConstructor    <    T>()    {    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
460	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  <  return  new  ObjectConstructor  <  T>()  {  }  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  <  return  new  ObjectConstructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  <  return  new  ObjectConstructor  <  T>()  {  }	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    <    return    new    ObjectConstructor    <    T>()    {    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
461	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  ||!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  <  return  new  ObjectConstructor  <  T>()  {  }  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  ||!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  <  return  new  ObjectConstructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  ||!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  <  return  new  ObjectConstructor  <  T>()  {  }	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    <    return    new    ObjectConstructor    <    T>()    {    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
462	[BUG]  [BUGGY]  Preconditions.checkState(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  T>  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  Preconditions.checkState(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	Preconditions.checkState(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    DefaultImplementationConstructor    <    T>()    {    }    	non-compiled	[CE]  ';'  expected	38	None	replace
463	[BUG]  [BUGGY]  Preconditions.checkState(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  Preconditions.checkState(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	Preconditions.checkState(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  DefaultImplementationConstructor  <	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    DefaultImplementationConstructor    <    T>()    {    }    	non-compiled	[CE]  ';'  expected	38	None	replace
464	[BUG]  [BUGGY]  return  new  ArrayHashMap  <  String,  Object>()  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  ArrayHashMap  <  String,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  ArrayHashMap  <  String,  Object>()  {	  return    new    LinkedHashMap    <    String,    Object>()    {    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
465	[BUG]  [BUGGY]  if(type  instanceof  LinkedHashMap)  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  LinkedHashMap)  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  LinkedHashMap)  {  return(T)new  TreeMap  <  Object,  Object>();  }	  return(T)new    TreeMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	9	None	replace
466	[BUG]  [BUGGY]  if(type  instanceof  LinkedHashMap)  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  LinkedHashMap)  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  LinkedHashMap)  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  LinkedHashMap)  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  LinkedHashMap)  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  LinkedHashMap)  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }	  return(T)new    TreeMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	9	None	replace
467	[BUG]  [BUGGY]  if(type  instanceof  LinkedHashMap)  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  LinkedHashMap)  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  LinkedHashMap)  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }	  return(T)new    TreeMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	9	None	replace
468	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType)  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType)  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }	  return(T)new    TreeMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	9	None	replace
469	[BUG]  [BUGGY]  if(type  instanceof  LinkedHashMap)  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return  new  LinkedHashMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  LinkedHashMap)  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return  new  LinkedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  LinkedHashMap)  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return  new  LinkedHashMap  <  Object,  Object>();  }	  return(T)new    TreeMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	9	None	replace
470	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [2]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [2]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [2]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [1]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
471	[BUG]  [BUGGY]  if(rawType  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [CE]  '('  or  '['  expected  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>	  if(rawType    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType())))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  '('  or  '['  expected	71	None	replace
472	[BUG]  [BUGGY]  if(rawType  instanceof  ParameterizedType)  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  ParameterizedType)  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  ParameterizedType)  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(rawType    instanceof    ParameterizedType)    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	15	None	replace
473	[BUG]  [BUGGY]  Preconditions.checkState(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  Preconditions.checkState(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	Preconditions.checkState(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	25	None	replace
474	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
475	[BUG]  [BUGGY]  Preconditions.checkState(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  [CE]  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  Preconditions.checkState(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	Preconditions.checkState(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	25	None	replace
476	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  LinkedHashMap  <  Object,  Object>();  }  [CE]  illegal  start  of  expression  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  LinkedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  LinkedHashMap  <  Object,  Object>();  }	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
477	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ArrayMap  <  Object,  Object>();  }  [CE]  illegal  start  of  expression  [FE]                            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ArrayMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ArrayMap  <  Object,  Object>();  }	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
478	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  LinkedHashMap  <  Object,  Object>()  [CE]  illegal  start  of  expression  [FE]                              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  LinkedHashMap  <  Object,  Object>()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  LinkedHashMap  <  Object,  Object>()	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
479	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  illegal  start  of  expression  [FE]                                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  TreeMap  <  Object,  Object>();  }	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
480	[BUG]  [BUGGY]  return(T)new  LinkedImplementationConstructor  <  T>()  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(T)new  LinkedImplementationConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(T)new  LinkedImplementationConstructor  <  T>()  {	  return(T)new    DefaultImplementationConstructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
481	[BUG]  [BUGGY]  return(SortedMap)new  DefaultImplementationConstructor  <  T>()  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(SortedMap)new  DefaultImplementationConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(SortedMap)new  DefaultImplementationConstructor  <  T>()  {	  return(T)new    DefaultImplementationConstructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
482	[BUG]  [BUGGY]  return(T)new  ArrayImplementationConstructor  <  T>()  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(T)new  ArrayImplementationConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(T)new  ArrayImplementationConstructor  <  T>()  {	  return(T)new    DefaultImplementationConstructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
483	[BUG]  [BUGGY]  return(T)new  ObjectConstructor  <  T>()  {  [CE]  incompatible  types  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(T)new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(T)new  ObjectConstructor  <  T>()  {	  return(T)new    DefaultImplementationConstructor    <    T>()    {    	non-compiled	[CE]  incompatible  types	52	None	replace
484	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.equals(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  LinkedHashMap  <  Object,  Object>();  }  [CE]  illegal  start  of  expression  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.equals(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  LinkedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.equals(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  LinkedHashMap  <  Object,  Object>();  }	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
485	[BUG]  [BUGGY]  ((  ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  not  a  statement  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ((  ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	((  ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  TreeMap  <  Object,  Object>();  }	  ((    ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  not  a  statement	79	None	replace
486	[BUG]  [BUGGY]  return  new  HashMap  <  T>()  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  HashMap  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  HashMap  <  T>()  {	  return    new    LinkedHashMap    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
487	[BUG]  [BUGGY]  Return(T)new  LinkedHashMap  <  Object,  Object>();  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  Return(T)new  LinkedHashMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	Return(T)new  LinkedHashMap  <  Object,  Object>();	  return(T)new    ArrayList    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	47	None	replace
488	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawClass()))  <  return  new  ObjectConstructor  <  T>()  {  }  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawClass()))  <  return  new  ObjectConstructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawClass()))  <  return  new  ObjectConstructor  <  T>()  {  }	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    <    return    new    ObjectConstructor    <    T>()    {    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
489	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  ||(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  <  return  new  ObjectConstructor  <  T>()  {  }  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  ||(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  <  return  new  ObjectConstructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  ||(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  <  return  new  ObjectConstructor  <  T>()  {  }	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    <    return    new    ObjectConstructor    <    T>()    {    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
490	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getRawType()))  <  return  new  ObjectConstructor  <  T>()  {  }  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getRawType()))  <  return  new  ObjectConstructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getRawType()))  <  return  new  ObjectConstructor  <  T>()  {  }	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    <    return    new    ObjectConstructor    <    T>()    {    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
491	[BUG]  [BUGGY]  ||(type  instanceof  ParameterizedType  &&!String.class.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  }  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||(type  instanceof  ParameterizedType  &&!String.class.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||(type  instanceof  ParameterizedType  &&!String.class.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  }	  ||(type    instanceof    ParameterizedType    &&!String.class.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
492	[BUG]  [BUGGY]  ||(type  instanceof  ParameterizedType  &&  String.class.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  }  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||(type  instanceof  ParameterizedType  &&  String.class.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||(type  instanceof  ParameterizedType  &&  String.class.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  }	  ||(type    instanceof    ParameterizedType    &&!String.class.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
493	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  ||  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  ||  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  ||  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [1]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
494	[BUG]  [BUGGY]  Preconditions.checkState(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>();  }  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  Preconditions.checkState(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	Preconditions.checkState(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>();  }	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  ';'  expected	28	None	replace
495	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawClass()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  ')'  expected  [FE]              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawClass()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawClass()))  {  return  new  ObjectConstructor  <  T>()  {	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  ')'  expected	2	None	replace
496	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(SortedMap.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  ')'  expected  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(SortedMap.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(SortedMap.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  ')'  expected	2	None	replace
497	[BUG]  [BUGGY]  ||(type  instanceof  ParameterizedType  &&!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||(type  instanceof  ParameterizedType  &&!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||(type  instanceof  ParameterizedType  &&!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
498	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(Class.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  ')'  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(Class.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(Class.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  ')'  expected	2	None	replace
499	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  ')'  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(Object.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  ')'  expected	2	None	replace
500	[BUG]  [BUGGY]  if(rawType  instanceof  ParameterizedType  &&  type.equals(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  ParameterizedType  &&  type.equals(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  ParameterizedType  &&  type.equals(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(type    instanceof    ParameterizedType    &&    type.equals(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
501	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  ||  type.equals(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  ||  type.equals(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  ||  type.equals(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(type    instanceof    ParameterizedType    &&    type.equals(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
502	[BUG]  [BUGGY]  if(type  instanceof  Class  <?  super  &&  type  instanceof  CharacterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [CE]  illegal  start  of  type  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  Class  <?  super  &&  type  instanceof  CharacterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  Class  <?  super  &&  type  instanceof  CharacterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    CharacterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType())))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
503	[BUG]  [BUGGY]  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>();  }  [CE]  not  a  statement  [FE]                            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>();  }	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  not  a  statement	66	None	replace
504	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())  {  return  new  ObjectConstructor  <  T>();  }  [CE]  ';'  expected  [FE]                              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())  {  return  new  ObjectConstructor  <  T>();  }	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  ';'  expected	66	None	replace
505	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType();  [CE]  ';'  expected  [FE]                                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  Class  <?  super  T>  rawType  =  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	Class  <?  super  T>  rawType  =  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType();	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  ';'  expected	66	None	replace
506	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawClass())))  {  return  new  ObjectConstructor  <  T>  [CE]  '('  or  '['  expected  [FE]            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawClass())))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawClass())))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType())))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  '('  or  '['  expected	1	None	replace
507	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(Class.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [CE]  '('  or  '['  expected  [FE]              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(Class.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(Class.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType())))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  '('  or  '['  expected	1	None	replace
508	[BUG]  [BUGGY]  if(elementType  instanceof  ParameterizedType  &&  elementType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(elementType  instanceof  ParameterizedType  &&  elementType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(elementType  instanceof  ParameterizedType  &&  elementType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(type    instanceof    ParameterizedType    &&    elementType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
509	[BUG]  [BUGGY]  }  else  if(type  instanceof  ParameterizedType)  {  if(rawType  instanceof  ParameterizedType)  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  }  else  if(type  instanceof  ParameterizedType)  {  if(rawType  instanceof  ParameterizedType)  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	}  else  if(type  instanceof  ParameterizedType)  {  if(rawType  instanceof  ParameterizedType)  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }	  if(rawType    instanceof    ParameterizedType)    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	15	None	replace
510	[BUG]  [BUGGY]  Class  <?>  rawType  =  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType();  [CE]  ';'  expected  [FE]                              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  Class  <?>  rawType  =  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	Class  <?>  rawType  =  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType();	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	67	None	replace
511	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())  {  throw  new  IllegalArgumentException( " ");  }	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	67	None	replace
512	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " "));  }  [CE]  illegal  start  of  expression  [FE]                                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " "));  }	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
513	[BUG]  [BUGGY]  ||(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  ||    type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
514	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()  [0]).getRawType()))  {  return(T)new  LinkedHashMap  <  Object,  Object>  [CE]  '('  or  '['  expected  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()  [0]).getRawType()))  {  return(T)new  LinkedHashMap  <  Object,  Object>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()  [0]).getRawType()))  {  return(T)new  LinkedHashMap  <  Object,  Object>	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  '('  or  '['  expected	12	None	replace
515	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType)  {  if(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  [CE]  <identifier>  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType)  {  if(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType)  {  if(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new	  if(type    instanceof    ParameterizedType    &&    type    instanceof    ParameterizedType)    {    if(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    	non-compiled	[CE]  <identifier>  expected	62	None	replace
516	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  if(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  [CE]  <identifier>  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  if(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  if(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new	  if(type    instanceof    ParameterizedType    &&    type    instanceof    ParameterizedType)    {    if(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    	non-compiled	[CE]  <identifier>  expected	62	None	replace
517	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  if(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())  [CE]  ')'  expected  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  if(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  if(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())	  if(type    instanceof    ParameterizedType    &&    type    instanceof    ParameterizedType)    {    if(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    	non-compiled	[CE]  ')'  expected	62	None	replace
518	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())  [CE]  ')'  expected  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())	  if(type    instanceof    ParameterizedType    &&    type    instanceof    ParameterizedType)    {    if(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    	non-compiled	[CE]  ')'  expected	62	None	replace
519	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?>  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  Class  <?>  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  Class  <?>  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(rawType    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
520	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?  super  T>  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  Class  <?  super  T>  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  Class  <?  super  T>  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(rawType    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
521	[BUG]  [BUGGY]  Return(T)new  DefaultImplementationConstructor  <  T>()  {  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  Return(T)new  DefaultImplementationConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	Return(T)new  DefaultImplementationConstructor  <  T>()  {	  return(T)new    DefaultImplementationConstructor    <    T>()    {    	non-compiled	[CE]  ';'  expected	52	None	replace
522	[BUG]  [BUGGY]  return(T)create  DefaultImplementationConstructor  <  T>()  {  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(T)create  DefaultImplementationConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(T)create  DefaultImplementationConstructor  <  T>()  {	  return(T)new    DefaultImplementationConstructor    <    T>()    {    	non-compiled	[CE]  ';'  expected	52	None	replace
523	[BUG]  [BUGGY]  return(T)this.newDefaultImplementationConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(T)this.newDefaultImplementationConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(T)this.newDefaultImplementationConstructor  <  T>()  {	  return(T)new    DefaultImplementationConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
524	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())  {  if(String.class.isAssignableFrom(TypeToken.get(  [CE]  illegal  start  of  expression  [FE]                                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())  {  if(String.class.isAssignableFrom(TypeToken.get(  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())  {  if(String.class.isAssignableFrom(TypeToken.get(	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    if(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
525	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  ||  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  if(String.class.isAssignableFrom(TypeToken.get(  [CE]  illegal  start  of  expression  [FE]                                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  ||  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  if(String.class.isAssignableFrom(TypeToken.get(  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  ||  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  if(String.class.isAssignableFrom(TypeToken.get(	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    if(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
526	[BUG]  [BUGGY]  return(T)this.new  LinkedHashMap  <  Object,  Object>()  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(T)this.new  LinkedHashMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(T)this.new  LinkedHashMap  <  Object,  Object>()  {	  return(T)new    LinkedTreeMap    <    Object,    Object>()    {    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
527	[BUG]  [BUGGY]  return  new  Constructor  <  T>(type);  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  Constructor  <  T>(type);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  Constructor  <  T>(type);	  return    new    Constructor    <    T>()    {    	non-compiled	[CE]  ';'  expected	16	None	replace
528	[BUG]  [BUGGY]  return  new  Constructor  <  T>(rawType.getRawClass())  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  Constructor  <  T>(rawType.getRawClass())  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  Constructor  <  T>(rawType.getRawClass())  {	  return    new    Constructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
529	[BUG]  [BUGGY]  return  new  Constructor  <  T>(type.getRawClass())  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  Constructor  <  T>(type.getRawClass())  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  Constructor  <  T>(type.getRawClass())  {	  return    new    Constructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
530	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawClass()))  {  return  new  ObjectConstructor  <  T>  [CE]  ')'  expected  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawClass()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawClass()))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  ')'  expected	3	None	replace
531	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(SortedMap.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  ')'  expected  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(SortedMap.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(SortedMap.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  ')'  expected	3	None	replace
532	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(Class.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  ')'  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(Class.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(Class.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  ')'  expected	3	None	replace
533	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?>  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  Class  <?>  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  Class  <?>  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(rawType    instanceof    ParameterizedType    &&    rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
534	[BUG]  [BUGGY]  &&!(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  LinkedHashMap  <  Object,  Object>();  }  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  &&!(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  LinkedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	&&!(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  LinkedHashMap  <  Object,  Object>();  }	  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
535	[BUG]  [BUGGY]  if(rawType  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }	  if(type    instanceof    ParameterizedType    &&    rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	26	None	replace
536	[BUG]  [BUGGY]  Return  new  LinkedHashMap  <  Object,  Object>()  {  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  Return  new  LinkedHashMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	Return  new  LinkedHashMap  <  Object,  Object>()  {	  return    new    ArrayList    <    Object,    Object>()    {    	non-compiled	[CE]  not  a  statement	32	None	replace
537	[BUG]  [BUGGY]  return  new  SortedHashMap  <  T>()  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  SortedHashMap  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  SortedHashMap  <  T>()  {	  return    new    LinkedTreeMap    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
538	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  ||  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  ||  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  ||  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	13	None	replace
539	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	13	None	replace
540	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.equals(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>()  {  }  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.equals(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.equals(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>()  {  }	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    DefaultImplementationConstructor    <    T>()    {    }    	non-compiled	[CE]  ';'  expected	37	None	replace
541	[BUG]  [BUGGY]  }  else  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >=  0)  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  }  else  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >=  0)  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	}  else  if(type  instanceof  ParameterizedType  &&  type.getActualTypeArguments().length  >=  0)  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(type    instanceof    ParameterizedType)    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    else    if(type    instanceof    ParameterizedType    &&    type.getActualTypeArguments().length    >    0)    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	14	None	replace
542	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  ||  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  '('  or  '['  expected  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  ||  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  ||  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  '('  or  '['  expected	21	None	replace
543	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.equals(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  '('  or  '['  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.equals(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.equals(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  '('  or  '['  expected	21	None	replace
544	[BUG]  [BUGGY]  return(T)new  LinkedList  <  Object,  Object>()  {  [CE]  wrong  number  of  type  arguments;  required  1  [FE]              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(T)new  LinkedList  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(T)new  LinkedList  <  Object,  Object>()  {	  return(T)new    LinkedHashMap    <    Object,    Object>()    {    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  1	45	None	replace
545	[BUG]  [BUGGY]  if(rawType  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  T>()  {	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    DefaultImplementationConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
546	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  ||  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  ||  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  ||  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  T>()  {	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    DefaultImplementationConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
547	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  elementType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  elementType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  elementType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  T>()  {	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    DefaultImplementationConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
548	[BUG]  [BUGGY]  ||  type  instanceof  Class  <?>  &&  type.isAssignableFrom(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||  type  instanceof  Class  <?>  &&  type.isAssignableFrom(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||  type  instanceof  Class  <?>  &&  type.isAssignableFrom(TypeToken.get(((Class  <?>)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(type    instanceof    Class    <?>    &&    type.isAssignableFrom(TypeToken.get(((Class    <?>)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
549	[BUG]  [BUGGY]  return(HashMap  <  Object,  Object>)new  LinkedHashMap  <  Object,  Object>()  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(HashMap  <  Object,  Object>)new  LinkedHashMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(HashMap  <  Object,  Object>)new  LinkedHashMap  <  Object,  Object>()  {	  return    new    HashMap    <    Object,    Object>()    {    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
550	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?>  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  '('  or  '['  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  Class  <?>  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  Class  <?>  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  if(rawType    instanceof    ParameterizedType    &&    rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  '('  or  '['  expected	40	None	replace
551	[BUG]  [BUGGY]  ||(type  instanceof  ParameterizedType  &&!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {  }  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||(type  instanceof  ParameterizedType  &&!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||(type  instanceof  ParameterizedType  &&!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {  }	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType())))    {    return    new    ObjectConstructor    <    T>()    {    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
552	[BUG]  [BUGGY]  Character.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {  }  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  Character.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	Character.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {  }	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType())))    {    return    new    ObjectConstructor    <    T>()    {    }    	non-compiled	[CE]  ';'  expected	24	None	replace
553	[BUG]  [BUGGY]  Character.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  }  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  Character.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	Character.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  }	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType())))    {    return    new    ObjectConstructor    <    T>()    {    }    	non-compiled	[CE]  ';'  expected	24	None	replace
554	[BUG]  [BUGGY]  ||(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {  }  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  ObjectConstructor  <  T>()  {  }	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType())))    {    return    new    ObjectConstructor    <    T>()    {    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
555	[BUG]  [BUGGY]  ||  type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " "));  }  [CE]  illegal  start  of  expression  [FE]                            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||  type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||  type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " "));  }	  if(type    instanceof    ParameterizedType    &&    rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   "));    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
556	[BUG]  [BUGGY]  if(rawType  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " "));  }  [CE]  illegal  start  of  expression  [FE]                              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " "));  }	  if(type    instanceof    ParameterizedType    &&    rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   "));    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
557	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]                                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " "));  }	  if(type    instanceof    ParameterizedType    &&    rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   "));    }    	non-compiled	[CE]  	29	None	replace
558	[BUG]  [BUGGY]  }  else  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  }  else  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	}  else  if(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	27	None	replace
559	[BUG]  [BUGGY]  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	}  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }	  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	78	None	replace
560	[BUG]  [BUGGY]  return  new  ClassConstructor  <  T>(rawType)  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  ClassConstructor  <  T>(rawType)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  ClassConstructor  <  T>(rawType)  {	  return    new    ClassConstructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
561	[BUG]  [BUGGY]  return  new  ClassConstructor  <  T>()  ==  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  ClassConstructor  <  T>()  ==  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  ClassConstructor  <  T>()  ==	  return    new    ClassConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
562	[BUG]  [BUGGY]  ||(type  instanceof  ParameterizedType  &&!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  }  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||(type  instanceof  ParameterizedType  &&!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||(type  instanceof  ParameterizedType  &&!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  }	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
563	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawClass()))  {  return  new  ObjectConstructor  <  T>()  {  }  [CE]  ')'  expected  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawClass()))  {  return  new  ObjectConstructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawClass()))  {  return  new  ObjectConstructor  <  T>()  {  }	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    }    	non-compiled	[CE]  ')'  expected	23	None	replace
564	[BUG]  [BUGGY]  ||(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  }  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  }	  if(type    instanceof    ParameterizedType    &&!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)    type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
565	[BUG]  [BUGGY]  return  new  LinkedHashMap  <  Class  <?>()  ==  [CE]  >  expected  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  LinkedHashMap  <  Class  <?>()  ==  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  LinkedHashMap  <  Class  <?>()  ==	  return    new    LinkedHashMap    <    Class    <?>()    {    	non-compiled	[CE]  >  expected	84	None	replace
566	[BUG]  [BUGGY]  ||(type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  illegal  start  of  expression  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||(type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||(type  instanceof  ParameterizedType  &&  rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  ||    type    instanceof    ParameterizedType    &&    rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
567	[BUG]  [BUGGY]  return(T)createMap  <  Object,  Object>();  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(T)createMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(T)createMap  <  Object,  Object>();	  return(T)create    LinkedHashMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	49	None	replace
568	[BUG]  [BUGGY]  return(T)createListHashMap  <  Object,  Object>();  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(T)createListHashMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(T)createListHashMap  <  Object,  Object>();	  return(T)create    LinkedHashMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	49	None	replace
569	[BUG]  [BUGGY]  return  new  SortedHashMap  <  String,  Object>()  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  SortedHashMap  <  String,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  SortedHashMap  <  String,  Object>()  {	  return    new    LinkedHashMap    <    String,    Object>()    {    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
570	[BUG]  [BUGGY]  return(T)this.new  LinkedHashMap  <  String,  Object>();  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(T)this.new  LinkedHashMap  <  String,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(T)this.new  LinkedHashMap  <  String,  Object>();	  return(T)new    LinkedTreeMap    <    String,    Object>();    	non-compiled	[CE]  ';'  expected	48	None	replace
571	[BUG]  [BUGGY]  Return(T)new  LinkedHashMap  <  String,  Object>();  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  Return(T)new  LinkedHashMap  <  String,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	Return(T)new  LinkedHashMap  <  String,  Object>();	  return(T)new    LinkedTreeMap    <    String,    Object>();    	non-compiled	[CE]  ';'  expected	48	None	replace
572	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType,  scope)  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType,  scope)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  DefaultImplementationConstructor  <  T>(rawType,  scope)  {	  return    new    DefaultImplementationConstructor    <    T>(rawType)    {    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
573	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType)  {  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType  [CE]  ')'  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType)  {  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType)  {  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType	  if(type    instanceof    ParameterizedType    &&    type    instanceof    ParameterizedType)    {    if(!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType    	non-compiled	[CE]  ')'  expected	63	None	replace
574	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType  [CE]  ')'  expected  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType	  if(type    instanceof    ParameterizedType    &&    type    instanceof    ParameterizedType)    {    if(!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType    	non-compiled	[CE]  ')'  expected	63	None	replace
575	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  if(!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType  [CE]  ')'  expected  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  if(!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  if(!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType	  if(type    instanceof    ParameterizedType    &&    type    instanceof    ParameterizedType)    {    if(!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType    	non-compiled	[CE]  ')'  expected	63	None	replace
576	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType)  {  if(!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType  [CE]  ')'  expected  [FE]                            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType)  {  if(!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType)  {  if(!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType	  if(type    instanceof    ParameterizedType    &&    type    instanceof    ParameterizedType)    {    if(!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType    	non-compiled	[CE]  ')'  expected	63	None	replace
577	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignedFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type.isAssignedFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  type.isAssignedFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(type    instanceof    ParameterizedType    ||    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
578	[BUG]  [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  ||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	||  type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>()  {	  if(type    instanceof    ParameterizedType    ||    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
579	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  rawType.equals(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [CE]  '('  or  '['  expected  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  rawType.equals(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  rawType.equals(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  ObjectConstructor  <  T>	  if(type    instanceof    ParameterizedType    &&    rawType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()    [0]).getRawType()))    {    return    new    ObjectConstructor    <    T>    	non-compiled	[CE]  '('  or  '['  expected	42	None	replace
580	[BUG]  [BUGGY]  Preconditions.checkState(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  T>()  {  }  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  Preconditions.checkState(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	Preconditions.checkState(type  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  DefaultImplementationConstructor  <  T>()  {  }	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    DefaultImplementationConstructor    <    T>()    {    }    	non-compiled	[CE]  ';'  expected	38	None	replace
581	[BUG]  [BUGGY]  return(T)new  LinkedList  <  String,  Object>();  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return(T)new  LinkedList  <  String,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return(T)new  LinkedList  <  String,  Object>();	  return(T)new    LinkedHashMap    <    String,    Object>();    	non-compiled	[CE]  ';'  expected	80	None	replace
582	[BUG]  [BUGGY]  if(rawType  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(rawType  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(rawType  instanceof  ParameterizedType  &&  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>()  {	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    DefaultImplementationConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
583	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  elementType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&  elementType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&  elementType.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>()  {	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    DefaultImplementationConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
584	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  ||  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  ||  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  ||  type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  DefaultImplementationConstructor  <  T>()  {	  if(type    instanceof    ParameterizedType    &&    type.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    DefaultImplementationConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
585	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>()  {  }  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  DefaultImplementationConstructor  <  T>()  {  }	  return    new    DefaultImplementationConstructor    <    T>();    	non-compiled	[CE]  ';'  expected	54	None	replace
586	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>().withType(type);  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>().withType(type);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  DefaultImplementationConstructor  <  T>().withType(type);	  return    new    DefaultImplementationConstructor    <    T>();    	non-compiled	[CE]  ';'  expected	54	None	replace
587	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return(T)new  LinkedHashMap  <  Object,  Object>()  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return(T)new  LinkedHashMap  <  Object,  Object>()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return(T)new  LinkedHashMap  <  Object,  Object>()	  if(type    instanceof    ParameterizedType)    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	11	None	replace
588	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }	  if(type    instanceof    ParameterizedType)    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	11	None	replace
589	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return(T)new  LinkedHashMap  <  Object  [CE]  >  expected  [FE]                    ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return(T)new  LinkedHashMap  <  Object  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return(T)new  LinkedHashMap  <  Object	  if(type    instanceof    ParameterizedType)    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  >  expected	11	None	replace
590	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  TreeMap  <  Object,  Object>();  }	  if(type    instanceof    ParameterizedType)    {    return(T)new    LinkedHashMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	11	None	replace
591	[BUG]  [BUGGY]  return  new  LinkedHashMap  <  T,  Object>();  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  return  new  LinkedHashMap  <  T,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	return  new  LinkedHashMap  <  T,  Object>();	  return    new    LinkedHashMap    <    T,    Object>()    {    	non-compiled	[CE]  ';'  expected	83	None	replace
592	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType)  {  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()  [CE]  ')'  expected  [FE]                        ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType)  {  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType)  {  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()	  if(type    instanceof    ParameterizedType    &&    type    instanceof    ParameterizedType)    {    if(!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()    	non-compiled	[CE]  ')'  expected	64	None	replace
593	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()  [CE]  ')'  expected  [FE]                          ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()	  if(type    instanceof    ParameterizedType    &&    type    instanceof    ParameterizedType)    {    if(!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()    	non-compiled	[CE]  ')'  expected	64	None	replace
594	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType)  {  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()  }  [CE]  ')'  expected  [FE]                            ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType)  {  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType)  {  if(!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()  }	  if(type    instanceof    ParameterizedType    &&    type    instanceof    ParameterizedType)    {    if(!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()    	non-compiled	[CE]  ')'  expected	64	None	replace
595	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  if(!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()  [CE]  ')'  expected  [FE]                              ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  if(!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  if(!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()	  if(type    instanceof    ParameterizedType    &&    type    instanceof    ParameterizedType)    {    if(!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()    	non-compiled	[CE]  ')'  expected	64	None	replace
596	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType)  {  if(!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()  [CE]  ')'  expected  [FE]                                ClassCastException      [CONTEXT]      if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {      [BUGGY]  if(type  instanceof  ParameterizedType)  {  if(!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  };  }  else  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedTreeMap<String,  Object>();  }  };  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.25	183	183	2	replace	if(type  instanceof  ParameterizedType)  {  if(!String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [0]).getRawType()	  if(type    instanceof    ParameterizedType    &&    type    instanceof    ParameterizedType)    {    if(!(String.class.isAssignableFrom(    TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()    	non-compiled	[CE]  ')'  expected	64	None	replace
