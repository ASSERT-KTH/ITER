bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return(SortedMap  <  Object,  Object>)new  SortedMap  <  Object,  Object>()  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap  <  Object,  Object>)new  SortedMap  <  Object,  Object>()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap  <  Object,  Object>)new  SortedMap  <  Object,  Object>()	  return    new    SortedMap    <    Object,    Object>()    ==    	non-compiled	[CE]  ';'  expected	62	None	replace
2	[BUG]  [BUGGY]  return(T)new  SortedMap  <  Object,  Object>();  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  SortedMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  SortedMap  <  Object,  Object>();	  return    new    SortedMap    <    Object,    Object>()    ==    	non-compiled	[CE]  ';'  expected	62	None	replace
3	[BUG]  [BUGGY]  return(SortedMap)new  SortedMap  <  Object,  Object>();  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap)new  SortedMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap)new  SortedMap  <  Object,  Object>();	  return    new    SortedMap    <    Object,    Object>()    ==    	non-compiled	[CE]  ';'  expected	62	None	replace
4	[BUG]  [BUGGY]  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  SortedMap  <  Object,  Object>()  [CE]  <identifier>  expected  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  SortedMap  <  Object,  Object>()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  SortedMap  <  Object,  Object>()	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    SortedMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
5	[BUG]  [BUGGY]  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  SortedMap  <  Object,  Object>  [CE]  <identifier>  expected  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  SortedMap  <  Object,  Object>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  SortedMap  <  Object,  Object>	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    SortedMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
6	[BUG]  [BUGGY]  ||  TypeToken.get(type).getActualTypeArguments()  [0]).getRawType()  instanceof  SortedMap)  {  return  new  SortedMap  <  Object,  Object>();  }  [CE]  illegal  start  of  expression  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  ||  TypeToken.get(type).getActualTypeArguments()  [0]).getRawType()  instanceof  SortedMap)  {  return  new  SortedMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	||  TypeToken.get(type).getActualTypeArguments()  [0]).getRawType()  instanceof  SortedMap)  {  return  new  SortedMap  <  Object,  Object>();  }	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    SortedMap    <    Object,    Object>();    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
7	[BUG]  [BUGGY]  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType())  {  return  new  SortedMap  <  Object,  Object>();  }  [CE]  <identifier>  expected  [FE]                                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType())  {  return  new  SortedMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType())  {  return  new  SortedMap  <  Object,  Object>();  }	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    SortedMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
8	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  elementType.getRawType())  {  [CE]  cannot  find  symbol  elementType  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  elementType.getRawType())  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>(rawType,  elementType.getRawType())  {	  return    new    ObjectConstructor    <    T>(rawType,    type)    {    	non-compiled	[CE]  cannot  find  symbol  elementType	39	None	replace
9	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  ElementType.class)  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  ElementType.class)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>(rawType,  ElementType.class)  {	  return    new    ObjectConstructor    <    T>(rawType,    type)    {    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
10	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>(type,  rawType)  {  [CE]  anonymous  class  implements  interface;  cannot  have  arguments  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>(type,  rawType)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>(type,  rawType)  {	  return    new    ObjectConstructor    <    T>(rawType,    type)    {    	non-compiled	[CE]  anonymous  class  implements  interface;  cannot  have  arguments	39	None	replace
11	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>(elementType,  type)  {  [CE]  cannot  find  symbol  elementType  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>(elementType,  type)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>(elementType,  type)  {	  return    new    ObjectConstructor    <    T>(rawType,    type)    {    	non-compiled	[CE]  cannot  find  symbol  elementType	39	None	replace
12	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  elementType.getRawClass())  {  [CE]  cannot  find  symbol  elementType  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  elementType.getRawClass())  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>(rawType,  elementType.getRawClass())  {	  return    new    ObjectConstructor    <    T>(rawType,    type)    {    	non-compiled	[CE]  cannot  find  symbol  elementType	39	None	replace
13	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  null,  type)  {  [CE]  anonymous  class  implements  interface;  cannot  have  arguments  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  null,  type)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>(rawType,  null,  type)  {	  return    new    ObjectConstructor    <    T>(rawType,    null)    {    	non-compiled	[CE]  anonymous  class  implements  interface;  cannot  have  arguments	41	None	replace
14	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  UnsafeAllocator.class)  {  [CE]  anonymous  class  implements  interface;  cannot  have  arguments  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  UnsafeAllocator.class)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>(rawType,  UnsafeAllocator.class)  {	  return    new    ObjectConstructor    <    T>(rawType,    null)    {    	non-compiled	[CE]  anonymous  class  implements  interface;  cannot  have  arguments	41	None	replace
15	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  this)  {  [CE]  anonymous  class  implements  interface;  cannot  have  arguments  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  this)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>(rawType,  this)  {	  return    new    ObjectConstructor    <    T>(rawType,    null)    {    	non-compiled	[CE]  anonymous  class  implements  interface;  cannot  have  arguments	41	None	replace
16	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  null,  elementType)  {  [CE]  cannot  find  symbol  elementType  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  null,  elementType)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>(rawType,  null,  elementType)  {	  return    new    ObjectConstructor    <    T>(rawType,    null)    {    	non-compiled	[CE]  cannot  find  symbol  elementType	41	None	replace
17	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  <identifier>  expected  [FE]            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
18	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType.isAssignableFrom(SortedMap.class))  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	12	None	replace
19	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap.class  ||  rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  <identifier>  expected  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap.class  ||  rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap.class  ||  rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
20	[BUG]  [BUGGY]  ||  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  ||  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	||  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
21	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  <identifier>  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
22	[BUG]  [BUGGY]  ||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  ||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	||  SortedMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
23	[BUG]  [BUGGY]  TreeMap  <  Object,  Object>  return(T)new  TreeMap  <  Object,  Object>();  [CE]  not  a  statement  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  TreeMap  <  Object,  Object>  return(T)new  TreeMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	TreeMap  <  Object,  Object>  return(T)new  TreeMap  <  Object,  Object>();	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  not  a  statement	12	None	replace
24	[BUG]  [BUGGY]  return  new  HashMap  <  Object,  Object>()  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  HashMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  HashMap  <  Object,  Object>()  {	  return    new    List    <    Object,    Object>()    {    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
25	[BUG]  [BUGGY]  new  TreeMap  <  Object,  Object>()  {  [CE]  method  does  not  override  or  implement  a  method  from  a  supertype  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  new  TreeMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	new  TreeMap  <  Object,  Object>()  {	  return    new    List    <    Object,    Object>()    {    	non-compiled	[CE]  method  does  not  override  or  implement  a  method  from  a  supertype	82	None	replace
26	[BUG]  [BUGGY]  if(type  instanceof  TreeMap  <  Object,  Object>)  {  return  new  TreeMap  <  Object,  Object>()  {  }  [CE]  ';'  expected  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  TreeMap  <  Object,  Object>)  {  return  new  TreeMap  <  Object,  Object>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  TreeMap  <  Object,  Object>)  {  return  new  TreeMap  <  Object,  Object>()  {  }	  if(type    instanceof    Constructor    <    T>)    {    return    new    Constructor    <    T>()    {    }    	non-compiled	[CE]  ';'  expected	32	None	replace
27	[BUG]  [BUGGY]  if(type  instanceof  TreeMap  <  Object,  Object>)  {  return  new  Constructor  <  T>()  {  }  [CE]  ';'  expected  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  TreeMap  <  Object,  Object>)  {  return  new  Constructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  TreeMap  <  Object,  Object>)  {  return  new  Constructor  <  T>()  {  }	  if(type    instanceof    Constructor    <    T>)    {    return    new    Constructor    <    T>()    {    }    	non-compiled	[CE]  ';'  expected	32	None	replace
28	[BUG]  [BUGGY]  if(type  instanceof  TreeMap)  {  return  new  TreeMap  <  Object,  Object>()  {  }  [CE]  ';'  expected  [FE]                                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  TreeMap)  {  return  new  TreeMap  <  Object,  Object>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  TreeMap)  {  return  new  TreeMap  <  Object,  Object>()  {  }	  if(type    instanceof    Constructor    <    T>)    {    return    new    Constructor    <    T>()    {    }    	non-compiled	[CE]  ';'  expected	32	None	replace
29	[BUG]  [BUGGY]  ||  type  instanceof  Constructor  <  T>)  {  return  new  Constructor  <  T>()  {  }  [CE]  illegal  start  of  expression  [FE]                                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  ||  type  instanceof  Constructor  <  T>)  {  return  new  Constructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	||  type  instanceof  Constructor  <  T>)  {  return  new  Constructor  <  T>()  {  }	  if(type    instanceof    Constructor    <    T>)    {    return    new    Constructor    <    T>()    {    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
30	[BUG]  [BUGGY]  if(type  instanceof  TreeMap  <?>)  {  return  new  TreeMap  <  Object,  Object>()  {  }  [CE]  ';'  expected  [FE]                                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  TreeMap  <?>)  {  return  new  TreeMap  <  Object,  Object>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  TreeMap  <?>)  {  return  new  TreeMap  <  Object,  Object>()  {  }	  if(type    instanceof    Constructor    <    T>)    {    return    new    Constructor    <    T>()    {    }    	non-compiled	[CE]  ';'  expected	32	None	replace
31	[BUG]  [BUGGY]  Constructor  <  T>  return  new  Constructor  <  T>()  {  }  [CE]  not  a  statement  [FE]                                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Constructor  <  T>  return  new  Constructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Constructor  <  T>  return  new  Constructor  <  T>()  {  }	  if(type    instanceof    Constructor    <    T>)    {    return    new    Constructor    <    T>()    {    }    	non-compiled	[CE]  not  a  statement	32	None	replace
32	[BUG]  [BUGGY]  ||(type  instanceof  Constructor  <  T>))  {  return  new  Constructor  <  T>()  {  }  [CE]  illegal  start  of  expression  [FE]                                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  ||(type  instanceof  Constructor  <  T>))  {  return  new  Constructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	||(type  instanceof  Constructor  <  T>))  {  return  new  Constructor  <  T>()  {  }	  if(type    instanceof    Constructor    <    T>)    {    return    new    Constructor    <    T>()    {    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
33	[BUG]  [BUGGY]  return  new  Constructor  <  T>(rawType,  type);  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  T>(rawType,  type);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  T>(rawType,  type);	  return    new    Constructor    <    T>(rawType);    	non-compiled	[CE]  ';'  expected	85	None	replace
34	[BUG]  [BUGGY]  return  new  Constructor  <  T>(rawType,  elementType);  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  T>(rawType,  elementType);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  T>(rawType,  elementType);	  return    new    Constructor    <    T>(rawType);    	non-compiled	[CE]  ';'  expected	85	None	replace
35	[BUG]  [BUGGY]  return  new  Constructor  <  T>(rawType,  null);  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  T>(rawType,  null);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  T>(rawType,  null);	  return    new    Constructor    <    T>(rawType);    	non-compiled	[CE]  ';'  expected	85	None	replace
36	[BUG]  [BUGGY]  return  new  Constructor  <  T>(rawType.getRawClass());  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  T>(rawType.getRawClass());  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  T>(rawType.getRawClass());	  return    new    Constructor    <    T>(rawType);    	non-compiled	[CE]  ';'  expected	85	None	replace
37	[BUG]  [BUGGY]  return  new  Constructor  <  T>(elementType);  [CE]  ';'  expected  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  T>(elementType);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  T>(elementType);	  return    new    Constructor    <    T>(rawType);    	non-compiled	[CE]  ';'  expected	85	None	replace
38	[BUG]  [BUGGY]  return  new  Constructor  <  T>(rawType,  Object.class);  [CE]  ';'  expected  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  T>(rawType,  Object.class);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  T>(rawType,  Object.class);	  return    new    Constructor    <    T>(rawType);    	non-compiled	[CE]  ';'  expected	85	None	replace
39	[BUG]  [BUGGY]  return  new  SortedSortedMap  <  Object,  Object>()  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  SortedSortedMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  SortedSortedMap  <  Object,  Object>()  {	  return    new    SortedHashMap    <    Object,    Object>()    {    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
40	[BUG]  [BUGGY]  return  new  SortedArrayMap  <  Object,  Object>()  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  SortedArrayMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  SortedArrayMap  <  Object,  Object>()  {	  return    new    SortedHashMap    <    Object,    Object>()    {    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
41	[BUG]  [BUGGY]  return  new  SortedRealMap  <  Object,  Object>()  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  SortedRealMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  SortedRealMap  <  Object,  Object>()  {	  return    new    SortedHashMap    <    Object,    Object>()    {    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
42	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  false,  null)  {  [CE]  anonymous  class  implements  interface;  cannot  have  arguments  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  false,  null)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>(rawType,  false,  null)  {	  return    new    ObjectConstructor    <    T>(rawType,    false)    {    	non-compiled	[CE]  anonymous  class  implements  interface;  cannot  have  arguments	42	None	replace
43	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  false,  true)  {  [CE]  anonymous  class  implements  interface;  cannot  have  arguments  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  false,  true)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>(rawType,  false,  true)  {	  return    new    ObjectConstructor    <    T>(rawType,    false)    {    	non-compiled	[CE]  anonymous  class  implements  interface;  cannot  have  arguments	42	None	replace
44	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  false,  type)  {  [CE]  anonymous  class  implements  interface;  cannot  have  arguments  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  false,  type)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>(rawType,  false,  type)  {	  return    new    ObjectConstructor    <    T>(rawType,    false)    {    	non-compiled	[CE]  anonymous  class  implements  interface;  cannot  have  arguments	42	None	replace
45	[BUG]  [BUGGY]  if(type  instanceof  SortedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  T>()  {  [CE]  <identifier>  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  SortedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  SortedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  T>()  {	  return    new    TreeMap    <    T>()    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
46	[BUG]  [BUGGY]  return  new  TreeMap  <  T>();  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  TreeMap  <  T>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  TreeMap  <  T>();	  return    new    TreeMap    <    T>()    {    	non-compiled	[CE]  ';'  expected	1	None	replace
47	[BUG]  [BUGGY]  if(type  instanceof  SortedMap.class.isAssignableFrom(Type.class))  {  return  new  TreeMap  <  T>()  {  [CE]  <identifier>  expected  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  SortedMap.class.isAssignableFrom(Type.class))  {  return  new  TreeMap  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  SortedMap.class.isAssignableFrom(Type.class))  {  return  new  TreeMap  <  T>()  {	  return    new    TreeMap    <    T>()    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
48	[BUG]  [BUGGY]  if(type  instanceof  Class  <?  super  T>)  {  return  new  TreeMap  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  Class  <?  super  T>)  {  return  new  TreeMap  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  Class  <?  super  T>)  {  return  new  TreeMap  <  T>()  {	  return    new    TreeMap    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
49	[BUG]  [BUGGY]  SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  not  a  statement  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  not  a  statement	94	None	replace
50	[BUG]  [BUGGY]  SortedMap.class.isAssignableFrom(rawType)&&!SortedMap.class.isAssignableFrom(rawType))  {  [CE]  not  a  statement  [FE]                                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  SortedMap.class.isAssignableFrom(rawType)&&!SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	SortedMap.class.isAssignableFrom(rawType)&&!SortedMap.class.isAssignableFrom(rawType))  {	  SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  not  a  statement	94	None	replace
51	[BUG]  [BUGGY]  SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  not  a  statement  [FE]                                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  not  a  statement	94	None	replace
52	[BUG]  [BUGGY]  SortedMap.class.isAssignableFrom(rawType);  [CE]  ';'  expected  [FE]                                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  SortedMap.class.isAssignableFrom(rawType);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	SortedMap.class.isAssignableFrom(rawType);	  SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	94	None	replace
53	[BUG]  [BUGGY]  SortedMap.class.isAssignableFrom(rawType)||!SortedMap.class.isAssignableFrom(rawType))  {  [CE]  not  a  statement  [FE]                                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  SortedMap.class.isAssignableFrom(rawType)||!SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	SortedMap.class.isAssignableFrom(rawType)||!SortedMap.class.isAssignableFrom(rawType))  {	  SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  not  a  statement	94	None	replace
54	[BUG]  [BUGGY]  SortedMap.class.isAssignableFrom(type))  {  [CE]  ';'  expected  [FE]                                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  SortedMap.class.isAssignableFrom(type))  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	SortedMap.class.isAssignableFrom(type))  {	  SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	94	None	replace
55	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(rawType)  [CE]  <identifier>  expected  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(rawType)  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(rawType)	  if(type    instanceof    SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    if(SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
56	[BUG]  [BUGGY]  if(type  instanceof  TreeMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(rawType)  [CE]  <identifier>  expected  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  TreeMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(rawType)  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  TreeMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(rawType)	  if(type    instanceof    SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    if(SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
57	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(rawType))  {  [CE]  <identifier>  expected  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(rawType))  {	  if(type    instanceof    SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    if(SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
58	[BUG]  [BUGGY]  if(rawType  instanceof  TreeMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(rawType)  [CE]  <identifier>  expected  [FE]                                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  TreeMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(rawType)  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  TreeMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(rawType)	  if(type    instanceof    SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    if(SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
59	[BUG]  [BUGGY]  if(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(rawType)  [CE]  <identifier>  expected  [FE]                                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(rawType)  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(rawType)	  if(type    instanceof    SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    if(SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
60	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAs  [CE]  <identifier>  expected  [FE]                                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAs  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAs	  if(type    instanceof    SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    if(SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
61	[BUG]  [BUGGY]  return  new  Constructor  <  T>(type.getRawClass(),  rawType)  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  T>(type.getRawClass(),  rawType)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  T>(type.getRawClass(),  rawType)  {	  return    new    Constructor    <    T>(type.getRawClass())    {    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
62	[BUG]  [BUGGY]  return  new  Constructor  <  T>(elementType.getRawClass())  {  [CE]  cannot  find  symbol  elementType  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  T>(elementType.getRawClass())  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  T>(elementType.getRawClass())  {	  return    new    Constructor    <    T>(type.getRawClass())    {    	non-compiled	[CE]  cannot  find  symbol  elementType	67	None	replace
63	[BUG]  [BUGGY]  return  new  Constructor  <  T>(type,  rawType.getRawClass())  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  T>(type,  rawType.getRawClass())  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  T>(type,  rawType.getRawClass())  {	  return    new    Constructor    <    T>(type.getRawClass())    {    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
64	[BUG]  [BUGGY]  return  new  Constructor  <  T>(Type.class.getRawClass())  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  T>(Type.class.getRawClass())  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  T>(Type.class.getRawClass())  {	  return    new    Constructor    <    T>(type.getRawClass())    {    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
65	[BUG]  [BUGGY]  return  new  SortedMap  <  T>();  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  SortedMap  <  T>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  SortedMap  <  T>();	  return    new    SortedMap    <    T>()    {    	non-compiled	[CE]  ';'  expected	88	None	replace
66	[BUG]  [BUGGY]  if(type  instanceof  SortedMap  <  T>)  {  return  new  SortedMap  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  SortedMap  <  T>)  {  return  new  SortedMap  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  SortedMap  <  T>)  {  return  new  SortedMap  <  T>()  {	  return    new    SortedMap    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
67	[BUG]  [BUGGY]  return(SortedMap  <  T>)new  SortedMap  <  Object,  Object>();  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap  <  T>)new  SortedMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap  <  T>)new  SortedMap  <  Object,  Object>();	  return    new    SortedMap    <    T>()    {    	non-compiled	[CE]  ';'  expected	88	None	replace
68	[BUG]  [BUGGY]  return(SortedMap  <  Object,  Object>)new  SortedMap  <  T>()  {  [CE]  wrong  number  of  type  arguments;  required  2  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap  <  Object,  Object>)new  SortedMap  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap  <  Object,  Object>)new  SortedMap  <  T>()  {	  return    new    SortedMap    <    T>()    {    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  2	88	None	replace
69	[BUG]  [BUGGY]  return(SortedMap  <  T>)new  SortedMap  <  Object,  Object>()  {  [CE]  wrong  number  of  type  arguments;  required  2  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap  <  T>)new  SortedMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap  <  T>)new  SortedMap  <  Object,  Object>()  {	  return    new    SortedMap    <    T>()    {    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  2	88	None	replace
70	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>(elementType)  {  [CE]  cannot  find  symbol  elementType  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>(elementType)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>(elementType)  {	  return    new    ObjectConstructor    <    T>(type)    {    	non-compiled	[CE]  cannot  find  symbol  elementType	44	None	replace
71	[BUG]  [BUGGY]  return(T)new  ObjectConstructor  <  T>(type)  {  [CE]  anonymous  class  implements  interface;  cannot  have  arguments  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  ObjectConstructor  <  T>(type)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  ObjectConstructor  <  T>(type)  {	  return    new    ObjectConstructor    <    T>(type)    {    	non-compiled	[CE]  anonymous  class  implements  interface;  cannot  have  arguments	44	None	replace
72	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>(elementType,  rawType)  {  [CE]  cannot  find  symbol  elementType  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>(elementType,  rawType)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>(elementType,  rawType)  {	  return    new    ObjectConstructor    <    T>(type)    {    	non-compiled	[CE]  cannot  find  symbol  elementType	44	None	replace
73	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }	  return(T)new    LinkedHashMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	56	None	replace
74	[BUG]  [BUGGY]  if(sortedMap.class.isAssignableFrom(rawType))  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(sortedMap.class.isAssignableFrom(rawType))  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(sortedMap.class.isAssignableFrom(rawType))  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }	  return(T)new    LinkedHashMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	56	None	replace
75	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType))  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType))  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(Map.class.isAssignableFrom(rawType))  {  return(T)new  LinkedHashMap  <  Object,  Object>();  }	  return(T)new    LinkedHashMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	56	None	replace
76	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(Map.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }	  return(T)new    LinkedHashMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	56	None	replace
77	[BUG]  [BUGGY]  if(type  instanceof  TreeMap  <  Object,  Object>)  {  return  new  TreeMap  <  Object,  Object>()  {  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  TreeMap  <  Object,  Object>)  {  return  new  TreeMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  TreeMap  <  Object,  Object>)  {  return  new  TreeMap  <  Object,  Object>()  {	  if(type    instanceof    Constructor    <    T>)    {    return    new    Constructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
78	[BUG]  [BUGGY]  if(type  instanceof  TreeMap)  {  return  new  TreeMap  <  Object,  Object>()  {  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  TreeMap)  {  return  new  TreeMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  TreeMap)  {  return  new  TreeMap  <  Object,  Object>()  {	  if(type    instanceof    Constructor    <    T>)    {    return    new    Constructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
79	[BUG]  [BUGGY]  if(type  instanceof  TreeMap  <  Object,  Object>)  {  return  new  Constructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  TreeMap  <  Object,  Object>)  {  return  new  Constructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  TreeMap  <  Object,  Object>)  {  return  new  Constructor  <  T>()  {	  if(type    instanceof    Constructor    <    T>)    {    return    new    Constructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
80	[BUG]  [BUGGY]  if(rawType  instanceof  Constructor  <  T>)  {  return  new  Constructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  Constructor  <  T>)  {  return  new  Constructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  Constructor  <  T>)  {  return  new  Constructor  <  T>()  {	  if(type    instanceof    Constructor    <    T>)    {    return    new    Constructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
81	[BUG]  [BUGGY]  if(type  instanceof  TreeMap  <?>)  {  return  new  TreeMap  <  Object,  Object>()  {  [CE]  illegal  start  of  expression  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  TreeMap  <?>)  {  return  new  TreeMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  TreeMap  <?>)  {  return  new  TreeMap  <  Object,  Object>()  {	  if(type    instanceof    Constructor    <    T>)    {    return    new    Constructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
82	[BUG]  [BUGGY]  ||(type  instanceof  Constructor  <  T>))  {  return  new  Constructor  <  T>()  {  [CE]  illegal  start  of  expression  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  ||(type  instanceof  Constructor  <  T>))  {  return  new  Constructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	||(type  instanceof  Constructor  <  T>))  {  return  new  Constructor  <  T>()  {	  if(type    instanceof    Constructor    <    T>)    {    return    new    Constructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
83	[BUG]  [BUGGY]  Constructor  <  T>  return  new  Constructor  <  T>()  {  [CE]  not  a  statement  [FE]                                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Constructor  <  T>  return  new  Constructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Constructor  <  T>  return  new  Constructor  <  T>()  {	  if(type    instanceof    Constructor    <    T>)    {    return    new    Constructor    <    T>()    {    	non-compiled	[CE]  not  a  statement	28	None	replace
84	[BUG]  [BUGGY]  ||  sortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  ||  sortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	||  sortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(sortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
85	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  if(sortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  if(sortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType))  {  if(sortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(sortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	14	None	replace
86	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  if(sortedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  if(sortedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType))  {  if(sortedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }	  if(sortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	14	None	replace
87	[BUG]  [BUGGY]  return(T)  {  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)  {	  return(SortedMap    <    Object,    Object>)    {    	non-compiled	[CE]  ';'  expected	60	None	replace
88	[BUG]  [BUGGY]  return(Map.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(Map.class.isAssignableFrom(rawType))  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(Map.class.isAssignableFrom(rawType))  {	  return(SortedMap    <    Object,    Object>)    {    	non-compiled	[CE]  ';'  expected	60	None	replace
89	[BUG]  [BUGGY]  return(SortedMap.  <  Object,  Object>)  {  [CE]  <identifier>  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap.  <  Object,  Object>)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap.  <  Object,  Object>)  {	  return(SortedMap    <    Object,    Object>)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
90	[BUG]  [BUGGY]  return(TreeMap  <  Object,  Object>)  {  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(TreeMap  <  Object,  Object>)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(TreeMap  <  Object,  Object>)  {	  return(SortedMap    <    Object,    Object>)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
91	[BUG]  [BUGGY]  return(SortedMap  <  Object,  Object>)&&  this.instanceCreators.containsKey(rawType))  {  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap  <  Object,  Object>)&&  this.instanceCreators.containsKey(rawType))  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap  <  Object,  Object>)&&  this.instanceCreators.containsKey(rawType))  {	  return(SortedMap    <    Object,    Object>)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
92	[BUG]  [BUGGY]  return(SortedMap  <  Object,  Object>)&&  rawType.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap  <  Object,  Object>)&&  rawType.isAssignableFrom(rawType))  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap  <  Object,  Object>)&&  rawType.isAssignableFrom(rawType))  {	  return(SortedMap    <    Object,    Object>)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
93	[BUG]  [BUGGY]  return(T)create  TreeMap  <  Object,  Object>()  {  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)create  TreeMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)create  TreeMap  <  Object,  Object>()  {	  return(T)new    ArrayList    <    T>()    {    	non-compiled	[CE]  ';'  expected	4	None	replace
94	[BUG]  [BUGGY]  (T)new  TreeMap  <  Object,  Object>()  {  [CE]  not  a  statement  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  (T)new  TreeMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	(T)new  TreeMap  <  Object,  Object>()  {	  return(T)new    ArrayList    <    T>()    {    	non-compiled	[CE]  not  a  statement	4	None	replace
95	[BUG]  [BUGGY]  return(T)new  TreeMap  <  T>()  {  [CE]  wrong  number  of  type  arguments;  required  2  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  TreeMap  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  TreeMap  <  T>()  {	  return(T)new    ArrayList    <    T>()    {    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  2	4	None	replace
96	[BUG]  [BUGGY]  return  new  Constructor  <  T>(rawType,  elementType)  {  [CE]  cannot  find  symbol  elementType  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  T>(rawType,  elementType)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  T>(rawType,  elementType)  {	  return    new    Constructor    <    T>(rawType)    {    	non-compiled	[CE]  cannot  find  symbol  elementType	31	None	replace
97	[BUG]  [BUGGY]  return  new  Constructor  <  T>(rawType,  type)  {  [CE]  constructor  Constructor  in  class  Constructor<T#2>  cannot  be  applied  to  given  types;  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  T>(rawType,  type)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  T>(rawType,  type)  {	  return    new    Constructor    <    T>(rawType)    {    	non-compiled	[CE]  constructor  Constructor  in  class  Constructor<T#2>  cannot  be  applied  to  given  types;	31	None	replace
98	[BUG]  [BUGGY]  return  new  Constructor  <  T>(rawType,  unsafeAllocator)  {  [CE]  cannot  find  symbol  unsafeAllocator  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  T>(rawType,  unsafeAllocator)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  T>(rawType,  unsafeAllocator)  {	  return    new    Constructor    <    T>(rawType)    {    	non-compiled	[CE]  cannot  find  symbol  unsafeAllocator	31	None	replace
99	[BUG]  [BUGGY]  return  new  Constructor  <  T>(rawType,  Object.class)  {  [CE]  constructor  Constructor  in  class  Constructor<T#2>  cannot  be  applied  to  given  types;  [FE]                                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  T>(rawType,  Object.class)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  T>(rawType,  Object.class)  {	  return    new    Constructor    <    T>(rawType)    {    	non-compiled	[CE]  constructor  Constructor  in  class  Constructor<T#2>  cannot  be  applied  to  given  types;	31	None	replace
100	[BUG]  [BUGGY]  return  new  Constructor  <  T>(elementType,  rawType)  {  [CE]  cannot  find  symbol  elementType  [FE]                                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  T>(elementType,  rawType)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  T>(elementType,  rawType)  {	  return    new    Constructor    <    T>(rawType)    {    	non-compiled	[CE]  cannot  find  symbol  elementType	31	None	replace
101	[BUG]  [BUGGY]  return  new  Constructor  <  T>(rawType,  null)  {  [CE]  constructor  Constructor  in  class  Constructor<T#2>  cannot  be  applied  to  given  types;  [FE]                                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  T>(rawType,  null)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  T>(rawType,  null)  {	  return    new    Constructor    <    T>(rawType)    {    	non-compiled	[CE]  constructor  Constructor  in  class  Constructor<T#2>  cannot  be  applied  to  given  types;	31	None	replace
102	[BUG]  [BUGGY]  return  new  Constructor  <  T>(rawType,  this.type)  {  [CE]  cannot  find  symbol  type  [FE]                                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  T>(rawType,  this.type)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  T>(rawType,  this.type)  {	  return    new    Constructor    <    T>(rawType)    {    	non-compiled	[CE]  cannot  find  symbol  type	31	None	replace
103	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  type.getRawClass())  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  type.getRawClass())  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>(rawType,  type.getRawClass())  {	  return    new    ObjectConstructor    <    T>(rawType.getRawClass())    {    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
104	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>(rawType.getRawClass(),  type)  {  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>(rawType.getRawClass(),  type)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>(rawType.getRawClass(),  type)  {	  return    new    ObjectConstructor    <    T>(rawType.getRawClass())    {    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
105	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>(rawType.getRawClass(),  rawType)  {  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>(rawType.getRawClass(),  rawType)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>(rawType.getRawClass(),  rawType)  {	  return    new    ObjectConstructor    <    T>(rawType.getRawClass())    {    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
106	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>(rawType.getRawClass(),  elementType)  {  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>(rawType.getRawClass(),  elementType)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>(rawType.getRawClass(),  elementType)  {	  return    new    ObjectConstructor    <    T>(rawType.getRawClass())    {    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
107	[BUG]  [BUGGY]  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
108	[BUG]  [BUGGY]  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
109	[BUG]  [BUGGY]  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( "  [CE]  illegal  start  of  expression  [FE]                                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( "  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( "	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
110	[BUG]  [BUGGY]  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [1]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [1]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [1]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
111	[BUG]  [BUGGY]  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
112	[BUG]  [BUGGY]  return  new  TreeMap  <  Object,  Object>()!=  @Override  public  T  construct()  {  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  TreeMap  <  Object,  Object>()!=  @Override  public  T  construct()  {  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  TreeMap  <  Object,  Object>()!=  @Override  public  T  construct()  {  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }	  return    new    TreeMap    <    Object,    Object>()    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
113	[BUG]  [BUGGY]  return  new  TreeMap  <  Object,  Object>()  ==  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  TreeMap  <  Object,  Object>()  ==  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  TreeMap  <  Object,  Object>()  ==  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }	  return    new    TreeMap    <    Object,    Object>()    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
114	[BUG]  [BUGGY]  return  new  TreeMap  <  Object,  Object>()  ==  @Override  public  T  construct()  {  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }  [CE]  illegal  start  of  expression  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  TreeMap  <  Object,  Object>()  ==  @Override  public  T  construct()  {  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  TreeMap  <  Object,  Object>()  ==  @Override  public  T  construct()  {  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }	  return    new    TreeMap    <    Object,    Object>()    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
115	[BUG]  [BUGGY]  return  new  TreeMap  <  Object,  Object>()!=  @Override  public  T  construct()  {  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }  }  ;  [CE]  illegal  start  of  expression  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  TreeMap  <  Object,  Object>()!=  @Override  public  T  construct()  {  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }  }  ;  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  TreeMap  <  Object,  Object>()!=  @Override  public  T  construct()  {  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }  }  ;	  return    new    TreeMap    <    Object,    Object>()    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
116	[BUG]  [BUGGY]  return  new  TreeMap  <  Object,  Object>()  >=  @Override  public  T  construct()  {  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }  [CE]  illegal  start  of  expression  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  TreeMap  <  Object,  Object>()  >=  @Override  public  T  construct()  {  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  TreeMap  <  Object,  Object>()  >=  @Override  public  T  construct()  {  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }	  return    new    TreeMap    <    Object,    Object>()    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
117	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return  new  PropertyMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return  new  PropertyMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType))  {  return  new  PropertyMap  <  Object,  Object>();  }	  return    new    PropertyMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	35	None	replace
118	[BUG]  [BUGGY]  return  new  SortedHashMap  <  Object,  Object>();  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  SortedHashMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  SortedHashMap  <  Object,  Object>();	  return    new    PropertyMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	35	None	replace
119	[BUG]  [BUGGY]  return  new  LinkedHashMap  <  Object,  Object>();  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  LinkedHashMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  LinkedHashMap  <  Object,  Object>();	  return    new    PropertyMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	35	None	replace
120	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return  new  LocalHashMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return  new  LocalHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType))  {  return  new  LocalHashMap  <  Object,  Object>();  }	  return    new    PropertyMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	35	None	replace
121	[BUG]  [BUGGY]  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  SortedMap  <  Object,  Object>();  }  [CE]  <identifier>  expected  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  SortedMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  SortedMap  <  Object,  Object>();  }	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    SortedMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
122	[BUG]  [BUGGY]  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  SortedMap  <  Object,  Object>  [CE]  <identifier>  expected  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  SortedMap  <  Object,  Object>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  SortedMap  <  Object,  Object>	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    SortedMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
123	[BUG]  [BUGGY]  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  SortedMap  <  Object,  Object>()  [CE]  <identifier>  expected  [FE]                                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  SortedMap  <  Object,  Object>()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  SortedMap  <  Object,  Object>()	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    SortedMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
124	[BUG]  [BUGGY]  return  new  Constructor  <  Object>()  {  [CE]  constructor  Constructor  in  class  Constructor<T>  cannot  be  applied  to  given  types;  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  Object>()  {	  return    new    PropertyConstructor    <    Object>()    {    	non-compiled	[CE]  constructor  Constructor  in  class  Constructor<T>  cannot  be  applied  to  given  types;	54	None	replace
125	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  Object>()  {  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  DefaultImplementationConstructor  <  Object>()  {	  return    new    PropertyConstructor    <    Object>()    {    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
126	[BUG]  [BUGGY]  return(T)new  PropertyConstructor  <  Object>()  {  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  PropertyConstructor  <  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  PropertyConstructor  <  Object>()  {	  return    new    PropertyConstructor    <    Object>()    {    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
127	[BUG]  [BUGGY]  return  new  PropertyConstructor  <  Object>(rawType)  {  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  PropertyConstructor  <  Object>(rawType)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  PropertyConstructor  <  Object>(rawType)  {	  return    new    PropertyConstructor    <    Object>()    {    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
128	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>();  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  DefaultImplementationConstructor  <  T>();	  return    new    ObjectConstructor    <    T>();    	non-compiled	[CE]  ';'  expected	18	None	replace
129	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>()  {  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }  }  ;  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>()  {  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }  }  ;  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>()  {  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }  }  ;	  return    new    ObjectConstructor    <    T>();    	non-compiled	[CE]  ';'  expected	18	None	replace
130	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  new  ObjectConstructor  <  T>();  }  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  Class  <?>)  {  return  new  ObjectConstructor  <  T>();  }	  return    new    ObjectConstructor    <    T>();    	non-compiled	[CE]  ';'  expected	18	None	replace
131	[BUG]  [BUGGY]  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
132	[BUG]  [BUGGY]  ||  type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  ||  type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	||  type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
133	[BUG]  [BUGGY]  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
134	[BUG]  [BUGGY]  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
135	[BUG]  [BUGGY]  ||  type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  ||  type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	||  type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
136	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>()  {  @Override  public  T  construct()  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  method  construct()  is  already  defined  in  class  <anonymous  com.google.gson.internal.ConstructorConstructor$9>  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>()  {  @Override  public  T  construct()  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>()  {  @Override  public  T  construct()  {  return(T)new  TreeMap  <  Object,  Object>();  }	  return    new    ObjectConstructor    <    T>()    ||    	non-compiled	[CE]  method  construct()  is  already  defined  in  class  <anonymous  com.google.gson.internal.ConstructorConstructor$9>	72	None	replace
137	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>()  {  @Override  public  T  create()  {  @Override  public  T  construct()  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>()  {  @Override  public  T  create()  {  @Override  public  T  construct()  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>()  {  @Override  public  T  create()  {  @Override  public  T  construct()  {  return(T)new  TreeMap  <  Object,  Object>();  }	  return    new    ObjectConstructor    <    T>()    ||    	non-compiled	[CE]  ';'  expected	72	None	replace
138	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>()  {  @Override  public  T  create()  {  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }  }  ;  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>()  {  @Override  public  T  create()  {  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }  }  ;  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>()  {  @Override  public  T  create()  {  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }  }  ;	  return    new    ObjectConstructor    <    T>()    ||    	non-compiled	[CE]  ';'  expected	72	None	replace
139	[BUG]  [BUGGY]  return(T)new  LinkedHashMap  <  T>()  {  [CE]  wrong  number  of  type  arguments;  required  2  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  LinkedHashMap  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  LinkedHashMap  <  T>()  {	  return    new    LinkedHashMap    <    T>()    {    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  2	3	None	replace
140	[BUG]  [BUGGY]  return(SortedMap  <  Object,  Object>.class.isAssignableFrom(rawType))?  new  SortedMap  <  Object,  Object>()  :  new  SortedMap  <  Object,  Object>()  {  [CE]  <identifier>  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap  <  Object,  Object>.class.isAssignableFrom(rawType))?  new  SortedMap  <  Object,  Object>()  :  new  SortedMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap  <  Object,  Object>.class.isAssignableFrom(rawType))?  new  SortedMap  <  Object,  Object>()  :  new  SortedMap  <  Object,  Object>()  {	  return(SortedMap.class.isAssignableFrom(rawType))?    new    SortedMap    <    Object,    Object>()    :    new    SortedMap    <    Object,    Object>()    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
141	[BUG]  [BUGGY]  return(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))?  new  SortedMap  <  Object,  Object>()  :  new  SortedMap  <  Object,  Object>()  {  [CE]  SortedMap  is  abstract;  cannot  be  instantiated  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))?  new  SortedMap  <  Object,  Object>()  :  new  SortedMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))?  new  SortedMap  <  Object,  Object>()  :  new  SortedMap  <  Object,  Object>()  {	  return(SortedMap.class.isAssignableFrom(rawType))?    new    SortedMap    <    Object,    Object>()    :    new    SortedMap    <    Object,    Object>()    {    	non-compiled	[CE]  SortedMap  is  abstract;  cannot  be  instantiated	51	None	replace
142	[BUG]  [BUGGY]  Return(SortedMap.class.isAssignableFrom(rawType))?  new  SortedMap  <  Object,  Object>()  :  new  SortedMap  <  Object,  Object>()  {  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Return(SortedMap.class.isAssignableFrom(rawType))?  new  SortedMap  <  Object,  Object>()  :  new  SortedMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Return(SortedMap.class.isAssignableFrom(rawType))?  new  SortedMap  <  Object,  Object>()  :  new  SortedMap  <  Object,  Object>()  {	  return(SortedMap.class.isAssignableFrom(rawType))?    new    SortedMap    <    Object,    Object>()    :    new    SortedMap    <    Object,    Object>()    {    	non-compiled	[CE]  not  a  statement	51	None	replace
143	[BUG]  [BUGGY]  return(SortedMap.class.isAssignableFrom(type))?  new  SortedMap  <  Object,  Object>()  :  new  SortedMap  <  Object,  Object>()  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap.class.isAssignableFrom(type))?  new  SortedMap  <  Object,  Object>()  :  new  SortedMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap.class.isAssignableFrom(type))?  new  SortedMap  <  Object,  Object>()  :  new  SortedMap  <  Object,  Object>()  {	  return(SortedMap.class.isAssignableFrom(rawType))?    new    SortedMap    <    Object,    Object>()    :    new    SortedMap    <    Object,    Object>()    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	51	None	replace
144	[BUG]  [BUGGY]  return(Map.class.isAssignableFrom(rawType))?  new  SortedMap  <  Object,  Object>()  :  new  SortedMap  <  Object,  Object>()  {  [CE]  SortedMap  is  abstract;  cannot  be  instantiated  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(Map.class.isAssignableFrom(rawType))?  new  SortedMap  <  Object,  Object>()  :  new  SortedMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(Map.class.isAssignableFrom(rawType))?  new  SortedMap  <  Object,  Object>()  :  new  SortedMap  <  Object,  Object>()  {	  return(SortedMap.class.isAssignableFrom(rawType))?    new    SortedMap    <    Object,    Object>()    :    new    SortedMap    <    Object,    Object>()    {    	non-compiled	[CE]  SortedMap  is  abstract;  cannot  be  instantiated	51	None	replace
145	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }	  return    new    TreeMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	36	None	replace
146	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }	  return    new    TreeMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	36	None	replace
147	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  SortedMap.class.isAssignableFrom(rawType))  {  return  new  SortedMap  <  Object,  Object>();  }  [CE]  <identifier>  expected  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  SortedMap.class.isAssignableFrom(rawType))  {  return  new  SortedMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  SortedMap.class.isAssignableFrom(rawType))  {  return  new  SortedMap  <  Object,  Object>();  }	  return    new    TreeMap    <    Object,    Object>();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
148	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }  else  if(String.class.isAssignableFrom(type))  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }  else  if(String.class.isAssignableFrom(type))  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }  else  if(String.class.isAssignableFrom(type))  {  return  new  TreeMap  <  Object,  Object>();  }	  return    new    TreeMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	36	None	replace
149	[BUG]  [BUGGY]  new  DefaultImplementationConstructor  <  T>()  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  new  DefaultImplementationConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	new  DefaultImplementationConstructor  <  T>()  {	  Return    new    DefaultImplementationConstructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
150	[BUG]  [BUGGY]  final  Return  new  DefaultImplementationConstructor  <  T>()  {  [CE]  <identifier>  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  final  Return  new  DefaultImplementationConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	final  Return  new  DefaultImplementationConstructor  <  T>()  {	  Return    new    DefaultImplementationConstructor    <    T>()    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
151	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  SortedHashMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  SortedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  SortedHashMap  <  Object,  Object>();  }	  return(T)new    SortedHashMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	58	None	replace
152	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  return(T)new  SortedHashMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  return(T)new  SortedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  return(T)new  SortedHashMap  <  Object,  Object>();  }	  return(T)new    SortedHashMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	58	None	replace
153	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedHashMap.class.isAssignableFrom(rawType))  {  return(T)new  SortedHashMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedHashMap.class.isAssignableFrom(rawType))  {  return(T)new  SortedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||  SortedHashMap.class.isAssignableFrom(rawType))  {  return(T)new  SortedHashMap  <  Object,  Object>();  }	  return(T)new    SortedHashMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	58	None	replace
154	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  SortedHashMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  SortedHashMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  SortedHashMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>();  }	  return(T)new    SortedHashMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	58	None	replace
155	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  Type.class)  {  [CE]  anonymous  class  implements  interface;  cannot  have  arguments  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  Type.class)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>(rawType,  Type.class)  {	  return    new    ObjectConstructor    <    T>(rawType,    elementType)    {    	non-compiled	[CE]  anonymous  class  implements  interface;  cannot  have  arguments	40	None	replace
156	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  TypeToken.class)  {  [CE]  anonymous  class  implements  interface;  cannot  have  arguments  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  TypeToken.class)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>(rawType,  TypeToken.class)  {	  return    new    ObjectConstructor    <    T>(rawType,    elementType)    {    	non-compiled	[CE]  anonymous  class  implements  interface;  cannot  have  arguments	40	None	replace
157	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  this.type)  {  [CE]  cannot  find  symbol  type  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  this.type)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>(rawType,  this.type)  {	  return    new    ObjectConstructor    <    T>(rawType,    elementType)    {    	non-compiled	[CE]  cannot  find  symbol  type	40	None	replace
158	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  rawType)  {  [CE]  anonymous  class  implements  interface;  cannot  have  arguments  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  rawType)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>(rawType,  rawType)  {	  return    new    ObjectConstructor    <    T>(rawType,    elementType)    {    	non-compiled	[CE]  anonymous  class  implements  interface;  cannot  have  arguments	40	None	replace
159	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  types)  {  [CE]  cannot  find  symbol  types  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  types)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>(rawType,  types)  {	  return    new    ObjectConstructor    <    T>(rawType,    elementType)    {    	non-compiled	[CE]  cannot  find  symbol  types	40	None	replace
160	[BUG]  [BUGGY]  (T)new  SortedMap  <  Object,  Object>();  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  (T)new  SortedMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	(T)new  SortedMap  <  Object,  Object>();	  return(T)new    SortedMap    <    Object,    Object>()    {    	non-compiled	[CE]  not  a  statement	48	None	replace
161	[BUG]  [BUGGY]  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  rawType  instanceof  UnsafeAllocator;  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  rawType  instanceof  UnsafeAllocator;  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  rawType  instanceof  UnsafeAllocator;	  Constructor    <    T>    in    class    Constructor    <    T#2>    cannot    be    applied    to    given    types;    	non-compiled	[CE]  ';'  expected	27	None	replace
162	[BUG]  [BUGGY]  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types.  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types.  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types.	  Constructor    <    T>    in    class    Constructor    <    T#2>    cannot    be    applied    to    given    types;    	non-compiled	[CE]  ';'  expected	27	None	replace
163	[BUG]  [BUGGY]  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  instanceCreators;  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  instanceCreators;  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  instanceCreators;	  Constructor    <    T>    in    class    Constructor    <    T#2>    cannot    be    applied    to    given    types;    	non-compiled	[CE]  ';'  expected	27	None	replace
164	[BUG]  [BUGGY]  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  instanceCreators);  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  instanceCreators);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  instanceCreators);	  Constructor    <    T>    in    class    Constructor    <    T#2>    cannot    be    applied    to    given    types;    	non-compiled	[CE]  ';'  expected	27	None	replace
165	[BUG]  [BUGGY]  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  ObjectConstructor.class;  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  ObjectConstructor.class;  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  ObjectConstructor.class;	  Constructor    <    T>    in    class    Constructor    <    T#2>    cannot    be    applied    to    given    types;    	non-compiled	[CE]  ';'  expected	27	None	replace
166	[BUG]  [BUGGY]  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  rawType  instanceof  Class  <?  super.type;  [CE]  ';'  expected  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  rawType  instanceof  Class  <?  super.type;  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  rawType  instanceof  Class  <?  super.type;	  Constructor    <    T>    in    class    Constructor    <    T#2>    cannot    be    applied    to    given    types;    	non-compiled	[CE]  ';'  expected	27	None	replace
167	[BUG]  [BUGGY]  return(T)create  TreeMap  <  Object,  Object>();  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)create  TreeMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)create  TreeMap  <  Object,  Object>();	  return(T)new    TreeMap    <    Object,    Object>()    {    	non-compiled	[CE]  ';'  expected	37	None	replace
168	[BUG]  [BUGGY]  TypeToken.get(type).getActualTypeArguments()  [0]).getRawType()!=  null)  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  not  a  statement  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  TypeToken.get(type).getActualTypeArguments()  [0]).getRawType()!=  null)  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	TypeToken.get(type).getActualTypeArguments()  [0]).getRawType()!=  null)  {  return  new  TreeMap  <  Object,  Object>();  }	  TypeToken.get(type).getActualTypeArguments()[0]).getRawType()    ==    null)    {    return    new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  not  a  statement	92	None	replace
169	[BUG]  [BUGGY]  TypeToken.get(type).getActualTypeArguments()  [1]).getRawType()  ==  null)  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  not  a  statement  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  TypeToken.get(type).getActualTypeArguments()  [1]).getRawType()  ==  null)  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	TypeToken.get(type).getActualTypeArguments()  [1]).getRawType()  ==  null)  {  return  new  TreeMap  <  Object,  Object>();  }	  TypeToken.get(type).getActualTypeArguments()[0]).getRawType()    ==    null)    {    return    new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  not  a  statement	92	None	replace
170	[BUG]  [BUGGY]  TypeToken.get(type).getSortedTypeArguments()  [0]).getRawType()  ==  null)  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  not  a  statement  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  TypeToken.get(type).getSortedTypeArguments()  [0]).getRawType()  ==  null)  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	TypeToken.get(type).getSortedTypeArguments()  [0]).getRawType()  ==  null)  {  return  new  TreeMap  <  Object,  Object>();  }	  TypeToken.get(type).getActualTypeArguments()[0]).getRawType()    ==    null)    {    return    new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  not  a  statement	92	None	replace
171	[BUG]  [BUGGY]  TypeToken.get(type).getRawType()  ==  null)  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  not  a  statement  [FE]                                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  TypeToken.get(type).getRawType()  ==  null)  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	TypeToken.get(type).getRawType()  ==  null)  {  return  new  TreeMap  <  Object,  Object>();  }	  TypeToken.get(type).getActualTypeArguments()[0]).getRawType()    ==    null)    {    return    new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  not  a  statement	92	None	replace
172	[BUG]  [BUGGY]  TypeToken.get(type).getRawType()!=  null)  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  not  a  statement  [FE]                                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  TypeToken.get(type).getRawType()!=  null)  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	TypeToken.get(type).getRawType()!=  null)  {  return  new  TreeMap  <  Object,  Object>();  }	  TypeToken.get(type).getActualTypeArguments()[0]).getRawType()    ==    null)    {    return    new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  not  a  statement	92	None	replace
173	[BUG]  [BUGGY]  TypeToken.get(type).getElementType()).getRawType()  ==  null)  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  TypeToken.get(type).getElementType()).getRawType()  ==  null)  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	TypeToken.get(type).getElementType()).getRawType()  ==  null)  {  return  new  TreeMap  <  Object,  Object>();  }	  TypeToken.get(type).getActualTypeArguments()[0]).getRawType()    ==    null)    {    return    new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	92	None	replace
174	[BUG]  [BUGGY]  return  new  PropertyConstructor  <  T>(rawType,  type)  {  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  PropertyConstructor  <  T>(rawType,  type)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  PropertyConstructor  <  T>(rawType,  type)  {	  return    new    PropertyConstructor    <    T>(rawType)    {    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
175	[BUG]  [BUGGY]  return  new  PropertyConstructor  <  T>(rawType,  elementType)  {  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  PropertyConstructor  <  T>(rawType,  elementType)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  PropertyConstructor  <  T>(rawType,  elementType)  {	  return    new    PropertyConstructor    <    T>(rawType)    {    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
176	[BUG]  [BUGGY]  return  new  PropertyConstructor  <  T>(rawType,  null)  {  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  PropertyConstructor  <  T>(rawType,  null)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  PropertyConstructor  <  T>(rawType,  null)  {	  return    new    PropertyConstructor    <    T>(rawType)    {    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
177	[BUG]  [BUGGY]  return  new  PropertyConstructor  <  T>(rawType,  Object.class)  {  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  PropertyConstructor  <  T>(rawType,  Object.class)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  PropertyConstructor  <  T>(rawType,  Object.class)  {	  return    new    PropertyConstructor    <    T>(rawType)    {    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
178	[BUG]  [BUGGY]  return  new  PropertyConstructor  <  T>(rawType,  TypeToken.class)  {  [CE]  cannot  find  symbol  [FE]                                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  PropertyConstructor  <  T>(rawType,  TypeToken.class)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  PropertyConstructor  <  T>(rawType,  TypeToken.class)  {	  return    new    PropertyConstructor    <    T>(rawType)    {    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
179	[BUG]  [BUGGY]  return  new  PropertyConstructor  <  T>(rawType,  Type.class)  {  [CE]  cannot  find  symbol  [FE]                                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  PropertyConstructor  <  T>(rawType,  Type.class)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  PropertyConstructor  <  T>(rawType,  Type.class)  {	  return    new    PropertyConstructor    <    T>(rawType)    {    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
180	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  ObjectConstructor  <  T>();  }  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  ObjectConstructor  <  T>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  ObjectConstructor  <  T>();  }	  return(T)new    ObjectConstructor    <    T>();    	non-compiled	[CE]  ';'  expected	19	None	replace
181	[BUG]  [BUGGY]  if(sortedMap.class.isAssignableFrom(rawType))  {  return(T)new  ObjectConstructor  <  T>();  }  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(sortedMap.class.isAssignableFrom(rawType))  {  return(T)new  ObjectConstructor  <  T>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(sortedMap.class.isAssignableFrom(rawType))  {  return(T)new  ObjectConstructor  <  T>();  }	  return(T)new    ObjectConstructor    <    T>();    	non-compiled	[CE]  ';'  expected	19	None	replace
182	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  ObjectConstructor  <  T>();  }  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  ObjectConstructor  <  T>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  ObjectConstructor  <  T>();  }	  return(T)new    ObjectConstructor    <    T>();    	non-compiled	[CE]  ';'  expected	19	None	replace
183	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  return(T)new  ObjectConstructor  <  T>();  }  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  return(T)new  ObjectConstructor  <  T>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  return(T)new  ObjectConstructor  <  T>();  }	  return(T)new    ObjectConstructor    <    T>();    	non-compiled	[CE]  ';'  expected	19	None	replace
184	[BUG]  [BUGGY]  return(T)new  Constructor  <  T>()  {  [CE]  constructor  Constructor  in  class  Constructor<T#2>  cannot  be  applied  to  given  types;  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  Constructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  Constructor  <  T>()  {	  return(T)new    PropertyConstructor    <    T>()    {    	non-compiled	[CE]  constructor  Constructor  in  class  Constructor<T#2>  cannot  be  applied  to  given  types;	53	None	replace
185	[BUG]  [BUGGY]  return(T)new  ClassConstructor  <  T>()  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  ClassConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  ClassConstructor  <  T>()  {	  return(T)new    PropertyConstructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
186	[BUG]  [BUGGY]  return(T)this.new  PropertyConstructor  <  T>()  {  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)this.new  PropertyConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)this.new  PropertyConstructor  <  T>()  {	  return(T)new    PropertyConstructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
187	[BUG]  [BUGGY]  return(SortedMap  <  Object,  Object>)new  TreeMap  <  Object,  Object>()  {  [CE]  method  does  not  override  or  implement  a  method  from  a  supertype  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap  <  Object,  Object>)new  TreeMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap  <  Object,  Object>)new  TreeMap  <  Object,  Object>()  {	  return(SortedMap    <    Object,    Object>)new    SortedMap    <    Object,    Object>()    {    	non-compiled	[CE]  method  does  not  override  or  implement  a  method  from  a  supertype	50	None	replace
188	[BUG]  [BUGGY]  return(SortedMap  <  Object,  Object>)super.newSortedMap  <  Object,  Object>()  {  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap  <  Object,  Object>)super.newSortedMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap  <  Object,  Object>)super.newSortedMap  <  Object,  Object>()  {	  return(SortedMap    <    Object,    Object>)new    SortedMap    <    Object,    Object>()    {    	non-compiled	[CE]  ';'  expected	50	None	replace
189	[BUG]  [BUGGY]  return(SortedMap  <  Object,  Object>)this.new  SortedMap  <  Object,  Object>()  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap  <  Object,  Object>)this.new  SortedMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap  <  Object,  Object>)this.new  SortedMap  <  Object,  Object>()  {	  return(SortedMap    <    Object,    Object>)new    SortedMap    <    Object,    Object>()    {    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
190	[BUG]  [BUGGY]  return(SortedMap  <  Object,  Object>)super.createSortedMap  <  Object,  Object>()  {  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap  <  Object,  Object>)super.createSortedMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap  <  Object,  Object>)super.createSortedMap  <  Object,  Object>()  {	  return(SortedMap    <    Object,    Object>)new    SortedMap    <    Object,    Object>()    {    	non-compiled	[CE]  ';'  expected	50	None	replace
191	[BUG]  [BUGGY]  return(SortedMap  <  Object,  Object>)createSortedMap  <  Object,  Object>()  {  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap  <  Object,  Object>)createSortedMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap  <  Object,  Object>)createSortedMap  <  Object,  Object>()  {	  return(SortedMap    <    Object,    Object>)new    SortedMap    <    Object,    Object>()    {    	non-compiled	[CE]  ';'  expected	50	None	replace
192	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class))  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class))  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType.isAssignableFrom(SortedMap.class))  {  return  new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType))    {    return    new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	76	None	replace
193	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(Map.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType))    {    return    new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	76	None	replace
194	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  <identifier>  expected  [FE]                                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType))    {    return    new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
195	[BUG]  [BUGGY]  ||  SortedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  illegal  start  of  expression  [FE]                                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  ||  SortedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	||  SortedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType))    {    return    new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
196	[BUG]  [BUGGY]  return(LocalizedMapConstructor  <  T>)new  LocalizedMapConstructor  <  T>()  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(LocalizedMapConstructor  <  T>)new  LocalizedMapConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(LocalizedMapConstructor  <  T>)new  LocalizedMapConstructor  <  T>()  {	  return    new    LocalizedMapConstructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
197	[BUG]  [BUGGY]  return  new  LocalizedMapConstructor  <  T>(rawType)  {  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  LocalizedMapConstructor  <  T>(rawType)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  LocalizedMapConstructor  <  T>(rawType)  {	  return    new    LocalizedMapConstructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
198	[BUG]  [BUGGY]  Return  new  LocalizedMapConstructor  <  T>()  {  [CE]  not  a  statement  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Return  new  LocalizedMapConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Return  new  LocalizedMapConstructor  <  T>()  {	  return    new    LocalizedMapConstructor    <    T>()    {    	non-compiled	[CE]  not  a  statement	64	None	replace
199	[BUG]  [BUGGY]  result.add(new  LocalizedMapConstructor  <  T>()  {  [CE]  ')'  expected  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  result.add(new  LocalizedMapConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	result.add(new  LocalizedMapConstructor  <  T>()  {	  return    new    LocalizedMapConstructor    <    T>()    {    	non-compiled	[CE]  ')'  expected	64	None	replace
200	[BUG]  [BUGGY]  return  new  LocalizedMapConstructor  <  Object>()  {  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  LocalizedMapConstructor  <  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  LocalizedMapConstructor  <  Object>()  {	  return    new    LocalizedMapConstructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
201	[BUG]  [BUGGY]  final  LocalizedMapConstructor  <  T>()  {  [CE]  <identifier>  expected  [FE]                                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  final  LocalizedMapConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	final  LocalizedMapConstructor  <  T>()  {	  return    new    LocalizedMapConstructor    <    T>()    {    	non-compiled	[CE]  <identifier>  expected	64	None	replace
202	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType,  type)  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType,  type)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  DefaultImplementationConstructor  <  T>(rawType,  type)  {	  return    new    DefaultImplementationConstructor    <    T>(rawType)    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
203	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType,  elementType)  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType,  elementType)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  DefaultImplementationConstructor  <  T>(rawType,  elementType)  {	  return    new    DefaultImplementationConstructor    <    T>(rawType)    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
204	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType,  null)  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType,  null)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  DefaultImplementationConstructor  <  T>(rawType,  null)  {	  return    new    DefaultImplementationConstructor    <    T>(rawType)    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
205	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType,  rawType)  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType,  rawType)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  DefaultImplementationConstructor  <  T>(rawType,  rawType)  {	  return    new    DefaultImplementationConstructor    <    T>(rawType)    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
206	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType,  TypeToken.class)  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType,  TypeToken.class)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  DefaultImplementationConstructor  <  T>(rawType,  TypeToken.class)  {	  return    new    DefaultImplementationConstructor    <    T>(rawType)    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
207	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType,  Type.class)  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType,  Type.class)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  DefaultImplementationConstructor  <  T>(rawType,  Type.class)  {	  return    new    DefaultImplementationConstructor    <    T>(rawType)    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
208	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  Class  <?>)  {  return  [CE]  <identifier>  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  Class  <?>)  {  return  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  Class  <?>)  {  return	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    if(type    instanceof    Class    <?>)    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
209	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  Class  <?>)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    if(type    instanceof    Class    <?>)    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	16	None	replace
210	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  Class  <?>)  {  return(T)new  [CE]  <identifier>  expected  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  Class  <?>)  {  return(T)new  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  Class  <?>)  {  return(T)new	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    if(type    instanceof    Class    <?>)    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
211	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  Class  <?>)  {  return(  [CE]  <identifier>  expected  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  Class  <?>)  {  return(  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  Class  <?>)  {  return(	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    if(type    instanceof    Class    <?>)    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
212	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  Class  <?>)  {  return(T)new  TreeMap  <  [CE]  <identifier>  expected  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  Class  <?>)  {  return(T)new  TreeMap  <  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  Class  <?>)  {  return(T)new  TreeMap  <  	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    if(type    instanceof    Class    <?>)    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
213	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  Class  <?>)  {  return(T)new  [CE]  <identifier>  expected  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  Class  <?>)  {  return(T)new  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  Class  <?>)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  Class  <?>)  {  return(T)new	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    if(type    instanceof    Class    <?>)    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
214	[BUG]  [BUGGY]  ||  TypeToken.get(type).getActualTypeArguments()  [0]).getRawType()  instanceof  SortedMap)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  ||  TypeToken.get(type).getActualTypeArguments()  [0]).getRawType()  instanceof  SortedMap)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	||  TypeToken.get(type).getActualTypeArguments()  [0]).getRawType()  instanceof  SortedMap)  {  throw  new  IllegalArgumentException( " ");  }	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()[0]).getRawType()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
215	[BUG]  [BUGGY]  Class  <?>  rawType  =  TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType();  [CE]  ';'  expected  [FE]                                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?>  rawType  =  TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Class  <?>  rawType  =  TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType();	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()[0]).getRawType()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	11	None	replace
216	[BUG]  [BUGGY]  Constructor  <?>  rawType  =  TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType();  [CE]  ';'  expected  [FE]                                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Constructor  <?>  rawType  =  TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Constructor  <?>  rawType  =  TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType();	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()[0]).getRawType()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	11	None	replace
217	[BUG]  [BUGGY]  ||  TypeToken.get(type).getActualTypeArguments()  [0]).getRawType())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  ||  TypeToken.get(type).getActualTypeArguments()  [0]).getRawType())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	||  TypeToken.get(type).getActualTypeArguments()  [0]).getRawType())  {  throw  new  IllegalArgumentException( " ");  }	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()[0]).getRawType()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
218	[BUG]  [BUGGY]  ||  TypeToken.get(type).getActualTypeArguments()  [0]).getRawType()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  ||  TypeToken.get(type).getActualTypeArguments()  [0]).getRawType()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	||  TypeToken.get(type).getActualTypeArguments()  [0]).getRawType()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()[0]).getRawType()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
219	[BUG]  [BUGGY]  return  new  ClassConstructor  <  Object>()  {  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ClassConstructor  <  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ClassConstructor  <  Object>()  {	  return    new    ClassConstructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
220	[BUG]  [BUGGY]  return  new  ClassConstructor  <  T>(rawType)  {  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ClassConstructor  <  T>(rawType)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ClassConstructor  <  T>(rawType)  {	  return    new    ClassConstructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
221	[BUG]  [BUGGY]  final  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  rawType  instanceof  UnsafeAllocator;  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  final  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  rawType  instanceof  UnsafeAllocator;  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	final  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  rawType  instanceof  UnsafeAllocator;	  final    Constructor    <    T>    in    class    Constructor    <    T#2>    cannot    be    applied    to    given    types;    	non-compiled	[CE]  ';'  expected	29	None	replace
222	[BUG]  [BUGGY]  final  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types:  {  }  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  final  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types:  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	final  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types:  {  }	  final    Constructor    <    T>    in    class    Constructor    <    T#2>    cannot    be    applied    to    given    types;    	non-compiled	[CE]  ';'  expected	29	None	replace
223	[BUG]  [BUGGY]  final  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types.  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  final  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types.  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	final  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types.	  final    Constructor    <    T>    in    class    Constructor    <    T#2>    cannot    be    applied    to    given    types;    	non-compiled	[CE]  ';'  expected	29	None	replace
224	[BUG]  [BUGGY]  final  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  ObjectConstructor.class;  [CE]  ';'  expected  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  final  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  ObjectConstructor.class;  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	final  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  ObjectConstructor.class;	  final    Constructor    <    T>    in    class    Constructor    <    T#2>    cannot    be    applied    to    given    types;    	non-compiled	[CE]  ';'  expected	29	None	replace
225	[BUG]  [BUGGY]  final  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  context);  [CE]  ';'  expected  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  final  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  context);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	final  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  context);	  final    Constructor    <    T>    in    class    Constructor    <    T#2>    cannot    be    applied    to    given    types;    	non-compiled	[CE]  ';'  expected	29	None	replace
226	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return(SortedMap  <  Object,  Object>)new  SortedMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return(SortedMap  <  Object,  Object>)new  SortedMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType))  {  return(SortedMap  <  Object,  Object>)new  SortedMap  <  Object,  Object>();  }	  return(SortedMap    <    Object,    Object>)new    SortedMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	97	None	replace
227	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return(SortedMap  <  Object,  Object>)new  SortedMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return(SortedMap  <  Object,  Object>)new  SortedMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType))  {  return(SortedMap  <  Object,  Object>)new  SortedMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>();  }	  return(SortedMap    <    Object,    Object>)new    SortedMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	97	None	replace
228	[BUG]  [BUGGY]  return(SortedMap  <  Object,  Object>)createSortedMap  <  Object,  Object>();  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap  <  Object,  Object>)createSortedMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap  <  Object,  Object>)createSortedMap  <  Object,  Object>();	  return(SortedMap    <    Object,    Object>)new    SortedMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	97	None	replace
229	[BUG]  [BUGGY]  return(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))?  new  TreeMap  <  Object,  Object>()  :  new  SortedMap  <  Object,  Object>()  {  [CE]  <anonymous  com.google.gson.internal.ConstructorConstructor$9>  is  not  abstract  and  does  not  override  abstract  method  entrySet()  in  SortedMap  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))?  new  TreeMap  <  Object,  Object>()  :  new  SortedMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))?  new  TreeMap  <  Object,  Object>()  :  new  SortedMap  <  Object,  Object>()  {	  return(SortedMap.class.isAssignableFrom(rawType))?    new    TreeMap    <    Object,    Object>()    :    new    SortedMap    <    Object,    Object>()    {    	non-compiled	[CE]  <anonymous  com.google.gson.internal.ConstructorConstructor$9>  is  not  abstract  and  does  not  override  abstract  method  entrySet()  in  SortedMap	52	None	replace
230	[BUG]  [BUGGY]  return(TreeMap.class.isAssignableFrom(rawType))?  new  TreeMap  <  Object,  Object>()  :  new  SortedMap  <  Object,  Object>()  {  [CE]  <anonymous  com.google.gson.internal.ConstructorConstructor$9>  is  not  abstract  and  does  not  override  abstract  method  entrySet()  in  SortedMap  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(TreeMap.class.isAssignableFrom(rawType))?  new  TreeMap  <  Object,  Object>()  :  new  SortedMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(TreeMap.class.isAssignableFrom(rawType))?  new  TreeMap  <  Object,  Object>()  :  new  SortedMap  <  Object,  Object>()  {	  return(SortedMap.class.isAssignableFrom(rawType))?    new    TreeMap    <    Object,    Object>()    :    new    SortedMap    <    Object,    Object>()    {    	non-compiled	[CE]  <anonymous  com.google.gson.internal.ConstructorConstructor$9>  is  not  abstract  and  does  not  override  abstract  method  entrySet()  in  SortedMap	52	None	replace
231	[BUG]  [BUGGY]  return(Map.class.isAssignableFrom(rawType))?  new  TreeMap  <  Object,  Object>()  :  new  SortedMap  <  Object,  Object>()  {  [CE]  <anonymous  com.google.gson.internal.ConstructorConstructor$9>  is  not  abstract  and  does  not  override  abstract  method  entrySet()  in  SortedMap  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(Map.class.isAssignableFrom(rawType))?  new  TreeMap  <  Object,  Object>()  :  new  SortedMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(Map.class.isAssignableFrom(rawType))?  new  TreeMap  <  Object,  Object>()  :  new  SortedMap  <  Object,  Object>()  {	  return(SortedMap.class.isAssignableFrom(rawType))?    new    TreeMap    <    Object,    Object>()    :    new    SortedMap    <    Object,    Object>()    {    	non-compiled	[CE]  <anonymous  com.google.gson.internal.ConstructorConstructor$9>  is  not  abstract  and  does  not  override  abstract  method  entrySet()  in  SortedMap	52	None	replace
232	[BUG]  [BUGGY]  return(T.class.isAssignableFrom(rawType))?  new  TreeMap  <  Object,  Object>()  :  new  SortedMap  <  Object,  Object>()  {  [CE]  cannot  select  from  a  type  variable  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T.class.isAssignableFrom(rawType))?  new  TreeMap  <  Object,  Object>()  :  new  SortedMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T.class.isAssignableFrom(rawType))?  new  TreeMap  <  Object,  Object>()  :  new  SortedMap  <  Object,  Object>()  {	  return(SortedMap.class.isAssignableFrom(rawType))?    new    TreeMap    <    Object,    Object>()    :    new    SortedMap    <    Object,    Object>()    {    	non-compiled	[CE]  cannot  select  from  a  type  variable	52	None	replace
233	[BUG]  [BUGGY]  return  new  Constructor  <  T>(rawType.getRawClass(),  type)  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  T>(rawType.getRawClass(),  type)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  T>(rawType.getRawClass(),  type)  {	  return    new    Constructor    <    T>(rawType.getRawClass())    {    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
234	[BUG]  [BUGGY]  return  new  Constructor  <  T>(rawType,  type.getRawClass())  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  T>(rawType,  type.getRawClass())  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  T>(rawType,  type.getRawClass())  {	  return    new    Constructor    <    T>(rawType.getRawClass())    {    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
235	[BUG]  [BUGGY]  return  new  Constructor  <  T>(rawType.getRawClass(),  rawType)  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  T>(rawType.getRawClass(),  rawType)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  T>(rawType.getRawClass(),  rawType)  {	  return    new    Constructor    <    T>(rawType.getRawClass())    {    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
236	[BUG]  [BUGGY]  return  new  Constructor  <  T>(rawType.getRawClass(),  elementType)  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  T>(rawType.getRawClass(),  elementType)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  T>(rawType.getRawClass(),  elementType)  {	  return    new    Constructor    <    T>(rawType.getRawClass())    {    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
237	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(TreeMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	77	None	replace
238	[BUG]  [BUGGY]  if(Map.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(Map.class.isAssignableFrom(rawType))  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(Map.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	77	None	replace
239	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	77	None	replace
240	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	77	None	replace
241	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	77	None	replace
242	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	77	None	replace
243	[BUG]  [BUGGY]  return  new  Constructor  <  T>(type.getRawType(),  rawType)  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  T>(type.getRawType(),  rawType)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  T>(type.getRawType(),  rawType)  {	  return    new    Constructor    <    T>(type.getRawType())    {    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
244	[BUG]  [BUGGY]  return  new  Constructor  <  T>(rawType.getRawType())  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  T>(rawType.getRawType())  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  T>(rawType.getRawType())  {	  return    new    Constructor    <    T>(type.getRawType())    {    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
245	[BUG]  [BUGGY]  return  new  Constructor  <  T>(elementType.getRawType())  {  [CE]  cannot  find  symbol  elementType  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  T>(elementType.getRawType())  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  T>(elementType.getRawType())  {	  return    new    Constructor    <    T>(type.getRawType())    {    	non-compiled	[CE]  cannot  find  symbol  elementType	69	None	replace
246	[BUG]  [BUGGY]  return  new  Constructor  <  T>(type,  rawType.getRawType())  {  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  T>(type,  rawType.getRawType())  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  T>(type,  rawType.getRawType())  {	  return    new    Constructor    <    T>(type.getRawType())    {    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
247	[BUG]  [BUGGY]  return  new  Constructor  <  T>(type.getRawType()),  rawType)  {  [CE]  ';'  expected  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  T>(type.getRawType()),  rawType)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  T>(type.getRawType()),  rawType)  {	  return    new    Constructor    <    T>(type.getRawType())    {    	non-compiled	[CE]  ';'  expected	69	None	replace
248	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>()  ==  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>()  ==  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  DefaultImplementationConstructor  <  T>()  ==  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }	  return    new    DefaultImplementationConstructor    <    T>()    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
249	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>()!=  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>()!=  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  DefaultImplementationConstructor  <  T>()!=  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }	  return    new    DefaultImplementationConstructor    <    T>()    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
250	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>()  >>  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>()  >>  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  DefaultImplementationConstructor  <  T>()  >>  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }	  return    new    DefaultImplementationConstructor    <    T>()    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
251	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>()  [Delete]  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>()  [Delete]  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  DefaultImplementationConstructor  <  T>()  [Delete]  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }	  return    new    DefaultImplementationConstructor    <    T>()    	non-compiled	[CE]  ';'  expected	71	None	replace
252	[BUG]  [BUGGY]  return  new  TreeMap  <?  super  T>();  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  TreeMap  <?  super  T>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  TreeMap  <?  super  T>();	  return    new    TreeMap    <?    super    T>()    {    	non-compiled	[CE]  ';'  expected	66	None	replace
253	[BUG]  [BUGGY]  return  new  TreeMap  <?  super  T>(rawType)  {  [CE]  wrong  number  of  type  arguments;  required  2  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  TreeMap  <?  super  T>(rawType)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  TreeMap  <?  super  T>(rawType)  {	  return    new    TreeMap    <?    super    T>()    {    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  2	66	None	replace
254	[BUG]  [BUGGY]  return(T)new  TreeMap  <?  super  T>()  {  [CE]  wrong  number  of  type  arguments;  required  2  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  TreeMap  <?  super  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  TreeMap  <?  super  T>()  {	  return    new    TreeMap    <?    super    T>()    {    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  2	66	None	replace
255	[BUG]  [BUGGY]  return  new  TreeMap  <?  super  T>(rawType);  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  TreeMap  <?  super  T>(rawType);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  TreeMap  <?  super  T>(rawType);	  return    new    TreeMap    <?    super    T>()    {    	non-compiled	[CE]  ';'  expected	66	None	replace
256	[BUG]  [BUGGY]  return  new  TreeMap  <  Object,  T>()  {  [CE]  method  does  not  override  or  implement  a  method  from  a  supertype  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  TreeMap  <  Object,  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  TreeMap  <  Object,  T>()  {	  return    new    TreeMap    <?    super    T>()    {    	non-compiled	[CE]  method  does  not  override  or  implement  a  method  from  a  supertype	66	None	replace
257	[BUG]  [BUGGY]  return(T)new  TreeMap  <  Object,  ObjectConstructor  <  T>();  [CE]  >  expected  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  TreeMap  <  Object,  ObjectConstructor  <  T>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  TreeMap  <  Object,  ObjectConstructor  <  T>();	  return(T)new    TreeMap    <    Object,    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  >  expected	89	None	replace
258	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  ObjectConstructor  <  T>()  {  [CE]  >  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  ObjectConstructor  <  T>()  {	  return(T)new    TreeMap    <    Object,    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  >  expected	89	None	replace
259	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  ObjectConstructor  <  T>()  {  }  [CE]  >  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  ObjectConstructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  ObjectConstructor  <  T>()  {  }	  return(T)new    TreeMap    <    Object,    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  >  expected	89	None	replace
260	[BUG]  [BUGGY]  (T)new  TreeMap  <  Object,  ObjectConstructor  <  T>();  [CE]  >  expected  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  (T)new  TreeMap  <  Object,  ObjectConstructor  <  T>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	(T)new  TreeMap  <  Object,  ObjectConstructor  <  T>();	  return(T)new    TreeMap    <    Object,    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  >  expected	89	None	replace
261	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  ObjectConstructor  <  T>()  {  [CE]  >  expected  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  ObjectConstructor  <  T>()  {	  return(T)new    TreeMap    <    Object,    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  >  expected	89	None	replace
262	[BUG]  [BUGGY]  return(T)new  LinkedHashMap  <  Object,  ObjectConstructor  <  T>()  {  [CE]  >  expected  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  LinkedHashMap  <  Object,  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  LinkedHashMap  <  Object,  ObjectConstructor  <  T>()  {	  return(T)new    TreeMap    <    Object,    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  >  expected	89	None	replace
263	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  new  Constructor  <  T>(type);  }  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  new  Constructor  <  T>(type);  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  Class  <?>)  {  return  new  Constructor  <  T>(type);  }	  return    new    Constructor    <    T>(type);    	non-compiled	[CE]  ';'  expected	68	None	replace
264	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  new  Constructor  <  T>(type);  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [CE]  ')'  expected  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  new  Constructor  <  T>(type);  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  Class  <?>)  {  return  new  Constructor  <  T>(type);  }  else  if(type  instanceof  ParameterizedType  &&!(String.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()	  return    new    Constructor    <    T>(type);    	non-compiled	[CE]  ')'  expected	68	None	replace
265	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  new  Constructor  <  T>(type);  }  else  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [CE]  <identifier>  expected  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  new  Constructor  <  T>(type);  }  else  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  Class  <?>)  {  return  new  Constructor  <  T>(type);  }  else  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()	  return    new    Constructor    <    T>(type);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
266	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  new  Constructor  <  T>(type);  }  else  if(TypeToken.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType  [CE]  ')'  expected  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  new  Constructor  <  T>(type);  }  else  if(TypeToken.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  Class  <?>)  {  return  new  Constructor  <  T>(type);  }  else  if(TypeToken.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType	  return    new    Constructor    <    T>(type);    	non-compiled	[CE]  ')'  expected	68	None	replace
267	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  new  Constructor  <  T>(type);  }  else  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]  [CE]  <identifier>  expected  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  new  Constructor  <  T>(type);  }  else  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  Class  <?>)  {  return  new  Constructor  <  T>(type);  }  else  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]	  return    new    Constructor    <    T>(type);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
268	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  new  Constructor  <  T>(type);  }  else  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [CE]  <identifier>  expected  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  new  Constructor  <  T>(type);  }  else  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  Class  <?>)  {  return  new  Constructor  <  T>(type);  }  else  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((ParameterizedType)type).getActualTypeArguments()	  return    new    Constructor    <    T>(type);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
269	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap.class)  {  if(!SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  <identifier>  expected  [FE]              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap.class)  {  if(!SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap.class)  {  if(!SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(!SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
270	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(!SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(!SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  Class  <?>)  {  if(!SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(!SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	13	None	replace
271	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap)  {  if(!SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap)  {  if(!SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap)  {  if(!SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(!SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	13	None	replace
272	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap.class.isAssignableFrom(rawType))  {  if(!SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  <identifier>  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap.class.isAssignableFrom(rawType))  {  if(!SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap.class.isAssignableFrom(rawType))  {  if(!SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(!SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
273	[BUG]  [BUGGY]  ||!SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  ||!SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	||!SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(!SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
274	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap  <?>)  {  if(!SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap  <?>)  {  if(!SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap  <?>)  {  if(!SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(!SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	13	None	replace
275	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap.class)  {  if(!SortedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  <identifier>  expected  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap.class)  {  if(!SortedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap.class)  {  if(!SortedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }	  if(!SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
276	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  <identifier>  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
277	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	59	None	replace
278	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  <identifier>  expected  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
279	[BUG]  [BUGGY]  ||  TreeMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  ||  TreeMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	||  TreeMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
280	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	59	None	replace
281	[BUG]  [BUGGY]  return(T)new  TreeMap  <  Object,  Object>()!=  @Override  public  T  construct()  {  return  (T)  new  TreeMap  <  Object,  Object>();  }  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  TreeMap  <  Object,  Object>()!=  @Override  public  T  construct()  {  return  (T)  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  TreeMap  <  Object,  Object>()!=  @Override  public  T  construct()  {  return  (T)  new  TreeMap  <  Object,  Object>();  }	  return(T)new    ObjectConstructor    <    T>()    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
282	[BUG]  [BUGGY]  return(T)new  TreeMap  <  Object,  Object>()  >>  @Override  public  T  construct()  {  return  (T)  new  TreeMap  <  Object,  Object>();  }  [CE]  illegal  start  of  expression  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  TreeMap  <  Object,  Object>()  >>  @Override  public  T  construct()  {  return  (T)  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  TreeMap  <  Object,  Object>()  >>  @Override  public  T  construct()  {  return  (T)  new  TreeMap  <  Object,  Object>();  }	  return(T)new    ObjectConstructor    <    T>()    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
283	[BUG]  [BUGGY]  return(T)new  TreeMap  <  Object,  Object>()  [Delete]  @Override  public  T  construct()  {  return  (T)  new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  TreeMap  <  Object,  Object>()  [Delete]  @Override  public  T  construct()  {  return  (T)  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  TreeMap  <  Object,  Object>()  [Delete]  @Override  public  T  construct()  {  return  (T)  new  TreeMap  <  Object,  Object>();  }	  return(T)new    ObjectConstructor    <    T>()    	non-compiled	[CE]  ';'  expected	21	None	replace
284	[BUG]  [BUGGY]  return(T)new  TreeMap  <  Object,  Object>()  ==  @Override  public  T  construct()  {  return  (T)  new  TreeMap  <  Object,  Object>();  }  [CE]  illegal  start  of  expression  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  TreeMap  <  Object,  Object>()  ==  @Override  public  T  construct()  {  return  (T)  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  TreeMap  <  Object,  Object>()  ==  @Override  public  T  construct()  {  return  (T)  new  TreeMap  <  Object,  Object>();  }	  return(T)new    ObjectConstructor    <    T>()    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
285	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>();  }  }  [CE]  <identifier>  expected  [FE]            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>();  }  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>();  }  }	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    {    return    new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
286	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>();  }  }  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>();  }  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  Class  <?>)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>();  }  }	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    {    return    new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	90	None	replace
287	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  <identifier>  expected  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    {    return    new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
288	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  Class  <?>)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    {    return    new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	90	None	replace
289	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>();  }  }  [CE]  <identifier>  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>();  }  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>();  }  }	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    {    return    new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
290	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>  [CE]  <identifier>  expected  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    {    return    new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
291	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>()  [CE]  <identifier>  expected  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>()	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    {    return    new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
292	[BUG]  [BUGGY]  return(T)new  TreeMap  <  Class  <  Object,  Object>()  {  [CE]  >  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  TreeMap  <  Class  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  TreeMap  <  Class  <  Object,  Object>()  {	  return(T)new    ObjectConstructor    <    Class    <    T>()    {    	non-compiled	[CE]  >  expected	46	None	replace
293	[BUG]  [BUGGY]  return(T)new  ObjectConstructor  <  Class  <  T>();  [CE]  >  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  ObjectConstructor  <  Class  <  T>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  ObjectConstructor  <  Class  <  T>();	  return(T)new    ObjectConstructor    <    Class    <    T>()    {    	non-compiled	[CE]  >  expected	46	None	replace
294	[BUG]  [BUGGY]  return(T)new  TreeMap  <  Class  <  T>()  {  [CE]  >  expected  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  TreeMap  <  Class  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  TreeMap  <  Class  <  T>()  {	  return(T)new    ObjectConstructor    <    Class    <    T>()    {    	non-compiled	[CE]  >  expected	46	None	replace
295	[BUG]  [BUGGY]  return(T)new  TreeMap  <  Class  <?  super  T>()  {  [CE]  >  expected  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  TreeMap  <  Class  <?  super  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  TreeMap  <  Class  <?  super  T>()  {	  return(T)new    ObjectConstructor    <    Class    <    T>()    {    	non-compiled	[CE]  >  expected	46	None	replace
296	[BUG]  [BUGGY]  return(T)new  TreeMap  <  Class  <?>()  {  [CE]  >  expected  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  TreeMap  <  Class  <?>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  TreeMap  <  Class  <?>()  {	  return(T)new    ObjectConstructor    <    Class    <    T>()    {    	non-compiled	[CE]  >  expected	46	None	replace
297	[BUG]  [BUGGY]  (T)new  TreeMap  <  Object,  Object>();  [CE]  not  a  statement  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  (T)new  TreeMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	(T)new  TreeMap  <  Object,  Object>();	  return(T)new    ObjectConstructor    <    Class    <    T>()    {    	non-compiled	[CE]  not  a  statement	46	None	replace
298	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(rawType))  {  }  [CE]  <identifier>  expected  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(rawType))  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(rawType))  {  }	  if(type    instanceof    SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    if(SortedMap.class.isAssignableFrom(rawType))    {    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
299	[BUG]  [BUGGY]  return(T)new  DefaultImplementationConstructor  <  Class  <  T>()  {  [CE]  >  expected  [FE]            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  DefaultImplementationConstructor  <  Class  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  DefaultImplementationConstructor  <  Class  <  T>()  {	  return(T)new    DefaultImplementationConstructor    <    T>()    {    	non-compiled	[CE]  >  expected	22	None	replace
300	[BUG]  [BUGGY]  Return(T)new  DefaultImplementationConstructor  <  T>()  {  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Return(T)new  DefaultImplementationConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Return(T)new  DefaultImplementationConstructor  <  T>()  {	  return(T)new    DefaultImplementationConstructor    <    T>()    {    	non-compiled	[CE]  ';'  expected	22	None	replace
301	[BUG]  [BUGGY]  (T)new  DefaultImplementationConstructor  <  T>()  {  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  (T)new  DefaultImplementationConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	(T)new  DefaultImplementationConstructor  <  T>()  {	  return(T)new    DefaultImplementationConstructor    <    T>()    {    	non-compiled	[CE]  not  a  statement	22	None	replace
302	[BUG]  [BUGGY]  return(T)new  StandardImplementationConstructor  <  T>()  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  StandardImplementationConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  StandardImplementationConstructor  <  T>()  {	  return(T)new    DefaultImplementationConstructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
303	[BUG]  [BUGGY]  return  new  StandardImplementationConstructor  <  T>(rawType)  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  StandardImplementationConstructor  <  T>(rawType)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  StandardImplementationConstructor  <  T>(rawType)  {	  return    new    StandardImplementationConstructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
304	[BUG]  [BUGGY]  return  new  StandardImplementationConstructor  <  Object>()  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  StandardImplementationConstructor  <  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  StandardImplementationConstructor  <  Object>()  {	  return    new    StandardImplementationConstructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
305	[BUG]  [BUGGY]  Return  new  StandardImplementationConstructor  <  T>()  {  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Return  new  StandardImplementationConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Return  new  StandardImplementationConstructor  <  T>()  {	  return    new    StandardImplementationConstructor    <    T>()    {    	non-compiled	[CE]  not  a  statement	25	None	replace
306	[BUG]  [BUGGY]  new  StandardImplementationConstructor  <  T>()  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  new  StandardImplementationConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	new  StandardImplementationConstructor  <  T>()  {	  return    new    StandardImplementationConstructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
307	[BUG]  [BUGGY]  return  new  StandardImplementationConstructor  <?>()  {  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  StandardImplementationConstructor  <?>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  StandardImplementationConstructor  <?>()  {	  return    new    StandardImplementationConstructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
308	[BUG]  [BUGGY]  return(LocalizedMap  <  Object,  Object>)new  LocalizedMap  <  Object,  Object>()  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(LocalizedMap  <  Object,  Object>)new  LocalizedMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(LocalizedMap  <  Object,  Object>)new  LocalizedMap  <  Object,  Object>()  {	  return    new    LocalizedMap    <    Object,    Object>()    {    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
309	[BUG]  [BUGGY]  return  new  LocalizedMap  <  Object,  Object>();  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  LocalizedMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  LocalizedMap  <  Object,  Object>();	  return    new    LocalizedMap    <    Object,    Object>()    {    	non-compiled	[CE]  ';'  expected	81	None	replace
310	[BUG]  [BUGGY]  return(LocalizedMap  <  Object,  Object>)new  TreeMap  <  Object,  Object>()  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(LocalizedMap  <  Object,  Object>)new  TreeMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(LocalizedMap  <  Object,  Object>)new  TreeMap  <  Object,  Object>()  {	  return    new    LocalizedMap    <    Object,    Object>()    {    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
311	[BUG]  [BUGGY]  return  new  LocalizedMap  <  Object,  Object>(rawType)  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  LocalizedMap  <  Object,  Object>(rawType)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  LocalizedMap  <  Object,  Object>(rawType)  {	  return    new    LocalizedMap    <    Object,    Object>()    {    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
312	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return(SortedMap  <  Object,  Object>)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return(SortedMap  <  Object,  Object>)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType))  {  return(SortedMap  <  Object,  Object>)new  TreeMap  <  Object,  Object>();  }	  return(SortedMap    <    Object,    Object>)new    TreeMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	96	None	replace
313	[BUG]  [BUGGY]  if(!SortedMap.class.isAssignableFrom(rawType))  {  return(SortedMap  <  Object,  Object>)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(!SortedMap.class.isAssignableFrom(rawType))  {  return(SortedMap  <  Object,  Object>)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(!SortedMap.class.isAssignableFrom(rawType))  {  return(SortedMap  <  Object,  Object>)new  TreeMap  <  Object,  Object>();  }	  return(SortedMap    <    Object,    Object>)new    TreeMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	96	None	replace
314	[BUG]  [BUGGY]  return(SortedMap  <  Object,  Object>)create  TreeMap  <  Object,  Object>();  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap  <  Object,  Object>)create  TreeMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap  <  Object,  Object>)create  TreeMap  <  Object,  Object>();	  return(SortedMap    <    Object,    Object>)new    TreeMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	96	None	replace
315	[BUG]  [BUGGY]  return(SortedMap  <  Object,  Object>)this.new  TreeMap  <  Object,  Object>();  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap  <  Object,  Object>)this.new  TreeMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap  <  Object,  Object>)this.new  TreeMap  <  Object,  Object>();	  return(SortedMap    <    Object,    Object>)new    TreeMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	96	None	replace
316	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return(SortedMap  <  Object,  Object>)new  TreeMap  <  Object,  Object>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return(SortedMap  <  Object,  Object>)new  TreeMap  <  Object,  Object>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType))  {  return(SortedMap  <  Object,  Object>)new  TreeMap  <  Object,  Object>();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return(SortedMap    <    Object,    Object>)new    TreeMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	96	None	replace
317	[BUG]  [BUGGY]  TypeToken.get(type).getActualTypeArguments()  [0]).getRawType()!=  null)  {  return  new  ObjectConstructor  <  T>();  }  [CE]  not  a  statement  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  TypeToken.get(type).getActualTypeArguments()  [0]).getRawType()!=  null)  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	TypeToken.get(type).getActualTypeArguments()  [0]).getRawType()!=  null)  {  return  new  ObjectConstructor  <  T>();  }	  TypeToken.get(type).getActualTypeArguments()[0]).getRawType()    ==    null)    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  not  a  statement	93	None	replace
318	[BUG]  [BUGGY]  TypeToken.get(type).getActualTypeArguments()  [1]).getRawType()  ==  null)  {  return  new  ObjectConstructor  <  T>();  }  [CE]  not  a  statement  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  TypeToken.get(type).getActualTypeArguments()  [1]).getRawType()  ==  null)  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	TypeToken.get(type).getActualTypeArguments()  [1]).getRawType()  ==  null)  {  return  new  ObjectConstructor  <  T>();  }	  TypeToken.get(type).getActualTypeArguments()[0]).getRawType()    ==    null)    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  not  a  statement	93	None	replace
319	[BUG]  [BUGGY]  TypeToken.get(type).getSortedTypeArguments()  [0]).getRawType()  ==  null)  {  return  new  ObjectConstructor  <  T>();  }  [CE]  not  a  statement  [FE]                                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  TypeToken.get(type).getSortedTypeArguments()  [0]).getRawType()  ==  null)  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	TypeToken.get(type).getSortedTypeArguments()  [0]).getRawType()  ==  null)  {  return  new  ObjectConstructor  <  T>();  }	  TypeToken.get(type).getActualTypeArguments()[0]).getRawType()    ==    null)    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  not  a  statement	93	None	replace
320	[BUG]  [BUGGY]  TypeToken.get(type).getRawType()  ==  null)  {  return  new  ObjectConstructor  <  T>();  }  [CE]  not  a  statement  [FE]                                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  TypeToken.get(type).getRawType()  ==  null)  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	TypeToken.get(type).getRawType()  ==  null)  {  return  new  ObjectConstructor  <  T>();  }	  TypeToken.get(type).getActualTypeArguments()[0]).getRawType()    ==    null)    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  not  a  statement	93	None	replace
321	[BUG]  [BUGGY]  TypeToken.get(type).getRawType()!=  null)  {  return  new  ObjectConstructor  <  T>();  }  [CE]  not  a  statement  [FE]                                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  TypeToken.get(type).getRawType()!=  null)  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	TypeToken.get(type).getRawType()!=  null)  {  return  new  ObjectConstructor  <  T>();  }	  TypeToken.get(type).getActualTypeArguments()[0]).getRawType()    ==    null)    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  not  a  statement	93	None	replace
322	[BUG]  [BUGGY]  TypeToken.get(type).getElementType()).getRawType()  ==  null)  {  return  new  ObjectConstructor  <  T>();  }  [CE]  ';'  expected  [FE]                                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  TypeToken.get(type).getElementType()).getRawType()  ==  null)  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	TypeToken.get(type).getElementType()).getRawType()  ==  null)  {  return  new  ObjectConstructor  <  T>();  }	  TypeToken.get(type).getActualTypeArguments()[0]).getRawType()    ==    null)    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  ';'  expected	93	None	replace
323	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  Class  <?  extends  T>)  {  return  [CE]  <identifier>  expected  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  Class  <?  extends  T>)  {  return  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  Class  <?  extends  T>)  {  return	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    if(type    instanceof    Class    <?    extends    T>)    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
324	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  Class  <?  extends  T>)  {  return(  [CE]  <identifier>  expected  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  Class  <?  extends  T>)  {  return(  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  Class  <?  extends  T>)  {  return(	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    if(type    instanceof    Class    <?    extends    T>)    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
325	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  Class  <?  extends  T>)  {  return  new  [CE]  <identifier>  expected  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  Class  <?  extends  T>)  {  return  new  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  Class  <?  extends  T>)  {  return  new	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    if(type    instanceof    Class    <?    extends    T>)    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
326	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  Class  <?  extends  T>)  {  return(T)new  TreeMap  <  Object,  Object>  [CE]  <identifier>  expected  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  Class  <?  extends  T>)  {  return(T)new  TreeMap  <  Object,  Object>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  if(type  instanceof  Class  <?  extends  T>)  {  return(T)new  TreeMap  <  Object,  Object>	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    if(type    instanceof    Class    <?    extends    T>)    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
327	[BUG]  [BUGGY]  return(SortedMap)new  SortedMapConstructor  <  T>()  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap)new  SortedMapConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap)new  SortedMapConstructor  <  T>()  {	  return    new    SortedMapConstructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
328	[BUG]  [BUGGY]  return  new  SortedMapConstructor  <  T>(rawType)  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  SortedMapConstructor  <  T>(rawType)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  SortedMapConstructor  <  T>(rawType)  {	  return    new    SortedMapConstructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
329	[BUG]  [BUGGY]  return(T)new  SortedMapConstructor  <  T>()  {  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  SortedMapConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  SortedMapConstructor  <  T>()  {	  return    new    SortedMapConstructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
330	[BUG]  [BUGGY]  Return  new  SortedMapConstructor  <  T>()  {  [CE]  not  a  statement  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Return  new  SortedMapConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Return  new  SortedMapConstructor  <  T>()  {	  return    new    SortedMapConstructor    <    T>()    {    	non-compiled	[CE]  not  a  statement	63	None	replace
331	[BUG]  [BUGGY]  return  new  SortedMapConstructor  <  Object>()  {  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  SortedMapConstructor  <  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  SortedMapConstructor  <  Object>()  {	  return    new    SortedMapConstructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
332	[BUG]  [BUGGY]  final  SortedMapConstructor  <  T>()  {  [CE]  <identifier>  expected  [FE]                                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  final  SortedMapConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	final  SortedMapConstructor  <  T>()  {	  return    new    SortedMapConstructor    <    T>()    {    	non-compiled	[CE]  <identifier>  expected	63	None	replace
333	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType,  type);  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType,  type);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  DefaultImplementationConstructor  <  T>(rawType,  type);	  return    new    DefaultImplementationConstructor    <    T>(rawType);    	non-compiled	[CE]  ';'  expected	87	None	replace
334	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType,  elementType);  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType,  elementType);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  DefaultImplementationConstructor  <  T>(rawType,  elementType);	  return    new    DefaultImplementationConstructor    <    T>(rawType);    	non-compiled	[CE]  ';'  expected	87	None	replace
335	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(type);  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(type);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  DefaultImplementationConstructor  <  T>(type);	  return    new    DefaultImplementationConstructor    <    T>(rawType);    	non-compiled	[CE]  ';'  expected	87	None	replace
336	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType,  null);  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType,  null);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  DefaultImplementationConstructor  <  T>(rawType,  null);	  return    new    DefaultImplementationConstructor    <    T>(rawType);    	non-compiled	[CE]  ';'  expected	87	None	replace
337	[BUG]  [BUGGY]  return(T)new  DefaultImplementationConstructor  <  T>(rawType);  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  DefaultImplementationConstructor  <  T>(rawType);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  DefaultImplementationConstructor  <  T>(rawType);	  return    new    DefaultImplementationConstructor    <    T>(rawType);    	non-compiled	[CE]  ';'  expected	87	None	replace
338	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(elementType);  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(elementType);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  DefaultImplementationConstructor  <  T>(elementType);	  return    new    DefaultImplementationConstructor    <    T>(rawType);    	non-compiled	[CE]  ';'  expected	87	None	replace
339	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType,  this);  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType,  this);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  DefaultImplementationConstructor  <  T>(rawType,  this);	  return    new    DefaultImplementationConstructor    <    T>(rawType);    	non-compiled	[CE]  ';'  expected	87	None	replace
340	[BUG]  [BUGGY]  ArrayList  <  Object,  Object>  result  =  new  ArrayList  <  Object,  Object>()  {  [CE]  wrong  number  of  type  arguments;  required  1  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  ArrayList  <  Object,  Object>  result  =  new  ArrayList  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	ArrayList  <  Object,  Object>  result  =  new  ArrayList  <  Object,  Object>()  {	  return(T)new    ArrayList    <    Object,    Object>()    {    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  1	80	None	replace
341	[BUG]  [BUGGY]  ArrayList  <  Object,  Object>  result  =  new  ArrayList  <  Object,  Object>();  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  ArrayList  <  Object,  Object>  result  =  new  ArrayList  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	ArrayList  <  Object,  Object>  result  =  new  ArrayList  <  Object,  Object>();	  return(T)new    ArrayList    <    Object,    Object>()    {    	non-compiled	[CE]  ';'  expected	80	None	replace
342	[BUG]  [BUGGY]  ArrayList  <  Object,  Object>  result  =  new  LinkedHashMap  <  Object,  Object>();  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  ArrayList  <  Object,  Object>  result  =  new  LinkedHashMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	ArrayList  <  Object,  Object>  result  =  new  LinkedHashMap  <  Object,  Object>();	  return(T)new    ArrayList    <    Object,    Object>()    {    	non-compiled	[CE]  ';'  expected	80	None	replace
343	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>()  ==  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>()  ==  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>()  ==  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }	  return    new    ObjectConstructor    <    T>()    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
344	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>()!=  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>()!=  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>()!=  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }	  return    new    ObjectConstructor    <    T>()    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
345	[BUG]  [BUGGY]  return  new  TreeMap  <  Object,  Object>()!=  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  TreeMap  <  Object,  Object>()!=  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  TreeMap  <  Object,  Object>()!=  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }	  return    new    ObjectConstructor    <    T>()    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
346	[BUG]  [BUGGY]  if(type  instanceof  TreeMap)  {  return  new  ObjectConstructor  <  T>()!=  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  TreeMap)  {  return  new  ObjectConstructor  <  T>()!=  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  TreeMap)  {  return  new  ObjectConstructor  <  T>()!=  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }	  return    new    ObjectConstructor    <    T>()    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
347	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>()!=  @Override  public  T  construct()  {  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }  }  ;  [CE]  illegal  start  of  expression  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>()!=  @Override  public  T  construct()  {  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }  }  ;  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>()!=  @Override  public  T  construct()  {  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }  }  ;	  return    new    ObjectConstructor    <    T>()    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
348	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return  new  SortedMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return  new  SortedMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType))  {  return  new  SortedMap  <  Object,  Object>();  }	  return    new    SortedMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	49	None	replace
349	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return  new  SortedMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return  new  SortedMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return  new  SortedMap  <  Object,  Object>();  }	  return    new    SortedMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	49	None	replace
350	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return  new  SortedMap  <  Object,  Object>();  }  else  if(type  instanceof  SortedMap.class.isAssignableFrom(rawType))  {  return  new  SortedMap  <  Object,  Object>();  }  [CE]  <identifier>  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return  new  SortedMap  <  Object,  Object>();  }  else  if(type  instanceof  SortedMap.class.isAssignableFrom(rawType))  {  return  new  SortedMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType))  {  return  new  SortedMap  <  Object,  Object>();  }  else  if(type  instanceof  SortedMap.class.isAssignableFrom(rawType))  {  return  new  SortedMap  <  Object,  Object>();  }	  return    new    SortedMap    <    Object,    Object>();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
351	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap)  {  return  new  SortedMap  <  Object,  Object>();  }  else  if(type  instanceof  SortedMap.class.isAssignableFrom(rawType))  {  return  new  SortedMap  <  Object,  Object>();  }  [CE]  <identifier>  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap)  {  return  new  SortedMap  <  Object,  Object>();  }  else  if(type  instanceof  SortedMap.class.isAssignableFrom(rawType))  {  return  new  SortedMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap)  {  return  new  SortedMap  <  Object,  Object>();  }  else  if(type  instanceof  SortedMap.class.isAssignableFrom(rawType))  {  return  new  SortedMap  <  Object,  Object>();  }	  return    new    SortedMap    <    Object,    Object>();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
352	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  return  new  SortedMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  return  new  SortedMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||  TreeMap.class.isAssignableFrom(rawType))  {  return  new  SortedMap  <  Object,  Object>();  }	  return    new    SortedMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	49	None	replace
353	[BUG]  [BUGGY]  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  SortedMap  <  Object,  Object>  [CE]  <identifier>  expected  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  SortedMap  <  Object,  Object>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  SortedMap  <  Object,  Object>	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    SortedMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
354	[BUG]  [BUGGY]  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  SortedMap  <  Object,  Object>()  [CE]  <identifier>  expected  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  SortedMap  <  Object,  Object>()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  SortedMap  <  Object,  Object>()	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    SortedMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
355	[BUG]  [BUGGY]  return  new  TreeMap  <  Object,  Object>(rawType,  type)  {  [CE]  no  suitable  constructor  found  for  TreeMap(Class<CAP#1>,Type)  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  TreeMap  <  Object,  Object>(rawType,  type)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  TreeMap  <  Object,  Object>(rawType,  type)  {	  return    new    TreeMap    <    Object,    Object>(rawType)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  TreeMap(Class<CAP#1>,Type)	38	None	replace
356	[BUG]  [BUGGY]  return  new  TreeMap  <  Object,  Object>(rawType,  null)  {  [CE]  no  suitable  constructor  found  for  TreeMap(Class<CAP#1>,<null>)  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  TreeMap  <  Object,  Object>(rawType,  null)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  TreeMap  <  Object,  Object>(rawType,  null)  {	  return    new    TreeMap    <    Object,    Object>(rawType)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  TreeMap(Class<CAP#1>,<null>)	38	None	replace
357	[BUG]  [BUGGY]  return  new  TreeMap  <  Object,  Object>(rawType,  false)  {  [CE]  no  suitable  constructor  found  for  TreeMap(Class<CAP#1>,boolean)  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  TreeMap  <  Object,  Object>(rawType,  false)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  TreeMap  <  Object,  Object>(rawType,  false)  {	  return    new    TreeMap    <    Object,    Object>(rawType)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  TreeMap(Class<CAP#1>,boolean)	38	None	replace
358	[BUG]  [BUGGY]  return  new  TreeMap  <  Object,  Object>(rawType,  elementType)  {  [CE]  cannot  find  symbol  elementType  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  TreeMap  <  Object,  Object>(rawType,  elementType)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  TreeMap  <  Object,  Object>(rawType,  elementType)  {	  return    new    TreeMap    <    Object,    Object>(rawType)    {    	non-compiled	[CE]  cannot  find  symbol  elementType	38	None	replace
359	[BUG]  [BUGGY]  return  new  TreeMap  <  Object,  Object>(rawType,  scope)  {  [CE]  cannot  find  symbol  scope  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  TreeMap  <  Object,  Object>(rawType,  scope)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  TreeMap  <  Object,  Object>(rawType,  scope)  {	  return    new    TreeMap    <    Object,    Object>(rawType)    {    	non-compiled	[CE]  cannot  find  symbol  scope	38	None	replace
360	[BUG]  [BUGGY]  return  new  TreeMap  <  Object,  Object>(rawType,  this.instanceCreators)  {  [CE]  no  suitable  constructor  found  for  TreeMap(Class<CAP#1>,Map<Type,InstanceCreator<?>>)  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  TreeMap  <  Object,  Object>(rawType,  this.instanceCreators)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  TreeMap  <  Object,  Object>(rawType,  this.instanceCreators)  {	  return    new    TreeMap    <    Object,    Object>(rawType)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  TreeMap(Class<CAP#1>,Map<Type,InstanceCreator<?>>)	38	None	replace
361	[BUG]  [BUGGY]  return  new  TreeMap  <  Object,  Object>(rawType.getClass())  {  [CE]  no  suitable  constructor  found  for  TreeMap(Class<CAP#1>)  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  TreeMap  <  Object,  Object>(rawType.getClass())  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  TreeMap  <  Object,  Object>(rawType.getClass())  {	  return    new    TreeMap    <    Object,    Object>(rawType)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  TreeMap(Class<CAP#1>)	38	None	replace
362	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return(SortedMap  <  Object,  Object>)new  SortedHashMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return(SortedMap  <  Object,  Object>)new  SortedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType))  {  return(SortedMap  <  Object,  Object>)new  SortedHashMap  <  Object,  Object>();  }	  return(SortedMap    <    Object,    Object>)new    SortedHashMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	98	None	replace
363	[BUG]  [BUGGY]  return(SortedMap  <  Object,  Object>)new  SortedArrayHashMap  <  Object,  Object>();  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap  <  Object,  Object>)new  SortedArrayHashMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap  <  Object,  Object>)new  SortedArrayHashMap  <  Object,  Object>();	  return(SortedMap    <    Object,    Object>)new    SortedHashMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	98	None	replace
364	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return(SortedMap  <  Object,  Object>)new  SortedHashMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return(SortedMap  <  Object,  Object>)new  SortedHashMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType))  {  return(SortedMap  <  Object,  Object>)new  SortedHashMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>();  }	  return(SortedMap    <    Object,    Object>)new    SortedHashMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	98	None	replace
365	[BUG]  [BUGGY]  return(SortedMap  <  Object,  Object>)new  SortedList  <  Object,  Object>();  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap  <  Object,  Object>)new  SortedList  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap  <  Object,  Object>)new  SortedList  <  Object,  Object>();	  return(SortedMap    <    Object,    Object>)new    SortedHashMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	98	None	replace
366	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  <identifier>  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
367	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	15	None	replace
368	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  <identifier>  expected  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap.class.isAssignableFrom(rawType)&&  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
369	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  rawType.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType.isAssignableFrom(SortedMap.class)||  rawType.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType.isAssignableFrom(SortedMap.class)||  rawType.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	15	None	replace
370	[BUG]  [BUGGY]  return(Constructor  <  T>)new  Constructor  <  T>();  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(Constructor  <  T>)new  Constructor  <  T>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(Constructor  <  T>)new  Constructor  <  T>();	  return(Constructor    <    T>)new    Constructor    <    T>()    {    	non-compiled	[CE]  ';'  expected	30	None	replace
371	[BUG]  [BUGGY]  return(Constructor  <  Object>)new  Constructor  <  T>()  {  [CE]  constructor  Constructor  in  class  Constructor<T#2>  cannot  be  applied  to  given  types;  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(Constructor  <  Object>)new  Constructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(Constructor  <  Object>)new  Constructor  <  T>()  {	  return(Constructor    <    T>)new    Constructor    <    T>()    {    	non-compiled	[CE]  constructor  Constructor  in  class  Constructor<T#2>  cannot  be  applied  to  given  types;	30	None	replace
372	[BUG]  [BUGGY]  return(Constructor  <  T>)new  Constructor  <  T>(instanceCreators);  [CE]  ';'  expected  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(Constructor  <  T>)new  Constructor  <  T>(instanceCreators);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(Constructor  <  T>)new  Constructor  <  T>(instanceCreators);	  return(Constructor    <    T>)new    Constructor    <    T>()    {    	non-compiled	[CE]  ';'  expected	30	None	replace
373	[BUG]  [BUGGY]  return(Constructor  <  T>)new  Constructor  <  T>(null,  null,  null);  [CE]  ';'  expected  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(Constructor  <  T>)new  Constructor  <  T>(null,  null,  null);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(Constructor  <  T>)new  Constructor  <  T>(null,  null,  null);	  return(Constructor    <    T>)new    Constructor    <    T>()    {    	non-compiled	[CE]  ';'  expected	30	None	replace
374	[BUG]  [BUGGY]  return(Constructor  <  T>)new  Constructor  <  T>(rawType);  [CE]  ';'  expected  [FE]                                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(Constructor  <  T>)new  Constructor  <  T>(rawType);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(Constructor  <  T>)new  Constructor  <  T>(rawType);	  return(Constructor    <    T>)new    Constructor    <    T>()    {    	non-compiled	[CE]  ';'  expected	30	None	replace
375	[BUG]  [BUGGY]  return(T)new  ObjectConstructor  <  Object>();  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  ObjectConstructor  <  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  ObjectConstructor  <  Object>();	  return(T)new    ObjectConstructor    <    Object>()    {    	non-compiled	[CE]  ';'  expected	47	None	replace
376	[BUG]  [BUGGY]  return(T)new  ArrayList  <  Object>()  {  [CE]  method  does  not  override  or  implement  a  method  from  a  supertype  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  ArrayList  <  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  ArrayList  <  Object>()  {	  return(T)new    ObjectConstructor    <    Object>()    {    	non-compiled	[CE]  method  does  not  override  or  implement  a  method  from  a  supertype	47	None	replace
377	[BUG]  [BUGGY]  return(T)new  Constructor  <  Object>()  {  [CE]  constructor  Constructor  in  class  Constructor<T>  cannot  be  applied  to  given  types;  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  Constructor  <  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  Constructor  <  Object>()  {	  return(T)new    ObjectConstructor    <    Object>()    {    	non-compiled	[CE]  constructor  Constructor  in  class  Constructor<T>  cannot  be  applied  to  given  types;	47	None	replace
378	[BUG]  [BUGGY]  return  new  TreeMap  <  Class  <?  super  T>();  [CE]  >  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  TreeMap  <  Class  <?  super  T>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  TreeMap  <  Class  <?  super  T>();	  return    new    TreeMap    <    Class    <?    super    T>()    {    	non-compiled	[CE]  >  expected	99	None	replace
379	[BUG]  [BUGGY]  return  new  TreeMap  <  Class  <?  super  T>(rawType)  {  [CE]  >  expected  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  TreeMap  <  Class  <?  super  T>(rawType)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  TreeMap  <  Class  <?  super  T>(rawType)  {	  return    new    TreeMap    <    Class    <?    super    T>()    {    	non-compiled	[CE]  >  expected	99	None	replace
380	[BUG]  [BUGGY]  return(T)new  TreeMap  <  Class  <?  super  T>();  [CE]  >  expected  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  TreeMap  <  Class  <?  super  T>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  TreeMap  <  Class  <?  super  T>();	  return    new    TreeMap    <    Class    <?    super    T>()    {    	non-compiled	[CE]  >  expected	99	None	replace
381	[BUG]  [BUGGY]  return  new  TreeMap  <  Class  <?  super  T>(rawType);  [CE]  >  expected  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  TreeMap  <  Class  <?  super  T>(rawType);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  TreeMap  <  Class  <?  super  T>(rawType);	  return    new    TreeMap    <    Class    <?    super    T>()    {    	non-compiled	[CE]  >  expected	99	None	replace
382	[BUG]  [BUGGY]  return(T)new  SortedHashMap  <  Object,  Object>()  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  SortedHashMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  SortedHashMap  <  Object,  Object>()  {	  return(T)new    PropertyMap    <    Object,    Object>()    {    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
383	[BUG]  [BUGGY]  Return(T)new  TreeMap  <  Object,  Object>()  {  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Return(T)new  TreeMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Return(T)new  TreeMap  <  Object,  Object>()  {	  return(T)new    PropertyMap    <    Object,    Object>()    {    	non-compiled	[CE]  ';'  expected	34	None	replace
384	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  true,  false)  {  [CE]  anonymous  class  implements  interface;  cannot  have  arguments  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  true,  false)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>(rawType,  true,  false)  {	  return    new    ObjectConstructor    <    T>(rawType,    true)    {    	non-compiled	[CE]  anonymous  class  implements  interface;  cannot  have  arguments	83	None	replace
385	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  true,  null)  {  [CE]  anonymous  class  implements  interface;  cannot  have  arguments  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  true,  null)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>(rawType,  true,  null)  {	  return    new    ObjectConstructor    <    T>(rawType,    true)    {    	non-compiled	[CE]  anonymous  class  implements  interface;  cannot  have  arguments	83	None	replace
386	[BUG]  [BUGGY]  return(T)new  ObjectConstructor  <  T>(rawType,  true)  {  [CE]  anonymous  class  implements  interface;  cannot  have  arguments  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  ObjectConstructor  <  T>(rawType,  true)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  ObjectConstructor  <  T>(rawType,  true)  {	  return    new    ObjectConstructor    <    T>(rawType,    true)    {    	non-compiled	[CE]  anonymous  class  implements  interface;  cannot  have  arguments	83	None	replace
387	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  null),  true)  {  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  null),  true)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>(rawType,  null),  true)  {	  return    new    ObjectConstructor    <    T>(rawType,    true)    {    	non-compiled	[CE]  ';'  expected	83	None	replace
388	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>(type,  true)  {  [CE]  anonymous  class  implements  interface;  cannot  have  arguments  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>(type,  true)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>(type,  true)  {	  return    new    ObjectConstructor    <    T>(rawType,    true)    {    	non-compiled	[CE]  anonymous  class  implements  interface;  cannot  have  arguments	83	None	replace
389	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  ArrayList  <  Object,  ObjectConstructor  <  T>()  {  [CE]  >  expected  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  ArrayList  <  Object,  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  ArrayList  <  Object,  ObjectConstructor  <  T>()  {	  return(T)new    ArrayList    <    Object,    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  >  expected	79	None	replace
390	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  ArrayList  <  Object,  ObjectConstructor  <  T>()  {  }  [CE]  >  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  ArrayList  <  Object,  ObjectConstructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  ArrayList  <  Object,  ObjectConstructor  <  T>()  {  }	  return(T)new    ArrayList    <    Object,    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  >  expected	79	None	replace
391	[BUG]  [BUGGY]  (T)new  TreeMap  <  Object,  ObjectConstructor  <  T>()  {  [CE]  >  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  (T)new  TreeMap  <  Object,  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	(T)new  TreeMap  <  Object,  ObjectConstructor  <  T>()  {	  return(T)new    ArrayList    <    Object,    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  >  expected	79	None	replace
392	[BUG]  [BUGGY]  TypeToken.get(type).getActualTypeArguments()  [1]).getRawType())  {  return  new  ObjectConstructor  <  T>();  [CE]  not  a  statement  [FE]                                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  TypeToken.get(type).getActualTypeArguments()  [1]).getRawType())  {  return  new  ObjectConstructor  <  T>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	TypeToken.get(type).getActualTypeArguments()  [1]).getRawType())  {  return  new  ObjectConstructor  <  T>();	  TypeToken.get(type).getActualTypeArguments()    [0]).getRawType())    {    return    new    ObjectConstructor    <    T>();    	non-compiled	[CE]  not  a  statement	95	None	replace
393	[BUG]  [BUGGY]  TypeToken.get(type).getActualTypeArguments()  [0]).setRawType())  {  return  new  ObjectConstructor  <  T>();  [CE]  not  a  statement  [FE]                                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  TypeToken.get(type).getActualTypeArguments()  [0]).setRawType())  {  return  new  ObjectConstructor  <  T>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	TypeToken.get(type).getActualTypeArguments()  [0]).setRawType())  {  return  new  ObjectConstructor  <  T>();	  TypeToken.get(type).getActualTypeArguments()    [0]).getRawType())    {    return    new    ObjectConstructor    <    T>();    	non-compiled	[CE]  not  a  statement	95	None	replace
394	[BUG]  [BUGGY]  type  =  TypeToken.get(type).getActualTypeArguments()  [0]).getRawType())  {  return  new  ObjectConstructor  <  T>();  [CE]  ';'  expected  [FE]                                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  type  =  TypeToken.get(type).getActualTypeArguments()  [0]).getRawType())  {  return  new  ObjectConstructor  <  T>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	type  =  TypeToken.get(type).getActualTypeArguments()  [0]).getRawType())  {  return  new  ObjectConstructor  <  T>();	  TypeToken.get(type).getActualTypeArguments()    [0]).getRawType())    {    return    new    ObjectConstructor    <    T>();    	non-compiled	[CE]  ';'  expected	95	None	replace
395	[BUG]  [BUGGY]  TypeToken.get(type).getActualTypeArguments()  [0].getRawType())  {  return  new  ObjectConstructor  <  T>();  [CE]  ';'  expected  [FE]                                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  TypeToken.get(type).getActualTypeArguments()  [0].getRawType())  {  return  new  ObjectConstructor  <  T>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	TypeToken.get(type).getActualTypeArguments()  [0].getRawType())  {  return  new  ObjectConstructor  <  T>();	  TypeToken.get(type).getActualTypeArguments()    [0]).getRawType())    {    return    new    ObjectConstructor    <    T>();    	non-compiled	[CE]  ';'  expected	95	None	replace
396	[BUG]  [BUGGY]  TypeToken.get(type).getRawType())  {  return  new  ObjectConstructor  <  T>();  [CE]  ';'  expected  [FE]                                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  TypeToken.get(type).getRawType())  {  return  new  ObjectConstructor  <  T>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	TypeToken.get(type).getRawType())  {  return  new  ObjectConstructor  <  T>();	  TypeToken.get(type).getActualTypeArguments()    [0]).getRawType())    {    return    new    ObjectConstructor    <    T>();    	non-compiled	[CE]  ';'  expected	95	None	replace
397	[BUG]  [BUGGY]  return(T)new  DefaultImplementationConstructor  <  T>()  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  DefaultImplementationConstructor  <  T>()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  DefaultImplementationConstructor  <  T>()	  return    new    DefaultImplementationConstructor    <    T>()    ==    	non-compiled	[CE]  ';'  expected	26	None	replace
398	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>()  ||  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>()  ||  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  DefaultImplementationConstructor  <  T>()  ||	  return    new    DefaultImplementationConstructor    <    T>()    ==    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
399	[BUG]  [BUGGY]  return(T)new  DefaultImplementationConstructor  <  T>();  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  DefaultImplementationConstructor  <  T>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  DefaultImplementationConstructor  <  T>();	  return    new    DefaultImplementationConstructor    <    T>()    ==    	non-compiled	[CE]  ';'  expected	26	None	replace
400	[BUG]  [BUGGY]  if(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  SortedMap  <  Object,  Object>  [CE]  <identifier>  expected  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  SortedMap  <  Object,  Object>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  SortedMap  <  Object,  Object>	  if(type    instanceof    SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    SortedMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
401	[BUG]  [BUGGY]  if(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  SortedMap  <  Object,  Object>()  [CE]  <identifier>  expected  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  SortedMap  <  Object,  Object>()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  SortedMap  <  Object,  Object>()	  if(type    instanceof    SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    SortedMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
402	[BUG]  [BUGGY]  if(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  SortedMap  <  Object,  Object>();  }  [CE]  <identifier>  expected  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  SortedMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  SortedMap  <  Object,  Object>();  }	  if(type    instanceof    SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    SortedMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
403	[BUG]  [BUGGY]  if(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  <identifier>  expected  [FE]                                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [1]).getRawType()))  {  return  new  TreeMap  <  Object,  Object>();  }	  if(type    instanceof    SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
404	[BUG]  [BUGGY]  if(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  TreeMap  <  Object,  Object>()  [CE]  <identifier>  expected  [FE]                                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  TreeMap  <  Object,  Object>()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  TreeMap  <  Object,  Object>()	  if(type    instanceof    SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
405	[BUG]  [BUGGY]  SortedMap  <  Object,  Object>  type  =  SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType());  [CE]  ';'  expected  [FE]                                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  SortedMap  <  Object,  Object>  type  =  SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType());  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	SortedMap  <  Object,  Object>  type  =  SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType());	  if(type    instanceof    SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	78	None	replace
406	[BUG]  [BUGGY]  SortedMap  <  Object,  Object>  type  =  SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType();  [CE]  ';'  expected  [FE]                                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  SortedMap  <  Object,  Object>  type  =  SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	SortedMap  <  Object,  Object>  type  =  SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType();	  if(type    instanceof    SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	78	None	replace
407	[BUG]  [BUGGY]  TreeMap  <  Object,  Object>  return  new  TreeMap  <  Object,  Object>();  [CE]  not  a  statement  [FE]                                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  TreeMap  <  Object,  Object>  return  new  TreeMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	TreeMap  <  Object,  Object>  return  new  TreeMap  <  Object,  Object>();	  if(type    instanceof    SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  not  a  statement	78	None	replace
408	[BUG]  [BUGGY]  TypeToken.get(type).getActualTypeArguments()  [1]).getRawType())  {  return  new  ObjectConstructor  <  T>();  }  [CE]  not  a  statement  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  TypeToken.get(type).getActualTypeArguments()  [1]).getRawType())  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	TypeToken.get(type).getActualTypeArguments()  [1]).getRawType())  {  return  new  ObjectConstructor  <  T>();  }	  TypeToken.get(type).getActualTypeArguments()    [0]).getRawType())    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  not  a  statement	91	None	replace
409	[BUG]  [BUGGY]  TypeToken.get(type).getActualTypeArguments()  [0]).setRawType())  {  return  new  ObjectConstructor  <  T>();  }  [CE]  not  a  statement  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  TypeToken.get(type).getActualTypeArguments()  [0]).setRawType())  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	TypeToken.get(type).getActualTypeArguments()  [0]).setRawType())  {  return  new  ObjectConstructor  <  T>();  }	  TypeToken.get(type).getActualTypeArguments()    [0]).getRawType())    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  not  a  statement	91	None	replace
410	[BUG]  [BUGGY]  type  =  TypeToken.get(type).getActualTypeArguments()  [0]).getRawType())  {  return  new  ObjectConstructor  <  T>();  }  [CE]  ';'  expected  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  type  =  TypeToken.get(type).getActualTypeArguments()  [0]).getRawType())  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	type  =  TypeToken.get(type).getActualTypeArguments()  [0]).getRawType())  {  return  new  ObjectConstructor  <  T>();  }	  TypeToken.get(type).getActualTypeArguments()    [0]).getRawType())    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  ';'  expected	91	None	replace
411	[BUG]  [BUGGY]  TypeToken.get(type).getActualTypeArguments()  [0].getRawType())  {  return  new  ObjectConstructor  <  T>();  }  [CE]  ';'  expected  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  TypeToken.get(type).getActualTypeArguments()  [0].getRawType())  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	TypeToken.get(type).getActualTypeArguments()  [0].getRawType())  {  return  new  ObjectConstructor  <  T>();  }	  TypeToken.get(type).getActualTypeArguments()    [0]).getRawType())    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  ';'  expected	91	None	replace
412	[BUG]  [BUGGY]  TypeToken.get(type).getRawType())  {  return  new  ObjectConstructor  <  T>();  }  [CE]  ';'  expected  [FE]                                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  TypeToken.get(type).getRawType())  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	TypeToken.get(type).getRawType())  {  return  new  ObjectConstructor  <  T>();  }	  TypeToken.get(type).getActualTypeArguments()    [0]).getRawType())    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  ';'  expected	91	None	replace
413	[BUG]  [BUGGY]  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [1]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [1]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [1]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
414	[BUG]  [BUGGY]  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " "));  }  [CE]  <identifier>  expected  [FE]                                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " "));  }	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
415	[BUG]  [BUGGY]  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ".);  }	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
416	[BUG]  [BUGGY]  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  <identifier>  expected  [FE]                                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( ". ");  }	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
417	[BUG]  [BUGGY]  return  new  ArrayList  <  Object,  Object>();  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ArrayList  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ArrayList  <  Object,  Object>();	  return    new    ArrayList    <    Object,    Object>()    {    	non-compiled	[CE]  ';'  expected	61	None	replace
418	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>();  }  }  [CE]  <identifier>  expected  [FE]              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>();  }  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>();  }  }	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
419	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>();  }  }  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>();  }  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  Class  <?>)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>();  }  }	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	57	None	replace
420	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>  [CE]  <identifier>  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
421	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  <identifier>  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
422	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>()  [CE]  <identifier>  expected  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap.class)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>()	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
423	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  Class  <?>)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	57	None	replace
424	[BUG]  [BUGGY]  return(T)new  ObjectConstructor  <  T>()!=  @Override  public  T  construct()  {  return  (T)  new  TreeMap  <  Object,  Object>();  }  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  ObjectConstructor  <  T>()!=  @Override  public  T  construct()  {  return  (T)  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  ObjectConstructor  <  T>()!=  @Override  public  T  construct()  {  return  (T)  new  TreeMap  <  Object,  Object>();  }	  return(T)new    ObjectConstructor    <    T>()    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
425	[BUG]  [BUGGY]  return(T)new  ObjectConstructor  <  T>()  >>  @Override  public  T  construct()  {  return  (T)  new  TreeMap  <  Object,  Object>();  }  [CE]  illegal  start  of  expression  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  ObjectConstructor  <  T>()  >>  @Override  public  T  construct()  {  return  (T)  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  ObjectConstructor  <  T>()  >>  @Override  public  T  construct()  {  return  (T)  new  TreeMap  <  Object,  Object>();  }	  return(T)new    ObjectConstructor    <    T>()    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
426	[BUG]  [BUGGY]  if(type  instanceof  TreeMap)  {  return(T)new  ObjectConstructor  <  T>()!=  @Override  public  T  construct()  {  return(T)  new  TreeMap  <  Object,  Object>();  }  [CE]  illegal  start  of  expression  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  TreeMap)  {  return(T)new  ObjectConstructor  <  T>()!=  @Override  public  T  construct()  {  return(T)  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  TreeMap)  {  return(T)new  ObjectConstructor  <  T>()!=  @Override  public  T  construct()  {  return(T)  new  TreeMap  <  Object,  Object>();  }	  return(T)new    ObjectConstructor    <    T>()    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
427	[BUG]  [BUGGY]  return  new  LinkedHashMap  <?  super  T>()  {  [CE]  wrong  number  of  type  arguments;  required  2  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  LinkedHashMap  <?  super  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  LinkedHashMap  <?  super  T>()  {	  return    new    TreeMap    <?    super    T>()    {    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  2	66	None	replace
428	[BUG]  [BUGGY]  return  new  Constructor  <  T>(TypeToken.getRawClass())  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  T>(TypeToken.getRawClass())  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  T>(TypeToken.getRawClass())  {	  return    new    Constructor    <    T>(type.getRawClass())    {    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
429	[BUG]  [BUGGY]  return  new  Constructor  <  T>(type,  getRawClass())  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  T>(type,  getRawClass())  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  T>(type,  getRawClass())  {	  return    new    Constructor    <    T>(type.getRawClass())    {    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
430	[BUG]  [BUGGY]  return(SortedMap)new  SortedMap  <  Object,  Object>()  {  [CE]  <anonymous  com.google.gson.internal.ConstructorConstructor$9>  is  not  abstract  and  does  not  override  abstract  method  entrySet()  in  SortedMap  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap)new  SortedMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap)new  SortedMap  <  Object,  Object>()  {	  return(T)new    SortedMap    <    Object,    Object>()    {    	non-compiled	[CE]  <anonymous  com.google.gson.internal.ConstructorConstructor$9>  is  not  abstract  and  does  not  override  abstract  method  entrySet()  in  SortedMap	48	None	replace
431	[BUG]  [BUGGY]  SortedMap  <  Object,  Object>  return  new  SortedMap  <  Object,  Object>();  [CE]  not  a  statement  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  SortedMap  <  Object,  Object>  return  new  SortedMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	SortedMap  <  Object,  Object>  return  new  SortedMap  <  Object,  Object>();	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    SortedMap    <    Object,    Object>();    }    	non-compiled	[CE]  not  a  statement	6	None	replace
432	[BUG]  [BUGGY]  Class  <?>  rawType  =  TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType();  [CE]  ';'  expected  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?>  rawType  =  TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Class  <?>  rawType  =  TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType();	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    SortedMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	6	None	replace
433	[BUG]  [BUGGY]  SortedMap  <  Object,  Object>  result  =  new  SortedMap  <  Object,  Object>();  [CE]  ';'  expected  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  SortedMap  <  Object,  Object>  result  =  new  SortedMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	SortedMap  <  Object,  Object>  result  =  new  SortedMap  <  Object,  Object>();	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    SortedMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	6	None	replace
434	[BUG]  [BUGGY]  Class  <?>  rawType  =  type.getRawType();  [CE]  ';'  expected  [FE]                                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?>  rawType  =  type.getRawType();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Class  <?>  rawType  =  type.getRawType();	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    SortedMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	6	None	replace
435	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  instanceCreators.iterator();  [CE]  ';'  expected  [FE]                                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Iterator  <  Object>  it  =  instanceCreators.iterator();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Iterator  <  Object>  it  =  instanceCreators.iterator();	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    SortedMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	6	None	replace
436	[BUG]  [BUGGY]  DeserializedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  DeserializedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	DeserializedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	12	None	replace
437	[BUG]  [BUGGY]  DeserializedMap.class.isAssignableFrom(rawType)  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  DeserializedMap.class.isAssignableFrom(rawType)  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	DeserializedMap.class.isAssignableFrom(rawType)  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	12	None	replace
438	[BUG]  [BUGGY]  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types:  {  }  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types:  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types:  {  }	  Constructor    <    T>    in    class    Constructor    <    T#2>    cannot    be    applied    to    given    types;    	non-compiled	[CE]  ';'  expected	27	None	replace
439	[BUG]  [BUGGY]  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  rawType;  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  rawType;  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  rawType;	  Constructor    <    T>    in    class    Constructor    <    T#2>    cannot    be    applied    to    given    types;    	non-compiled	[CE]  ';'  expected	27	None	replace
440	[BUG]  [BUGGY]  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  rawType);  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  rawType);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  rawType);	  Constructor    <    T>    in    class    Constructor    <    T#2>    cannot    be    applied    to    given    types;    	non-compiled	[CE]  ';'  expected	27	None	replace
441	[BUG]  [BUGGY]  SortedMap.class.isAssignableFrom(rawType)  {  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  SortedMap.class.isAssignableFrom(rawType)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	SortedMap.class.isAssignableFrom(rawType)  {	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    if(type    instanceof    Class    <?    extends    T>)    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	17	None	replace
442	[BUG]  [BUGGY]  Class  <?  extends  T>  rawType  =  type  instanceof  Class  <?  extends  T>;  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  extends  T>  rawType  =  type  instanceof  Class  <?  extends  T>;  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Class  <?  extends  T>  rawType  =  type  instanceof  Class  <?  extends  T>;	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    if(type    instanceof    Class    <?    extends    T>)    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	17	None	replace
443	[BUG]  [BUGGY]  parentMap.put(rawType,  new  TreeMap  <  Object,  Object>());  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  parentMap.put(rawType,  new  TreeMap  <  Object,  Object>());  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	parentMap.put(rawType,  new  TreeMap  <  Object,  Object>());	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    if(type    instanceof    Class    <?    extends    T>)    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	17	None	replace
444	[BUG]  [BUGGY]  Class  <?  extends  T>  rawType  =  type.getRawType();  [CE]  ';'  expected  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  extends  T>  rawType  =  type.getRawType();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Class  <?  extends  T>  rawType  =  type.getRawType();	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    if(type    instanceof    Class    <?    extends    T>)    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	17	None	replace
445	[BUG]  [BUGGY]  }  else  if(type  instanceof  Class  <?  extends  T>)  {  [CE]  ';'  expected  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  }  else  if(type  instanceof  Class  <?  extends  T>)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	}  else  if(type  instanceof  Class  <?  extends  T>)  {	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    if(type    instanceof    Class    <?    extends    T>)    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	17	None	replace
446	[BUG]  [BUGGY]  Class  <?  extends  T>  rawType  =  ClassUtil.getRawType(rawType);  [CE]  ';'  expected  [FE]                                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  extends  T>  rawType  =  ClassUtil.getRawType(rawType);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Class  <?  extends  T>  rawType  =  ClassUtil.getRawType(rawType);	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    if(type    instanceof    Class    <?    extends    T>)    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	17	None	replace
447	[BUG]  [BUGGY]  return(LocalizedMap)new  LocalizedMapConstructor  <  T>()  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(LocalizedMap)new  LocalizedMapConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(LocalizedMap)new  LocalizedMapConstructor  <  T>()  {	  return    new    LocalizedMapConstructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
448	[BUG]  [BUGGY]  return(LocalizedMapConstructor  <  T>)new  TreeMap  <  Object,  Object>()  {  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(LocalizedMapConstructor  <  T>)new  TreeMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(LocalizedMapConstructor  <  T>)new  TreeMap  <  Object,  Object>()  {	  return    new    LocalizedMapConstructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
449	[BUG]  [BUGGY]  return(LocalizedMapConstructor  <  T>)new  LinkedHashMap  <  Object,  Object>()  {  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(LocalizedMapConstructor  <  T>)new  LinkedHashMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(LocalizedMapConstructor  <  T>)new  LinkedHashMap  <  Object,  Object>()  {	  return    new    LocalizedMapConstructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
450	[BUG]  [BUGGY]  return  new  TreeMapConstructor  <  T>()  {  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  TreeMapConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  TreeMapConstructor  <  T>()  {	  return    new    LocalizedMapConstructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
451	[BUG]  [BUGGY]  TypeToken.get(type).getActualTypeArguments()  [0]).getRawClass())  {  return  new  ObjectConstructor  <  T>();  [CE]  not  a  statement  [FE]                                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  TypeToken.get(type).getActualTypeArguments()  [0]).getRawClass())  {  return  new  ObjectConstructor  <  T>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	TypeToken.get(type).getActualTypeArguments()  [0]).getRawClass())  {  return  new  ObjectConstructor  <  T>();	  TypeToken.get(type).getActualTypeArguments()    [0]).getRawType())    {    return    new    ObjectConstructor    <    T>();    	non-compiled	[CE]  not  a  statement	95	None	replace
452	[BUG]  [BUGGY]  DeserializedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  DeserializedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	DeserializedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType))    {    return    new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	76	None	replace
453	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortBy.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortBy.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||  SortBy.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType))    {    return    new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	76	None	replace
454	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  rawType.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)&&  rawType.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType)&&  rawType.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType))    {    return    new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	76	None	replace
455	[BUG]  [BUGGY]  DeserializedMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  DeserializedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	DeserializedMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType))    {    return    new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	76	None	replace
456	[BUG]  [BUGGY]  Class  <?>  rawType  =  type  instanceof  SortedMap.class.getAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType());  [CE]  <identifier>  expected  [FE]                                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?>  rawType  =  type  instanceof  SortedMap.class.getAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType());  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Class  <?>  rawType  =  type  instanceof  SortedMap.class.getAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType());	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()[0]).getRawType()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
457	[BUG]  [BUGGY]  Class  <?>  rawType  =  type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType());  [CE]  <identifier>  expected  [FE]                                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?>  rawType  =  type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType());  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Class  <?>  rawType  =  type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType());	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()[0]).getRawType()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
458	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType();  [CE]  ';'  expected  [FE]                                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?>  rawType  =  typeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Class  <?>  rawType  =  typeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType();	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()[0]).getRawType()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	11	None	replace
459	[BUG]  [BUGGY]  Class  <?>  rawType  =  type  instanceof  SortedMap.class.assignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType());  [CE]  <identifier>  expected  [FE]                                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?>  rawType  =  type  instanceof  SortedMap.class.assignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType());  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Class  <?>  rawType  =  type  instanceof  SortedMap.class.assignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType());	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()[0]).getRawType()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
460	[BUG]  [BUGGY]  Class  <?>  rawType  =  type  instanceof  SortedMap.class.getAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType();  [CE]  <identifier>  expected  [FE]                                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?>  rawType  =  type  instanceof  SortedMap.class.getAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Class  <?>  rawType  =  type  instanceof  SortedMap.class.getAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType();	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()[0]).getRawType()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
461	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(type)  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(type)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  DefaultImplementationConstructor  <  T>(type)  {	  return    new    DefaultImplementationConstructor    <    T>(rawType)    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
462	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType,  scope)  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType,  scope)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  DefaultImplementationConstructor  <  T>(rawType,  scope)  {	  return    new    DefaultImplementationConstructor    <    T>(rawType)    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
463	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>()  >>  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>()  >>  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>()  >>  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }	  return    new    ObjectConstructor    <    T>()    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
464	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>()  [Delete]  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>()  [Delete]  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>()  [Delete]  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }	  return    new    ObjectConstructor    <    T>()    	non-compiled	[CE]  ';'  expected	70	None	replace
465	[BUG]  [BUGGY]  return  new  MemberConstructor  <  T>()  {  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  MemberConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  MemberConstructor  <  T>()  {	  return    new    ClassConstructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
466	[BUG]  [BUGGY]  Return  new  TreeMap  <  Object,  Object>()  {  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Return  new  TreeMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Return  new  TreeMap  <  Object,  Object>()  {	  return    new    List    <    Object,    Object>()    {    	non-compiled	[CE]  not  a  statement	82	None	replace
467	[BUG]  [BUGGY]  SortedMap.get(type).getActualTypeArguments()  [0]).getRawType())  {  return  new  ObjectConstructor  <  T>();  }  [CE]  not  a  statement  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  SortedMap.get(type).getActualTypeArguments()  [0]).getRawType())  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	SortedMap.get(type).getActualTypeArguments()  [0]).getRawType())  {  return  new  ObjectConstructor  <  T>();  }	  TypeToken.get(type).getActualTypeArguments()    [0]).getRawType())    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  not  a  statement	91	None	replace
468	[BUG]  [BUGGY]  return(SortedMap  <  Object,  Object>)?  new  SortedMap  <  Object,  Object>()  :  new  SortedMap  <  Object,  Object>()  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap  <  Object,  Object>)?  new  SortedMap  <  Object,  Object>()  :  new  SortedMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap  <  Object,  Object>)?  new  SortedMap  <  Object,  Object>()  :  new  SortedMap  <  Object,  Object>()  {	  return(SortedMap.class.isAssignableFrom(rawType))?    new    SortedMap    <    Object,    Object>()    :    new    SortedMap    <    Object,    Object>()    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
469	[BUG]  [BUGGY]  return(SortedMap.class.equals(rawType))?  new  SortedMap  <  Object,  Object>()  :  new  SortedMap  <  Object,  Object>()  {  [CE]  SortedMap  is  abstract;  cannot  be  instantiated  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap.class.equals(rawType))?  new  SortedMap  <  Object,  Object>()  :  new  SortedMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap.class.equals(rawType))?  new  SortedMap  <  Object,  Object>()  :  new  SortedMap  <  Object,  Object>()  {	  return(SortedMap.class.isAssignableFrom(rawType))?    new    SortedMap    <    Object,    Object>()    :    new    SortedMap    <    Object,    Object>()    {    	non-compiled	[CE]  SortedMap  is  abstract;  cannot  be  instantiated	51	None	replace
470	[BUG]  [BUGGY]  return(SortedMap)new  DefaultImplementationConstructor  <  T>()  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap)new  DefaultImplementationConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap)new  DefaultImplementationConstructor  <  T>()  {	  return(T)new    DefaultImplementationConstructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
471	[BUG]  [BUGGY]  return  new  Constructor  <  T>(rawType,  TypeToken.getRawClass())  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  T>(rawType,  TypeToken.getRawClass())  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  T>(rawType,  TypeToken.getRawClass())  {	  return    new    Constructor    <    T>(rawType.getRawClass())    {    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
472	[BUG]  [BUGGY]  return(T)new  TreeMap  <  Class  <  Object,  Object>();  [CE]  >  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  TreeMap  <  Class  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  TreeMap  <  Class  <  Object,  Object>();	  return(T)new    ObjectConstructor    <    Class    <    T>()    {    	non-compiled	[CE]  >  expected	46	None	replace
473	[BUG]  [BUGGY]  return(T)new  TreeMap  <  Class  <?  super,  Object>()  {  [CE]  illegal  start  of  type  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  TreeMap  <  Class  <?  super,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  TreeMap  <  Class  <?  super,  Object>()  {	  return(T)new    ObjectConstructor    <    Class    <    T>()    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
474	[BUG]  [BUGGY]  return(T)new  TreeMap  <  Class  <?  extends  T>()  {  [CE]  >  expected  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  TreeMap  <  Class  <?  extends  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  TreeMap  <  Class  <?  extends  T>()  {	  return(T)new    ObjectConstructor    <    Class    <    T>()    {    	non-compiled	[CE]  >  expected	46	None	replace
475	[BUG]  [BUGGY]  SortedMap  <  Object,  Object>  this  =  new  SortedMap  <  Object,  Object>();  [CE]  not  a  statement  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  SortedMap  <  Object,  Object>  this  =  new  SortedMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	SortedMap  <  Object,  Object>  this  =  new  SortedMap  <  Object,  Object>();	  if(type    instanceof    SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    SortedMap    <    Object,    Object>();    }    	non-compiled	[CE]  not  a  statement	73	None	replace
476	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  instanceCreators.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType();  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Iterator  <  Object>  it  =  instanceCreators.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Iterator  <  Object>  it  =  instanceCreators.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType();	  if(type    instanceof    SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    SortedMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	73	None	replace
477	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  instanceCreators.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType());  [CE]  ';'  expected  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Iterator  <  Object>  it  =  instanceCreators.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType());  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Iterator  <  Object>  it  =  instanceCreators.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType());	  if(type    instanceof    SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    SortedMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	73	None	replace
478	[BUG]  [BUGGY]  Class  <?>  rawType  =  type  instanceof  SortedMap.class.getAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType());  [CE]  <identifier>  expected  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?>  rawType  =  type  instanceof  SortedMap.class.getAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType());  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Class  <?>  rawType  =  type  instanceof  SortedMap.class.getAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType());	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
479	[BUG]  [BUGGY]  Class  <?>  rawType  =  type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType());  [CE]  <identifier>  expected  [FE]                                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?>  rawType  =  type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType());  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Class  <?>  rawType  =  type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType());	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
480	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType();  [CE]  ';'  expected  [FE]                                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?>  rawType  =  typeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Class  <?>  rawType  =  typeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType();	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	8	None	replace
481	[BUG]  [BUGGY]  Class  <?>  rawType  =  type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()));  [CE]  <identifier>  expected  [FE]                                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?>  rawType  =  type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()));  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Class  <?>  rawType  =  type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()));	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
482	[BUG]  [BUGGY]  Class  <?>  rawType  =  type  instanceof  SortedMap.class.getAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()));  [CE]  <identifier>  expected  [FE]                                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?>  rawType  =  type  instanceof  SortedMap.class.getAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()));  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Class  <?>  rawType  =  type  instanceof  SortedMap.class.getAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()));	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
483	[BUG]  [BUGGY]  return(T)createObjectConstructor  <  Object>()  {  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)createObjectConstructor  <  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)createObjectConstructor  <  Object>()  {	  return(T)new    ObjectConstructor    <    Object>()    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
484	[BUG]  [BUGGY]  TypeToken.get(type).getReturnTypeArguments()  [0]).getRawType()  ==  null)  {  return  new  ObjectConstructor  <  T>();  }  [CE]  not  a  statement  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  TypeToken.get(type).getReturnTypeArguments()  [0]).getRawType()  ==  null)  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	TypeToken.get(type).getReturnTypeArguments()  [0]).getRawType()  ==  null)  {  return  new  ObjectConstructor  <  T>();  }	  TypeToken.get(type).getActualTypeArguments()[0]).getRawType()    ==    null)    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  not  a  statement	93	None	replace
485	[BUG]  [BUGGY]  return  new  SortedList  <  Object,  Object>()  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  SortedList  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  SortedList  <  Object,  Object>()  {	  return    new    SortedHashMap    <    Object,    Object>()    {    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
486	[BUG]  [BUGGY]  return  new  TreeMap  <  Object>()  {  [CE]  wrong  number  of  type  arguments;  required  2  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  TreeMap  <  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  TreeMap  <  Object>()  {	  return    new    TreeMap    <    T>()    {    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  2	1	None	replace
487	[BUG]  [BUGGY]  return  new  TreeMap  <  Class  <?>()  {  [CE]  >  expected  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  TreeMap  <  Class  <?>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  TreeMap  <  Class  <?>()  {	  return    new    TreeMap    <    T>()    {    	non-compiled	[CE]  >  expected	1	None	replace
488	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType,  rawType);  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType,  rawType);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  DefaultImplementationConstructor  <  T>(rawType,  rawType);	  return    new    DefaultImplementationConstructor    <    T>(rawType);    	non-compiled	[CE]  ';'  expected	87	None	replace
489	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return(SortedMap  <  Object,  Object>)new  SortedMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return(SortedMap  <  Object,  Object>)new  SortedMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType))  {  return(SortedMap  <  Object,  Object>)new  SortedMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>();  }	  return(SortedMap    <    Object,    Object>)new    SortedMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	97	None	replace
490	[BUG]  [BUGGY]  return(SortedMap  <  Object,  Object>)super.new  SortedMap  <  Object,  Object>();  [CE]  <identifier>  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap  <  Object,  Object>)super.new  SortedMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap  <  Object,  Object>)super.new  SortedMap  <  Object,  Object>();	  return(SortedMap    <    Object,    Object>)new    SortedMap    <    Object,    Object>();    	non-compiled	[CE]  <identifier>  expected	97	None	replace
491	[BUG]  [BUGGY]  return  new  SortedMapConstructor  <  T>(Arrays.asList(SortedMap.class))  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  SortedMapConstructor  <  T>(Arrays.asList(SortedMap.class))  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  SortedMapConstructor  <  T>(Arrays.asList(SortedMap.class))  {	  return    new    SortedMapConstructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
492	[BUG]  [BUGGY]  return  new  SortedMapConstructor  <  T>(Arrays.asList(TypeToken.class))  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  SortedMapConstructor  <  T>(Arrays.asList(TypeToken.class))  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  SortedMapConstructor  <  T>(Arrays.asList(TypeToken.class))  {	  return    new    SortedMapConstructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
493	[BUG]  [BUGGY]  return  new  SortedMapConstructor  <  T>(Arrays.asList(rawType))  {  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  SortedMapConstructor  <  T>(Arrays.asList(rawType))  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  SortedMapConstructor  <  T>(Arrays.asList(rawType))  {	  return    new    SortedMapConstructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
494	[BUG]  [BUGGY]  return  new  SortedMap  <  Object,  Object>()  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  SortedMap  <  Object,  Object>()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  SortedMap  <  Object,  Object>()	  return    new    SortedMap    <    Object,    Object>()    ==    	non-compiled	[CE]  ';'  expected	62	None	replace
495	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  Class  <?>()  {  [CE]  >  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  Class  <?>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  DefaultImplementationConstructor  <  Class  <?>()  {	  return    new    DefaultImplementationConstructor    <    T>()    ==    	non-compiled	[CE]  >  expected	26	None	replace
496	[BUG]  [BUGGY]  return(TreeMap  <  Object,  Object>)new  SortedMap  <  Object,  Object>()  {  [CE]  <anonymous  com.google.gson.internal.ConstructorConstructor$9>  is  not  abstract  and  does  not  override  abstract  method  entrySet()  in  SortedMap  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(TreeMap  <  Object,  Object>)new  SortedMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(TreeMap  <  Object,  Object>)new  SortedMap  <  Object,  Object>()  {	  return(SortedMap    <    Object,    Object>)new    SortedMap    <    Object,    Object>()    {    	non-compiled	[CE]  <anonymous  com.google.gson.internal.ConstructorConstructor$9>  is  not  abstract  and  does  not  override  abstract  method  entrySet()  in  SortedMap	50	None	replace
497	[BUG]  [BUGGY]  return(SortedMap  <  Object,  Object>)new  List  <  Object,  Object>()  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap  <  Object,  Object>)new  List  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap  <  Object,  Object>)new  List  <  Object,  Object>()  {	  return(SortedMap    <    Object,    Object>)new    SortedMap    <    Object,    Object>()    {    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
498	[BUG]  [BUGGY]  return(SortedMap  <  Object,  Object>)new  Class  <  Object,  Object>()  {  [CE]  wrong  number  of  type  arguments;  required  1  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap  <  Object,  Object>)new  Class  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap  <  Object,  Object>)new  Class  <  Object,  Object>()  {	  return(SortedMap    <    Object,    Object>)new    SortedMap    <    Object,    Object>()    {    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  1	50	None	replace
499	[BUG]  [BUGGY]  return(SortedMap  <  Object,  Object>)new  SortedTreeMap  <  Object,  Object>();  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap  <  Object,  Object>)new  SortedTreeMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap  <  Object,  Object>)new  SortedTreeMap  <  Object,  Object>();	  return(SortedMap    <    Object,    Object>)new    SortedHashMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	98	None	replace
500	[BUG]  [BUGGY]  return(SortedMap  <  Object,  Object>)new  SortedSet  <  Object,  Object>();  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap  <  Object,  Object>)new  SortedSet  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap  <  Object,  Object>)new  SortedSet  <  Object,  Object>();	  return(SortedMap    <    Object,    Object>)new    SortedHashMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	98	None	replace
501	[BUG]  [BUGGY]  return  new  LinkedHashMap  <  Class  <?  super  T>()  {  [CE]  >  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  LinkedHashMap  <  Class  <?  super  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  LinkedHashMap  <  Class  <?  super  T>()  {	  return    new    TreeMap    <    Class    <?    super    T>()    {    	non-compiled	[CE]  >  expected	99	None	replace
502	[BUG]  [BUGGY]  SortedMap.class.isAssignableFrom(rawType)&&!(SortedMap.class.isAssignableFrom(rawType)))  {  [CE]  not  a  statement  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  SortedMap.class.isAssignableFrom(rawType)&&!(SortedMap.class.isAssignableFrom(rawType)))  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	SortedMap.class.isAssignableFrom(rawType)&&!(SortedMap.class.isAssignableFrom(rawType)))  {	  SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  not  a  statement	94	None	replace
503	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>()  {  @Override  [CE]  duplicate  annotation  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>()  {  @Override  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>()  {  @Override	  return    new    ObjectConstructor    <    T>()    ||    	non-compiled	[CE]  duplicate  annotation	72	None	replace
504	[BUG]  [BUGGY]  return  new  TreeMap  <  Object,  Object>()  ||  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  TreeMap  <  Object,  Object>()  ||  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  TreeMap  <  Object,  Object>()  ||	  return    new    ObjectConstructor    <    T>()    ||    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
505	[BUG]  [BUGGY]  return  new  SortedMap  <  Object,  Object>()  ||  [CE]  illegal  start  of  expression  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  SortedMap  <  Object,  Object>()  ||  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  SortedMap  <  Object,  Object>()  ||	  return    new    ObjectConstructor    <    T>()    ||    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
506	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>()  &&  [CE]  illegal  start  of  expression  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>()  &&  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>()  &&	  return    new    ObjectConstructor    <    T>()    ||    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
507	[BUG]  [BUGGY]  return  new  Constructor  <  T>(type,  rawType);  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  T>(type,  rawType);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  T>(type,  rawType);	  return    new    Constructor    <    T>(type);    	non-compiled	[CE]  ';'  expected	68	None	replace
508	[BUG]  [BUGGY]  return(T)new  Constructor  <  T>(type);  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  Constructor  <  T>(type);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  Constructor  <  T>(type);	  return    new    Constructor    <    T>(type);    	non-compiled	[CE]  ';'  expected	68	None	replace
509	[BUG]  [BUGGY]  return  new  Constructor  <  Object>(type);  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  Object>(type);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  Object>(type);	  return    new    Constructor    <    T>(type);    	non-compiled	[CE]  ';'  expected	68	None	replace
510	[BUG]  [BUGGY]  Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(rawType)  [CE]  <identifier>  expected  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(rawType)  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(rawType)	  if(type    instanceof    SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    if(SortedMap.class.isAssignableFrom(rawType))    {    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
511	[BUG]  [BUGGY]  Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAs  [CE]  <identifier>  expected  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAs  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAs	  if(type    instanceof    SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    if(SortedMap.class.isAssignableFrom(rawType))    {    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
512	[BUG]  [BUGGY]  Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom  [CE]  <identifier>  expected  [FE]                                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom	  if(type    instanceof    SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    if(SortedMap.class.isAssignableFrom(rawType))    {    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
513	[BUG]  [BUGGY]  Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(rawType))  {  }  [CE]  <identifier>  expected  [FE]                                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(rawType))  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(rawType))  {  }	  if(type    instanceof    SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    if(SortedMap.class.isAssignableFrom(rawType))    {    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
514	[BUG]  [BUGGY]  Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(raw  [CE]  <identifier>  expected  [FE]                                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(raw  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(raw	  if(type    instanceof    SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    if(SortedMap.class.isAssignableFrom(rawType))    {    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
515	[BUG]  [BUGGY]  Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssign  [CE]  <identifier>  expected  [FE]                                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssign  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssign	  if(type    instanceof    SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    if(SortedMap.class.isAssignableFrom(rawType))    {    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
516	[BUG]  [BUGGY]  Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(rawType  [CE]  <identifier>  expected  [FE]                                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(rawType  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(rawType	  if(type    instanceof    SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    if(SortedMap.class.isAssignableFrom(rawType))    {    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
517	[BUG]  [BUGGY]  return(T)new  ArrayList  <  Object,  Object>();  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  ArrayList  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  ArrayList  <  Object,  Object>();	  return(T)new    ArrayList    <    Object,    Object>()    {    	non-compiled	[CE]  ';'  expected	80	None	replace
518	[BUG]  [BUGGY]  if(type  instanceof  TreeMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(rawType))  {  [CE]  <identifier>  expected  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  TreeMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  TreeMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(rawType))  {	  if(type    instanceof    SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    if(SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
519	[BUG]  [BUGGY]  if(rawType  instanceof  TreeMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(rawType))  {  [CE]  <identifier>  expected  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  TreeMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  TreeMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(rawType))  {	  if(type    instanceof    SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    if(SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
520	[BUG]  [BUGGY]  return(ObjectConstructor  <  T>)new  Constructor  <  T>()  {  [CE]  constructor  Constructor  in  class  Constructor<T#2>  cannot  be  applied  to  given  types;  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(ObjectConstructor  <  T>)new  Constructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(ObjectConstructor  <  T>)new  Constructor  <  T>()  {	  return(Constructor    <    T>)new    Constructor    <    T>()    {    	non-compiled	[CE]  constructor  Constructor  in  class  Constructor<T#2>  cannot  be  applied  to  given  types;	30	None	replace
521	[BUG]  [BUGGY]  return(Constructor  <  T>)super.new  Constructor  <  T>()  {  [CE]  <identifier>  expected  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(Constructor  <  T>)super.new  Constructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(Constructor  <  T>)super.new  Constructor  <  T>()  {	  return(Constructor    <    T>)new    Constructor    <    T>()    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
522	[BUG]  [BUGGY]  return(Constructor  <  T>)new  Constructor  <  T>(rawType)  {  [CE]  constructor  Constructor  in  class  Constructor<T#2>  cannot  be  applied  to  given  types;  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(Constructor  <  T>)new  Constructor  <  T>(rawType)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(Constructor  <  T>)new  Constructor  <  T>(rawType)  {	  return(Constructor    <    T>)new    Constructor    <    T>()    {    	non-compiled	[CE]  constructor  Constructor  in  class  Constructor<T#2>  cannot  be  applied  to  given  types;	30	None	replace
523	[BUG]  [BUGGY]  return(Constructor  <  T>)new  Constructor  <  T>(1)  {  [CE]  constructor  Constructor  in  class  Constructor<T#2>  cannot  be  applied  to  given  types;  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(Constructor  <  T>)new  Constructor  <  T>(1)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(Constructor  <  T>)new  Constructor  <  T>(1)  {	  return(Constructor    <    T>)new    Constructor    <    T>()    {    	non-compiled	[CE]  constructor  Constructor  in  class  Constructor<T#2>  cannot  be  applied  to  given  types;	30	None	replace
524	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    {    return    new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	90	None	replace
525	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>()  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>()	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    {    return    new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	90	None	replace
526	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>  [CE]  '('  or  '['  expected  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    {    return    new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  '('  or  '['  expected	90	None	replace
527	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    {    return    new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	90	None	replace
528	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    {    return    new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	90	None	replace
529	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  sortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  sortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||  sortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(sortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	14	None	replace
530	[BUG]  [BUGGY]  return(SortedMap)new  ArrayList  <  T>()  {  [CE]  method  does  not  override  or  implement  a  method  from  a  supertype  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap)new  ArrayList  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap)new  ArrayList  <  T>()  {	  return(T)new    ArrayList    <    T>()    {    	non-compiled	[CE]  method  does  not  override  or  implement  a  method  from  a  supertype	4	None	replace
531	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return  new  SortedMap  <  Object,  Object>();  }  else  {  return  new  SortedMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return  new  SortedMap  <  Object,  Object>();  }  else  {  return  new  SortedMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType))  {  return  new  SortedMap  <  Object,  Object>();  }  else  {  return  new  SortedMap  <  Object,  Object>();  }	  return    new    SortedMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	49	None	replace
532	[BUG]  [BUGGY]  return  new  Constructor  <  T>();  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  T>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  T>();	  return    new    ObjectConstructor    <    T>();    	non-compiled	[CE]  ';'  expected	18	None	replace
533	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  ObjectConstructor  <  T>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  ObjectConstructor  <  T>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  ObjectConstructor  <  T>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>();  }	  return(T)new    ObjectConstructor    <    T>();    	non-compiled	[CE]  ';'  expected	19	None	replace
534	[BUG]  [BUGGY]  return  new  TreeMap  <  Object,  Object>(rawType,  this)  {  [CE]  no  suitable  constructor  found  for  TreeMap(Class<CAP#1>,ConstructorConstructor)  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  TreeMap  <  Object,  Object>(rawType,  this)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  TreeMap  <  Object,  Object>(rawType,  this)  {	  return    new    TreeMap    <    Object,    Object>(rawType)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  TreeMap(Class<CAP#1>,ConstructorConstructor)	38	None	replace
535	[BUG]  [BUGGY]  return(SortedMap  <  Object,  Object>  ||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  ')'  expected  [FE]              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap  <  Object,  Object>  ||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap  <  Object,  Object>  ||  SortedMap.class.isAssignableFrom(rawType))  {	  return(SortedMap    <    Object,    Object>)    {    	non-compiled	[CE]  ')'  expected	60	None	replace
536	[BUG]  [BUGGY]  return(SortedMap  <  Object,  Object>)&&(type  instanceof  TreeMap  <  Object,  Object>))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap  <  Object,  Object>)&&(type  instanceof  TreeMap  <  Object,  Object>))  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap  <  Object,  Object>)&&(type  instanceof  TreeMap  <  Object,  Object>))  {	  return(SortedMap    <    Object,    Object>)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
537	[BUG]  [BUGGY]  return(T)new  List  <  Object,  Object>()  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  List  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  List  <  Object,  Object>()  {	  return(T)new    PropertyMap    <    Object,    Object>()    {    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
538	[BUG]  [BUGGY]  return(T)new  SeparatorMap  <  Object,  Object>()  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  SeparatorMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  SeparatorMap  <  Object,  Object>()  {	  return(T)new    PropertyMap    <    Object,    Object>()    {    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
539	[BUG]  [BUGGY]  return  new  PropertyConstructor  <  T>(type)  {  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  PropertyConstructor  <  T>(type)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  PropertyConstructor  <  T>(type)  {	  return    new    PropertyConstructor    <    T>(rawType)    {    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
540	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	57	None	replace
541	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>()  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>()	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	57	None	replace
542	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>();  }  }  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>();  }  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>();  }  }	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	57	None	replace
543	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	57	None	replace
544	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>  [CE]  '('  or  '['  expected  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  '('  or  '['  expected	57	None	replace
545	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>();  }  }  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>();  }  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap)  {  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>();  }  }	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	57	None	replace
546	[BUG]  [BUGGY]  return  new  Constructor  <  T>()  {  }  [CE]  ';'  expected  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  T>()  {  }	  if(type    instanceof    Constructor    <    T>)    {    return    new    Constructor    <    T>()    {    }    	non-compiled	[CE]  ';'  expected	32	None	replace
547	[BUG]  [BUGGY]  return  new  ClassImplementationConstructor  <  T>()  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ClassImplementationConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ClassImplementationConstructor  <  T>()  {	  return    new    StandardImplementationConstructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
548	[BUG]  [BUGGY]  return  new  StandardImplementationConstructor  <  T>(type)  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  StandardImplementationConstructor  <  T>(type)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  StandardImplementationConstructor  <  T>(type)  {	  return    new    StandardImplementationConstructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
549	[BUG]  [BUGGY]  return(SortedMap  <  Object,  Object>)?  new  TreeMap  <  Object,  Object>()  :  new  SortedMap  <  Object,  Object>()  {  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap  <  Object,  Object>)?  new  TreeMap  <  Object,  Object>()  :  new  SortedMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap  <  Object,  Object>)?  new  TreeMap  <  Object,  Object>()  :  new  SortedMap  <  Object,  Object>()  {	  return(SortedMap.class.isAssignableFrom(rawType))?    new    TreeMap    <    Object,    Object>()    :    new    SortedMap    <    Object,    Object>()    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
550	[BUG]  [BUGGY]  Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  SortedMap  <  Object,  Object>();  }  [CE]  <identifier>  expected  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  SortedMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  SortedMap  <  Object,  Object>();  }	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    SortedMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
551	[BUG]  [BUGGY]  Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  SortedMap  <  Object,  Object>()  [CE]  <identifier>  expected  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  SortedMap  <  Object,  Object>()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  SortedMap  <  Object,  Object>()	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    SortedMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
552	[BUG]  [BUGGY]  Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  SortedMap  <  Object,  Object>  [CE]  <identifier>  expected  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  SortedMap  <  Object,  Object>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  SortedMap  <  Object,  Object>	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    SortedMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
553	[BUG]  [BUGGY]  Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  SortedMap  <  Object,  Object>();  }  [CE]  <identifier>  expected  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  SortedMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  SortedMap  <  Object,  Object>();  }	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    SortedMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
554	[BUG]  [BUGGY]  Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  SortedMap  <  Object,  Object>();  [CE]  <identifier>  expected  [FE]                                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  SortedMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  SortedMap  <  Object,  Object>();	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    SortedMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
555	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  null,  false)  {  [CE]  anonymous  class  implements  interface;  cannot  have  arguments  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  null,  false)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>(rawType,  null,  false)  {	  return    new    ObjectConstructor    <    T>(rawType,    null)    {    	non-compiled	[CE]  anonymous  class  implements  interface;  cannot  have  arguments	41	None	replace
556	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  String.class)  {  [CE]  anonymous  class  implements  interface;  cannot  have  arguments  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  String.class)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>(rawType,  String.class)  {	  return    new    ObjectConstructor    <    T>(rawType,    null)    {    	non-compiled	[CE]  anonymous  class  implements  interface;  cannot  have  arguments	41	None	replace
557	[BUG]  [BUGGY]  TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  not  a  statement	15	None	replace
558	[BUG]  [BUGGY]  DeserializedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  DeserializedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	DeserializedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  not  a  statement	15	None	replace
559	[BUG]  [BUGGY]  TypeToken.get(type).getReturnTypeArguments()  [0]).getRawType()  ==  null)  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  not  a  statement  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  TypeToken.get(type).getReturnTypeArguments()  [0]).getRawType()  ==  null)  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	TypeToken.get(type).getReturnTypeArguments()  [0]).getRawType()  ==  null)  {  return  new  TreeMap  <  Object,  Object>();  }	  TypeToken.get(type).getActualTypeArguments()[0]).getRawType()    ==    null)    {    return    new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  not  a  statement	92	None	replace
560	[BUG]  [BUGGY]  return  new  TreeMap  <  Object,  Object>()  >>  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  TreeMap  <  Object,  Object>()  >>  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  TreeMap  <  Object,  Object>()  >>  @Override  public  T  construct()  {  return  (T)new  TreeMap  <  Object,  Object>();  }	  return    new    TreeMap    <    Object,    Object>()    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
561	[BUG]  [BUGGY]  return  new  TreeMap  <  Object,  Object>()  >>  @Override  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  TreeMap  <  Object,  Object>()  >>  @Override  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  TreeMap  <  Object,  Object>()  >>  @Override	  return    new    TreeMap    <    Object,    Object>()    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
562	[BUG]  [BUGGY]  return  new  TreeMap  <  Object,  Object>()!=  @Override  [CE]  illegal  start  of  expression  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  TreeMap  <  Object,  Object>()!=  @Override  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  TreeMap  <  Object,  Object>()!=  @Override	  return    new    TreeMap    <    Object,    Object>()    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
563	[BUG]  [BUGGY]  return  new  Constructor  <  T>(TypeToken.getRawType())  {  [CE]  non-static  method  getRawType()  cannot  be  referenced  from  a  static  context  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  T>(TypeToken.getRawType())  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  T>(TypeToken.getRawType())  {	  return    new    Constructor    <    T>(type.getRawType())    {    	non-compiled	[CE]  non-static  method  getRawType()  cannot  be  referenced  from  a  static  context	69	None	replace
564	[BUG]  [BUGGY]  return  new  Constructor  <  T>(type,  type.getRawType())  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  T>(type,  type.getRawType())  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  T>(type,  type.getRawType())  {	  return    new    Constructor    <    T>(type.getRawType())    {    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
565	[BUG]  [BUGGY]  return  new  LocalizedHashMap  <  Object,  Object>()  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  LocalizedHashMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  LocalizedHashMap  <  Object,  Object>()  {	  return    new    LocalizedMap    <    Object,    Object>()    {    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
566	[BUG]  [BUGGY]  return  new  LocalizedMap  <  Object,  Object>(String.class)  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  LocalizedMap  <  Object,  Object>(String.class)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  LocalizedMap  <  Object,  Object>(String.class)  {	  return    new    LocalizedMap    <    Object,    Object>()    {    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
567	[BUG]  [BUGGY]  Return  new  LocalizedMap  <  Object,  Object>()  {  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Return  new  LocalizedMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Return  new  LocalizedMap  <  Object,  Object>()  {	  return    new    LocalizedMap    <    Object,    Object>()    {    	non-compiled	[CE]  not  a  statement	81	None	replace
568	[BUG]  [BUGGY]  Class  <?>  rawType  =  type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType()));  [CE]  <identifier>  expected  [FE]                                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?>  rawType  =  type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType()));  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Class  <?>  rawType  =  type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType()));	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
569	[BUG]  [BUGGY]  Class  <?>  rawType  =  type  instanceof  SortedMap.class.getAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType()));  [CE]  <identifier>  expected  [FE]                                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?>  rawType  =  type  instanceof  SortedMap.class.getAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType()));  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Class  <?>  rawType  =  type  instanceof  SortedMap.class.getAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType()));	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
570	[BUG]  [BUGGY]  return(T)create  TreeMap  <  Object,  ObjectConstructor  <  T>()  {  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)create  TreeMap  <  Object,  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)create  TreeMap  <  Object,  ObjectConstructor  <  T>()  {	  return(T)new    ArrayList    <    Object,    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  ';'  expected	79	None	replace
571	[BUG]  [BUGGY]  return  new  TreeMap  <  Object,  ObjectConstructor  <  T>()  {  [CE]  >  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  TreeMap  <  Object,  ObjectConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  TreeMap  <  Object,  ObjectConstructor  <  T>()  {	  return(T)new    ArrayList    <    Object,    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  >  expected	79	None	replace
572	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>(type.getRawClass())  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>(type.getRawClass())  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>(type.getRawClass())  {	  return    new    ObjectConstructor    <    T>(rawType.getRawClass())    {    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
573	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  TypeToken.getRawClass())  {  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  TypeToken.getRawClass())  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>(rawType,  TypeToken.getRawClass())  {	  return    new    ObjectConstructor    <    T>(rawType.getRawClass())    {    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
574	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  getRawClass())  {  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  getRawClass())  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>(rawType,  getRawClass())  {	  return    new    ObjectConstructor    <    T>(rawType.getRawClass())    {    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
575	[BUG]  [BUGGY]  Constructor  <  Object,  Object>  type  =  instanceof  SortedMap.class.getAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType());  [CE]  illegal  start  of  expression  [FE]                                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Constructor  <  Object,  Object>  type  =  instanceof  SortedMap.class.getAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType());  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Constructor  <  Object,  Object>  type  =  instanceof  SortedMap.class.getAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType());	  if(type    instanceof    SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
576	[BUG]  [BUGGY]  SortedMap  <  Object,  Object>  type  =  SortedMap.class.getAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType());  [CE]  ';'  expected  [FE]                                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  SortedMap  <  Object,  Object>  type  =  SortedMap.class.getAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType());  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	SortedMap  <  Object,  Object>  type  =  SortedMap.class.getAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType());	  if(type    instanceof    SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	78	None	replace
577	[BUG]  [BUGGY]  Constructor  <  Object,  Object>  type  =  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType());  [CE]  illegal  start  of  expression  [FE]                                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Constructor  <  Object,  Object>  type  =  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType());  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Constructor  <  Object,  Object>  type  =  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType());	  if(type    instanceof    SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
578	[BUG]  [BUGGY]  SortedMap  <  Object,  Object>  type  =  SortedMap.get(((SortedMap  <  Object,  Object>)type).getActualTypeArguments()  [0]).getRawType();  [CE]  ';'  expected  [FE]                                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  SortedMap  <  Object,  Object>  type  =  SortedMap.get(((SortedMap  <  Object,  Object>)type).getActualTypeArguments()  [0]).getRawType();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	SortedMap  <  Object,  Object>  type  =  SortedMap.get(((SortedMap  <  Object,  Object>)type).getActualTypeArguments()  [0]).getRawType();	  if(type    instanceof    SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	78	None	replace
579	[BUG]  [BUGGY]  if(rawType!=  null  ||!SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType!=  null  ||!SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType!=  null  ||!SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(!SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	13	None	replace
580	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap)  {  if(!SortedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap)  {  if(!SortedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap)  {  if(!SortedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }	  if(!SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	13	None	replace
581	[BUG]  [BUGGY]  return(T)new  LocalizedMapConstructor  <  T>()  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  LocalizedMapConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  LocalizedMapConstructor  <  T>()  {	  return(T)new    PropertyConstructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
582	[BUG]  [BUGGY]  return(T)new  MapConstructor  <  T>()  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  MapConstructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  MapConstructor  <  T>()  {	  return(T)new    PropertyConstructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
583	[BUG]  [BUGGY]  return  new  Constructor  <  T>(type,  rawType)  {  [CE]  constructor  Constructor  in  class  Constructor<T#2>  cannot  be  applied  to  given  types;  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  T>(type,  rawType)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  T>(type,  rawType)  {	  return    new    Constructor    <    T>(rawType)    {    	non-compiled	[CE]  constructor  Constructor  in  class  Constructor<T#2>  cannot  be  applied  to  given  types;	31	None	replace
584	[BUG]  [BUGGY]  return  new  Constructor  <  T>(rawType,  ObjectConstructor.class)  {  [CE]  constructor  Constructor  in  class  Constructor<T#2>  cannot  be  applied  to  given  types;  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  T>(rawType,  ObjectConstructor.class)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  T>(rawType,  ObjectConstructor.class)  {	  return    new    Constructor    <    T>(rawType)    {    	non-compiled	[CE]  constructor  Constructor  in  class  Constructor<T#2>  cannot  be  applied  to  given  types;	31	None	replace
585	[BUG]  [BUGGY]  return  new  Constructor  <  T>(rawType,  class)  {  [CE]  illegal  start  of  expression  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  T>(rawType,  class)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  T>(rawType,  class)  {	  return    new    Constructor    <    T>(rawType)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
586	[BUG]  [BUGGY]  Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  SortedMap  <  Object,  Object>  [CE]  <identifier>  expected  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  SortedMap  <  Object,  Object>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  SortedMap  <  Object,  Object>	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    SortedMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
587	[BUG]  [BUGGY]  Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  SortedMap  <  Object,  Object>();  }  [CE]  <identifier>  expected  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  SortedMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  SortedMap  <  Object,  Object>();  }	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    SortedMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
588	[BUG]  [BUGGY]  Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  SortedMap  <  Object,  Object>()  [CE]  <identifier>  expected  [FE]                                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  SortedMap  <  Object,  Object>()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  SortedMap  <  Object,  Object>()	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    SortedMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
589	[BUG]  [BUGGY]  Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  SortedMap  <  Object  [CE]  <identifier>  expected  [FE]                                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  SortedMap  <  Object  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  SortedMap  <  Object	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    SortedMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
590	[BUG]  [BUGGY]  Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  SortedMap  <  Object,  [CE]  <identifier>  expected  [FE]                                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  SortedMap  <  Object,  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  SortedMap  <  Object,	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    SortedMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
591	[BUG]  [BUGGY]  Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  SortedMap  <  Object,  Object  [CE]  <identifier>  expected  [FE]                                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  SortedMap  <  Object,  Object  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Preconditions.checkState(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType())))  {  return  new  SortedMap  <  Object,  Object	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    SortedMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
592	[BUG]  [BUGGY]  Class  <?  extends  T>  rawType  =  type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType());  [CE]  <identifier>  expected  [FE]                                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  extends  T>  rawType  =  type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType());  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Class  <?  extends  T>  rawType  =  type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType());	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
593	[BUG]  [BUGGY]  Class  <?  extends  T>  rawType  =  type  instanceof  SortedMap.class.getAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType());  [CE]  <identifier>  expected  [FE]                                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  extends  T>  rawType  =  type  instanceof  SortedMap.class.getAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType());  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Class  <?  extends  T>  rawType  =  type  instanceof  SortedMap.class.getAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType());	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
594	[BUG]  [BUGGY]  final  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  instanceCreators;  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  final  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  instanceCreators;  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	final  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  instanceCreators;	  final    Constructor    <    T>    in    class    Constructor    <    T#2>    cannot    be    applied    to    given    types;    	non-compiled	[CE]  ';'  expected	29	None	replace
595	[BUG]  [BUGGY]  final  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  rawType;  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  final  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  rawType;  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	final  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  rawType;	  final    Constructor    <    T>    in    class    Constructor    <    T#2>    cannot    be    applied    to    given    types;    	non-compiled	[CE]  ';'  expected	29	None	replace
596	[BUG]  [BUGGY]  TreeMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  TreeMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	TreeMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	59	None	replace
597	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(TreeMap.class.isAssignableFrom(rawType)&&  TreeMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	59	None	replace
598	[BUG]  [BUGGY]  if(type  instanceof  TreeMap  <?  super  T>)  {  return  new  TreeMap  <  Object,  Object>()  {  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  TreeMap  <?  super  T>)  {  return  new  TreeMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  TreeMap  <?  super  T>)  {  return  new  TreeMap  <  Object,  Object>()  {	  if(type    instanceof    Constructor    <    T>)    {    return    new    Constructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
599	[BUG]  [BUGGY]  if(type  instanceof  TreeMap  <?  super>)  {  return  new  TreeMap  <  Object,  Object>()  {  [CE]  illegal  start  of  type  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  TreeMap  <?  super>)  {  return  new  TreeMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  TreeMap  <?  super>)  {  return  new  TreeMap  <  Object,  Object>()  {	  if(type    instanceof    Constructor    <    T>)    {    return    new    Constructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
600	[BUG]  [BUGGY]  if(type  instanceof  TreeMap  <?  superType)  {  return  new  TreeMap  <  Object,  Object>()  {  [CE]  >,  extends,  or  super  expected  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  TreeMap  <?  superType)  {  return  new  TreeMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  TreeMap  <?  superType)  {  return  new  TreeMap  <  Object,  Object>()  {	  if(type    instanceof    Constructor    <    T>)    {    return    new    Constructor    <    T>()    {    	non-compiled	[CE]  >,  extends,  or  super  expected	28	None	replace
601	[BUG]  [BUGGY]  }  else  if(type  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  }  else  if(type  instanceof  Class  <?>)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	}  else  if(type  instanceof  Class  <?>)  {	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    if(type    instanceof    Class    <?>)    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	16	None	replace
602	[BUG]  [BUGGY]  parentMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  parentMap.class.isAssignableFrom(rawType))  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	parentMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    if(type    instanceof    Class    <?>)    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	16	None	replace
603	[BUG]  [BUGGY]  Class  <?>  rawType  =  getRawType();  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?>  rawType  =  getRawType();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Class  <?>  rawType  =  getRawType();	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    if(type    instanceof    Class    <?>)    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	16	None	replace
604	[BUG]  [BUGGY]  return  new  Constructor  <  T>(rawType.getClass());  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  T>(rawType.getClass());  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  T>(rawType.getClass());	  return    new    Constructor    <    T>(rawType);    	non-compiled	[CE]  ';'  expected	85	None	replace
605	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return(SortedMap  <  Object,  Object>)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return(SortedMap  <  Object,  Object>)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType))  {  return(SortedMap  <  Object,  Object>)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>();  }	  return(SortedMap    <    Object,    Object>)new    TreeMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	96	None	replace
606	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return(SortedMap  <  Object,  Object>)new  TreeMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return(SortedMap  <  Object,  Object>)new  TreeMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType))  {  return(SortedMap  <  Object,  Object>)new  TreeMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>();  }	  return(SortedMap    <    Object,    Object>)new    TreeMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	96	None	replace
607	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return(SortedMap  <  Object,  Object>)new  TreeMap  <  Object,  Object>();  }  else  {  return  new  LinkedHashMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return(SortedMap  <  Object,  Object>)new  TreeMap  <  Object,  Object>();  }  else  {  return  new  LinkedHashMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType))  {  return(SortedMap  <  Object,  Object>)new  TreeMap  <  Object,  Object>();  }  else  {  return  new  LinkedHashMap  <  Object,  Object>();  }	  return(SortedMap    <    Object,    Object>)new    TreeMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	96	None	replace
608	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  ObjectConstructor  <  T>()  {  }  [CE]  >  expected  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  ObjectConstructor  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  ObjectConstructor  <  T>()  {  }	  return(T)new    TreeMap    <    Object,    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  >  expected	89	None	replace
609	[BUG]  [BUGGY]  return  new  HashMap  <  Object,  Object>();  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  HashMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  HashMap  <  Object,  Object>();	  return    new    TreeMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	36	None	replace
610	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  SortedHashMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  SortedHashMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  SortedHashMap  <  Object,  Object>();  }  else  {  return  new  TreeMap  <  Object,  Object>();  }	  return(T)new    SortedHashMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	58	None	replace
611	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>()!=  @Override  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>()!=  @Override  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  DefaultImplementationConstructor  <  T>()!=  @Override	  return    new    DefaultImplementationConstructor    <    T>()    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
612	[BUG]  [BUGGY]  Return(T)new  TreeMap  <  Object,  Object>();  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Return(T)new  TreeMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Return(T)new  TreeMap  <  Object,  Object>();	  return(T)new    LinkedHashMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	56	None	replace
613	[BUG]  [BUGGY]  return(T)new  Class  <  Object,  Object>()  {  [CE]  wrong  number  of  type  arguments;  required  1  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  Class  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  Class  <  Object,  Object>()  {	  return(T)new    PropertyConstructor    <    T>()    {    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  1	53	None	replace
614	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor  <  T>();  }  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor  <  T>();  }	  return(T)new    ObjectConstructor    <    T>();    	non-compiled	[CE]  ';'  expected	19	None	replace
615	[BUG]  [BUGGY]  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  rawType.getRawClass());  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  rawType.getRawClass());  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  rawType.getRawClass());	  Constructor    <    T>    in    class    Constructor    <    T#2>    cannot    be    applied    to    given    types;    	non-compiled	[CE]  ';'  expected	27	None	replace
616	[BUG]  [BUGGY]  Class  <?>  rawType  =  type  instanceof  SortedMap.class.assignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType());  [CE]  <identifier>  expected  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?>  rawType  =  type  instanceof  SortedMap.class.assignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType());  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Class  <?>  rawType  =  type  instanceof  SortedMap.class.assignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType());	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    SortedMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
617	[BUG]  [BUGGY]  Class  <?>  rawType  =  type  instanceof  SortedMap.class.getAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType();  [CE]  <identifier>  expected  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?>  rawType  =  type  instanceof  SortedMap.class.getAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Class  <?>  rawType  =  type  instanceof  SortedMap.class.getAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType();	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType())))    {    return    new    SortedMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
618	[BUG]  [BUGGY]  return  new  TreeMap  <  Object,  Object>()  ==  @Override  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  TreeMap  <  Object,  Object>()  ==  @Override  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  TreeMap  <  Object,  Object>()  ==  @Override	  return    new    TreeMap    <    Object,    Object>()    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
619	[BUG]  [BUGGY]  return(SortedMap  <  Object,  Object>)createLinkedHashMap  <  Object,  Object>();  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap  <  Object,  Object>)createLinkedHashMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap  <  Object,  Object>)createLinkedHashMap  <  Object,  Object>();	  return(SortedMap    <    Object,    Object>)new    TreeMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	96	None	replace
620	[BUG]  [BUGGY]  return(TreeMap  <  Object,  Object>)new  TreeMap  <  Object,  Object>();  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(TreeMap  <  Object,  Object>)new  TreeMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(TreeMap  <  Object,  Object>)new  TreeMap  <  Object,  Object>();	  return(SortedMap    <    Object,    Object>)new    TreeMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	96	None	replace
621	[BUG]  [BUGGY]  return(SortedMap  <  Object,  Object>)new  TreeMap  <  Object,  Object>(1);  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap  <  Object,  Object>)new  TreeMap  <  Object,  Object>(1);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap  <  Object,  Object>)new  TreeMap  <  Object,  Object>(1);	  return(SortedMap    <    Object,    Object>)new    TreeMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	96	None	replace
622	[BUG]  [BUGGY]  TypeToken.get(type).getActualParameterTypes()  [0]).getRawType()  ==  null)  {  return  new  ObjectConstructor  <  T>();  }  [CE]  not  a  statement  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  TypeToken.get(type).getActualParameterTypes()  [0]).getRawType()  ==  null)  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	TypeToken.get(type).getActualParameterTypes()  [0]).getRawType()  ==  null)  {  return  new  ObjectConstructor  <  T>();  }	  TypeToken.get(type).getActualTypeArguments()[0]).getRawType()    ==    null)    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  not  a  statement	93	None	replace
623	[BUG]  [BUGGY]  return  new  ArrayList  <  T>();  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ArrayList  <  T>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ArrayList  <  T>();	  return    new    ObjectConstructor    <    T>();    	non-compiled	[CE]  ';'  expected	18	None	replace
624	[BUG]  [BUGGY]  if(type  instanceof  TreeMap  <  Object,  Object>)  {  return(T)new  ObjectConstructor  <  T>()!=  @Override  public  T  construct()  {  return(T)  new  TreeMap  <  Object,  Object>();  }  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  TreeMap  <  Object,  Object>)  {  return(T)new  ObjectConstructor  <  T>()!=  @Override  public  T  construct()  {  return(T)  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  TreeMap  <  Object,  Object>)  {  return(T)new  ObjectConstructor  <  T>()!=  @Override  public  T  construct()  {  return(T)  new  TreeMap  <  Object,  Object>();  }	  return(T)new    ObjectConstructor    <    T>()    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
625	[BUG]  [BUGGY]  if(type  instanceof  TreeMap)  {  return(T)new  ObjectConstructor  <  T>()  >>  @Override  public  T  construct()  {  return(T)  new  TreeMap  <  Object,  Object>();  }  [CE]  illegal  start  of  expression  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  TreeMap)  {  return(T)new  ObjectConstructor  <  T>()  >>  @Override  public  T  construct()  {  return(T)  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  TreeMap)  {  return(T)new  ObjectConstructor  <  T>()  >>  @Override  public  T  construct()  {  return(T)  new  TreeMap  <  Object,  Object>();  }	  return(T)new    ObjectConstructor    <    T>()    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
626	[BUG]  [BUGGY]  return(SortedMap  <  Object,  Object>)new  List  <  Object,  Object>();  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap  <  Object,  Object>)new  List  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap  <  Object,  Object>)new  List  <  Object,  Object>();	  return(SortedMap    <    Object,    Object>)new    SortedHashMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	98	None	replace
627	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  elementType),  type)  {  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  elementType),  type)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>(rawType,  elementType),  type)  {	  return    new    ObjectConstructor    <    T>(rawType,    type)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
628	[BUG]  [BUGGY]  Return  new  ObjectConstructor  <  T>(rawType,  elementType)  {  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Return  new  ObjectConstructor  <  T>(rawType,  elementType)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Return  new  ObjectConstructor  <  T>(rawType,  elementType)  {	  return    new    ObjectConstructor    <    T>(rawType,    type)    {    	non-compiled	[CE]  not  a  statement	39	None	replace
629	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>(rawType.getRawClass(),  this)  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>(rawType.getRawClass(),  this)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>(rawType.getRawClass(),  this)  {	  return    new    ObjectConstructor    <    T>(rawType.getRawClass())    {    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
630	[BUG]  [BUGGY]  return  new  LocalizedMapConstructor  <  T>(rawType);  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  LocalizedMapConstructor  <  T>(rawType);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  LocalizedMapConstructor  <  T>(rawType);	  return    new    LocalizedMapConstructor    <    T>()    {    	non-compiled	[CE]  ';'  expected	64	None	replace
631	[BUG]  [BUGGY]  return  new  LocalizedMapConstructor  <  T>(rawType.getRawClass())  {  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  LocalizedMapConstructor  <  T>(rawType.getRawClass())  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  LocalizedMapConstructor  <  T>(rawType.getRawClass())  {	  return    new    LocalizedMapConstructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
632	[BUG]  [BUGGY]  return  new  LocalizedMapConstructor  <  T>();  [CE]  ';'  expected  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  LocalizedMapConstructor  <  T>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  LocalizedMapConstructor  <  T>();	  return    new    LocalizedMapConstructor    <    T>()    {    	non-compiled	[CE]  ';'  expected	64	None	replace
633	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  Object>()  {  [CE]  incompatible  types  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  Object>()  {	  return    new    PropertyConstructor    <    Object>()    {    	non-compiled	[CE]  incompatible  types	54	None	replace
634	[BUG]  [BUGGY]  return  new  LocalizedMap  <  Object,  Object>(Arrays.asList(rawType))  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  LocalizedMap  <  Object,  Object>(Arrays.asList(rawType))  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  LocalizedMap  <  Object,  Object>(Arrays.asList(rawType))  {	  return    new    LocalizedMap    <    Object,    Object>()    {    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
635	[BUG]  [BUGGY]  return(SortedMap  <  Object,  Object>)new  SortedHashMap  <  Object,  Object>()  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap  <  Object,  Object>)new  SortedHashMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap  <  Object,  Object>)new  SortedHashMap  <  Object,  Object>()  {	  return(SortedMap    <    Object,    Object>)new    SortedMap    <    Object,    Object>()    {    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
636	[BUG]  [BUGGY]  return(SortedMap  <  Object,  Object>)create  TreeMap  <  Object,  Object>()  {  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap  <  Object,  Object>)create  TreeMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap  <  Object,  Object>)create  TreeMap  <  Object,  Object>()  {	  return(SortedMap    <    Object,    Object>)new    SortedMap    <    Object,    Object>()    {    	non-compiled	[CE]  ';'  expected	50	None	replace
637	[BUG]  [BUGGY]  }  else  if(type  instanceof  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  <identifier>  expected  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  }  else  if(type  instanceof  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	}  else  if(type  instanceof  SortedMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    if(type    instanceof    Class    <?    extends    T>)    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
638	[BUG]  [BUGGY]  Class  <?  extends  T>  rawType  =  type.getRawClass();  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?  extends  T>  rawType  =  type.getRawClass();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Class  <?  extends  T>  rawType  =  type.getRawClass();	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    if(type    instanceof    Class    <?    extends    T>)    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	17	None	replace
639	[BUG]  [BUGGY]  return  new  Constructor  <  T>(rawType.getRawClass(),  TypeToken.class)  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  T>(rawType.getRawClass(),  TypeToken.class)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  T>(rawType.getRawClass(),  TypeToken.class)  {	  return    new    Constructor    <    T>(rawType.getRawClass())    {    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
640	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>  [CE]  '('  or  '['  expected  [FE]              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  '('  or  '['  expected	57	None	replace
641	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>()  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>()  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>()	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	57	None	replace
642	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	57	None	replace
643	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap  <?>)  {  Class  <?>  rawType  =(Class  <?>)rawType;  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap  <?>)  {  Class  <?>  rawType  =(Class  <?>)rawType;  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap  <?>)  {  Class  <?>  rawType  =(Class  <?>)rawType;  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	57	None	replace
644	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object  [CE]  >  expected  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  >  expected	57	None	replace
645	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  else  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	57	None	replace
646	[BUG]  [BUGGY]  }  else  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  }  else  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	}  else  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()[0]).getRawType()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
647	[BUG]  [BUGGY]  }  else  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " "));  }  [CE]  <identifier>  expected  [FE]                                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  }  else  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	}  else  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " "));  }	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()[0]).getRawType()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
648	[BUG]  [BUGGY]  }  else  if(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  }  else  if(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	}  else  if(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()[0]).getRawType()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
649	[BUG]  [BUGGY]  if(ReflectionMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(ReflectionMap.class.isAssignableFrom(rawType))  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(ReflectionMap.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	77	None	replace
650	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {	  if(SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	77	None	replace
651	[BUG]  [BUGGY]  if(type  instanceof  TreeMap)  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  TreeMap)  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  TreeMap)  {  return  new  TreeMap  <  Object,  Object>();  }	  if(type    instanceof    Constructor    <    T>)    {    return    new    Constructor    <    T>()    {    	non-compiled	[CE]  ';'  expected	28	None	replace
652	[BUG]  [BUGGY]  if(type  instanceof  TreeMap  <  Object,  Object>)  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  TreeMap  <  Object,  Object>)  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  TreeMap  <  Object,  Object>)  {  return  new  TreeMap  <  Object,  Object>();  }	  if(type    instanceof    Constructor    <    T>)    {    return    new    Constructor    <    T>()    {    	non-compiled	[CE]  ';'  expected	28	None	replace
653	[BUG]  [BUGGY]  if(type  instanceof  SortedMap  <?  super  T>)  {  return  new  SortedMap  <  Object,  Object>()  {  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  SortedMap  <?  super  T>)  {  return  new  SortedMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  SortedMap  <?  super  T>)  {  return  new  SortedMap  <  Object,  Object>()  {	  if(type    instanceof    Constructor    <    T>)    {    return    new    Constructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
654	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  false,  rawType.isPrimitive())  {  [CE]  anonymous  class  implements  interface;  cannot  have  arguments  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  false,  rawType.isPrimitive())  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>(rawType,  false,  rawType.isPrimitive())  {	  return    new    ObjectConstructor    <    T>(rawType,    false)    {    	non-compiled	[CE]  anonymous  class  implements  interface;  cannot  have  arguments	42	None	replace
655	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  false,  rawType.getRawClass())  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  false,  rawType.getRawClass())  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>(rawType,  false,  rawType.getRawClass())  {	  return    new    ObjectConstructor    <    T>(rawType,    false)    {    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
656	[BUG]  [BUGGY]  }  else  if(SortedMap.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  }  else  if(SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	}  else  if(SortedMap.class.isAssignableFrom(rawType))  {	  if(sortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	14	None	replace
657	[BUG]  [BUGGY]  }  else  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  }  else  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	}  else  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(sortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	14	None	replace
658	[BUG]  [BUGGY]  return  new  TreeMap  <  Object,  Object>(rawType);  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  TreeMap  <  Object,  Object>(rawType);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  TreeMap  <  Object,  Object>(rawType);	  return    new    TreeMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	36	None	replace
659	[BUG]  [BUGGY]  return  new  TreeMap  <  Object,  Object>().clone();  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  TreeMap  <  Object,  Object>().clone();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  TreeMap  <  Object,  Object>().clone();	  return    new    TreeMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	36	None	replace
660	[BUG]  [BUGGY]  if(type  instanceof  TreeMap  <?  super  T>)  {  return  new  TreeMap  <  Object,  Object>()  {  }  [CE]  ';'  expected  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  TreeMap  <?  super  T>)  {  return  new  TreeMap  <  Object,  Object>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  TreeMap  <?  super  T>)  {  return  new  TreeMap  <  Object,  Object>()  {  }	  if(type    instanceof    Constructor    <    T>)    {    return    new    Constructor    <    T>()    {    }    	non-compiled	[CE]  ';'  expected	32	None	replace
661	[BUG]  [BUGGY]  return  new  StandardImplementationConstructor  <  T>(rawType);  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  StandardImplementationConstructor  <  T>(rawType);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  StandardImplementationConstructor  <  T>(rawType);	  return    new    StandardImplementationConstructor    <    T>()    {    	non-compiled	[CE]  ';'  expected	25	None	replace
662	[BUG]  [BUGGY]  return  new  StandardImplementationConstructor  <  T>()  ==  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  StandardImplementationConstructor  <  T>()  ==  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  StandardImplementationConstructor  <  T>()  ==	  return    new    StandardImplementationConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
663	[BUG]  [BUGGY]  Class  <?>  rawType  =  type  instanceof  Class  <?>?>.getRawType();  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?>  rawType  =  type  instanceof  Class  <?>?>.getRawType();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Class  <?>  rawType  =  type  instanceof  Class  <?>?>.getRawType();	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    if(type    instanceof    Class    <?>)    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
664	[BUG]  [BUGGY]  Class  <?>  rawType  =  type.getRawClass();  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?>  rawType  =  type.getRawClass();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Class  <?>  rawType  =  type.getRawClass();	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    else    if(type    instanceof    Class    <?>)    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	16	None	replace
665	[BUG]  [BUGGY]  return(Constructor  <  T>)new  Constructor  <  T>(rawType.getRawClass())  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(Constructor  <  T>)new  Constructor  <  T>(rawType.getRawClass())  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(Constructor  <  T>)new  Constructor  <  T>(rawType.getRawClass())  {	  return(Constructor    <    T>)new    Constructor    <    T>()    {    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
666	[BUG]  [BUGGY]  return(Constructor  <  T>)new  Constructor  <  T>(type);  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(Constructor  <  T>)new  Constructor  <  T>(type);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(Constructor  <  T>)new  Constructor  <  T>(type);	  return(Constructor    <    T>)new    Constructor    <    T>()    {    	non-compiled	[CE]  ';'  expected	30	None	replace
667	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  componentType)  {  [CE]  cannot  find  symbol  componentType  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  componentType)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>(rawType,  componentType)  {	  return    new    ObjectConstructor    <    T>(rawType,    objectType)    {    	non-compiled	[CE]  cannot  find  symbol  componentType	86	None	replace
668	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  primitiveType)  {  [CE]  cannot  find  symbol  primitiveType  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  primitiveType)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>(rawType,  primitiveType)  {	  return    new    ObjectConstructor    <    T>(rawType,    objectType)    {    	non-compiled	[CE]  cannot  find  symbol  primitiveType	86	None	replace
669	[BUG]  [BUGGY]  SortedMap  <  Object,  Object>  throws  Exception;  [CE]  not  a  statement  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  SortedMap  <  Object,  Object>  throws  Exception;  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	SortedMap  <  Object,  Object>  throws  Exception;	  if(type    instanceof    SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    SortedMap    <    Object,    Object>();    }    	non-compiled	[CE]  not  a  statement	73	None	replace
670	[BUG]  [BUGGY]  return(T)new  TreeMap  <  Object,  Object  constructor  <  T>()  {  [CE]  >  expected  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  TreeMap  <  Object,  Object  constructor  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  TreeMap  <  Object,  Object  constructor  <  T>()  {	  return(T)new    ArrayList    <    Object,    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  >  expected	79	None	replace
671	[BUG]  [BUGGY]  final  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  rawType);  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  final  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  rawType);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	final  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  rawType);	  final    Constructor    <    T>    in    class    Constructor    <    T#2>    cannot    be    applied    to    given    types;    	non-compiled	[CE]  ';'  expected	29	None	replace
672	[BUG]  [BUGGY]  final  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  rawType.getRawClass());  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  final  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  rawType.getRawClass());  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	final  Constructor  <  T>  in  class  Constructor  <  T#2>  cannot  be  applied  to  given  types,  rawType.getRawClass());	  final    Constructor    <    T>    in    class    Constructor    <    T#2>    cannot    be    applied    to    given    types;    	non-compiled	[CE]  ';'  expected	29	None	replace
673	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  ObjectConstructor  <  T>();  }  [CE]  >  expected  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  ObjectConstructor  <  T>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  ObjectConstructor  <  T>();  }	  return(T)new    TreeMap    <    Object,    ObjectConstructor    <    T>()    {    	non-compiled	[CE]  >  expected	89	None	replace
674	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap  <?  super?>)  {  if(!SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  illegal  start  of  type  [FE]              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap  <?  super?>)  {  if(!SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap  <?  super?>)  {  if(!SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(!SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
675	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap  <?  super  &&!SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  illegal  start  of  type  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap  <?  super  &&!SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap  <?  super  &&!SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(!SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
676	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap  <?>)  {  }  else  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap  <?>)  {  }  else  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap  <?>)  {  }  else  if(SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(!SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	13	None	replace
677	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType.getRawClass());  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType.getRawClass());  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  DefaultImplementationConstructor  <  T>(rawType.getRawClass());	  return    new    DefaultImplementationConstructor    <    T>(rawType);    	non-compiled	[CE]  ';'  expected	87	None	replace
678	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  unknownType())  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  unknownType())  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>(rawType,  unknownType())  {	  return    new    ObjectConstructor    <    T>(rawType,    true)    {    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
679	[BUG]  [BUGGY]  return  new  SortedMap  <  Object,  Object>(rawType);  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  SortedMap  <  Object,  Object>(rawType);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  SortedMap  <  Object,  Object>(rawType);	  return    new    SortedMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	49	None	replace
680	[BUG]  [BUGGY]  return  new  TreeMap  <  Class  <?  super  T>(rawType.getRawClass())  {  [CE]  >  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  TreeMap  <  Class  <?  super  T>(rawType.getRawClass())  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  TreeMap  <  Class  <?  super  T>(rawType.getRawClass())  {	  return    new    TreeMap    <    Class    <?    super    T>()    {    	non-compiled	[CE]  >  expected	99	None	replace
681	[BUG]  [BUGGY]  return  new  TreeMap  <  Class  <?  super  T>()  ==  [CE]  >  expected  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  TreeMap  <  Class  <?  super  T>()  ==  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  TreeMap  <  Class  <?  super  T>()  ==	  return    new    TreeMap    <    Class    <?    super    T>()    {    	non-compiled	[CE]  >  expected	99	None	replace
682	[BUG]  [BUGGY]  return(SortedMap  <  Object,  Object>)&&((  TreeMap  <  Object,  Object>)rawType).getActualTypeArguments().length  >  1)  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap  <  Object,  Object>)&&((  TreeMap  <  Object,  Object>)rawType).getActualTypeArguments().length  >  1)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap  <  Object,  Object>)&&((  TreeMap  <  Object,  Object>)rawType).getActualTypeArguments().length  >  1)  {	  return(SortedMap    <    Object,    Object>)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
683	[BUG]  [BUGGY]  return(SortedMap  <  Object,  Object>)&&((  TreeMap  <  Object,  Object>)type).getActualTypeArguments().length  >  1)  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap  <  Object,  Object>)&&((  TreeMap  <  Object,  Object>)type).getActualTypeArguments().length  >  1)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap  <  Object,  Object>)&&((  TreeMap  <  Object,  Object>)type).getActualTypeArguments().length  >  1)  {	  return(SortedMap    <    Object,    Object>)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
684	[BUG]  [BUGGY]  return(SortedMap  <  Object,  Object>)&&((  TreeMap  <  Object,  Object>)rawType).getActualTypeArguments().add(type);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap  <  Object,  Object>)&&((  TreeMap  <  Object,  Object>)rawType).getActualTypeArguments().add(type);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap  <  Object,  Object>)&&((  TreeMap  <  Object,  Object>)rawType).getActualTypeArguments().add(type);	  return(SortedMap    <    Object,    Object>)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
685	[BUG]  [BUGGY]  return(SortedMap  <  Object,  Object>)&&((  TreeMap  <  Object,  Object>)rawType).getActualTypeArguments().length  >  1);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap  <  Object,  Object>)&&((  TreeMap  <  Object,  Object>)rawType).getActualTypeArguments().length  >  1);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap  <  Object,  Object>)&&((  TreeMap  <  Object,  Object>)rawType).getActualTypeArguments().length  >  1);	  return(SortedMap    <    Object,    Object>)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
686	[BUG]  [BUGGY]  return(SortedMap  <  Object,  Object>)&&((  TreeMap  <  Object,  Object>)rawType).getActualTypeArguments().size()  >  1);  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap  <  Object,  Object>)&&((  TreeMap  <  Object,  Object>)rawType).getActualTypeArguments().size()  >  1);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap  <  Object,  Object>)&&((  TreeMap  <  Object,  Object>)rawType).getActualTypeArguments().size()  >  1);	  return(SortedMap    <    Object,    Object>)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
687	[BUG]  [BUGGY]  return  new  SortedMapConstructor  <  T>()  ==  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  SortedMapConstructor  <  T>()  ==  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  SortedMapConstructor  <  T>()  ==	  return    new    SortedMapConstructor    <    T>()    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
688	[BUG]  [BUGGY]  return  new  SortedMapConstructor  <  T>(rawType);  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  SortedMapConstructor  <  T>(rawType);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  SortedMapConstructor  <  T>(rawType);	  return    new    SortedMapConstructor    <    T>()    {    	non-compiled	[CE]  ';'  expected	63	None	replace
689	[BUG]  [BUGGY]  }  else  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  }  else  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	}  else  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
690	[BUG]  [BUGGY]  }  else  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " "));  }  [CE]  <identifier>  expected  [FE]                                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  }  else  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	}  else  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " "));  }	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
691	[BUG]  [BUGGY]  }  else  if(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  }  else  if(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	}  else  if(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  throw  new  IllegalArgumentException( " ");  }	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
692	[BUG]  [BUGGY]  }  else  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  <identifier>  expected  [FE]                                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  }  else  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	}  else  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  return  new  TreeMap  <  Object,  Object>();  }	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
693	[BUG]  [BUGGY]  }  else  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  }  else  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	}  else  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
694	[BUG]  [BUGGY]  eaucoup.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  eaucoup.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	eaucoup.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	8	None	replace
695	[BUG]  [BUGGY]  return  new  Constructor  <  T>(type)  {  [CE]  constructor  Constructor  in  class  Constructor<T#2>  cannot  be  applied  to  given  types;  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  T>(type)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  T>(type)  {	  return    new    Constructor    <    T>(rawType)    {    	non-compiled	[CE]  constructor  Constructor  in  class  Constructor<T#2>  cannot  be  applied  to  given  types;	31	None	replace
696	[BUG]  [BUGGY]  return(SortedMap.class.isAssignableFrom(rawType))?  new  SortedMap  <  Object,  Object>()  :  new  SortedHashMap  <  Object,  Object>()  {  [CE]  SortedMap  is  abstract;  cannot  be  instantiated  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap.class.isAssignableFrom(rawType))?  new  SortedMap  <  Object,  Object>()  :  new  SortedHashMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap.class.isAssignableFrom(rawType))?  new  SortedMap  <  Object,  Object>()  :  new  SortedHashMap  <  Object,  Object>()  {	  return(SortedMap.class.isAssignableFrom(rawType))?    new    SortedMap    <    Object,    Object>()    :    new    SortedMap    <    Object,    Object>()    {    	non-compiled	[CE]  SortedMap  is  abstract;  cannot  be  instantiated	51	None	replace
697	[BUG]  [BUGGY]  return  new  TreeMap  <  Object,  Object>(rawType.getRawClass())  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  TreeMap  <  Object,  Object>(rawType.getRawClass())  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  TreeMap  <  Object,  Object>(rawType.getRawClass())  {	  return    new    TreeMap    <    Object,    Object>(rawType)    {    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
698	[BUG]  [BUGGY]  return  new  TreeMap  <  Object,  Object>(type)  {  [CE]  no  suitable  constructor  found  for  TreeMap(Type)  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  TreeMap  <  Object,  Object>(type)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  TreeMap  <  Object,  Object>(type)  {	  return    new    TreeMap    <    Object,    Object>(rawType)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  TreeMap(Type)	38	None	replace
699	[BUG]  [BUGGY]  return  new  Constructor  <  T>(type.getRawClass());  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  T>(type.getRawClass());  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  T>(type.getRawClass());	  return    new    Constructor    <    T>(type);    	non-compiled	[CE]  ';'  expected	68	None	replace
700	[BUG]  [BUGGY]  TypeToken.get(type).getActualParameterTypes()  [0]).getRawType())  {  return  new  ObjectConstructor  <  T>();  }  [CE]  not  a  statement  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  TypeToken.get(type).getActualParameterTypes()  [0]).getRawType())  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	TypeToken.get(type).getActualParameterTypes()  [0]).getRawType())  {  return  new  ObjectConstructor  <  T>();  }	  TypeToken.get(type).getActualTypeArguments()    [0]).getRawType())    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  not  a  statement	91	None	replace
701	[BUG]  [BUGGY]  TypeToken.get(type).getActualTypeArguments()  [0]).getRawClass())  {  return  new  ObjectConstructor  <  T>();  }  [CE]  not  a  statement  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  TypeToken.get(type).getActualTypeArguments()  [0]).getRawClass())  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	TypeToken.get(type).getActualTypeArguments()  [0]).getRawClass())  {  return  new  ObjectConstructor  <  T>();  }	  TypeToken.get(type).getActualTypeArguments()    [0]).getRawType())    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  not  a  statement	91	None	replace
702	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor  <  Class  <  T>()  {  [CE]  >  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor  <  Class  <  T>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor  <  Class  <  T>()  {	  return(T)new    ObjectConstructor    <    Class    <    T>()    {    	non-compiled	[CE]  >  expected	46	None	replace
703	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor  <  Class  <  T>()  {  }  [CE]  >  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor  <  Class  <  T>()  {  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor  <  Class  <  T>()  {  }	  return(T)new    ObjectConstructor    <    Class    <    T>()    {    	non-compiled	[CE]  >  expected	46	None	replace
704	[BUG]  [BUGGY]  TypeToken.get(type).getActualParameterTypes()  [0]).getRawType()  ==  null)  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  not  a  statement  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  TypeToken.get(type).getActualParameterTypes()  [0]).getRawType()  ==  null)  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	TypeToken.get(type).getActualParameterTypes()  [0]).getRawType()  ==  null)  {  return  new  TreeMap  <  Object,  Object>();  }	  TypeToken.get(type).getActualTypeArguments()[0]).getRawType()    ==    null)    {    return    new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  not  a  statement	92	None	replace
705	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType)||    SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	15	None	replace
706	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(rawType  [CE]  <identifier>  expected  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(rawType  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(rawType	  if(type    instanceof    SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    if(SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
707	[BUG]  [BUGGY]  if(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(rawType  [CE]  <identifier>  expected  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(rawType  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(type  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(rawType	  if(type    instanceof    SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    if(SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
708	[BUG]  [BUGGY]  return(T)new  TreeMap  <?  super  T>();  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  TreeMap  <?  super  T>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  TreeMap  <?  super  T>();	  return    new    TreeMap    <?    super    T>()    {    	non-compiled	[CE]  ';'  expected	66	None	replace
709	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||  Map.class.isAssignableFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType))    {    return    new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	76	None	replace
710	[BUG]  [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignedFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignedFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignedFrom(rawType))  {  return  new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType))    {    return    new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	76	None	replace
711	[BUG]  [BUGGY]  }  else  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  }  else  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	}  else  if(type  instanceof  SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
712	[BUG]  [BUGGY]  eaucoup.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  eaucoup.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	eaucoup.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()  [0]).getRawType())))  {  throw  new  IllegalArgumentException( " ");  }	  if(type    instanceof    SortedMap.class.isAssignableFrom(TypeToken.get(((SortedMap.Type)type).getActualTypeArguments()[0]).getRawType())))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	10	None	replace
713	[BUG]  [BUGGY]  return(T)this.new  ObjectConstructor  <  Object>()  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)this.new  ObjectConstructor  <  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)this.new  ObjectConstructor  <  Object>()  {	  return(T)new    ObjectConstructor    <    Object>()    {    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
714	[BUG]  [BUGGY]  return(SortedMap.class.isAssignableFrom(rawType))?  new  TreeMap  <  Object,  Object>()  :  new  SortedHashMap  <  Object,  Object>()  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap.class.isAssignableFrom(rawType))?  new  TreeMap  <  Object,  Object>()  :  new  SortedHashMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap.class.isAssignableFrom(rawType))?  new  TreeMap  <  Object,  Object>()  :  new  SortedHashMap  <  Object,  Object>()  {	  return(SortedMap.class.isAssignableFrom(rawType))?    new    TreeMap    <    Object,    Object>()    :    new    SortedMap    <    Object,    Object>()    {    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
715	[BUG]  [BUGGY]  return(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))?  new  TreeMap  <  Object,  Object>()  :  new  SortedHashMap  <  Object,  Object>()  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))?  new  TreeMap  <  Object,  Object>()  :  new  SortedHashMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(SortedMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))?  new  TreeMap  <  Object,  Object>()  :  new  SortedHashMap  <  Object,  Object>()  {	  return(SortedMap.class.isAssignableFrom(rawType))?    new    TreeMap    <    Object,    Object>()    :    new    SortedMap    <    Object,    Object>()    {    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
716	[BUG]  [BUGGY]  TypeToken.get(type).getActualParameterTypes()  [0]).getRawType())  {  return  new  ObjectConstructor  <  T>();  [CE]  not  a  statement  [FE]                                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  TypeToken.get(type).getActualParameterTypes()  [0]).getRawType())  {  return  new  ObjectConstructor  <  T>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	TypeToken.get(type).getActualParameterTypes()  [0]).getRawType())  {  return  new  ObjectConstructor  <  T>();	  TypeToken.get(type).getActualTypeArguments()    [0]).getRawType())    {    return    new    ObjectConstructor    <    T>();    	non-compiled	[CE]  not  a  statement	95	None	replace
717	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>(class,  type)  {  [CE]  illegal  start  of  expression  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>(class,  type)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>(class,  type)  {	  return    new    ObjectConstructor    <    T>(type)    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
718	[BUG]  [BUGGY]  SortedMap.class.isAssignableFrom(rawType)&&  Character.class.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  [CE]  not  a  statement  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  SortedMap.class.isAssignableFrom(rawType)&&  Character.class.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	SortedMap.class.isAssignableFrom(rawType)&&  Character.class.isAssignableFrom(((ParameterizedType)type).getActualTypeArguments()[0]).getRawType()))  {	  SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  not  a  statement	94	None	replace
719	[BUG]  [BUGGY]  SortedMap.class.isAssignableFrom(rawType)&&  Character.class.isAssignableFrom(type.getActualTypeArguments()[0]).getRawType())  {  [CE]  not  a  statement  [FE]                                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  SortedMap.class.isAssignableFrom(rawType)&&  Character.class.isAssignableFrom(type.getActualTypeArguments()[0]).getRawType())  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	SortedMap.class.isAssignableFrom(rawType)&&  Character.class.isAssignableFrom(type.getActualTypeArguments()[0]).getRawType())  {	  SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  not  a  statement	94	None	replace
720	[BUG]  [BUGGY]  return  new  PropertyConstructor  <  T>(rawType.getRawClass())  {  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  PropertyConstructor  <  T>(rawType.getRawClass())  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  PropertyConstructor  <  T>(rawType.getRawClass())  {	  return    new    PropertyConstructor    <    T>(rawType)    {    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
721	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>()  {  @Override  public  T  construct()  {  return  new  TreeMap  <  Object,  Object>();  }  [CE]  method  construct()  is  already  defined  in  class  <anonymous  com.google.gson.internal.ConstructorConstructor$9>  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>()  {  @Override  public  T  construct()  {  return  new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>()  {  @Override  public  T  construct()  {  return  new  TreeMap  <  Object,  Object>();  }	  return    new    ObjectConstructor    <    T>()    ||    	non-compiled	[CE]  method  construct()  is  already  defined  in  class  <anonymous  com.google.gson.internal.ConstructorConstructor$9>	72	None	replace
722	[BUG]  [BUGGY]  return(T)new  SortedMap  <  T>();  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  SortedMap  <  T>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  SortedMap  <  T>();	  return    new    SortedMap    <    T>()    {    	non-compiled	[CE]  ';'  expected	88	None	replace
723	[BUG]  [BUGGY]  return  new  SortedMap  <  Object>()  {  [CE]  wrong  number  of  type  arguments;  required  2  [FE]                        ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  SortedMap  <  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  SortedMap  <  Object>()  {	  return    new    SortedMap    <    T>()    {    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  2	88	None	replace
724	[BUG]  [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  type.getRawType())  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  ObjectConstructor  <  T>(rawType,  type.getRawType())  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  ObjectConstructor  <  T>(rawType,  type.getRawType())  {	  return    new    ObjectConstructor    <    T>(rawType,    elementType)    {    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
725	[BUG]  [BUGGY]  Return  new  ObjectConstructor  <  T>(rawType,  type)  {  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Return  new  ObjectConstructor  <  T>(rawType,  type)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Return  new  ObjectConstructor  <  T>(rawType,  type)  {	  return    new    ObjectConstructor    <    T>(rawType,    elementType)    {    	non-compiled	[CE]  not  a  statement	40	None	replace
726	[BUG]  [BUGGY]  return(T)new  SortedSortedMap  <  Object,  Object>();  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  SortedSortedMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  SortedSortedMap  <  Object,  Object>();	  return(T)new    SortedHashMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	58	None	replace
727	[BUG]  [BUGGY]  return(T)new  SortedArrayHashMap  <  Object,  Object>();  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return(T)new  SortedArrayHashMap  <  Object,  Object>();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return(T)new  SortedArrayHashMap  <  Object,  Object>();	  return(T)new    SortedHashMap    <    Object,    Object>();    	non-compiled	[CE]  ';'  expected	58	None	replace
728	[BUG]  [BUGGY]  return  new  SortedObjectMap  <  Object,  Object>()  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  SortedObjectMap  <  Object,  Object>()  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  SortedObjectMap  <  Object,  Object>()  {	  return    new    SortedHashMap    <    Object,    Object>()    {    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
729	[BUG]  [BUGGY]  SortedMap  <  Object,  Object>  this  =  instanceCreators.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType();  [CE]  not  a  statement  [FE]                                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  SortedMap  <  Object,  Object>  this  =  instanceCreators.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType();  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	SortedMap  <  Object,  Object>  this  =  instanceCreators.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType();	  if(type    instanceof    SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    return    new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  not  a  statement	78	None	replace
730	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingClass(rawType);  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  aughtExceptionHandler.handleMissingClass(rawType);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	aughtExceptionHandler.handleMissingClass(rawType);	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	12	None	replace
731	[BUG]  [BUGGY]  aughtExceptionHandler.handleSortedException( " ");  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  aughtExceptionHandler.handleSortedException( " ");  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	aughtExceptionHandler.handleSortedException( " ");	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	12	None	replace
732	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingClass(rawType,  Class.class);  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  aughtExceptionHandler.handleMissingClass(rawType,  Class.class);  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	aughtExceptionHandler.handleMissingClass(rawType,  Class.class);	  if(SortedMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	12	None	replace
733	[BUG]  [BUGGY]  return  new  Constructor  <  T>(rawType,  type.getRawType())  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  Constructor  <  T>(rawType,  type.getRawType())  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  Constructor  <  T>(rawType,  type.getRawType())  {	  return    new    Constructor    <    T>(type.getRawType())    {    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
734	[BUG]  [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(TreeMap.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  return(T)new  TreeMap  <  Object,  Object>();  }	  if(SortedMap.class.isAssignableFrom(rawType)||    TreeMap.class.isAssignableFrom(rawType))    {    return(T)new    TreeMap    <    Object,    Object>();    }    	non-compiled	[CE]  ';'  expected	59	None	replace
735	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom  [CE]  <identifier>  expected  [FE]                            ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom	  if(type    instanceof    SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    if(SortedMap.class.isAssignableFrom(rawType))    {    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
736	[BUG]  [BUGGY]  if(rawType  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(raw  [CE]  <identifier>  expected  [FE]                              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  if(rawType  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(raw  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	if(rawType  instanceof  SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType()))  {  if(SortedMap.class.isAssignableFrom(raw	  if(type    instanceof    SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    if(SortedMap.class.isAssignableFrom(rawType))    {    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
737	[BUG]  [BUGGY]  Class  <?>  rawType  =  type  instanceof  SortedMap.class.getAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType());  [CE]  <identifier>  expected  [FE]                                ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  Class  <?>  rawType  =  type  instanceof  SortedMap.class.getAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType());  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	Class  <?>  rawType  =  type  instanceof  SortedMap.class.getAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()  [0]).getRawType());	  if(type    instanceof    SortedMap.class.isAssignableFrom(SortedMap.get(((SortedMap)type).getActualTypeArguments()[0]).getRawType()))    {    if(SortedMap.class.isAssignableFrom(rawType))    {    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
738	[BUG]  [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType,  objectType)  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  ArrayList<Object>();  }  };  }  }  if  (Map.class.isAssignableFrom(rawType))  {  if  (SortedMap.class.isAssignableFrom(rawType))  {      [BUGGY]  return  new  DefaultImplementationConstructor  <  T>(rawType,  objectType)  {  [BUGGY]      @Override  public  T  construct()  {  return  (T)  new  TreeMap<Object,  Object>();  }  };  }  else  if  (type  instanceof  ParameterizedType  &&  !(String.class.isAssignableFrom(  TypeToken.get(((ParameterizedType)  type).getActualTypeArguments()[0]).getRawType())))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  LinkedHashMap<Object,  Object>();  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.5	176	176	2	replace	return  new  DefaultImplementationConstructor  <  T>(rawType,  objectType)  {	  return    new    DefaultImplementationConstructor    <    T>(rawType)    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
