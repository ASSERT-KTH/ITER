bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken.getRawType());  [CE]  incompatible  types  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken.getRawType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken.getRawType());	  InstanceCreator    <    T>    rawType    =    instanceCreators.get(typeToken);    	non-compiled	[CE]  incompatible  types	39	None	replace
2	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken.toString());  [CE]  incompatible  types  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken.toString());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken.toString());	  InstanceCreator    <    T>    rawType    =    instanceCreators.get(typeToken);    	non-compiled	[CE]  incompatible  types	39	None	replace
3	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken.cloneTree());  [CE]  cannot  find  symbol  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken.cloneTree());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken.cloneTree());	  InstanceCreator    <    T>    rawType    =    instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
4	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken,  rawType);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken,  rawType);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken,  rawType);	  InstanceCreator    <    T>    rawType    =    instanceCreators.get(typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	39	None	replace
5	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken.getRawClass());  [CE]  cannot  find  symbol  [FE]                                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken.getRawClass());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken.getRawClass());	  InstanceCreator    <    T>    rawType    =    instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
6	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  defaultConstructor.getConstructor()  :  typeToken;  [CE]  cannot  find  symbol  defaultConstructor  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  defaultConstructor.getConstructor()  :  typeToken;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  defaultConstructor.getConstructor()  :  typeToken;	  final    Type    type    =    typeToken!=    null?    typeToken.getConstructor()    :    defaultConstructor;    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	139	None	replace
7	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  defaultConstructor.getConstructor()  :  typeToken;  [CE]  cannot  find  symbol  defaultConstructor  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  defaultConstructor.getConstructor()  :  typeToken;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  defaultConstructor.getConstructor()  :  typeToken;	  final    Type    type    =    typeToken!=    null?    typeToken.getConstructor()    :    defaultConstructor;    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	139	None	replace
8	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  defaultConstructor.getConstructor()  :  typeToken.getConstructor();  [CE]  cannot  find  symbol  defaultConstructor  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  defaultConstructor.getConstructor()  :  typeToken.getConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  defaultConstructor.getConstructor()  :  typeToken.getConstructor();	  final    Type    type    =    typeToken!=    null?    typeToken.getConstructor()    :    defaultConstructor;    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	139	None	replace
9	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  defaultImplementation.getTypeRegistry()  :  typeToken.getTypeRegistry();  [CE]  cannot  find  symbol  defaultImplementation  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  defaultImplementation.getTypeRegistry()  :  typeToken.getTypeRegistry();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  defaultImplementation.getTypeRegistry()  :  typeToken.getTypeRegistry();	  final    Type    type    =    typeToken!=    null?    typeToken.getTypeRegistry()    :    defaultImplementation;    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	160	None	replace
10	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  defaultImplementation.getTypeRegistry()  :  typeToken;  [CE]  cannot  find  symbol  defaultImplementation  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  defaultImplementation.getTypeRegistry()  :  typeToken;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  defaultImplementation.getTypeRegistry()  :  typeToken;	  final    Type    type    =    typeToken!=    null?    typeToken.getTypeRegistry()    :    defaultImplementation;    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	160	None	replace
11	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  defaultConstructor.getTypeRegistry()  :  typeToken.getTypeRegistry();  [CE]  cannot  find  symbol  defaultConstructor  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  defaultConstructor.getTypeRegistry()  :  typeToken.getTypeRegistry();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  defaultConstructor.getTypeRegistry()  :  typeToken.getTypeRegistry();	  final    Type    type    =    typeToken!=    null?    typeToken.getTypeRegistry()    :    defaultImplementation;    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	160	None	replace
12	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getTypeRegistry()  :  defaultImplementation;  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getTypeRegistry()  :  defaultImplementation;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  typeToken.getTypeRegistry()  :  defaultImplementation;	  final    Type    type    =    typeToken!=    null?    typeToken.getTypeRegistry()    :    defaultImplementation;    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
13	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  typeToken.getRawType());  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  typeToken.getRawType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  typeToken.getRawType());	  final    Type    type    =    getTypeToken(typeToken,    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
14	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  this.typeToken.getType());  [CE]  cannot  find  symbol  typeToken  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  this.typeToken.getType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  this.typeToken.getType());	  final    Type    type    =    getTypeToken(typeToken,    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol  typeToken	29	None	replace
15	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  typeToken.getReturnType());  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  typeToken.getReturnType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  typeToken.getReturnType());	  final    Type    type    =    getTypeToken(typeToken,    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
16	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  ObjectConstructor.class.getSimpleName());  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  ObjectConstructor.class.getSimpleName());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  ObjectConstructor.class.getSimpleName());	  final    Type    type    =    getTypeToken(typeToken,    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
17	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  typeToken.getObjectType());  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  typeToken.getObjectType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  typeToken.getObjectType());	  final    Type    type    =    getTypeToken(typeToken,    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
18	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  typeToken.getImplicitPrototype());  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  typeToken.getImplicitPrototype());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  typeToken.getImplicitPrototype());	  final    Type    type    =    getTypeToken(typeToken,    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
19	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.toObjectConstructor()  :  typeToken.toObjectConstructor();  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.toObjectConstructor()  :  typeToken.toObjectConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  typeToken.toObjectConstructor()  :  typeToken.toObjectConstructor();	  final    Type    type    =    typeToken!=    null?    typeToken.toObjectConstructor()    :    typeToken.toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
20	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObjectConstructor()  :  defaultConstructor.toObjectConstructor();  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObjectConstructor()  :  defaultConstructor.toObjectConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.toObjectConstructor()  :  defaultConstructor.toObjectConstructor();	  final    Type    type    =    typeToken!=    null?    typeToken.toObjectConstructor()    :    typeToken.toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
21	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getType()  :  typeToken.toObjectConstructor();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getType()  :  typeToken.toObjectConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getType()  :  typeToken.toObjectConstructor();	  final    Type    type    =    typeToken!=    null?    typeToken.toObjectConstructor()    :    typeToken.toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
22	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObjectConstructor()  :  typeToken,  defaultConstructor.toObjectConstructor();  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObjectConstructor()  :  typeToken,  defaultConstructor.toObjectConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.toObjectConstructor()  :  typeToken,  defaultConstructor.toObjectConstructor();	  final    Type    type    =    typeToken!=    null?    typeToken.toObjectConstructor()    :    typeToken.toObjectConstructor();    	non-compiled	[CE]  ';'  expected	146	None	replace
23	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  Type  type  =  typeToken.getRawType();  }  [CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  Type  type  =  typeToken.getRawType();  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  Type  type  =  typeToken.getRawType();  }	  final    Type    type    =    typeToken.getRawType();    Final    Type    type    =    typeToken.getRawType();    	non-compiled	[CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)	106	None	replace
24	[BUG]  [BUGGY]  if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  final  Type  type  =  typeToken.getRawType();  }  [CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  final  Type  type  =  typeToken.getRawType();  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  final  Type  type  =  typeToken.getRawType();  }	  final    Type    type    =    typeToken.getRawType();    Final    Type    type    =    typeToken.getRawType();    	non-compiled	[CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)	106	None	replace
25	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  Type  type  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  Type  type  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  Type  type  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  final    Type    type    =    typeToken.getRawType();    Final    Type    type    =    typeToken.getRawType();    	non-compiled	[CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)	106	None	replace
26	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  Type  type  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }  [CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  Type  type  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  Type  type  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }	  final    Type    type    =    typeToken.getRawType();    Final    Type    type    =    typeToken.getRawType();    	non-compiled	[CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)	106	None	replace
27	[BUG]  [BUGGY]  if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  final  Type  type  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  final  Type  type  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  final  Type  type  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  final    Type    type    =    typeToken.getRawType();    Final    Type    type    =    typeToken.getRawType();    	non-compiled	[CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)	106	None	replace
28	[BUG]  [BUGGY]  if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  final  Type  type  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }  [CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  final  Type  type  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  final  Type  type  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }	  final    Type    type    =    typeToken.getRawType();    Final    Type    type    =    typeToken.getRawType();    	non-compiled	[CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)	106	None	replace
29	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.toObjectConstructor()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.toObjectConstructor()  :  typeToken;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  typeToken.toObjectConstructor()  :  typeToken;	  final    Type    type    =    typeToken!=    null?    defaultConstructor.toObjectConstructor()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
30	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  defaultConstructor.toObjectConstructor()  :  typeToken;  [CE]  cannot  find  symbol  defaultConstructor  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  defaultConstructor.toObjectConstructor()  :  typeToken;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  defaultConstructor.toObjectConstructor()  :  typeToken;	  final    Type    type    =    typeToken!=    null?    defaultConstructor.toObjectConstructor()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	78	None	replace
31	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	add	final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getRawType();	  final    Type    type    =    typeToken!=    null?    null    :    typeToken.toType();    	compilable	  [FE]  ClassCastException  	95	2	replace
32	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getRawType();  [FE]  ClassCastException  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getRawType();	  final    Type    type    =    typeToken!=    null?    null    :    typeToken.toType();    	compilable	  [FE]  ClassCastException  	95	2	replace
33	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	add	final  Type  type  =  typeToken!=  null?  null  :  typeToken.getRawType();	  final    Type    type    =    typeToken!=    null?    null    :    typeToken.toType();    	compilable	  [FE]  ClassCastException  	95	2	replace
34	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.getRawType();  [FE]  ClassCastException  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  null  :  typeToken.getRawType();	  final    Type    type    =    typeToken!=    null?    null    :    typeToken.toType();    	compilable	  [FE]  ClassCastException  	95	2	replace
35	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.toString();  [CE]  incompatible  types  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.toString();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  null  :  typeToken.toString();	  final    Type    type    =    typeToken!=    null?    null    :    typeToken.toType();    	non-compiled	[CE]  incompatible  types	95	None	replace
36	[BUG]  [BUGGY]  final  Type  type  =  typeToken,  defaultImplementation.getRestrictByNotNullOrUndefined();  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken,  defaultImplementation.getRestrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken,  defaultImplementation.getRestrictByNotNullOrUndefined();	  final    Type    type    =    typeToken.getRestrictByNotNullOrUndefined();    	non-compiled	[CE]  ';'  expected	23	None	replace
37	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getRestrictByNotEmptyOrUndefined();  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getRestrictByNotEmptyOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getRestrictByNotEmptyOrUndefined();	  final    Type    type    =    typeToken.getRestrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
38	[BUG]  [BUGGY]  final  T  type  =  typeToken.getRestrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  T  type  =  typeToken.getRestrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  T  type  =  typeToken.getRestrictByNotNullOrUndefined();	  final    Type    type    =    typeToken.getRestrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
39	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getRestrictByNotNullOrUndefined(),  defaultImplementation);  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getRestrictByNotNullOrUndefined(),  defaultImplementation);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getRestrictByNotNullOrUndefined(),  defaultImplementation);	  final    Type    type    =    typeToken.getRestrictByNotNullOrUndefined();    	non-compiled	[CE]  ';'  expected	23	None	replace
40	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getRestrictByNotNullOrUndefined(),  null;  [CE]  <identifier>  expected  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getRestrictByNotNullOrUndefined(),  null;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getRestrictByNotNullOrUndefined(),  null;	  final    Type    type    =    typeToken.getRestrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
41	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	add	final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getType();	  final    Type    type    =    typeToken    ==    null?    null    :    typeToken.getObjectType();    	compilable	  [FE]  ClassCastException  	103	2	replace
42	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getType();  [FE]  ClassCastException  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getType();	  final    Type    type    =    typeToken    ==    null?    null    :    typeToken.getObjectType();    	compilable	  [FE]  ClassCastException  	103	2	replace
43	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null,  null?  null  :  typeToken.getObjectType();  [CE]  <identifier>  expected  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null,  null?  null  :  typeToken.getObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null,  null?  null  :  typeToken.getObjectType();	  final    Type    type    =    typeToken    ==    null?    null    :    typeToken.getObjectType();    	non-compiled	[CE]  <identifier>  expected	103	None	replace
44	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.toObjectType();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.toObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  null  :  typeToken.toObjectType();	  final    Type    type    =    typeToken    ==    null?    null    :    typeToken.getObjectType();    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
45	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  typeToken.getType(),  typeToken);  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  typeToken.getType(),  typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  typeToken.getType(),  typeToken);	  final    Type    type    =    getTypeToken(typeToken.getType(),    typeToken);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
46	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.cloneTree());  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.cloneTree());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.cloneTree());	  final    Type    type    =    getTypeToken(typeToken.getType(),    typeToken);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
47	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.toString());  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.toString());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.toString());	  final    Type    type    =    getTypeToken(typeToken.getType(),    typeToken);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
48	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.getSimpleName());  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.getSimpleName());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.getSimpleName());	  final    Type    type    =    getTypeToken(typeToken.getType(),    typeToken);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
49	[BUG]  [BUGGY]  final  T  type  =  getTypeToken(typeToken.getType(),  typeToken);  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  T  type  =  getTypeToken(typeToken.getType(),  typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  T  type  =  getTypeToken(typeToken.getType(),  typeToken);	  final    Type    type    =    getTypeToken(typeToken.getType(),    typeToken);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
50	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getObjectType()  &&  typeToken.getObjectType();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getObjectType()  &&  typeToken.getObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getObjectType()  &&  typeToken.getObjectType();	  final    Type    type    =    typeToken.getObjectType()    ||    typeToken.getObjectType();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
51	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getType()  ||  typeToken.getObjectType();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getType()  ||  typeToken.getObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getType()  ||  typeToken.getObjectType();	  final    Type    type    =    typeToken.getObjectType()    ||    typeToken.getObjectType();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
52	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getObjectType()  ||  typeToken.getRawType();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getObjectType()  ||  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getObjectType()  ||  typeToken.getRawType();	  final    Type    type    =    typeToken.getObjectType()    ||    typeToken.getObjectType();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
53	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getObjectType()  ||  typeToken.getReturnType();  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getObjectType()  ||  typeToken.getReturnType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getObjectType()  ||  typeToken.getReturnType();	  final    Type    type    =    typeToken.getObjectType()    ||    typeToken.getObjectType();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
54	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getObjectType()  ||  typeToken.getClassType();  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getObjectType()  ||  typeToken.getClassType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getObjectType()  ||  typeToken.getClassType();	  final    Type    type    =    typeToken.getObjectType()    ||    typeToken.getObjectType();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
55	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getObjectType()  ||  typeToken.getSimpleType();  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getObjectType()  ||  typeToken.getSimpleType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getObjectType()  ||  typeToken.getSimpleType();	  final    Type    type    =    typeToken.getObjectType()    ||    typeToken.getObjectType();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
56	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().getObjectConstructor();  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken().getObjectConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().getObjectConstructor();	  final    Type    type    =    getTypeToken().toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
57	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().toObjectConstructor(typeToken);  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken().toObjectConstructor(typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().toObjectConstructor(typeToken);	  final    Type    type    =    getTypeToken().toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
58	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(),  typeToken.toObjectConstructor();  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(),  typeToken.toObjectConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(),  typeToken.toObjectConstructor();	  final    Type    type    =    getTypeToken().toObjectConstructor();    	non-compiled	[CE]  ';'  expected	77	None	replace
59	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().getConstructor();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken().getConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().getConstructor();	  final    Type    type    =    getTypeToken().toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
60	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().objectConstructor();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken().objectConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().objectConstructor();	  final    Type    type    =    getTypeToken().toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
61	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().getType().toObjectConstructor();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken().getType().toObjectConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().getType().toObjectConstructor();	  final    Type    type    =    getTypeToken().toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
62	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.toObject();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.toObject();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  null  :  typeToken.toObject();	  final    Type    type    =    typeToken!=    null?    null    :    typeToken.toObject();    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
63	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.toString();  [CE]  incompatible  types  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.toString();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  null  :  typeToken.toString();	  final    Type    type    =    typeToken!=    null?    null    :    typeToken.toObject();    	non-compiled	[CE]  incompatible  types	120	None	replace
64	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null  ||  typeToken.getConstructorType()!=  null?  null  :  typeToken.getConstructorType();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null  ||  typeToken.getConstructorType()!=  null?  null  :  typeToken.getConstructorType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null  ||  typeToken.getConstructorType()!=  null?  null  :  typeToken.getConstructorType();	  final    Type    type    =    typeToken    ==    null?    null    :    typeToken.getConstructorType();    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
65	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null,  null?  null  :  typeToken.getConstructorType();  [CE]  <identifier>  expected  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null,  null?  null  :  typeToken.getConstructorType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null,  null?  null  :  typeToken.getConstructorType();	  final    Type    type    =    typeToken    ==    null?    null    :    typeToken.getConstructorType();    	non-compiled	[CE]  <identifier>  expected	115	None	replace
66	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toUpperCase(defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toUpperCase(defaultImplementation);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toUpperCase(defaultImplementation);	  final    Type    type    =    typeToken.toUpperCase();    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	140	None	replace
67	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toUpperCase(false);  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toUpperCase(false);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toUpperCase(false);	  final    Type    type    =    typeToken.toUpperCase();    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
68	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toUpperCase(this.defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toUpperCase(this.defaultImplementation);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toUpperCase(this.defaultImplementation);	  final    Type    type    =    typeToken.toUpperCase();    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	140	None	replace
69	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toUpperCase(null);  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toUpperCase(null);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toUpperCase(null);	  final    Type    type    =    typeToken.toUpperCase();    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
70	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toUpperCase(DefaultImplementation.class);  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toUpperCase(DefaultImplementation.class);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toUpperCase(DefaultImplementation.class);	  final    Type    type    =    typeToken.toUpperCase();    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
71	[BUG]  [BUGGY]  final  Type  type  =  typeToken,  defaultConstructor.getType();  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken,  defaultConstructor.getType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken,  defaultConstructor.getType();	  final    Type    type    =    typeToken,    defaultConstructor.getConstructorType();    	non-compiled	[CE]  ';'  expected	46	None	replace
72	[BUG]  [BUGGY]  final  Type  type  =  typeToken,  defaultConstructor.getImplementationType();  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken,  defaultConstructor.getImplementationType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken,  defaultConstructor.getImplementationType();	  final    Type    type    =    typeToken,    defaultConstructor.getConstructorType();    	non-compiled	[CE]  ';'  expected	46	None	replace
73	[BUG]  [BUGGY]  final  Type  type  =  typeToken,  defaultConstructor.getRawType();  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken,  defaultConstructor.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken,  defaultConstructor.getRawType();	  final    Type    type    =    typeToken,    defaultConstructor.getConstructorType();    	non-compiled	[CE]  ';'  expected	46	None	replace
74	[BUG]  [BUGGY]  final  Type  type  =  defaultConstructor,  typeToken.getConstructorType();  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  defaultConstructor,  typeToken.getConstructorType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  defaultConstructor,  typeToken.getConstructorType();	  final    Type    type    =    typeToken,    defaultConstructor.getConstructorType();    	non-compiled	[CE]  ';'  expected	46	None	replace
75	[BUG]  [BUGGY]  final  Type  type  =  defaultConstructor.getType();  [CE]  cannot  find  symbol  defaultConstructor  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  defaultConstructor.getType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  defaultConstructor.getType();	  final    Type    type    =    typeToken,    defaultConstructor.getConstructorType();    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	46	None	replace
76	[BUG]  [BUGGY]  final  Type  type  =  typeToken,  defaultConstructor.getReturnType();  [CE]  ';'  expected  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken,  defaultConstructor.getReturnType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken,  defaultConstructor.getReturnType();	  final    Type    type    =    typeToken,    defaultConstructor.getConstructorType();    	non-compiled	[CE]  ';'  expected	46	None	replace
77	[BUG]  [BUGGY]  final  Type  type  =  typeToken,  defaultConstructor.getOwnerType();  [CE]  ';'  expected  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken,  defaultConstructor.getOwnerType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken,  defaultConstructor.getOwnerType();	  final    Type    type    =    typeToken,    defaultConstructor.getConstructorType();    	non-compiled	[CE]  ';'  expected	46	None	replace
78	[BUG]  [BUGGY]  final  Type  type  =  defaultConstructor,  typeToken.toObjectConstructor();  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  defaultConstructor,  typeToken.toObjectConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  defaultConstructor,  typeToken.toObjectConstructor();	  final    Type    type    =    typeToken,    defaultConstructor.toObjectConstructor();    	non-compiled	[CE]  ';'  expected	12	None	replace
79	[BUG]  [BUGGY]  final  Type  type  =  defaultConstructor.toObjectConstructor();  [CE]  cannot  find  symbol  defaultConstructor  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  defaultConstructor.toObjectConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  defaultConstructor.toObjectConstructor();	  final    Type    type    =    typeToken,    defaultConstructor.toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	12	None	replace
80	[BUG]  [BUGGY]  final  Type  type  =  typeToken,  defaultConstructor.getImplementation();  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken,  defaultConstructor.getImplementation();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken,  defaultConstructor.getImplementation();	  final    Type    type    =    typeToken,    defaultConstructor.toObjectConstructor();    	non-compiled	[CE]  ';'  expected	12	None	replace
81	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  instanceCreators.getType(),  typeToken);  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  instanceCreators.getType(),  typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  instanceCreators.getType(),  typeToken);	  final    Type    type    =    getTypeToken(typeToken,    instanceCreators.getType());    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
82	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  this.instanceCreators.getType());  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  this.instanceCreators.getType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  this.instanceCreators.getType());	  final    Type    type    =    getTypeToken(typeToken,    instanceCreators.getType());    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
83	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  null,  instanceCreators.getType());  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  null,  instanceCreators.getType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  null,  instanceCreators.getType());	  final    Type    type    =    getTypeToken(typeToken,    instanceCreators.getType());    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
84	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  instances.getType());  [CE]  cannot  find  symbol  instances  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  instances.getType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  instances.getType());	  final    Type    type    =    getTypeToken(typeToken,    instanceCreators.getType());    	non-compiled	[CE]  cannot  find  symbol  instances	72	None	replace
85	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getSuperType()  &&  typeToken.getSuperType();  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getSuperType()  &&  typeToken.getSuperType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getSuperType()  &&  typeToken.getSuperType();	  final    Type    type    =    typeToken.getSuperType()    ||    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
86	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getSuperType()  ||  typeToken.getRawType();  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getSuperType()  ||  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getSuperType()  ||  typeToken.getRawType();	  final    Type    type    =    typeToken.getSuperType()    ||    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
87	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getSuperType()  ||  typeToken.getSimpleName();  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getSuperType()  ||  typeToken.getSimpleName();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getSuperType()  ||  typeToken.getSimpleName();	  final    Type    type    =    typeToken.getSuperType()    ||    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
88	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getSuperType()  ||  typeToken.getUnknownType();  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getSuperType()  ||  typeToken.getUnknownType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getSuperType()  ||  typeToken.getUnknownType();	  final    Type    type    =    typeToken.getSuperType()    ||    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
89	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getSuperType()  ||  typeToken.getObjectType();  [CE]  cannot  find  symbol  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getSuperType()  ||  typeToken.getObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getSuperType()  ||  typeToken.getObjectType();	  final    Type    type    =    typeToken.getSuperType()    ||    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
90	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getSuperType()  ||  typeToken.getParameterType(0);  [CE]  cannot  find  symbol  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getSuperType()  ||  typeToken.getParameterType(0);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getSuperType()  ||  typeToken.getParameterType(0);	  final    Type    type    =    typeToken.getSuperType()    ||    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
91	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  typeToken.getType(),  typeToken.getRawType());  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken,  typeToken.getType(),  typeToken.getRawType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  typeToken.getType(),  typeToken.getRawType());	  final    Type    type    =    getType(typeToken.getType(),    typeToken.getRawType());    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
92	[BUG]  [BUGGY]  final  T  type  =  getType(typeToken.getType(),  typeToken.getRawType());  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  T  type  =  getType(typeToken.getType(),  typeToken.getRawType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  T  type  =  getType(typeToken.getType(),  typeToken.getRawType());	  final    Type    type    =    getType(typeToken.getType(),    typeToken.getRawType());    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
93	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  typeToken.toString());  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  typeToken.toString());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.getType(),  typeToken.toString());	  final    Type    type    =    getType(typeToken.getType(),    typeToken.getRawType());    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
94	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  typeToken.getColumnType());  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  typeToken.getColumnType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.getType(),  typeToken.getColumnType());	  final    Type    type    =    getType(typeToken.getType(),    typeToken.getRawType());    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
95	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getConstructorType()?  typeToken.getConstructorType()  :  null;  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getConstructorType()?  typeToken.getConstructorType()  :  null;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getConstructorType()?  typeToken.getConstructorType()  :  null;	  final    Type    type    =    typeToken.isConstructor()?    typeToken.getConstructorType()    :    null;    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
96	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getType()  :  null;  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getType()  :  null;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()?  typeToken.getType()  :  null;	  final    Type    type    =    typeToken.isConstructor()?    typeToken.getConstructorType()    :    null;    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
97	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  defaultConstructor;  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  defaultConstructor;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  defaultConstructor;	  final    Type    type    =    typeToken.isConstructor()?    typeToken.getConstructorType()    :    null;    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
98	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()  ||  typeToken.getConstructorType()  :  null;  [CE]  ';'  expected  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isConstructor()  ||  typeToken.getConstructorType()  :  null;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()  ||  typeToken.getConstructorType()  :  null;	  final    Type    type    =    typeToken.isConstructor()?    typeToken.getConstructorType()    :    null;    	non-compiled	[CE]  ';'  expected	116	None	replace
99	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  Null;  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  Null;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  Null;	  final    Type    type    =    typeToken.isConstructor()?    typeToken.getConstructorType()    :    null;    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
100	[BUG]  [BUGGY]  final  Type  type  =  typeToken.createType();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.createType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.createType();	  final    Type    type    =    typeToken.fromType();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
101	[BUG]  [BUGGY]  final  Category  type  =  typeToken.getRawType();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Category  type  =  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Category  type  =  typeToken.getRawType();	  final    Type    type    =    typeToken.getRawType();    final    Category    type    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
102	[BUG]  [BUGGY]  final  Class  <?  super  T>  type  =  typeToken.getRawType();  final  Category  type  =  typeToken.getRawType();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Class  <?  super  T>  type  =  typeToken.getRawType();  final  Category  type  =  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Class  <?  super  T>  type  =  typeToken.getRawType();  final  Category  type  =  typeToken.getRawType();	  final    Type    type    =    typeToken.getRawType();    final    Category    type    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
103	[BUG]  [BUGGY]  final  Class  <?>  type  =  typeToken.getRawType();  final  Category  type  =  typeToken.getRawType();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Class  <?>  type  =  typeToken.getRawType();  final  Category  type  =  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Class  <?>  type  =  typeToken.getRawType();  final  Category  type  =  typeToken.getRawType();	  final    Type    type    =    typeToken.getRawType();    final    Category    type    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
104	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  final  Category  type  =  typeToken.getRawType();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  final  Category  type  =  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  final  Category  type  =  typeToken.getRawType();	  final    Type    type    =    typeToken.getRawType();    final    Category    type    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
105	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawType();	  final    Type    type    =    typeToken.getRawType();    final    Category    type    =    typeToken.getRawType();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	21	None	replace
106	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  final  Type  type  =  typeToken.getRawType();  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  final  Type  type  =  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  final  Type  type  =  typeToken.getRawType();	  final    Type    type    =    typeToken.getRawType();    final    Category    type    =    typeToken.getRawType();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	21	None	replace
107	[BUG]  [BUGGY]  final  T  type  =  typeToken.restrictByNotEmptyOrUndefined();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  T  type  =  typeToken.restrictByNotEmptyOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  T  type  =  typeToken.restrictByNotEmptyOrUndefined();	  final    T    type    =    typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
108	[BUG]  [BUGGY]  final  T  type  =  typeToken.getRawType();  [CE]  incompatible  types  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  T  type  =  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  T  type  =  typeToken.getRawType();	  final    T    type    =    typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  incompatible  types	26	None	replace
109	[BUG]  [BUGGY]  final  T  type  =  typeToken.restrictByNotNullOrUndefined(),  false);  [CE]  <identifier>  expected  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  T  type  =  typeToken.restrictByNotNullOrUndefined(),  false);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  T  type  =  typeToken.restrictByNotNullOrUndefined(),  false);	  final    T    type    =    typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
110	[BUG]  [BUGGY]  final  T  type  =  ObjectConstructor.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  T  type  =  ObjectConstructor.restrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  T  type  =  ObjectConstructor.restrictByNotNullOrUndefined();	  final    T    type    =    typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
111	[BUG]  [BUGGY]  final  T  type  =  typeToken.restrictByNotNullOrUndefined(),  null;  [CE]  <identifier>  expected  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  T  type  =  typeToken.restrictByNotNullOrUndefined(),  null;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  T  type  =  typeToken.restrictByNotNullOrUndefined(),  null;	  final    T    type    =    typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
112	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.getType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	add	final  Type  type  =  typeToken!=  null?  null  :  typeToken.getType();	  final    Type    type    =    typeToken!=    null?    null    :    typeToken.getObjectType();    	compilable	  [FE]  ClassCastException  	104	2	replace
113	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.getType();  [FE]  ClassCastException  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.getType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  null  :  typeToken.getType();	  final    Type    type    =    typeToken!=    null?    null    :    typeToken.getObjectType();    	compilable	  [FE]  ClassCastException  	104	2	replace
114	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Class  <?  super  T>  type  =  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	add	final  Class  <?  super  T>  type  =  typeToken.getRawType();	  final    Type    type    =    typeToken.getRawType();    final    Class    <?    super    T>    type    =    typeToken.getRawType();    	compilable	  [FE]  ClassCastException  	17	2	replace
115	[BUG]  [BUGGY]  final  Class  <?  super  T>  type  =  typeToken.getRawType();  [FE]  ClassCastException  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Class  <?  super  T>  type  =  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Class  <?  super  T>  type  =  typeToken.getRawType();	  final    Type    type    =    typeToken.getRawType();    final    Class    <?    super    T>    type    =    typeToken.getRawType();    	compilable	  [FE]  ClassCastException  	17	2	replace
116	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  Class  <?  super  T>  type  =  typeToken.getRawType();  }  [CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  Class  <?  super  T>  type  =  typeToken.getRawType();  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  Class  <?  super  T>  type  =  typeToken.getRawType();  }	  final    Type    type    =    typeToken.getRawType();    final    Class    <?    super    T>    type    =    typeToken.getRawType();    	non-compiled	[CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)	17	None	replace
117	[BUG]  [BUGGY]  if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  final  Class  <?  super  T>  type  =  typeToken.getRawType();  }  [CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  final  Class  <?  super  T>  type  =  typeToken.getRawType();  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  final  Class  <?  super  T>  type  =  typeToken.getRawType();  }	  final    Type    type    =    typeToken.getRawType();    final    Class    <?    super    T>    type    =    typeToken.getRawType();    	non-compiled	[CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)	17	None	replace
118	[BUG]  [BUGGY]  Class  <?  super  T>  type  =  typeToken.getRawType();  [CE]  local  variable  type  is  accessed  from  within  inner  class;  needs  to  be  declared  final  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  Class  <?  super  T>  type  =  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	Class  <?  super  T>  type  =  typeToken.getRawType();	  final    Type    type    =    typeToken.getRawType();    final    Class    <?    super    T>    type    =    typeToken.getRawType();    	non-compiled	[CE]  local  variable  type  is  accessed  from  within  inner  class;  needs  to  be  declared  final	17	None	replace
119	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  Class  <?  super  T>  type  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  Class  <?  super  T>  type  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  Class  <?  super  T>  type  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  final    Type    type    =    typeToken.getRawType();    final    Class    <?    super    T>    type    =    typeToken.getRawType();    	non-compiled	[CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)	17	None	replace
120	[BUG]  [BUGGY]  if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  final  Class  <?  super  T>  type  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  final  Class  <?  super  T>  type  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  final  Class  <?  super  T>  type  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  final    Type    type    =    typeToken.getRawType();    final    Class    <?    super    T>    type    =    typeToken.getRawType();    	non-compiled	[CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)	17	None	replace
121	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  Class  <?  super  T>  type  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }  [CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  Class  <?  super  T>  type  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  Class  <?  super  T>  type  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }	  final    Type    type    =    typeToken.getRawType();    final    Class    <?    super    T>    type    =    typeToken.getRawType();    	non-compiled	[CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)	17	None	replace
122	[BUG]  [BUGGY]  final  Type  type  =  typeToken.typeToType()  ||  typeToken.typeToType();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.typeToType()  ||  typeToken.typeToType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.typeToType()  ||  typeToken.typeToType();	  final    Type    type    =    typeToken.typeToType();    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
123	[BUG]  [BUGGY]  final  Type  type  =  typeToken.asType();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.asType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.asType();	  final    Type    type    =    typeToken.typeToType();    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
124	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.getName());  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.getName());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.getName());	  final    Type    type    =    getType(typeToken.toString());    	non-compiled	[CE]  cannot  find  symbol	150	None	replace
125	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.getNativeType(UNKNOWN_TYPE));  [CE]  cannot  find  symbol  UNKNOWN_TYPE  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.getNativeType(UNKNOWN_TYPE));  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.getNativeType(UNKNOWN_TYPE));	  final    Type    type    =    getType(typeToken.toString());    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_TYPE	150	None	replace
126	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  typeToken.toString());  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken,  typeToken.toString());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  typeToken.toString());	  final    Type    type    =    getType(typeToken.toString());    	non-compiled	[CE]  cannot  find  symbol	150	None	replace
127	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.getSimpleName());  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.getSimpleName());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.getSimpleName());	  final    Type    type    =    getType(typeToken.toString());    	non-compiled	[CE]  cannot  find  symbol	150	None	replace
128	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.toString(),  typeToken.toString());  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.toString(),  typeToken.toString());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.toString(),  typeToken.toString());	  final    Type    type    =    getType(typeToken.toString());    	non-compiled	[CE]  cannot  find  symbol	150	None	replace
129	[BUG]  [BUGGY]  final  Type  token  =  typeToken.toObjectType();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  token  =  typeToken.toObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  token  =  typeToken.toObjectType();	  final    Type    type    =    token.toObjectType();    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
130	[BUG]  [BUGGY]  final  Type  t  =  typeToken.toObjectType();  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  t  =  typeToken.toObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  t  =  typeToken.toObjectType();	  final    Type    type    =    token.toObjectType();    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
131	[BUG]  [BUGGY]  final  Type  type  =  getType().toObjectType();  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType().toObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType().toObjectType();	  final    Type    type    =    token.toObjectType();    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
132	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toObjectConstructor(typeToken);  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toObjectConstructor(typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toObjectConstructor(typeToken);	  final    Type    type    =    typeToken.toObjectConstructor(defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
133	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toObjectConstructor(this);  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toObjectConstructor(this);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toObjectConstructor(this);	  final    Type    type    =    typeToken.toObjectConstructor(defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
134	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toObjectConstructor(null);  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toObjectConstructor(null);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toObjectConstructor(null);	  final    Type    type    =    typeToken.toObjectConstructor(defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
135	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toObjectConstructor(type);  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toObjectConstructor(type);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toObjectConstructor(type);	  final    Type    type    =    typeToken.toObjectConstructor(defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
136	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toObjectConstructor(value);  [CE]  cannot  find  symbol  value  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toObjectConstructor(value);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toObjectConstructor(value);	  final    Type    type    =    typeToken.toObjectConstructor(defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol  value	11	None	replace
137	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toObjectConstructor(rawType);  [CE]  cannot  find  symbol  rawType  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toObjectConstructor(rawType);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toObjectConstructor(rawType);	  final    Type    type    =    typeToken.toObjectConstructor(defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol  rawType	11	None	replace
138	[BUG]  [BUGGY]  final  InstanceCreator  <?  super  T>  rawType  =  typeToken.getRawType();  [CE]  incompatible  types  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  InstanceCreator  <?  super  T>  rawType  =  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  InstanceCreator  <?  super  T>  rawType  =  typeToken.getRawType();	  InstanceCreator    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  incompatible  types	113	None	replace
139	[BUG]  [BUGGY]  InstanceCreator  <?  super  T>  rawType  =  typeToken.getSuperType();  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  InstanceCreator  <?  super  T>  rawType  =  typeToken.getSuperType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	InstanceCreator  <?  super  T>  rawType  =  typeToken.getSuperType();	  InstanceCreator    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
140	[BUG]  [BUGGY]  InstanceCreator  <?  super  T>  rawType  =  typeToken.getReturnType();  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  InstanceCreator  <?  super  T>  rawType  =  typeToken.getReturnType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	InstanceCreator  <?  super  T>  rawType  =  typeToken.getReturnType();	  InstanceCreator    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
141	[BUG]  [BUGGY]  InstanceCreator  <?  super  T>  rawType  =  typeToken.getQualifiedName();  [CE]  cannot  find  symbol  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  InstanceCreator  <?  super  T>  rawType  =  typeToken.getQualifiedName();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	InstanceCreator  <?  super  T>  rawType  =  typeToken.getQualifiedName();	  InstanceCreator    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
142	[BUG]  [BUGGY]  InstanceCreator  <?  super  T>  rawType  =  typeToken.getRawClass();  [CE]  cannot  find  symbol  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  InstanceCreator  <?  super  T>  rawType  =  typeToken.getRawClass();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	InstanceCreator  <?  super  T>  rawType  =  typeToken.getRawClass();	  InstanceCreator    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
143	[BUG]  [BUGGY]  InstanceCreator  <?  super  T>  rawType  =  typeToken.getConstructor();  [CE]  cannot  find  symbol  [FE]                                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  InstanceCreator  <?  super  T>  rawType  =  typeToken.getConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	InstanceCreator  <?  super  T>  rawType  =  typeToken.getConstructor();	  InstanceCreator    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
144	[BUG]  [BUGGY]  final  Type  type  =  typeToken.type()?  null  :  typeToken.type();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.type()?  null  :  typeToken.type();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.type()?  null  :  typeToken.type();	  final    Type    type    =    typeToken.type();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
145	[BUG]  [BUGGY]  final  Type  type  =  typeToken.type()  ||  typeToken.type().isUnknownType();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.type()  ||  typeToken.type().isUnknownType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.type()  ||  typeToken.type().isUnknownType();	  final    Type    type    =    typeToken.type();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
146	[BUG]  [BUGGY]  final  Type  type  =  typeToken.objectType();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.objectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.objectType();	  final    Type    type    =    typeToken.type();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
147	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getConstructorType()?  typeToken.getConstructorType()  :  typeToken.getConstructorType();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getConstructorType()?  typeToken.getConstructorType()  :  typeToken.getConstructorType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getConstructorType()?  typeToken.getConstructorType()  :  typeToken.getConstructorType();	  final    Type    type    =    typeToken.isConstructor()?    typeToken.getConstructorType()    :    typeToken.getConstructorType();    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
148	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  defaultConstructor.getConstructorType();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  defaultConstructor.getConstructorType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  defaultConstructor.getConstructorType();	  final    Type    type    =    typeToken.isConstructor()?    typeToken.getConstructorType()    :    typeToken.getConstructorType();    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
149	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getType()  :  typeToken.getConstructorType();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getType()  :  typeToken.getConstructorType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()?  typeToken.getType()  :  typeToken.getConstructorType();	  final    Type    type    =    typeToken.isConstructor()?    typeToken.getConstructorType()    :    typeToken.getConstructorType();    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
150	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()  ||  typeToken.getConstructorType()  :  typeToken.getConstructorType();  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isConstructor()  ||  typeToken.getConstructorType()  :  typeToken.getConstructorType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()  ||  typeToken.getConstructorType()  :  typeToken.getConstructorType();	  final    Type    type    =    typeToken.isConstructor()?    typeToken.getConstructorType()    :    typeToken.getConstructorType();    	non-compiled	[CE]  ';'  expected	163	None	replace
151	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  typeToken.getDeclaredType();  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  typeToken.getDeclaredType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  typeToken.getDeclaredType();	  final    Type    type    =    typeToken.isConstructor()?    typeToken.getConstructorType()    :    typeToken.getConstructorType();    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
152	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.toObjectConstructor();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.toObjectConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  null  :  typeToken.toObjectConstructor();	  final    Type    type    =    typeToken!=    null?    defaultConstructor    :    typeToken.toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
153	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  defaultConstructor  :  typeToken.toObjectConstructor();  [CE]  cannot  find  symbol  defaultConstructor  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  defaultConstructor  :  typeToken.toObjectConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  defaultConstructor  :  typeToken.toObjectConstructor();	  final    Type    type    =    typeToken!=    null?    defaultConstructor    :    typeToken.toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	80	None	replace
154	[BUG]  [BUGGY]  final  Type  type  =  typeToken.trim(),  typeToken.toObjectType();  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.trim(),  typeToken.toObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.trim(),  typeToken.toObjectType();	  final    Type    type    =    typeToken.trim().toObjectType();    	non-compiled	[CE]  ';'  expected	143	None	replace
155	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getType().toObjectType();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getType().toObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getType().toObjectType();	  final    Type    type    =    typeToken.trim().toObjectType();    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
156	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getRawType().toObjectType();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getRawType().toObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getRawType().toObjectType();	  final    Type    type    =    typeToken.trim().toObjectType();    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
157	[BUG]  [BUGGY]  final  Type  type  =  typeToken.type().toObjectType();  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.type().toObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.type().toObjectType();	  final    Type    type    =    typeToken.trim().toObjectType();    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
158	[BUG]  [BUGGY]  final  Type  type  =  typeToken.trim().getType();  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.trim().getType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.trim().getType();	  final    Type    type    =    typeToken.trim().toObjectType();    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
159	[BUG]  [BUGGY]  final  Type  type  =  typeToken.trim().objectType();  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.trim().objectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.trim().objectType();	  final    Type    type    =    typeToken.trim().toObjectType();    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
160	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getRawType().toObjectConstructor();  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getRawType().toObjectConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getRawType().toObjectConstructor();	  final    Type    type    =    typeToken    ==    null?    null    :    typeToken.toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
161	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getType().toObjectConstructor();  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getType().toObjectConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getType().toObjectConstructor();	  final    Type    type    =    typeToken    ==    null?    null    :    typeToken.toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
162	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  type.toObjectConstructor();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  type.toObjectConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  null  :  type.toObjectConstructor();	  final    Type    type    =    typeToken    ==    null?    null    :    typeToken.toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
163	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getConstructor()?  null  :  typeToken.getConstructorType();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getConstructor()?  null  :  typeToken.getConstructorType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getConstructor()?  null  :  typeToken.getConstructorType();	  final    Type    type    =    typeToken.isConstructor()?    null    :    typeToken.getConstructorType();    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
164	[BUG]  [BUGGY]  final  Type  type  =  typeToken,  defaultConstructor.isConstructor()?  null  :  typeToken.getConstructorType();  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken,  defaultConstructor.isConstructor()?  null  :  typeToken.getConstructorType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken,  defaultConstructor.isConstructor()?  null  :  typeToken.getConstructorType();	  final    Type    type    =    typeToken.isConstructor()?    null    :    typeToken.getConstructorType();    	non-compiled	[CE]  ';'  expected	117	None	replace
165	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  null  :  typeToken.getType();  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  null  :  typeToken.getType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()?  null  :  typeToken.getType();	  final    Type    type    =    typeToken.isConstructor()?    null    :    typeToken.getConstructorType();    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
166	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  null  :  typeToken.constructorType();  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  null  :  typeToken.constructorType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()?  null  :  typeToken.constructorType();	  final    Type    type    =    typeToken.isConstructor()?    null    :    typeToken.getConstructorType();    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
167	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()  ||  typeToken.isConstructor()  :  typeToken.getConstructorType();  [CE]  ';'  expected  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isConstructor()  ||  typeToken.isConstructor()  :  typeToken.getConstructorType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()  ||  typeToken.isConstructor()  :  typeToken.getConstructorType();	  final    Type    type    =    typeToken.isConstructor()?    null    :    typeToken.getConstructorType();    	non-compiled	[CE]  ';'  expected	117	None	replace
168	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  null  :  typeToken.getInstanceType();  [CE]  cannot  find  symbol  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  null  :  typeToken.getInstanceType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()?  null  :  typeToken.getInstanceType();	  final    Type    type    =    typeToken.isConstructor()?    null    :    typeToken.getConstructorType();    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
169	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getType()  :  typeToken.getConstructor();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getType()  :  typeToken.getConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getType()  :  typeToken.getConstructor();	  final    Type    type    =    typeToken!=    null?    defaultConstructor.getType()    :    typeToken.getConstructor();    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
170	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getType()  :  typeToken.getConstructor();  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getType()  :  typeToken.getConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  typeToken.getType()  :  typeToken.getConstructor();	  final    Type    type    =    typeToken!=    null?    defaultConstructor.getType()    :    typeToken.getConstructor();    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
171	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  defaultConstructor.getType()  :  typeToken.getConstructor();  [CE]  cannot  find  symbol  defaultConstructor  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  defaultConstructor.getType()  :  typeToken.getConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  defaultConstructor.getType()  :  typeToken.getConstructor();	  final    Type    type    =    typeToken!=    null?    defaultConstructor.getType()    :    typeToken.getConstructor();    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	100	None	replace
172	[BUG]  [BUGGY]  final  Type  type  =  getConstructorType(typeToken,  typeToken.getConstructorType());  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getConstructorType(typeToken,  typeToken.getConstructorType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getConstructorType(typeToken,  typeToken.getConstructorType());	  final    Type    type    =    getConstructorType(typeToken.getConstructorType());    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
173	[BUG]  [BUGGY]  final  Type  type  =  getConstructorType(typeToken.getConstructorType(),  typeToken.getConstructorType());  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getConstructorType(typeToken.getConstructorType(),  typeToken.getConstructorType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getConstructorType(typeToken.getConstructorType(),  typeToken.getConstructorType());	  final    Type    type    =    getConstructorType(typeToken.getConstructorType());    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
174	[BUG]  [BUGGY]  final  Type  type  =  getConstructorType(typeToken,  defaultConstructor.getConstructorType());  [CE]  cannot  find  symbol  defaultConstructor  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getConstructorType(typeToken,  defaultConstructor.getConstructorType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getConstructorType(typeToken,  defaultConstructor.getConstructorType());	  final    Type    type    =    getConstructorType(typeToken.getConstructorType());    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	118	None	replace
175	[BUG]  [BUGGY]  final  Type  type  =  getConstructorType(typeToken.getConstructorType(),  typeToken.getRawType());  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getConstructorType(typeToken.getConstructorType(),  typeToken.getRawType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getConstructorType(typeToken.getConstructorType(),  typeToken.getRawType());	  final    Type    type    =    getConstructorType(typeToken.getConstructorType());    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
176	[BUG]  [BUGGY]  final  Type  type  =  getConstructorType(typeToken.getConstructorType(),  typeToken);  [CE]  cannot  find  symbol  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getConstructorType(typeToken.getConstructorType(),  typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getConstructorType(typeToken.getConstructorType(),  typeToken);	  final    Type    type    =    getConstructorType(typeToken.getConstructorType());    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
177	[BUG]  [BUGGY]  final  Type  type  =  getConstructorType(typeToken,  ObjectConstructor.class.getSimpleName());  [CE]  cannot  find  symbol  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getConstructorType(typeToken,  ObjectConstructor.class.getSimpleName());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getConstructorType(typeToken,  ObjectConstructor.class.getSimpleName());	  final    Type    type    =    getConstructorType(typeToken.getConstructorType());    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
178	[BUG]  [BUGGY]  final  Type  type  =  typeToken.type().trim();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.type().trim();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.type().trim();	  final    Type    type    =    typeToken.trim();    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
179	[BUG]  [BUGGY]  final  Type  type  =  typeToken.constructType(typeToken.trim());  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.constructType(typeToken.trim());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.constructType(typeToken.trim());	  final    Type    type    =    typeToken.trim();    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
180	[BUG]  [BUGGY]  final  Type  token  =  typeToken.toObject();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  token  =  typeToken.toObject();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  token  =  typeToken.toObject();	  final    Type    type    =    token.toObject();    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
181	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().toObject();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken().toObject();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().toObject();	  final    Type    type    =    token.toObject();    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
182	[BUG]  [BUGGY]  final  Type  t  =  typeToken.toObject();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  t  =  typeToken.toObject();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  t  =  typeToken.toObject();	  final    Type    type    =    token.toObject();    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
183	[BUG]  [BUGGY]  final  Type  type  =  getType().toObject();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType().toObject();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType().toObject();	  final    Type    type    =    token.toObject();    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
184	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.toObjectConstructor()  :  typeToken.toString();  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.toObjectConstructor()  :  typeToken.toString();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  typeToken.toObjectConstructor()  :  typeToken.toString();	  final    Type    type    =    typeToken!=    null?    typeToken.toObjectConstructor()    :    typeToken.toString();    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
185	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObjectConstructor()  :  defaultConstructor.toString();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObjectConstructor()  :  defaultConstructor.toString();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.toObjectConstructor()  :  defaultConstructor.toString();	  final    Type    type    =    typeToken!=    null?    typeToken.toObjectConstructor()    :    typeToken.toString();    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
186	[BUG]  [BUGGY]  final  Type  type  =  typeToken  >=  null?  typeToken.toObjectConstructor()  :  typeToken.toString();  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  >=  null?  typeToken.toObjectConstructor()  :  typeToken.toString();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  >=  null?  typeToken.toObjectConstructor()  :  typeToken.toString();	  final    Type    type    =    typeToken!=    null?    typeToken.toObjectConstructor()    :    typeToken.toString();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	147	None	replace
187	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  typeToken.getType(),  typeToken.getSimpleName());  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken,  typeToken.getType(),  typeToken.getSimpleName());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  typeToken.getType(),  typeToken.getSimpleName());	  final    Type    type    =    getType(typeToken.getType(),    typeToken.getSimpleName());    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
188	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  typeToken.getName());  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  typeToken.getName());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.getType(),  typeToken.getName());	  final    Type    type    =    getType(typeToken.getType(),    typeToken.getSimpleName());    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
189	[BUG]  [BUGGY]  final  T  type  =  getType(typeToken.getType(),  typeToken.getSimpleName());  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  T  type  =  getType(typeToken.getType(),  typeToken.getSimpleName());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  T  type  =  getType(typeToken.getType(),  typeToken.getSimpleName());	  final    Type    type    =    getType(typeToken.getType(),    typeToken.getSimpleName());    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
190	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  typeToken.getShortName());  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  typeToken.getShortName());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.getType(),  typeToken.getShortName());	  final    Type    type    =    getType(typeToken.getType(),    typeToken.getSimpleName());    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
191	[BUG]  [BUGGY]  final  Type  type  =  typeToken  >=  null?  null  :  typeToken.getTypeRegistry();  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  >=  null?  null  :  typeToken.getTypeRegistry();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  >=  null?  null  :  typeToken.getTypeRegistry();	  final    Type    type    =    typeToken!=    null?    null    :    typeToken.getTypeRegistry();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	8	None	replace
192	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getTyperegistry();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getTyperegistry();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getTyperegistry();	  final    Type    type    =    typeToken!=    null?    null    :    typeToken.getTypeRegistry();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
193	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toTypeConstructor(defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toTypeConstructor(defaultImplementation);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toTypeConstructor(defaultImplementation);	  final    Type    type    =    typeToken.toTypeConstructor();    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	14	None	replace
194	[BUG]  [BUGGY]  final  Type  type  =  typeToken.typeConstructor();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.typeConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.typeConstructor();	  final    Type    type    =    typeToken.toTypeConstructor();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
195	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toConstructor();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toConstructor();	  final    Type    type    =    typeToken.toTypeConstructor();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
196	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toTypeConstructor(defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toTypeConstructor(defaultConstructor);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toTypeConstructor(defaultConstructor);	  final    Type    type    =    typeToken.toTypeConstructor();    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	14	None	replace
197	[BUG]  [BUGGY]  final  Type  token  =  typeToken.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  token  =  typeToken.restrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  token  =  typeToken.restrictByNotNullOrUndefined();	  final    Type    type    =    token.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
198	[BUG]  [BUGGY]  final  Type  t  =  typeToken.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  t  =  typeToken.restrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  t  =  typeToken.restrictByNotNullOrUndefined();	  final    Type    type    =    token.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
199	[BUG]  [BUGGY]  final  Type  type  =  getType().restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType().restrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType().restrictByNotNullOrUndefined();	  final    Type    type    =    token.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
200	[BUG]  [BUGGY]  final  Type  type  =  typeToken.resolveType();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.resolveType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.resolveType();	  final    Type    type    =    typeToken.returnType();    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
201	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObjectConstructor()  :  type;  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObjectConstructor()  :  type;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.toObjectConstructor()  :  type;	  final    Type    type    =    typeToken!=    null?    typeToken.toObjectConstructor()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	148	None	replace
202	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getName());  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getName());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getName());	  final    Type    type    =    getTypeToken(typeToken.toObject());    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
203	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getObject());  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getObject());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getObject());	  final    Type    type    =    getTypeToken(typeToken.toObject());    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
204	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.toArray());  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.toArray());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.toArray());	  final    Type    type    =    getTypeToken(typeToken.toObject());    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
205	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null  ||  typeToken.getReturnType()!=  null?  null  :  typeToken.getReturnType();  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null  ||  typeToken.getReturnType()!=  null?  null  :  typeToken.getReturnType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null  ||  typeToken.getReturnType()!=  null?  null  :  typeToken.getReturnType();	  final    Type    type    =    typeToken    ==    null?    null    :    typeToken.getReturnType();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
206	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null  ||  typeToken.getSuperType()!=  null?  null  :  typeToken.getSuperType();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null  ||  typeToken.getSuperType()!=  null?  null  :  typeToken.getSuperType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null  ||  typeToken.getSuperType()!=  null?  null  :  typeToken.getSuperType();	  final    Type    type    =    typeToken    ==    null?    null    :    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
207	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null,  null?  null  :  typeToken.getSuperType();  [CE]  <identifier>  expected  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null,  null?  null  :  typeToken.getSuperType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null,  null?  null  :  typeToken.getSuperType();	  final    Type    type    =    typeToken    ==    null?    null    :    typeToken.getSuperType();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
208	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.cloneTree(),  typeToken.getRawType());  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.cloneTree(),  typeToken.getRawType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.cloneTree(),  typeToken.getRawType());	  final    Type    type    =    getType(typeToken.cloneTree(),    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
209	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  typeToken.cloneTree(),  typeToken.getType());  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken,  typeToken.cloneTree(),  typeToken.getType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  typeToken.cloneTree(),  typeToken.getType());	  final    Type    type    =    getType(typeToken.cloneTree(),    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
210	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.cloneTree(),  typeToken.getReturnType());  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.cloneTree(),  typeToken.getReturnType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.cloneTree(),  typeToken.getReturnType());	  final    Type    type    =    getType(typeToken.cloneTree(),    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
211	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.cloneTree(),  typeToken.getImplicitPrototype());  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.cloneTree(),  typeToken.getImplicitPrototype());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.cloneTree(),  typeToken.getImplicitPrototype());	  final    Type    type    =    getType(typeToken.cloneTree(),    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
212	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.cloneTree(),  typeToken.getElementType());  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.cloneTree(),  typeToken.getElementType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.cloneTree(),  typeToken.getElementType());	  final    Type    type    =    getType(typeToken.cloneTree(),    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
213	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.cloneTree(),  typeToken.getObjectType());  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.cloneTree(),  typeToken.getObjectType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.cloneTree(),  typeToken.getObjectType());	  final    Type    type    =    getType(typeToken.cloneTree(),    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
214	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  this.defaultImplementation.getType());  [CE]  cannot  find  symbol  defaultImplementation  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  this.defaultImplementation.getType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  this.defaultImplementation.getType());	  final    Type    type    =    getTypeToken(typeToken,    context.getType());    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	130	None	replace
215	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  defaultImplementation.getType());  [CE]  cannot  find  symbol  defaultImplementation  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  defaultImplementation.getType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  defaultImplementation.getType());	  final    Type    type    =    getTypeToken(typeToken,    context.getType());    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	130	None	replace
216	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  ObjectConstructor.class.getType());  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  ObjectConstructor.class.getType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  ObjectConstructor.class.getType());	  final    Type    type    =    getTypeToken(typeToken,    context.getType());    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
217	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  this.defaultConstructor.getType());  [CE]  cannot  find  symbol  defaultConstructor  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  this.defaultConstructor.getType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  this.defaultConstructor.getType());	  final    Type    type    =    getTypeToken(typeToken,    context.getType());    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	130	None	replace
218	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.toObjectType()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.toObjectType()  :  typeToken;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  typeToken.toObjectType()  :  typeToken;	  final    Type    type    =    typeToken!=    null?    typeToken.toObjectType()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
219	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getType()  :  typeToken.toObjectType();  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getType()  :  typeToken.toObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getType()  :  typeToken.toObjectType();	  final    Type    type    =    typeToken!=    null?    typeToken.toObjectType()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
220	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObjectType()  :  type;  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObjectType()  :  type;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.toObjectType()  :  type;	  final    Type    type    =    typeToken!=    null?    typeToken.toObjectType()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
221	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObjectType()  :  token;  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObjectType()  :  token;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.toObjectType()  :  token;	  final    Type    type    =    typeToken!=    null?    typeToken.toObjectType()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
222	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken.getRawType());  [CE]  incompatible  types  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken.getRawType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken.getRawType());	  final    InstanceCreator    <    T>    rawType    =    instanceCreators.get(typeToken);    	non-compiled	[CE]  incompatible  types	111	None	replace
223	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken.toString());  [CE]  incompatible  types  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken.toString());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken.toString());	  final    InstanceCreator    <    T>    rawType    =    instanceCreators.get(typeToken);    	non-compiled	[CE]  incompatible  types	111	None	replace
224	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken.cloneTree());  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken.cloneTree());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken.cloneTree());	  final    InstanceCreator    <    T>    rawType    =    instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
225	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken,  rawType);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken,  rawType);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken,  rawType);	  final    InstanceCreator    <    T>    rawType    =    instanceCreators.get(typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	111	None	replace
226	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawType  =  instances.get(typeToken.getRawType());  [CE]  cannot  find  symbol  instances  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  InstanceCreator  <  T>  rawType  =  instances.get(typeToken.getRawType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  InstanceCreator  <  T>  rawType  =  instances.get(typeToken.getRawType());	  final    InstanceCreator    <    T>    rawType    =    instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  instances	111	None	replace
227	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken.name);  [CE]  cannot  find  symbol  name  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken.name);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken.name);	  final    InstanceCreator    <    T>    rawType    =    instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  name	111	None	replace
228	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getSuperType()  :  typeToken.getSimpleName();  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getSuperType()  :  typeToken.getSimpleName();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  typeToken.getSuperType()  :  typeToken.getSimpleName();	  final    Type    type    =    typeToken!=    null?    typeToken.getSuperType()    :    typeToken.getSimpleName();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
229	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null  ||  typeToken.getSuperType()  :  typeToken.getSimpleName();  [CE]  ';'  expected  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null  ||  typeToken.getSuperType()  :  typeToken.getSimpleName();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null  ||  typeToken.getSuperType()  :  typeToken.getSimpleName();	  final    Type    type    =    typeToken!=    null?    typeToken.getSuperType()    :    typeToken.getSimpleName();    	non-compiled	[CE]  ';'  expected	65	None	replace
230	[BUG]  [BUGGY]  final  Type  type  =  typeToken  >=  null?  typeToken.getSuperType()  :  typeToken.getSimpleName();  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  >=  null?  typeToken.getSuperType()  :  typeToken.getSimpleName();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  >=  null?  typeToken.getSuperType()  :  typeToken.getSimpleName();	  final    Type    type    =    typeToken!=    null?    typeToken.getSuperType()    :    typeToken.getSimpleName();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	65	None	replace
231	[BUG]  [BUGGY]  final  Type  type  =  typeToken  >>  null?  typeToken.getSuperType()  :  typeToken.getSimpleName();  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  >>  null?  typeToken.getSuperType()  :  typeToken.getSimpleName();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  >>  null?  typeToken.getSuperType()  :  typeToken.getSimpleName();	  final    Type    type    =    typeToken!=    null?    typeToken.getSuperType()    :    typeToken.getSimpleName();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	65	None	replace
232	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getSuperType()  :  typeToken.getRawType();  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getSuperType()  :  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  typeToken.getSuperType()  :  typeToken.getRawType();	  final    Type    type    =    typeToken!=    null?    typeToken.getSuperType()    :    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
233	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null  ||  typeToken.getSuperType()  :  typeToken.getRawType();  [CE]  ';'  expected  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null  ||  typeToken.getSuperType()  :  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null  ||  typeToken.getSuperType()  :  typeToken.getRawType();	  final    Type    type    =    typeToken!=    null?    typeToken.getSuperType()    :    typeToken.getRawType();    	non-compiled	[CE]  ';'  expected	66	None	replace
234	[BUG]  [BUGGY]  final  Type  type  =  typeToken  >=  null?  typeToken.getSuperType()  :  typeToken.getRawType();  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  >=  null?  typeToken.getSuperType()  :  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  >=  null?  typeToken.getSuperType()  :  typeToken.getRawType();	  final    Type    type    =    typeToken!=    null?    typeToken.getSuperType()    :    typeToken.getRawType();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	66	None	replace
235	[BUG]  [BUGGY]  final  Type  type  =  typeToken  >>  null?  typeToken.getSuperType()  :  typeToken.getRawType();  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  >>  null?  typeToken.getSuperType()  :  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  >>  null?  typeToken.getSuperType()  :  typeToken.getRawType();	  final    Type    type    =    typeToken!=    null?    typeToken.getSuperType()    :    typeToken.getRawType();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	66	None	replace
236	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	Class  <?  super  T>  rawType  =  typeToken.getQualifiedName();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
237	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getSuperType();  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getSuperType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	Class  <?  super  T>  rawType  =  typeToken.getSuperType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
238	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getReturnType();  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getReturnType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	Class  <?  super  T>  rawType  =  typeToken.getReturnType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
239	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawClass();  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawClass();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	Class  <?  super  T>  rawType  =  typeToken.getRawClass();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
240	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getType()?  null  :  typeToken.toType();  [CE]  incompatible  types  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getType()?  null  :  typeToken.toType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getType()?  null  :  typeToken.toType();	  final    Type    type    =    typeToken.toType()?    null    :    typeToken.toType();    	non-compiled	[CE]  incompatible  types	97	None	replace
241	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toType(),  null  :  typeToken.toType();  [CE]  <identifier>  expected  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toType(),  null  :  typeToken.toType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toType(),  null  :  typeToken.toType();	  final    Type    type    =    typeToken.toType()?    null    :    typeToken.toType();    	non-compiled	[CE]  <identifier>  expected	97	None	replace
242	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toType()?  null  :  typeToken.getRawType();  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toType()?  null  :  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toType()?  null  :  typeToken.getRawType();	  final    Type    type    =    typeToken.toType()?    null    :    typeToken.toType();    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
243	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toType()? "  <  Object> "  :  typeToken.toType();  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toType()? "  <  Object> "  :  typeToken.toType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toType()? "  <  Object> "  :  typeToken.toType();	  final    Type    type    =    typeToken.toType()?    null    :    typeToken.toType();    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
244	[BUG]  [BUGGY]  final  T  type  =  typeToken.toType()?  null  :  typeToken.toType();  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  T  type  =  typeToken.toType()?  null  :  typeToken.toType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  T  type  =  typeToken.toType()?  null  :  typeToken.toType();	  final    Type    type    =    typeToken.toType()?    null    :    typeToken.toType();    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
245	[BUG]  [BUGGY]  final  Type  type  =  typeToken.type()?  null  :  typeToken.toType();  [CE]  cannot  find  symbol  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.type()?  null  :  typeToken.toType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.type()?  null  :  typeToken.toType();	  final    Type    type    =    typeToken.toType()?    null    :    typeToken.toType();    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
246	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getType(),  defaultImplementation);  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getType(),  defaultImplementation);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getType(),  defaultImplementation);	  final    Type    type    =    typeToken.getReturnType(),    defaultImplementation);    	non-compiled	[CE]  ';'  expected	3	None	replace
247	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getReturnType(),  defaultConstructor);  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getReturnType(),  defaultConstructor);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getReturnType(),  defaultConstructor);	  final    Type    type    =    typeToken.getReturnType(),    defaultImplementation);    	non-compiled	[CE]  ';'  expected	3	None	replace
248	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getRawType(),  defaultImplementation);  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getRawType(),  defaultImplementation);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getRawType(),  defaultImplementation);	  final    Type    type    =    typeToken.getReturnType(),    defaultImplementation);    	non-compiled	[CE]  ';'  expected	3	None	replace
249	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getReturnType(),  defaultImplementation,  rawType);  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getReturnType(),  defaultImplementation,  rawType);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getReturnType(),  defaultImplementation,  rawType);	  final    Type    type    =    typeToken.getReturnType(),    defaultImplementation);    	non-compiled	[CE]  ';'  expected	3	None	replace
250	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getReturnType(),  false);  [CE]  <identifier>  expected  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getReturnType(),  false);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getReturnType(),  false);	  final    Type    type    =    typeToken.getReturnType(),    defaultImplementation);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
251	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getReturnType(),  rawType);  [CE]  ';'  expected  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getReturnType(),  rawType);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getReturnType(),  rawType);	  final    Type    type    =    typeToken.getReturnType(),    defaultImplementation);    	non-compiled	[CE]  ';'  expected	3	None	replace
252	[BUG]  [BUGGY]  final  Type  type  =  ObjectConstructor.toObjectConstructor(typeToken);  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  ObjectConstructor.toObjectConstructor(typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  ObjectConstructor.toObjectConstructor(typeToken);	  final    Type    type    =    ObjectConstructor.toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
253	[BUG]  [BUGGY]  final  Type  type  =  ObjectConstructor.class.getSimpleName();  [CE]  incompatible  types  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  ObjectConstructor.class.getSimpleName();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  ObjectConstructor.class.getSimpleName();	  final    Type    type    =    ObjectConstructor.toObjectConstructor();    	non-compiled	[CE]  incompatible  types	79	None	replace
254	[BUG]  [BUGGY]  final  Type  type  =  ObjectConstructor.typeToken.toObjectConstructor();  [CE]  cannot  find  symbol  typeToken  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  ObjectConstructor.typeToken.toObjectConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  ObjectConstructor.typeToken.toObjectConstructor();	  final    Type    type    =    ObjectConstructor.toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol  typeToken	79	None	replace
255	[BUG]  [BUGGY]  final  Type  type  =  ObjectConstructor.class.getReferenceName();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  ObjectConstructor.class.getReferenceName();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  ObjectConstructor.class.getReferenceName();	  final    Type    type    =    ObjectConstructor.toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
256	[BUG]  [BUGGY]  final  Type  type  =  objectConstructor.toObjectConstructor();  [CE]  cannot  find  symbol  objectConstructor  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  objectConstructor.toObjectConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  objectConstructor.toObjectConstructor();	  final    Type    type    =    ObjectConstructor.toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol  objectConstructor	79	None	replace
257	[BUG]  [BUGGY]  final  Type  type  =  ObjectConstructor.class.getReturnType();  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  ObjectConstructor.class.getReturnType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  ObjectConstructor.class.getReturnType();	  final    Type    type    =    ObjectConstructor.toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
258	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getConstructor()  :  defaultConstructor.getConstructor();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getConstructor()  :  defaultConstructor.getConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getConstructor()  :  defaultConstructor.getConstructor();	  final    Type    type    =    typeToken!=    null?    typeToken.getConstructor()    :    typeToken.getConstructor();    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
259	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getSubType(typeToken.getSuperType(),  typeToken.getRawType());  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getSubType(typeToken.getSuperType(),  typeToken.getRawType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getSubType(typeToken.getSuperType(),  typeToken.getRawType());	  final    Type    type    =    typeToken.getSubType(typeToken.getSuperType());    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
260	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getSubType(typeToken.getSuperType(),  typeToken.getSimpleName());  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getSubType(typeToken.getSuperType(),  typeToken.getSimpleName());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getSubType(typeToken.getSuperType(),  typeToken.getSimpleName());	  final    Type    type    =    typeToken.getSubType(typeToken.getSuperType());    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
261	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getSubType(typeToken,  typeToken.getSuperType());  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getSubType(typeToken,  typeToken.getSuperType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getSubType(typeToken,  typeToken.getSuperType());	  final    Type    type    =    typeToken.getSubType(typeToken.getSuperType());    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
262	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getSubType(this.typeToken.getSuperType());  [CE]  cannot  find  symbol  typeToken  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getSubType(this.typeToken.getSuperType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getSubType(this.typeToken.getSuperType());	  final    Type    type    =    typeToken.getSubType(typeToken.getSuperType());    	non-compiled	[CE]  cannot  find  symbol  typeToken	63	None	replace
263	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getSubType(typeToken.getSuperType(),  typeToken.getClass());  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getSubType(typeToken.getSuperType(),  typeToken.getClass());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getSubType(typeToken.getSuperType(),  typeToken.getClass());	  final    Type    type    =    typeToken.getSubType(typeToken.getSuperType());    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
264	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getSubType(typeToken.getSuperType(),  typeToken.getParameterType(0));  [CE]  cannot  find  symbol  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getSubType(typeToken.getSuperType(),  typeToken.getParameterType(0));  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getSubType(typeToken.getSuperType(),  typeToken.getParameterType(0));	  final    Type    type    =    typeToken.getSubType(typeToken.getSuperType());    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
265	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  [CE]  cannot  find  symbol  type  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }	  final    Type    type    =    typeToken.getRawType();    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol  type	18	None	replace
266	[BUG]  [BUGGY]  Type  <?  super  T>  rawType  =  typeToken.getRawType();  [CE]  type  Type  does  not  take  parameters  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  Type  <?  super  T>  rawType  =  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	Type  <?  super  T>  rawType  =  typeToken.getRawType();	  final    Type    type    =    typeToken.getRawType();    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  type  Type  does  not  take  parameters	18	None	replace
267	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  type  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  final    Type    type    =    typeToken.getRawType();    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol  type	18	None	replace
268	[BUG]  [BUGGY]  final  Type  <?  super  T>  rawType  =  typeToken.getRawType();  [CE]  type  Type  does  not  take  parameters  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  <?  super  T>  rawType  =  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  <?  super  T>  rawType  =  typeToken.getRawType();	  final    Type    type    =    typeToken.getRawType();    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  type  Type  does  not  take  parameters	18	None	replace
269	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }  [CE]  ObjectConstructor  is  abstract;  cannot  be  instantiated  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }	  final    Type    type    =    typeToken.getRawType();    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  ObjectConstructor  is  abstract;  cannot  be  instantiated	18	None	replace
270	[BUG]  [BUGGY]  final  Class  <?>  rawType  =  typeToken.getRawType();  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Class  <?>  rawType  =  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Class  <?>  rawType  =  typeToken.getRawType();	  Class    <?>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	38	None	replace
271	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.getRawClass();  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  Class  <?>  rawType  =  typeToken.getRawClass();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	Class  <?>  rawType  =  typeToken.getRawClass();	  Class    <?>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
272	[BUG]  [BUGGY]  ObjectConstructor  <?>  rawType  =  typeToken.getRawType();  [CE]  incompatible  types  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  ObjectConstructor  <?>  rawType  =  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	ObjectConstructor  <?>  rawType  =  typeToken.getRawType();	  Class    <?>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  incompatible  types	38	None	replace
273	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.getQualifiedName();  [CE]  cannot  find  symbol  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  Class  <?>  rawType  =  typeToken.getQualifiedName();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	Class  <?>  rawType  =  typeToken.getQualifiedName();	  Class    <?>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
274	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.getReturnType();  [CE]  cannot  find  symbol  [FE]                                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  Class  <?>  rawType  =  typeToken.getReturnType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	Class  <?>  rawType  =  typeToken.getReturnType();	  Class    <?>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
275	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getConstructorType(),  defaultImplementation,  rawType);  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getConstructorType(),  defaultImplementation,  rawType);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getConstructorType(),  defaultImplementation,  rawType);	  final    Type    type    =    typeToken.getConstructorType(),    defaultImplementation);    	non-compiled	[CE]  ';'  expected	47	None	replace
276	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getConstructorType(),  this.defaultImplementation);  [CE]  <identifier>  expected  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getConstructorType(),  this.defaultImplementation);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getConstructorType(),  this.defaultImplementation);	  final    Type    type    =    typeToken.getConstructorType(),    defaultImplementation);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
277	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getConstructorType(),  factory);  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getConstructorType(),  factory);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getConstructorType(),  factory);	  final    Type    type    =    typeToken.getConstructorType(),    defaultImplementation);    	non-compiled	[CE]  ';'  expected	47	None	replace
278	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getConstructorType(),  false);  [CE]  <identifier>  expected  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getConstructorType(),  false);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getConstructorType(),  false);	  final    Type    type    =    typeToken.getConstructorType(),    defaultImplementation);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
279	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getConstructorType(),  null);  [CE]  <identifier>  expected  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getConstructorType(),  null);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getConstructorType(),  null);	  final    Type    type    =    typeToken.getConstructorType(),    defaultImplementation);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
280	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  defaultConstructor.getConstructorType()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  defaultConstructor.getConstructorType()  :  typeToken;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()?  defaultConstructor.getConstructorType()  :  typeToken;	  final    Type    type    =    typeToken.isConstructor()?    typeToken.getConstructorType()    :    defaultImplementation;    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
281	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  defaultImplementation.getConstructorType()  :  typeToken.getConstructorType();  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  defaultImplementation.getConstructorType()  :  typeToken.getConstructorType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()?  defaultImplementation.getConstructorType()  :  typeToken.getConstructorType();	  final    Type    type    =    typeToken.isConstructor()?    typeToken.getConstructorType()    :    defaultImplementation;    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
282	[BUG]  [BUGGY]  final  Type  type  =  defaultImplementation.isConstructor()?  typeToken.getConstructorType()  :  typeToken;  [CE]  cannot  find  symbol  defaultImplementation  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  defaultImplementation.isConstructor()?  typeToken.getConstructorType()  :  typeToken;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  defaultImplementation.isConstructor()?  typeToken.getConstructorType()  :  typeToken;	  final    Type    type    =    typeToken.isConstructor()?    typeToken.getConstructorType()    :    defaultImplementation;    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	119	None	replace
283	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  defaultImplementation.getConstructorType()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  defaultImplementation.getConstructorType()  :  typeToken;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()?  defaultImplementation.getConstructorType()  :  typeToken;	  final    Type    type    =    typeToken.isConstructor()?    typeToken.getConstructorType()    :    defaultImplementation;    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
284	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getConstructorType()?  typeToken.getConstructorType()  :  defaultImplementation;  [CE]  cannot  find  symbol  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getConstructorType()?  typeToken.getConstructorType()  :  defaultImplementation;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getConstructorType()?  typeToken.getConstructorType()  :  defaultImplementation;	  final    Type    type    =    typeToken.isConstructor()?    typeToken.getConstructorType()    :    defaultImplementation;    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
285	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  typeToken.getType(),  typeToken.getType());  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken,  typeToken.getType(),  typeToken.getType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  typeToken.getType(),  typeToken.getType());	  final    Type    type    =    getType(typeToken.getType(),    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
286	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  typeToken.getReturnType());  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  typeToken.getReturnType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.getType(),  typeToken.getReturnType());	  final    Type    type    =    getType(typeToken.getType(),    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
287	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  typeToken.getArgumentType());  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  typeToken.getArgumentType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.getType(),  typeToken.getArgumentType());	  final    Type    type    =    getType(typeToken.getType(),    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
288	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  typeToken.getElementType());  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  typeToken.getElementType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.getType(),  typeToken.getElementType());	  final    Type    type    =    getType(typeToken.getType(),    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
289	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  instanceCreators.getType(),  typeToken);  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken,  instanceCreators.getType(),  typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  instanceCreators.getType(),  typeToken);	  final    Type    type    =    getType(typeToken,    instanceCreators.getType());    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
290	[BUG]  [BUGGY]  final  Type  type  =  getType(instanceCreators,  typeToken.getType());  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(instanceCreators,  typeToken.getType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(instanceCreators,  typeToken.getType());	  final    Type    type    =    getType(typeToken,    instanceCreators.getType());    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
291	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  ObjectConstructor.class.getSimpleName());  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken,  ObjectConstructor.class.getSimpleName());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  ObjectConstructor.class.getSimpleName());	  final    Type    type    =    getType(typeToken,    instanceCreators.getType());    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
292	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  null,  instanceCreators.getType());  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken,  null,  instanceCreators.getType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  null,  instanceCreators.getType());	  final    Type    type    =    getType(typeToken,    instanceCreators.getType());    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
293	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  types.getType());  [CE]  cannot  find  symbol  types  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken,  types.getType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  types.getType());	  final    Type    type    =    getType(typeToken,    instanceCreators.getType());    	non-compiled	[CE]  cannot  find  symbol  types	88	None	replace
294	[BUG]  [BUGGY]  final  Type  type  =  typeToken  >=  null?  typeToken.getTypeRegistry()  :  typeToken.getTypeRegistry();  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  >=  null?  typeToken.getTypeRegistry()  :  typeToken.getTypeRegistry();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  >=  null?  typeToken.getTypeRegistry()  :  typeToken.getTypeRegistry();	  final    Type    type    =    typeToken!=    null?    typeToken.getTypeRegistry()    :    typeToken.getTypeRegistry();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	157	None	replace
295	[BUG]  [BUGGY]  final  Type  type  =  typeToken  >>  null?  typeToken.getTypeRegistry()  :  typeToken.getTypeRegistry();  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  >>  null?  typeToken.getTypeRegistry()  :  typeToken.getTypeRegistry();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  >>  null?  typeToken.getTypeRegistry()  :  typeToken.getTypeRegistry();	  final    Type    type    =    typeToken!=    null?    typeToken.getTypeRegistry()    :    typeToken.getTypeRegistry();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	157	None	replace
296	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getTypeRegistry()  :  getTypeRegistry();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getTypeRegistry()  :  getTypeRegistry();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getTypeRegistry()  :  getTypeRegistry();	  final    Type    type    =    typeToken!=    null?    typeToken.getTypeRegistry()    :    typeToken.getTypeRegistry();    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
297	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.restrictByNotNullOrUndefined(),  typeToken);  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.restrictByNotNullOrUndefined(),  typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.restrictByNotNullOrUndefined(),  typeToken);	  final    Type    type    =    getType(typeToken.restrictByNotNullOrUndefined());    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
298	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.restrictByNotNullOrUndefined(),  typeToken.getRawType());  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.restrictByNotNullOrUndefined(),  typeToken.getRawType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.restrictByNotNullOrUndefined(),  typeToken.getRawType());	  final    Type    type    =    getType(typeToken.restrictByNotNullOrUndefined());    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
299	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.getRestrictByNotNullOrUndefined());  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.getRestrictByNotNullOrUndefined());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.getRestrictByNotNullOrUndefined());	  final    Type    type    =    getType(typeToken.restrictByNotNullOrUndefined());    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
300	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.restrictByNotNullOrUndefined(),  rawType);  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.restrictByNotNullOrUndefined(),  rawType);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.restrictByNotNullOrUndefined(),  rawType);	  final    Type    type    =    getType(typeToken.restrictByNotNullOrUndefined());    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
301	[BUG]  [BUGGY]  final  T  type  =  getType(typeToken.restrictByNotNullOrUndefined());  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  T  type  =  getType(typeToken.restrictByNotNullOrUndefined());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  T  type  =  getType(typeToken.restrictByNotNullOrUndefined());	  final    Type    type    =    getType(typeToken.restrictByNotNullOrUndefined());    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
302	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getType()  :  typeToken.getObjectType();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getType()  :  typeToken.getObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getType()  :  typeToken.getObjectType();	  final    Type    type    =    typeToken!=    null?    typeToken.getObjectType()    :    typeToken.getObjectType();    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
303	[BUG]  [BUGGY]  final  Type  type  =  typeToken  >=  null?  typeToken.getObjectType()  :  typeToken.getObjectType();  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  >=  null?  typeToken.getObjectType()  :  typeToken.getObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  >=  null?  typeToken.getObjectType()  :  typeToken.getObjectType();	  final    Type    type    =    typeToken!=    null?    typeToken.getObjectType()    :    typeToken.getObjectType();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	42	None	replace
304	[BUG]  [BUGGY]  Type  type  =  typeToken.getRawType();  [CE]  local  variable  type  is  accessed  from  within  inner  class;  needs  to  be  declared  final  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  Type  type  =  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	Type  type  =  typeToken.getRawType();	  final    Type    type    =    typeToken.getRawType();    Type    type    =    typeToken.getRawType();    	non-compiled	[CE]  local  variable  type  is  accessed  from  within  inner  class;  needs  to  be  declared  final	20	None	replace
305	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  type  =  typeToken.getRawType();  }  [CE]  cannot  assign  a  value  to  final  variable  type  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  type  =  typeToken.getRawType();  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  type  =  typeToken.getRawType();  }	  final    Type    type    =    typeToken.getRawType();    Type    type    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  type	20	None	replace
306	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  Type  type  =  typeToken.getRawType();  }  [CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  Type  type  =  typeToken.getRawType();  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  Type  type  =  typeToken.getRawType();  }	  final    Type    type    =    typeToken.getRawType();    Type    type    =    typeToken.getRawType();    	non-compiled	[CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)	20	None	replace
307	[BUG]  [BUGGY]  if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  Type  type  =  typeToken.getRawType();  }  [CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  Type  type  =  typeToken.getRawType();  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  Type  type  =  typeToken.getRawType();  }	  final    Type    type    =    typeToken.getRawType();    Type    type    =    typeToken.getRawType();    	non-compiled	[CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)	20	None	replace
308	[BUG]  [BUGGY]  if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  type  =  typeToken.getRawType();  }  [CE]  cannot  assign  a  value  to  final  variable  type  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  type  =  typeToken.getRawType();  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  type  =  typeToken.getRawType();  }	  final    Type    type    =    typeToken.getRawType();    Type    type    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  type	20	None	replace
309	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  typeToken.getRawType());  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken,  typeToken.getRawType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  typeToken.getRawType());	  final    Type    type    =    getType(typeToken.getRawType());    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
310	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.getRawType(),  typeToken.getRawType());  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.getRawType(),  typeToken.getRawType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.getRawType(),  typeToken.getRawType());	  final    Type    type    =    getType(typeToken.getRawType());    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
311	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.getRawType(),  typeToken);  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.getRawType(),  typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.getRawType(),  typeToken);	  final    Type    type    =    getType(typeToken.getRawType());    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
312	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.getRawType(),  typeToken.getSimpleName());  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.getRawType(),  typeToken.getSimpleName());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.getRawType(),  typeToken.getSimpleName());	  final    Type    type    =    getType(typeToken.getRawType());    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
313	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.getRawType(),  typeToken.getConstructor());  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.getRawType(),  typeToken.getConstructor());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.getRawType(),  typeToken.getConstructor());	  final    Type    type    =    getType(typeToken.getRawType());    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
314	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getConstructor()?  typeToken.getConstructor()  :  null;  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getConstructor()?  typeToken.getConstructor()  :  null;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getConstructor()?  typeToken.getConstructor()  :  null;	  final    Type    type    =    typeToken.isConstructor()?    typeToken.getConstructor()    :    null;    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
315	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()  ||  typeToken.getConstructor()  :  null;  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isConstructor()  ||  typeToken.getConstructor()  :  null;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()  ||  typeToken.getConstructor()  :  null;	  final    Type    type    =    typeToken.isConstructor()?    typeToken.getConstructor()    :    null;    	non-compiled	[CE]  ';'  expected	137	None	replace
316	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructor()  :  defaultConstructor;  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructor()  :  defaultConstructor;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructor()  :  defaultConstructor;	  final    Type    type    =    typeToken.isConstructor()?    typeToken.getConstructor()    :    null;    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
317	[BUG]  [BUGGY]  final  Type  type  =  typeToken  >=  null?  null  :  typeToken.getConstructorType();  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  >=  null?  null  :  typeToken.getConstructorType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  >=  null?  null  :  typeToken.getConstructorType();	  final    Type    type    =    typeToken!=    null?    null    :    typeToken.getConstructorType();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	114	None	replace
318	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().getType();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken().getType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().getType();	  final    Type    type    =    getTypeToken().toType();    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
319	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().getRawType();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken().getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().getRawType();	  final    Type    type    =    getTypeToken().toType();    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
320	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().cloneTree().toType();  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken().cloneTree().toType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().cloneTree().toType();	  final    Type    type    =    getTypeToken().toType();    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
321	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().getNativeType(UNKNOWN_TYPE);  [CE]  cannot  find  symbol  UNKNOWN_TYPE  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken().getNativeType(UNKNOWN_TYPE);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().getNativeType(UNKNOWN_TYPE);	  final    Type    type    =    getTypeToken().toType();    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_TYPE	96	None	replace
322	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().getReturnType();  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken().getReturnType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().getReturnType();	  final    Type    type    =    getTypeToken().toType();    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
323	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken();  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken();	  final    Type    type    =    getTypeToken().toType();    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
324	[BUG]  [BUGGY]  final  Class  <?>  rawType  =  typeToken.toObjectType()?  null  :  typeToken.toObjectType();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Class  <?>  rawType  =  typeToken.toObjectType()?  null  :  typeToken.toObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Class  <?>  rawType  =  typeToken.toObjectType()?  null  :  typeToken.toObjectType();	  final    Type    type    =    typeToken.toObjectType()?    null    :    typeToken.toObjectType();    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
325	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getType()?  null  :  typeToken.toObjectType();  [CE]  incompatible  types  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getType()?  null  :  typeToken.toObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getType()?  null  :  typeToken.toObjectType();	  final    Type    type    =    typeToken.toObjectType()?    null    :    typeToken.toObjectType();    	non-compiled	[CE]  incompatible  types	83	None	replace
326	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toObjectType(),  null  :  typeToken.toObjectType();  [CE]  <identifier>  expected  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toObjectType(),  null  :  typeToken.toObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toObjectType(),  null  :  typeToken.toObjectType();	  final    Type    type    =    typeToken.toObjectType()?    null    :    typeToken.toObjectType();    	non-compiled	[CE]  <identifier>  expected	83	None	replace
327	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toType()?  null  :  typeToken.toObjectType();  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toType()?  null  :  typeToken.toObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toType()?  null  :  typeToken.toObjectType();	  final    Type    type    =    typeToken.toObjectType()?    null    :    typeToken.toObjectType();    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
328	[BUG]  [BUGGY]  final  T  type  =  typeToken.toObjectType()?  null  :  typeToken.toObjectType();  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  T  type  =  typeToken.toObjectType()?  null  :  typeToken.toObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  T  type  =  typeToken.toObjectType()?  null  :  typeToken.toObjectType();	  final    Type    type    =    typeToken.toObjectType()?    null    :    typeToken.toObjectType();    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
329	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toStringType()?  null  :  typeToken.toObjectType();  [CE]  cannot  find  symbol  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toStringType()?  null  :  typeToken.toObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toStringType()?  null  :  typeToken.toObjectType();	  final    Type    type    =    typeToken.toObjectType()?    null    :    typeToken.toObjectType();    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
330	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getSimpleName());  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getSimpleName());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getSimpleName());	  final    Type    type    =    getTypeToken(typeToken.toString());    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
331	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getReturnType());  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getReturnType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getReturnType());	  final    Type    type    =    getTypeToken(typeToken.toString());    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
332	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  typeToken.getType(),  typeToken);  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken,  typeToken.getType(),  typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  typeToken.getType(),  typeToken);	  final    Type    type    =    getType(typeToken.getType(),    typeToken);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
333	[BUG]  [BUGGY]  final  T  type  =  getType(typeToken.getType(),  typeToken);  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  T  type  =  getType(typeToken.getType(),  typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  T  type  =  getType(typeToken.getType(),  typeToken);	  final    Type    type    =    getType(typeToken.getType(),    typeToken);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
334	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  styleToken);  [CE]  cannot  find  symbol  styleToken  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  styleToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.getType(),  styleToken);	  final    Type    type    =    getType(typeToken.getType(),    typeToken);    	non-compiled	[CE]  cannot  find  symbol  styleToken	53	None	replace
335	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  type);  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  type);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.getType(),  type);	  final    Type    type    =    getType(typeToken.getType(),    typeToken);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
336	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  typeToken).getRawType();  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  typeToken).getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.getType(),  typeToken).getRawType();	  final    Type    type    =    getType(typeToken.getType(),    typeToken);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
337	[BUG]  [BUGGY]  final  T  type  =  typeToken  ==  null?  null  :  typeToken.toType();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  T  type  =  typeToken  ==  null?  null  :  typeToken.toType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  T  type  =  typeToken  ==  null?  null  :  typeToken.toType();	  final    Type    type    =    typeToken    ==    null?    null    :    typeToken.toType();    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
338	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  this);  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  this);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getType(),  this);	  final    Type    type    =    getTypeToken(typeToken.getType(),    defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
339	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  null);  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  null);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getType(),  null);	  final    Type    type    =    getTypeToken(typeToken.getType(),    defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
340	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  rawType);  [CE]  cannot  find  symbol  rawType  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  rawType);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getType(),  rawType);	  final    Type    type    =    getTypeToken(typeToken.getType(),    defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol  rawType	73	None	replace
341	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  context);  [CE]  cannot  find  symbol  context  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  context);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getType(),  context);	  final    Type    type    =    getTypeToken(typeToken.getType(),    defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol  context	73	None	replace
342	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  container);  [CE]  cannot  find  symbol  container  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  container);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getType(),  container);	  final    Type    type    =    getTypeToken(typeToken.getType(),    defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol  container	73	None	replace
343	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  types);  [CE]  cannot  find  symbol  types  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  types);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getType(),  types);	  final    Type    type    =    getTypeToken(typeToken.getType(),    defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol  types	73	None	replace
344	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().getObjectType();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken().getObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().getObjectType();	  final    Type    type    =    getTypeToken().toObjectType();    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
345	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().cloneTree().toObjectType();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken().cloneTree().toObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().cloneTree().toObjectType();	  final    Type    type    =    getTypeToken().toObjectType();    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
346	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().objectType();  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken().objectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().objectType();	  final    Type    type    =    getTypeToken().toObjectType();    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
347	[BUG]  [BUGGY]  final  Type  type  =  typeToken.constructType(typeToken);  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.constructType(typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.constructType(typeToken);	  final    Type    type    =    typeToken.constructType(defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
348	[BUG]  [BUGGY]  final  Type  type  =  typeToken.constructType(this);  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.constructType(this);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.constructType(this);	  final    Type    type    =    typeToken.constructType(defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
349	[BUG]  [BUGGY]  final  Type  type  =  typeToken.constructType(type);  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.constructType(type);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.constructType(type);	  final    Type    type    =    typeToken.constructType(defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
350	[BUG]  [BUGGY]  final  Type  type  =  typeToken.constructType(null);  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.constructType(null);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.constructType(null);	  final    Type    type    =    typeToken.constructType(defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
351	[BUG]  [BUGGY]  final  Type  type  =  typeToken.constructType(objectConstructor);  [CE]  cannot  find  symbol  objectConstructor  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.constructType(objectConstructor);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.constructType(objectConstructor);	  final    Type    type    =    typeToken.constructType(defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol  objectConstructor	93	None	replace
352	[BUG]  [BUGGY]  final  Type  type  =  typeToken.constructType(defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.constructType(defaultConstructor);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.constructType(defaultConstructor);	  final    Type    type    =    typeToken.constructType(defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	93	None	replace
353	[BUG]  [BUGGY]  final  Type  type  =  typeToken.constructType(objectImplementation);  [CE]  cannot  find  symbol  objectImplementation  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.constructType(objectImplementation);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.constructType(objectImplementation);	  final    Type    type    =    typeToken.constructType(defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol  objectImplementation	93	None	replace
354	[BUG]  [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullOrUndefined(),  rawType;  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullOrUndefined(),  rawType;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.restrictByNotNullOrUndefined(),  rawType;	  final    Type    type    =    typeToken.restrictByNotNullOrUndefined(),    null;    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
355	[BUG]  [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullOrUndefined(),  this;  [CE]  <identifier>  expected  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullOrUndefined(),  this;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.restrictByNotNullOrUndefined(),  this;	  final    Type    type    =    typeToken.restrictByNotNullOrUndefined(),    null;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
356	[BUG]  [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullOrUndefined(),  false;  [CE]  <identifier>  expected  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullOrUndefined(),  false;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.restrictByNotNullOrUndefined(),  false;	  final    Type    type    =    typeToken.restrictByNotNullOrUndefined(),    null;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
357	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getRawType(),  null;  [CE]  <identifier>  expected  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getRawType(),  null;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getRawType(),  null;	  final    Type    type    =    typeToken.restrictByNotNullOrUndefined(),    null;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
358	[BUG]  [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullOrUndefined(),  unknownType;  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullOrUndefined(),  unknownType;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.restrictByNotNullOrUndefined(),  unknownType;	  final    Type    type    =    typeToken.restrictByNotNullOrUndefined(),    null;    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
359	[BUG]  [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullOrUndefined(),  true;  [CE]  <identifier>  expected  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullOrUndefined(),  true;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.restrictByNotNullOrUndefined(),  true;	  final    Type    type    =    typeToken.restrictByNotNullOrUndefined(),    null;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
360	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  getTypeRegistry()  :  typeToken.getTypeRegistry();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  getTypeRegistry()  :  typeToken.getTypeRegistry();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  getTypeRegistry()  :  typeToken.getTypeRegistry();	  final    Type    type    =    typeToken!=    null?    getTypeRegistry()    :    typeToken.getTypeRegistry();    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
361	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  getTypeRegistry()  :  typeToken,  defaultImplementation.getTypeRegistry();  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  getTypeRegistry()  :  typeToken,  defaultImplementation.getTypeRegistry();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  getTypeRegistry()  :  typeToken,  defaultImplementation.getTypeRegistry();	  final    Type    type    =    typeToken!=    null?    getTypeRegistry()    :    typeToken.getTypeRegistry();    	non-compiled	[CE]  ';'  expected	126	None	replace
362	[BUG]  [BUGGY]  final  Type  type  =  typeToken  >=  null?  getTypeRegistry()  :  typeToken.getTypeRegistry();  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  >=  null?  getTypeRegistry()  :  typeToken.getTypeRegistry();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  >=  null?  getTypeRegistry()  :  typeToken.getTypeRegistry();	  final    Type    type    =    typeToken!=    null?    getTypeRegistry()    :    typeToken.getTypeRegistry();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	126	None	replace
363	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  getTypeRegistry()  :  type.getTypeRegistry();  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  getTypeRegistry()  :  type.getTypeRegistry();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  getTypeRegistry()  :  type.getTypeRegistry();	  final    Type    type    =    typeToken!=    null?    getTypeRegistry()    :    typeToken.getTypeRegistry();    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
364	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getTypeRegistry()  :  null;  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getTypeRegistry()  :  null;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  typeToken.getTypeRegistry()  :  null;	  final    Type    type    =    typeToken!=    null?    typeToken.getTypeRegistry()    :    null;    	non-compiled	[CE]  cannot  find  symbol	159	None	replace
365	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getConstructor()  :  null;  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getConstructor()  :  null;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getConstructor()  :  null;	  final    Type    type    =    typeToken!=    null?    typeToken.getTypeRegistry()    :    null;    	non-compiled	[CE]  cannot  find  symbol	159	None	replace
366	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null  ||  typeToken.getTypeRegistry()  :  null;  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null  ||  typeToken.getTypeRegistry()  :  null;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null  ||  typeToken.getTypeRegistry()  :  null;	  final    Type    type    =    typeToken!=    null?    typeToken.getTypeRegistry()    :    null;    	non-compiled	[CE]  ';'  expected	159	None	replace
367	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getTyperegistry()  :  null;  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getTyperegistry()  :  null;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getTyperegistry()  :  null;	  final    Type    type    =    typeToken!=    null?    typeToken.getTypeRegistry()    :    null;    	non-compiled	[CE]  cannot  find  symbol	159	None	replace
368	[BUG]  [BUGGY]  final  Type  type  =  typeToken  >=  null?  null  :  typeToken.getSuperType();  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  >=  null?  null  :  typeToken.getSuperType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  >=  null?  null  :  typeToken.getSuperType();	  final    Type    type    =    typeToken!=    null?    null    :    typeToken.getSuperType();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	69	None	replace
369	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.typeRegistry();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.typeRegistry();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  null  :  typeToken.typeRegistry();	  final    Type    type    =    typeToken    ==    null?    null    :    typeToken.getTypeRegistry();    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
370	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getReturnType()  &&  typeToken.getReturnType();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getReturnType()  &&  typeToken.getReturnType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getReturnType()  &&  typeToken.getReturnType();	  final    Type    type    =    typeToken.getReturnType()    ||    typeToken.getReturnType();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
371	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getReturnType()  ||  typeToken.getRawType();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getReturnType()  ||  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getReturnType()  ||  typeToken.getRawType();	  final    Type    type    =    typeToken.getReturnType()    ||    typeToken.getReturnType();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
372	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getType()  ||  typeToken.getReturnType();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getType()  ||  typeToken.getReturnType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getType()  ||  typeToken.getReturnType();	  final    Type    type    =    typeToken.getReturnType()    ||    typeToken.getReturnType();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
373	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getReturnType()  ||  typeToken.getSimpleName();  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getReturnType()  ||  typeToken.getSimpleName();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getReturnType()  ||  typeToken.getSimpleName();	  final    Type    type    =    typeToken.getReturnType()    ||    typeToken.getReturnType();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
374	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getReturnType()  ||  typeToken.getType();  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getReturnType()  ||  typeToken.getType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getReturnType()  ||  typeToken.getType();	  final    Type    type    =    typeToken.getReturnType()    ||    typeToken.getReturnType();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
375	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getReturnType()  ||  typeToken.getName();  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getReturnType()  ||  typeToken.getName();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getReturnType()  ||  typeToken.getName();	  final    Type    type    =    typeToken.getReturnType()    ||    typeToken.getReturnType();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
376	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  typeToken.getType(),  typeToken.getType());  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  typeToken.getType(),  typeToken.getType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  typeToken.getType(),  typeToken.getType());	  final    Type    type    =    getTypeToken(typeToken.getType(),    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
377	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.getArgumentType());  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.getArgumentType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.getArgumentType());	  final    Type    type    =    getTypeToken(typeToken.getType(),    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
378	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.getReturnType());  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.getReturnType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.getReturnType());	  final    Type    type    =    getTypeToken(typeToken.getType(),    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
379	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.getElementType());  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.getElementType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.getElementType());	  final    Type    type    =    getTypeToken(typeToken.getType(),    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
380	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.getObjectType());  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.getObjectType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.getObjectType());	  final    Type    type    =    getTypeToken(typeToken.getType(),    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
381	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toLowerCase(false);  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toLowerCase(false);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toLowerCase(false);	  final    Type    type    =    typeToken.toLowerCase();    	non-compiled	[CE]  cannot  find  symbol	141	None	replace
382	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toLowerCase(defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toLowerCase(defaultImplementation);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toLowerCase(defaultImplementation);	  final    Type    type    =    typeToken.toLowerCase();    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	141	None	replace
383	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toLowerCase(true);  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toLowerCase(true);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toLowerCase(true);	  final    Type    type    =    typeToken.toLowerCase();    	non-compiled	[CE]  cannot  find  symbol	141	None	replace
384	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toLowerCase(),  false);  [CE]  <identifier>  expected  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toLowerCase(),  false);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toLowerCase(),  false);	  final    Type    type    =    typeToken.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	141	None	replace
385	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toLowerCase(this.defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toLowerCase(this.defaultImplementation);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toLowerCase(this.defaultImplementation);	  final    Type    type    =    typeToken.toLowerCase();    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	141	None	replace
386	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  this.typeToken;  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  this.typeToken;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  this.typeToken;	  final    Type    type    =    typeToken.isConstructor()?    typeToken.getConstructorType()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
387	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  type;  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  type;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  type;	  final    Type    type    =    typeToken.isConstructor()?    typeToken.getConstructorType()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
388	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  typeToken);  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  typeToken);	  final    Type    type    =    typeToken.isConstructor()?    typeToken.getConstructorType()    :    typeToken;    	non-compiled	[CE]  ';'  expected	164	None	replace
389	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  type  =  typeToken.getRawType();  }  [CE]  <identifier>  expected  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  type  =  typeToken.getRawType();  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  type  =  typeToken.getRawType();  }	  final    Type    type    =    typeToken.getRawType();    final    type    =    typeToken.getRawType();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
390	[BUG]  [BUGGY]  final  Type  <?>  type  =  typeToken.getRawType();  [CE]  type  Type  does  not  take  parameters  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  <?>  type  =  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  <?>  type  =  typeToken.getRawType();	  final    Type    type    =    typeToken.getRawType();    final    type    =    typeToken.getRawType();    	non-compiled	[CE]  type  Type  does  not  take  parameters	22	None	replace
391	[BUG]  [BUGGY]  if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  final  type  =  typeToken.getRawType();  }  [CE]  <identifier>  expected  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  final  type  =  typeToken.getRawType();  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  final  type  =  typeToken.getRawType();  }	  final    Type    type    =    typeToken.getRawType();    final    type    =    typeToken.getRawType();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
392	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  type  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  type  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  type  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  final    Type    type    =    typeToken.getRawType();    final    type    =    typeToken.getRawType();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
393	[BUG]  [BUGGY]  final  Type  <  T>  type  =  typeToken.getRawType();  [CE]  type  Type  does  not  take  parameters  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  <  T>  type  =  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  <  T>  type  =  typeToken.getRawType();	  final    Type    type    =    typeToken.getRawType();    final    type    =    typeToken.getRawType();    	non-compiled	[CE]  type  Type  does  not  take  parameters	22	None	replace
394	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  type  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }  [CE]  <identifier>  expected  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  type  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  type  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }	  final    Type    type    =    typeToken.getRawType();    final    type    =    typeToken.getRawType();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
395	[BUG]  [BUGGY]  if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  final  type  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  final  type  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  final  type  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  final    Type    type    =    typeToken.getRawType();    final    type    =    typeToken.getRawType();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
396	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getType()  :  typeToken.getObjectType();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getType()  :  typeToken.getObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  typeToken.getType()  :  typeToken.getObjectType();	  final    Type    type    =    typeToken    ==    null?    typeToken.getObjectType()    :    typeToken.getObjectType();    	non-compiled	[CE]  cannot  find  symbol	133	None	replace
397	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null  ||  typeToken.getObjectType()  :  typeToken.getObjectType();  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null  ||  typeToken.getObjectType()  :  typeToken.getObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null  ||  typeToken.getObjectType()  :  typeToken.getObjectType();	  final    Type    type    =    typeToken    ==    null?    typeToken.getObjectType()    :    typeToken.getObjectType();    	non-compiled	[CE]  ';'  expected	133	None	replace
398	[BUG]  [BUGGY]  final  Type  types  =  typeToken.getRawType();  [CE]  cannot  find  symbol  type  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  types  =  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  types  =  typeToken.getRawType();	  final    Type    type    =    typeToken.getRawType();    final    Type    types    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol  type	105	None	replace
399	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  Type  types  =  typeToken.getRawType();  }  [CE]  cannot  find  symbol  type  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  Type  types  =  typeToken.getRawType();  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  Type  types  =  typeToken.getRawType();  }	  final    Type    type    =    typeToken.getRawType();    final    Type    types    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol  type	105	None	replace
400	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  Type  types  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  type  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  Type  types  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  Type  types  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  final    Type    type    =    typeToken.getRawType();    final    Type    types    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol  type	105	None	replace
401	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  Type  types  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }  [CE]  ObjectConstructor  is  abstract;  cannot  be  instantiated  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  Type  types  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  Type  types  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }	  final    Type    type    =    typeToken.getRawType();    final    Type    types    =    typeToken.getRawType();    	non-compiled	[CE]  ObjectConstructor  is  abstract;  cannot  be  instantiated	105	None	replace
402	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  typeToken.getType(),  typeToken.getRawType());  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  typeToken.getType(),  typeToken.getRawType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  typeToken.getType(),  typeToken.getRawType());	  final    Type    type    =    getTypeToken(typeToken.getType(),    typeToken.getRawType());    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
403	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  rawType.getType(),  typeToken.getRawType());  [CE]  cannot  find  symbol  rawType  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  rawType.getType(),  typeToken.getRawType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  rawType.getType(),  typeToken.getRawType());	  final    Type    type    =    getTypeToken(typeToken.getType(),    typeToken.getRawType());    	non-compiled	[CE]  cannot  find  symbol  rawType	30	None	replace
404	[BUG]  [BUGGY]  final  T  type  =  getTypeToken(typeToken.getType(),  typeToken.getRawType());  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  T  type  =  getTypeToken(typeToken.getType(),  typeToken.getRawType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  T  type  =  getTypeToken(typeToken.getType(),  typeToken.getRawType());	  final    Type    type    =    getTypeToken(typeToken.getType(),    typeToken.getRawType());    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
405	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.getValueType());  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.getValueType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.getValueType());	  final    Type    type    =    getTypeToken(typeToken.getType(),    typeToken.getRawType());    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
406	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null  ||  typeToken.getTypeRegistry()  :  typeToken.getTypeRegistry();  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null  ||  typeToken.getTypeRegistry()  :  typeToken.getTypeRegistry();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null  ||  typeToken.getTypeRegistry()  :  typeToken.getTypeRegistry();	  final    Type    type    =    typeToken    ==    null?    typeToken.getTypeRegistry()    :    typeToken.getTypeRegistry();    	non-compiled	[CE]  ';'  expected	158	None	replace
407	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getTypeRegistry()  :  getTypeRegistry();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getTypeRegistry()  :  getTypeRegistry();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  typeToken.getTypeRegistry()  :  getTypeRegistry();	  final    Type    type    =    typeToken    ==    null?    typeToken.getTypeRegistry()    :    typeToken.getTypeRegistry();    	non-compiled	[CE]  cannot  find  symbol	158	None	replace
408	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getReturnType()  :  null;  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getReturnType()  :  null;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  typeToken.getReturnType()  :  null;	  final    Type    type    =    typeToken!=    null?    typeToken.getReturnType()    :    null;    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
409	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getType()  :  null;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	add	final  Type  type  =  typeToken!=  null?  typeToken.getType()  :  null;	  final    Type    type    =    typeToken!=    null?    typeToken.getReturnType()    :    null;    	compilable	  [FE]  ClassCastException  	2	2	replace
410	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getType()  :  null;  [FE]  ClassCastException  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getType()  :  null;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getType()  :  null;	  final    Type    type    =    typeToken!=    null?    typeToken.getReturnType()    :    null;    	compilable	  [FE]  ClassCastException  	2	2	replace
411	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getRawType()  :  null;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	add	final  Type  type  =  typeToken!=  null?  typeToken.getRawType()  :  null;	  final    Type    type    =    typeToken!=    null?    typeToken.getReturnType()    :    null;    	compilable	  [FE]  ClassCastException  	2	2	replace
412	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getRawType()  :  null;  [FE]  ClassCastException  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getRawType()  :  null;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getRawType()  :  null;	  final    Type    type    =    typeToken!=    null?    typeToken.getReturnType()    :    null;    	compilable	  [FE]  ClassCastException  	2	2	replace
413	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getConstructor(),  defaultImplementation,  rawType);  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getConstructor(),  defaultImplementation,  rawType);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getConstructor(),  defaultImplementation,  rawType);	  final    Type    type    =    typeToken.getConstructor(),    defaultImplementation);    	non-compiled	[CE]  ';'  expected	58	None	replace
414	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getConstructor(),  this.defaultImplementation);  [CE]  <identifier>  expected  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getConstructor(),  this.defaultImplementation);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getConstructor(),  this.defaultImplementation);	  final    Type    type    =    typeToken.getConstructor(),    defaultImplementation);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
415	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getConstructor(),  factory);  [CE]  ';'  expected  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getConstructor(),  factory);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getConstructor(),  factory);	  final    Type    type    =    typeToken.getConstructor(),    defaultImplementation);    	non-compiled	[CE]  ';'  expected	58	None	replace
416	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getConstructor(),  rawType);  [CE]  ';'  expected  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getConstructor(),  rawType);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getConstructor(),  rawType);	  final    Type    type    =    typeToken.getConstructor(),    defaultImplementation);    	non-compiled	[CE]  ';'  expected	58	None	replace
417	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getConstructor(),  unsafeAllocator);  [CE]  ';'  expected  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getConstructor(),  unsafeAllocator);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getConstructor(),  unsafeAllocator);	  final    Type    type    =    typeToken.getConstructor(),    defaultImplementation);    	non-compiled	[CE]  ';'  expected	58	None	replace
418	[BUG]  [BUGGY]  final  Type  type  =  typeToken.cloneType();  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.cloneType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.cloneType();	  final    Type    type    =    typeToken.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
419	[BUG]  [BUGGY]  final  Type  type  =  typeToken.type().cloneTree();  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.type().cloneTree();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.type().cloneTree();	  final    Type    type    =    typeToken.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
420	[BUG]  [BUGGY]  final  Type  type  =  typeToken.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.clone();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.clone();	  final    Type    type    =    typeToken.cloneTree();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	89	None	replace
421	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.getOwnerType();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.getOwnerType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  null  :  typeToken.getOwnerType();	  final    Type    type    =    typeToken.getOwnerType();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
422	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getTypeOwnerType();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getTypeOwnerType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getTypeOwnerType();	  final    Type    type    =    typeToken.getOwnerType();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
423	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getOwnerType(),  defaultImplementation);  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getOwnerType(),  defaultImplementation);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getOwnerType(),  defaultImplementation);	  final    Type    type    =    typeToken.getOwnerType();    	non-compiled	[CE]  ';'  expected	45	None	replace
424	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getOwnerType()  ||  typeToken.getOwnerType();  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getOwnerType()  ||  typeToken.getOwnerType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getOwnerType()  ||  typeToken.getOwnerType();	  final    Type    type    =    typeToken.getOwnerType();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
425	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getOwnerType()  ||  typeToken.getOwnerType()!=  null;  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getOwnerType()  ||  typeToken.getOwnerType()!=  null;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getOwnerType()  ||  typeToken.getOwnerType()!=  null;	  final    Type    type    =    typeToken.getOwnerType();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
426	[BUG]  [BUGGY]  final  Type  type  =  typeToken.trim(),  typeToken.toType();  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.trim(),  typeToken.toType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.trim(),  typeToken.toType();	  final    Type    type    =    typeToken.trim().toType();    	non-compiled	[CE]  ';'  expected	131	None	replace
427	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getType().toType();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getType().toType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getType().toType();	  final    Type    type    =    typeToken.trim().toType();    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
428	[BUG]  [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullOrUndefined().toType();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullOrUndefined().toType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.restrictByNotNullOrUndefined().toType();	  final    Type    type    =    typeToken.trim().toType();    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
429	[BUG]  [BUGGY]  final  Type  type  =  typeToken.type().toType();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.type().toType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.type().toType();	  final    Type    type    =    typeToken.trim().toType();    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
430	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getRawType().toType();  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getRawType().toType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getRawType().toType();	  final    Type    type    =    typeToken.trim().toType();    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
431	[BUG]  [BUGGY]  final  Type  typeToken  =  this.typeToken.restrictByNotNullOrUndefined();  [CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  typeToken  =  this.typeToken.restrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  typeToken  =  this.typeToken.restrictByNotNullOrUndefined();	  final    Type    type    =    this.typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)	107	None	replace
432	[BUG]  [BUGGY]  final  Type  type  =  _typeToken.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  _typeToken  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  _typeToken.restrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  _typeToken.restrictByNotNullOrUndefined();	  final    Type    type    =    this.typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol  _typeToken	107	None	replace
433	[BUG]  [BUGGY]  final  Type  type  =  ObjectConstructor.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  ObjectConstructor.restrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  ObjectConstructor.restrictByNotNullOrUndefined();	  final    Type    type    =    this.typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
434	[BUG]  [BUGGY]  final  Type  type  =  defaultImplementation.toObjectConstructor(DefaultImplementation.class);  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  defaultImplementation.toObjectConstructor(DefaultImplementation.class);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  defaultImplementation.toObjectConstructor(DefaultImplementation.class);	  final    Type    type    =    typeToken.toObjectConstructor(DefaultImplementation.class);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
435	[BUG]  [BUGGY]  final  Type  type  =  defaultImplementation.toObjectConstructor(TypeToken.class);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  defaultImplementation.toObjectConstructor(TypeToken.class);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  defaultImplementation.toObjectConstructor(TypeToken.class);	  final    Type    type    =    typeToken.toObjectConstructor(DefaultImplementation.class);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	13	None	replace
436	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toObjectConstructor(DefaultImplementation.class,  typeToken);  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toObjectConstructor(DefaultImplementation.class,  typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toObjectConstructor(DefaultImplementation.class,  typeToken);	  final    Type    type    =    typeToken.toObjectConstructor(DefaultImplementation.class);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
437	[BUG]  [BUGGY]  final  Type  type  =  defaultImplementation.toObjectConstructor(typeToken.class);  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  defaultImplementation.toObjectConstructor(typeToken.class);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  defaultImplementation.toObjectConstructor(typeToken.class);	  final    Type    type    =    typeToken.toObjectConstructor(DefaultImplementation.class);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
438	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toObjectConstructor(DefaultImplementation.class,  ObjectConstructor.class);  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toObjectConstructor(DefaultImplementation.class,  ObjectConstructor.class);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toObjectConstructor(DefaultImplementation.class,  ObjectConstructor.class);	  final    Type    type    =    typeToken.toObjectConstructor(DefaultImplementation.class);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
439	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toObjectConstructor(DefaultImplementation.class,  null);  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toObjectConstructor(DefaultImplementation.class,  null);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toObjectConstructor(DefaultImplementation.class,  null);	  final    Type    type    =    typeToken.toObjectConstructor(DefaultImplementation.class);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
440	[BUG]  [BUGGY]  final  Type  type  =  typeToken.constructType(typeToken,  typeToken.getReturnType());  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.constructType(typeToken,  typeToken.getReturnType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.constructType(typeToken,  typeToken.getReturnType());	  final    Type    type    =    typeToken.constructType(defaultImplementation,    typeToken.getReturnType());    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
441	[BUG]  [BUGGY]  final  Type  type  =  typeToken.constructType(rawType,  typeToken.getReturnType());  [CE]  cannot  find  symbol  rawType  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.constructType(rawType,  typeToken.getReturnType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.constructType(rawType,  typeToken.getReturnType());	  final    Type    type    =    typeToken.constructType(defaultImplementation,    typeToken.getReturnType());    	non-compiled	[CE]  cannot  find  symbol  rawType	92	None	replace
442	[BUG]  [BUGGY]  final  Type  type  =  typeToken.constructType(rawTypeToken,  typeToken.getReturnType());  [CE]  cannot  find  symbol  rawTypeToken  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.constructType(rawTypeToken,  typeToken.getReturnType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.constructType(rawTypeToken,  typeToken.getReturnType());	  final    Type    type    =    typeToken.constructType(defaultImplementation,    typeToken.getReturnType());    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	92	None	replace
443	[BUG]  [BUGGY]  final  Type  type  =  typeToken.constructType(objectImplementation,  typeToken.getReturnType());  [CE]  cannot  find  symbol  objectImplementation  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.constructType(objectImplementation,  typeToken.getReturnType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.constructType(objectImplementation,  typeToken.getReturnType());	  final    Type    type    =    typeToken.constructType(defaultImplementation,    typeToken.getReturnType());    	non-compiled	[CE]  cannot  find  symbol  objectImplementation	92	None	replace
444	[BUG]  [BUGGY]  final  Type  type  =  typeToken.constructType(this,  typeToken.getReturnType());  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.constructType(this,  typeToken.getReturnType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.constructType(this,  typeToken.getReturnType());	  final    Type    type    =    typeToken.constructType(defaultImplementation,    typeToken.getReturnType());    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
445	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null  ||  typeToken.getConstructor()!=  null?  null  :  typeToken.getConstructor();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null  ||  typeToken.getConstructor()!=  null?  null  :  typeToken.getConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null  ||  typeToken.getConstructor()!=  null?  null  :  typeToken.getConstructor();	  final    Type    type    =    typeToken!=    null?    null    :    typeToken.getConstructor();    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
446	[BUG]  [BUGGY]  final  Type  type  =  typeToken  >=  null?  null  :  typeToken.getConstructor();  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  >=  null?  null  :  typeToken.getConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  >=  null?  null  :  typeToken.getConstructor();	  final    Type    type    =    typeToken!=    null?    null    :    typeToken.getConstructor();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	99	None	replace
447	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.toObject()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.toObject()  :  typeToken;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  typeToken.toObject()  :  typeToken;	  final    Type    type    =    typeToken!=    null?    typeToken.toObject()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
448	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObject()  :  type;  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObject()  :  type;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.toObject()  :  type;	  final    Type    type    =    typeToken!=    null?    typeToken.toObject()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
449	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toString()  :  typeToken;  [CE]  incompatible  types  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toString()  :  typeToken;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.toString()  :  typeToken;	  final    Type    type    =    typeToken!=    null?    typeToken.toObject()    :    typeToken;    	non-compiled	[CE]  incompatible  types	122	None	replace
450	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObject()  :  token;  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObject()  :  token;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.toObject()  :  token;	  final    Type    type    =    typeToken!=    null?    typeToken.toObject()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
451	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getObjectType()  :  typeToken.getRawType();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getObjectType()  :  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  typeToken.getObjectType()  :  typeToken.getRawType();	  final    Type    type    =    typeToken!=    null?    typeToken.getObjectType()    :    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
452	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getType()  :  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	add	final  Type  type  =  typeToken!=  null?  typeToken.getType()  :  typeToken.getRawType();	  final    Type    type    =    typeToken!=    null?    typeToken.getObjectType()    :    typeToken.getRawType();    	compilable	  [FE]  ClassCastException  	134	2	replace
453	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getType()  :  typeToken.getRawType();  [FE]  ClassCastException  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getType()  :  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getType()  :  typeToken.getRawType();	  final    Type    type    =    typeToken!=    null?    typeToken.getObjectType()    :    typeToken.getRawType();    	compilable	  [FE]  ClassCastException  	134	2	replace
454	[BUG]  [BUGGY]  final  Type  type  =  typeToken  >=  null?  typeToken.getObjectType()  :  typeToken.getRawType();  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  >=  null?  typeToken.getObjectType()  :  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  >=  null?  typeToken.getObjectType()  :  typeToken.getRawType();	  final    Type    type    =    typeToken!=    null?    typeToken.getObjectType()    :    typeToken.getRawType();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	134	None	replace
455	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(typeToken.getRawType());  [CE]  incompatible  types  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(typeToken.getRawType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(typeToken.getRawType());	  ObjectConstructor    <    T>    rawTypeCreator    =    instanceCreators.get(typeToken);    	non-compiled	[CE]  incompatible  types	40	None	replace
456	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(typeToken.toString());  [CE]  incompatible  types  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(typeToken.toString());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(typeToken.toString());	  ObjectConstructor    <    T>    rawTypeCreator    =    instanceCreators.get(typeToken);    	non-compiled	[CE]  incompatible  types	40	None	replace
457	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(typeToken.cloneTree());  [CE]  cannot  find  symbol  [FE]                                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(typeToken.cloneTree());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(typeToken.cloneTree());	  ObjectConstructor    <    T>    rawTypeCreator    =    instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
458	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(typeToken,  rawType);  [CE]  cannot  find  symbol  rawType  [FE]                                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(typeToken,  rawType);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(typeToken,  rawType);	  ObjectConstructor    <    T>    rawTypeCreator    =    instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  rawType	40	None	replace
459	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instances.get(typeToken);  [CE]  cannot  find  symbol  instances  [FE]                                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instances.get(typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =  instances.get(typeToken);	  ObjectConstructor    <    T>    rawTypeCreator    =    instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  instances	40	None	replace
460	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(typeToken,  typeToken);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(typeToken,  typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(typeToken,  typeToken);	  ObjectConstructor    <    T>    rawTypeCreator    =    instanceCreators.get(typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	40	None	replace
461	[BUG]  [BUGGY]  static  final  Type  type  =  typeToken.getRawType();  [CE]  illegal  start  of  expression  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  static  final  Type  type  =  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	static  final  Type  type  =  typeToken.getRawType();	  final    Type    type    =    typeToken.getRawType();    static    final    Type    type    =    typeToken.getRawType();    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
462	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  static  final  Type  type  =  typeToken.getRawType();  }  [CE]  illegal  start  of  expression  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  static  final  Type  type  =  typeToken.getRawType();  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  static  final  Type  type  =  typeToken.getRawType();  }	  final    Type    type    =    typeToken.getRawType();    static    final    Type    type    =    typeToken.getRawType();    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
463	[BUG]  [BUGGY]  static  final  Type  type  =  typeToken.getType();  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  static  final  Type  type  =  typeToken.getType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	static  final  Type  type  =  typeToken.getType();	  final    Type    type    =    typeToken.getRawType();    static    final    Type    type    =    typeToken.getRawType();    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
464	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  static  final  Type  type  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  static  final  Type  type  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  static  final  Type  type  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  final    Type    type    =    typeToken.getRawType();    static    final    Type    type    =    typeToken.getRawType();    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
465	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  static  final  Type  type  =  typeToken.getRawType();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  static  final  Type  type  =  typeToken.getRawType();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  static  final  Type  type  =  typeToken.getRawType();  }  else  {  throw  new  IllegalStateException( " ");  }	  final    Type    type    =    typeToken.getRawType();    static    final    Type    type    =    typeToken.getRawType();    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
466	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  static  final  Type  type  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  static  final  Type  type  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  static  final  Type  type  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }	  final    Type    type    =    typeToken.getRawType();    static    final    Type    type    =    typeToken.getRawType();    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
467	[BUG]  [BUGGY]  final  TypeToken  <  T>  rawType  =  typeToken.getRawType();  [CE]  incompatible  types  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  TypeToken  <  T>  rawType  =  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  TypeToken  <  T>  rawType  =  typeToken.getRawType();	  TypeToken    <    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  incompatible  types	37	None	replace
468	[BUG]  [BUGGY]  TypeToken  <  T>  rawType  =  typeToken.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  TypeToken  <  T>  rawType  =  typeToken.restrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	TypeToken  <  T>  rawType  =  typeToken.restrictByNotNullOrUndefined();	  TypeToken    <    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
469	[BUG]  [BUGGY]  TypeToken  <  T>  rawType  =  typeToken.getReturnType();  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  TypeToken  <  T>  rawType  =  typeToken.getReturnType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	TypeToken  <  T>  rawType  =  typeToken.getReturnType();	  TypeToken    <    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
470	[BUG]  [BUGGY]  TypeToken  <  T>  rawType  =  typeToken.getQualifiedName();  [CE]  cannot  find  symbol  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  TypeToken  <  T>  rawType  =  typeToken.getQualifiedName();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	TypeToken  <  T>  rawType  =  typeToken.getQualifiedName();	  TypeToken    <    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
471	[BUG]  [BUGGY]  TypeToken  <  T>  rawType  =  typeToken.getRawClass();  [CE]  cannot  find  symbol  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  TypeToken  <  T>  rawType  =  typeToken.getRawClass();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	TypeToken  <  T>  rawType  =  typeToken.getRawClass();	  TypeToken    <    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
472	[BUG]  [BUGGY]  TypeToken  <  T>  rawType  =  typeToken.getConstructorType();  [CE]  cannot  find  symbol  [FE]                                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  TypeToken  <  T>  rawType  =  typeToken.getConstructorType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	TypeToken  <  T>  rawType  =  typeToken.getConstructorType();	  TypeToken    <    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
473	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getImplicitType();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getImplicitType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getImplicitType();	  final    Type    type    =    typeToken.getImplicitPrototype();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
474	[BUG]  [BUGGY]  final  Type  type  =  typeToken,  defaultImplementation.getImplicitPrototype();  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken,  defaultImplementation.getImplicitPrototype();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken,  defaultImplementation.getImplicitPrototype();	  final    Type    type    =    typeToken.getImplicitPrototype();    	non-compiled	[CE]  ';'  expected	56	None	replace
475	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getImplicitPrototype()  ||  typeToken.getImplicitPrototype();  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getImplicitPrototype()  ||  typeToken.getImplicitPrototype();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getImplicitPrototype()  ||  typeToken.getImplicitPrototype();	  final    Type    type    =    typeToken.getImplicitPrototype();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
476	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getImplicitPrototype(),  defaultImplementation);  [CE]  ';'  expected  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getImplicitPrototype(),  defaultImplementation);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getImplicitPrototype(),  defaultImplementation);	  final    Type    type    =    typeToken.getImplicitPrototype();    	non-compiled	[CE]  ';'  expected	56	None	replace
477	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getObjectType(),  this.defaultImplementation);  [CE]  <identifier>  expected  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getObjectType(),  this.defaultImplementation);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getObjectType(),  this.defaultImplementation);	  final    Type    type    =    typeToken.getObjectType(),    defaultImplementation);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
478	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getObjectType(),  defaultConstructor);  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getObjectType(),  defaultConstructor);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getObjectType(),  defaultConstructor);	  final    Type    type    =    typeToken.getObjectType(),    defaultImplementation);    	non-compiled	[CE]  ';'  expected	43	None	replace
479	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getObjectType(),  defaultImplementation,  rawType);  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getObjectType(),  defaultImplementation,  rawType);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getObjectType(),  defaultImplementation,  rawType);	  final    Type    type    =    typeToken.getObjectType(),    defaultImplementation);    	non-compiled	[CE]  ';'  expected	43	None	replace
480	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getObjectType(),  null);  [CE]  <identifier>  expected  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getObjectType(),  null);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getObjectType(),  null);	  final    Type    type    =    typeToken.getObjectType(),    defaultImplementation);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
481	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getObjectType(),  false);  [CE]  <identifier>  expected  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getObjectType(),  false);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getObjectType(),  false);	  final    Type    type    =    typeToken.getObjectType(),    defaultImplementation);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
482	[BUG]  [BUGGY]  final  Type  type  =  typeToken.stringByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.stringByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.stringByNotNullOrUndefined();	  final    Type    type    =    typeToken.strictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
483	[BUG]  [BUGGY]  final  T  type  =  typeToken.strictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  T  type  =  typeToken.strictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  T  type  =  typeToken.strictByNotNullOrUndefined();	  final    Type    type    =    typeToken.strictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
484	[BUG]  [BUGGY]  final  Type  type  =  typeToken.strictByNotEmptyOrUndefined();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.strictByNotEmptyOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.strictByNotEmptyOrUndefined();	  final    Type    type    =    typeToken.strictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
485	[BUG]  [BUGGY]  final  Type  type  =  typeToken.strictByNotEmpty();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.strictByNotEmpty();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.strictByNotEmpty();	  final    Type    type    =    typeToken.strictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
486	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getNativeType(UNKNOWN_TYPE);  [CE]  cannot  find  symbol  UNKNOWN_TYPE  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getNativeType(UNKNOWN_TYPE);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getNativeType(UNKNOWN_TYPE);	  final    Type    type    =    typeToken.strictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_TYPE	110	None	replace
487	[BUG]  [BUGGY]  final  Type  type  =  typeToken.strictByNotNullOrUndefined(),  false);  [CE]  <identifier>  expected  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.strictByNotNullOrUndefined(),  false);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.strictByNotNullOrUndefined(),  false);	  final    Type    type    =    typeToken.strictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	110	None	replace
488	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getType()  :  typeToken.getSuperType();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getType()  :  typeToken.getSuperType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  typeToken.getType()  :  typeToken.getSuperType();	  final    Type    type    =    typeToken    ==    null?    typeToken.getSuperType()    :    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	166	None	replace
489	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null  ||  typeToken.getSuperType()  :  typeToken.getSuperType();  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null  ||  typeToken.getSuperType()  :  typeToken.getSuperType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null  ||  typeToken.getSuperType()  :  typeToken.getSuperType();	  final    Type    type    =    typeToken    ==    null?    typeToken.getSuperType()    :    typeToken.getSuperType();    	non-compiled	[CE]  ';'  expected	166	None	replace
490	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeToken.get(instanceCreators);  [CE]  no  suitable  method  found  for  get(Map<Type,InstanceCreator<?>>)  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeToken.get(instanceCreators);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeToken.get(instanceCreators);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(rawTypeToken);    	non-compiled	[CE]  no  suitable  method  found  for  get(Map<Type,InstanceCreator<?>>)	41	None	replace
491	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(type);  [CE]  cannot  find  symbol  type  [FE]                                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(type);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(type);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(rawTypeToken);    	non-compiled	[CE]  cannot  find  symbol  type	41	None	replace
492	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)InstanceCreators.get(typeToken);  [CE]  cannot  find  symbol  InstanceCreators  [FE]                                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)InstanceCreators.get(typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)InstanceCreators.get(typeToken);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(rawTypeToken);    	non-compiled	[CE]  cannot  find  symbol  InstanceCreators	41	None	replace
493	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeTokens.get(instanceCreators);  [CE]  cannot  find  symbol  typeTokens  [FE]                                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeTokens.get(instanceCreators);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeTokens.get(instanceCreators);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(rawTypeToken);    	non-compiled	[CE]  cannot  find  symbol  typeTokens	41	None	replace
494	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)this.instanceCreators.get(typeToken);  [CE]  cannot  find  symbol  type  [FE]                                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)this.instanceCreators.get(typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)this.instanceCreators.get(typeToken);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(rawTypeToken);    	non-compiled	[CE]  cannot  find  symbol  type	41	None	replace
495	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getConstructor(typeToken);  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getConstructor(typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getConstructor(typeToken);	  final    Type    type    =    typeToken.getConstructor(defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
496	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getConstructor(this);  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getConstructor(this);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getConstructor(this);	  final    Type    type    =    typeToken.getConstructor(defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
497	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getConstructor(null);  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getConstructor(null);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getConstructor(null);	  final    Type    type    =    typeToken.getConstructor(defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
498	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getConstructor(true);  [CE]  cannot  find  symbol  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getConstructor(true);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getConstructor(true);	  final    Type    type    =    typeToken.getConstructor(defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
499	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getConstructor(this.defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getConstructor(this.defaultImplementation);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getConstructor(this.defaultImplementation);	  final    Type    type    =    typeToken.getConstructor(defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	59	None	replace
500	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getType()  :  typeToken.getReturnType();  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getType()  :  typeToken.getReturnType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getType()  :  typeToken.getReturnType();	  final    Type    type    =    typeToken!=    null?    typeToken.getReturnType()    :    typeToken.getReturnType();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
501	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getRawType()  :  typeToken.getReturnType();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getRawType()  :  typeToken.getReturnType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getRawType()  :  typeToken.getReturnType();	  final    Type    type    =    typeToken!=    null?    typeToken.getReturnType()    :    typeToken.getReturnType();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
502	[BUG]  [BUGGY]  final  Type  type  =  getSuperType(typeToken,  typeToken.getSuperType());  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getSuperType(typeToken,  typeToken.getSuperType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getSuperType(typeToken,  typeToken.getSuperType());	  final    Type    type    =    getSuperType(typeToken.getSuperType());    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
503	[BUG]  [BUGGY]  final  Type  type  =  getSuperType(typeToken.getSuperType(),  typeToken.getSuperType());  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getSuperType(typeToken.getSuperType(),  typeToken.getSuperType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getSuperType(typeToken.getSuperType(),  typeToken.getSuperType());	  final    Type    type    =    getSuperType(typeToken.getSuperType());    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
504	[BUG]  [BUGGY]  final  Type  type  =  getSuperType(typeToken.getSuperType(),  typeToken.getSimpleName());  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getSuperType(typeToken.getSuperType(),  typeToken.getSimpleName());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getSuperType(typeToken.getSuperType(),  typeToken.getSimpleName());	  final    Type    type    =    getSuperType(typeToken.getSuperType());    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
505	[BUG]  [BUGGY]  final  Type  type  =  getSuperType(typeToken.getSuperType(),  typeToken.getRawType());  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getSuperType(typeToken.getSuperType(),  typeToken.getRawType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getSuperType(typeToken.getSuperType(),  typeToken.getRawType());	  final    Type    type    =    getSuperType(typeToken.getSuperType());    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
506	[BUG]  [BUGGY]  final  Type  type  =  getSuperType(typeToken.getSuperType(),  typeToken);  [CE]  cannot  find  symbol  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getSuperType(typeToken.getSuperType(),  typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getSuperType(typeToken.getSuperType(),  typeToken);	  final    Type    type    =    getSuperType(typeToken.getSuperType());    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
507	[BUG]  [BUGGY]  final  Type  type  =  getSuperType(typeToken.getSuperType(),  typeToken.getParameterType(0));  [CE]  cannot  find  symbol  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getSuperType(typeToken.getSuperType(),  typeToken.getParameterType(0));  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getSuperType(typeToken.getSuperType(),  typeToken.getParameterType(0));	  final    Type    type    =    getSuperType(typeToken.getSuperType());    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
508	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getPropertyType()  ||  typeToken.getPropertyType()!=  null?  typeToken.getPropertyType()  :  null;  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getPropertyType()  ||  typeToken.getPropertyType()!=  null?  typeToken.getPropertyType()  :  null;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getPropertyType()  ||  typeToken.getPropertyType()!=  null?  typeToken.getPropertyType()  :  null;	  final    Type    type    =    typeToken.getPropertyType();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
509	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getPropertyType()  ||  typeToken.getPropertyType()  ==  null?  typeToken.getPropertyType()  :  null;  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getPropertyType()  ||  typeToken.getPropertyType()  ==  null?  typeToken.getPropertyType()  :  null;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getPropertyType()  ||  typeToken.getPropertyType()  ==  null?  typeToken.getPropertyType()  :  null;	  final    Type    type    =    typeToken.getPropertyType();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
510	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getPropertyType()  ||  typeToken.getPropertyType()!=  Token.NAME?  typeToken.getPropertyType()  :  null;  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getPropertyType()  ||  typeToken.getPropertyType()!=  Token.NAME?  typeToken.getPropertyType()  :  null;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getPropertyType()  ||  typeToken.getPropertyType()!=  Token.NAME?  typeToken.getPropertyType()  :  null;	  final    Type    type    =    typeToken.getPropertyType();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
511	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getPropertyType(),  defaultImplementation);  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getPropertyType(),  defaultImplementation);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getPropertyType(),  defaultImplementation);	  final    Type    type    =    typeToken.getPropertyType();    	non-compiled	[CE]  ';'  expected	5	None	replace
512	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getPropertyType()  ||  typeToken.getPropertyType()!=  null;  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getPropertyType()  ||  typeToken.getPropertyType()!=  null;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getPropertyType()  ||  typeToken.getPropertyType()!=  null;	  final    Type    type    =    typeToken.getPropertyType();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
513	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(key);  [CE]  cannot  find  symbol  key  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(key);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(key);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  key	36	None	replace
514	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(token);  [CE]  cannot  find  symbol  token  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(token);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(token);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  token	36	None	replace
515	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(),  typeToken.restrictByNotNullOrUndefined();  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(),  typeToken.restrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(),  typeToken.restrictByNotNullOrUndefined();	  final    Type    type    =    getTypeToken().restrictByNotNullOrUndefined();    	non-compiled	[CE]  ';'  expected	25	None	replace
516	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().getRestrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken().getRestrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().getRestrictByNotNullOrUndefined();	  final    Type    type    =    getTypeToken().restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
517	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().restrictByNotNullOrUndefined(),  typeToken);  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken().restrictByNotNullOrUndefined(),  typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().restrictByNotNullOrUndefined(),  typeToken);	  final    Type    type    =    getTypeToken().restrictByNotNullOrUndefined();    	non-compiled	[CE]  ';'  expected	25	None	replace
518	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().declareType(typeToken).restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken().declareType(typeToken).restrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().declareType(typeToken).restrictByNotNullOrUndefined();	  final    Type    type    =    getTypeToken().restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
519	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getRawType(),  typeToken);  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getRawType(),  typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getRawType(),  typeToken);	  final    Type    type    =    getTypeToken(typeToken.getRawType());    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
520	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getRawType(),  typeToken.getSimpleName());  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getRawType(),  typeToken.getSimpleName());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getRawType(),  typeToken.getSimpleName());	  final    Type    type    =    getTypeToken(typeToken.getRawType());    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
521	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getRawType(),  typeToken.getConstructor());  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getRawType(),  typeToken.getConstructor());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getRawType(),  typeToken.getConstructor());	  final    Type    type    =    getTypeToken(typeToken.getRawType());    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
522	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getRawType(),  rawType);  [CE]  cannot  find  symbol  rawType  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getRawType(),  rawType);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getRawType(),  rawType);	  final    Type    type    =    getTypeToken(typeToken.getRawType());    	non-compiled	[CE]  cannot  find  symbol  rawType	32	None	replace
523	[BUG]  [BUGGY]  final  Type  type  =  typeToken.deserializeType(typeToken.destrictByNotNullOrUndefined());  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.deserializeType(typeToken.destrictByNotNullOrUndefined());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.deserializeType(typeToken.destrictByNotNullOrUndefined());	  final    Type    type    =    typeToken.destrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
524	[BUG]  [BUGGY]  final  Type  type  =  typeToken.destrictByNotNullOrUndefined(),  defaultImplementation);  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.destrictByNotNullOrUndefined(),  defaultImplementation);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.destrictByNotNullOrUndefined(),  defaultImplementation);	  final    Type    type    =    typeToken.destrictByNotNullOrUndefined();    	non-compiled	[CE]  ';'  expected	109	None	replace
525	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructor()  :  this.typeToken;  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructor()  :  this.typeToken;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructor()  :  this.typeToken;	  final    Type    type    =    typeToken.isConstructor()?    typeToken.getConstructor()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
526	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructor()  :  type;  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructor()  :  type;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructor()  :  type;	  final    Type    type    =    typeToken.isConstructor()?    typeToken.getConstructor()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
527	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getType()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getType()  :  typeToken;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()?  typeToken.getType()  :  typeToken;	  final    Type    type    =    typeToken.isConstructor()?    typeToken.getConstructor()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
528	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getConstructor()?  typeToken.getConstructor()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getConstructor()?  typeToken.getConstructor()  :  typeToken;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getConstructor()?  typeToken.getConstructor()  :  typeToken;	  final    Type    type    =    typeToken.isConstructor()?    typeToken.getConstructor()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
529	[BUG]  [BUGGY]  TypeToken  <  T>  typeToken  =  typeToken.getType();  [CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  TypeToken  <  T>  typeToken  =  typeToken.getType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	TypeToken  <  T>  typeToken  =  typeToken.getType();	  TypeToken    <    T>    typeToken    =    typeToken.getRawType();    	non-compiled	[CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)	151	None	replace
530	[BUG]  [BUGGY]  final  TypeToken  <  T>  typeToken  =  typeToken.getRawType();  [CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  TypeToken  <  T>  typeToken  =  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  TypeToken  <  T>  typeToken  =  typeToken.getRawType();	  TypeToken    <    T>    typeToken    =    typeToken.getRawType();    	non-compiled	[CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)	151	None	replace
531	[BUG]  [BUGGY]  TypeToken  <  T>  typeToken  =  getTypeToken(typeToken.getRawType());  [CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  TypeToken  <  T>  typeToken  =  getTypeToken(typeToken.getRawType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	TypeToken  <  T>  typeToken  =  getTypeToken(typeToken.getRawType());	  TypeToken    <    T>    typeToken    =    typeToken.getRawType();    	non-compiled	[CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)	151	None	replace
532	[BUG]  [BUGGY]  TypeToken  <  T>  typeToken  =  typeToken.getReturnType();  [CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  TypeToken  <  T>  typeToken  =  typeToken.getReturnType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	TypeToken  <  T>  typeToken  =  typeToken.getReturnType();	  TypeToken    <    T>    typeToken    =    typeToken.getRawType();    	non-compiled	[CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)	151	None	replace
533	[BUG]  [BUGGY]  TypeToken  <  T>  typeToken  =  typeToken.getUnknownType();  [CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  TypeToken  <  T>  typeToken  =  typeToken.getUnknownType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	TypeToken  <  T>  typeToken  =  typeToken.getUnknownType();	  TypeToken    <    T>    typeToken    =    typeToken.getRawType();    	non-compiled	[CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)	151	None	replace
534	[BUG]  [BUGGY]  TypeToken  <  T>  typeToken  =  getTypeToken();  [CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  TypeToken  <  T>  typeToken  =  getTypeToken();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	TypeToken  <  T>  typeToken  =  getTypeToken();	  TypeToken    <    T>    typeToken    =    typeToken.getRawType();    	non-compiled	[CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)	151	None	replace
535	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toObjectConstructor(this.defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toObjectConstructor(this.defaultImplementation);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toObjectConstructor(this.defaultImplementation);	  final    Type    type    =    typeToken.toObjectConstructor(defaultConstructor);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	15	None	replace
536	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toObjectConstructor(constructor);  [CE]  cannot  find  symbol  constructor  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toObjectConstructor(constructor);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toObjectConstructor(constructor);	  final    Type    type    =    typeToken.toObjectConstructor(defaultConstructor);    	non-compiled	[CE]  cannot  find  symbol  constructor	15	None	replace
537	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toObjectConstructor(objectConstructor);  [CE]  cannot  find  symbol  objectConstructor  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toObjectConstructor(objectConstructor);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toObjectConstructor(objectConstructor);	  final    Type    type    =    typeToken.toObjectConstructor(defaultConstructor);    	non-compiled	[CE]  cannot  find  symbol  objectConstructor	15	None	replace
538	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  defaultConstructor  :  typeToken.getConstructor();  [CE]  cannot  find  symbol  defaultConstructor  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  defaultConstructor  :  typeToken.getConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  defaultConstructor  :  typeToken.getConstructor();	  final    Type    type    =    typeToken!=    null?    defaultConstructor    :    typeToken.getConstructor();    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	101	None	replace
539	[BUG]  [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullOrUndefined(),  true);  [CE]  <identifier>  expected  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullOrUndefined(),  true);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.restrictByNotNullOrUndefined(),  true);	  final    Type    type    =    typeToken.restrictByNotNullOrUndefined(),    false);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
540	[BUG]  [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullOrUndefined(),  false,  rawType);  [CE]  <identifier>  expected  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullOrUndefined(),  false,  rawType);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.restrictByNotNullOrUndefined(),  false,  rawType);	  final    Type    type    =    typeToken.restrictByNotNullOrUndefined(),    false);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
541	[BUG]  [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullOrUndefined(),  false,  null);  [CE]  <identifier>  expected  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullOrUndefined(),  false,  null);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.restrictByNotNullOrUndefined(),  false,  null);	  final    Type    type    =    typeToken.restrictByNotNullOrUndefined(),    false);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
542	[BUG]  [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullOrUndefined()  ||  false);  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullOrUndefined()  ||  false);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.restrictByNotNullOrUndefined()  ||  false);	  final    Type    type    =    typeToken.restrictByNotNullOrUndefined(),    false);    	non-compiled	[CE]  ';'  expected	27	None	replace
543	[BUG]  [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullOrUndefined(),  false,  true);  [CE]  <identifier>  expected  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullOrUndefined(),  false,  true);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.restrictByNotNullOrUndefined(),  false,  true);	  final    Type    type    =    typeToken.restrictByNotNullOrUndefined(),    false);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
544	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getRawType(),  false);  [CE]  <identifier>  expected  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getRawType(),  false);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getRawType(),  false);	  final    Type    type    =    typeToken.restrictByNotNullOrUndefined(),    false);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
545	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getType()  :  typeToken.getReturnType();  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getType()  :  typeToken.getReturnType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  typeToken.getType()  :  typeToken.getReturnType();	  final    Type    type    =    typeToken    ==    null?    typeToken.getReturnType()    :    typeToken.getReturnType();    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
546	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getRawType()  :  typeToken.getReturnType();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getRawType()  :  typeToken.getReturnType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  typeToken.getRawType()  :  typeToken.getReturnType();	  final    Type    type    =    typeToken    ==    null?    typeToken.getReturnType()    :    typeToken.getReturnType();    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
547	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.toObjectConstructor()  :  defaultConstructor;  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.toObjectConstructor()  :  defaultConstructor;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  typeToken.toObjectConstructor()  :  defaultConstructor;	  final    Type    type    =    typeToken!=    null?    typeToken.toObjectConstructor()    :    defaultConstructor;    	non-compiled	[CE]  cannot  find  symbol	149	None	replace
548	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObjectConstructor()  :  defaultImplementation;  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObjectConstructor()  :  defaultImplementation;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.toObjectConstructor()  :  defaultImplementation;	  final    Type    type    =    typeToken!=    null?    typeToken.toObjectConstructor()    :    defaultConstructor;    	non-compiled	[CE]  cannot  find  symbol	149	None	replace
549	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  [CE]  cannot  find  symbol  type  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }	  final    Type    type    =    typeToken.getRawType();    final    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol  type	19	None	replace
550	[BUG]  [BUGGY]  if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  [CE]  cannot  find  symbol  type  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }	  final    Type    type    =    typeToken.getRawType();    final    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol  type	19	None	replace
551	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  type  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  final    Type    type    =    typeToken.getRawType();    final    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol  type	19	None	replace
552	[BUG]  [BUGGY]  if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  type  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  final    Type    type    =    typeToken.getRawType();    final    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol  type	19	None	replace
553	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }  [CE]  ObjectConstructor  is  abstract;  cannot  be  instantiated  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }	  final    Type    type    =    typeToken.getRawType();    final    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  ObjectConstructor  is  abstract;  cannot  be  instantiated	19	None	replace
554	[BUG]  [BUGGY]  final  Class  <?>  typeToken  =  typeToken.getRawType();  [CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Class  <?>  typeToken  =  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Class  <?>  typeToken  =  typeToken.getRawType();	  Class    <?>    typeToken    =    typeToken.getRawType();    	non-compiled	[CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)	152	None	replace
555	[BUG]  [BUGGY]  Class  <?>  typeToken  =  typeToken.getType();  [CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  Class  <?>  typeToken  =  typeToken.getType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	Class  <?>  typeToken  =  typeToken.getType();	  Class    <?>    typeToken    =    typeToken.getRawType();    	non-compiled	[CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)	152	None	replace
556	[BUG]  [BUGGY]  Class  <?>  typeToken  =  typeToken.getRawClass();  [CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  Class  <?>  typeToken  =  typeToken.getRawClass();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	Class  <?>  typeToken  =  typeToken.getRawClass();	  Class    <?>    typeToken    =    typeToken.getRawType();    	non-compiled	[CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)	152	None	replace
557	[BUG]  [BUGGY]  Class  <?>  typeToken  =  typeToken.getReturnType();  [CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  Class  <?>  typeToken  =  typeToken.getReturnType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	Class  <?>  typeToken  =  typeToken.getReturnType();	  Class    <?>    typeToken    =    typeToken.getRawType();    	non-compiled	[CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)	152	None	replace
558	[BUG]  [BUGGY]  final  Type  type  =  typeToken.asTypeRegistry();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.asTypeRegistry();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.asTypeRegistry();	  final    Type    type    =    typeToken.typeRegistry();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
559	[BUG]  [BUGGY]  final  Type  type  =  typeToken.constructType(typeToken.getRawType());  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.constructType(typeToken.getRawType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.constructType(typeToken.getRawType());	  final    Type    type    =    typeToken.constructType(typeToken.getReturnType());    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
560	[BUG]  [BUGGY]  final  Type  type  =  typeToken.constructType(typeToken.getReturnType(),  typeToken.getRawType());  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.constructType(typeToken.getReturnType(),  typeToken.getRawType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.constructType(typeToken.getReturnType(),  typeToken.getRawType());	  final    Type    type    =    typeToken.constructType(typeToken.getReturnType());    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
561	[BUG]  [BUGGY]  final  Type  type  =  typeToken.constructType(typeToken.getReturnType(),  defaultImplementation);  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.constructType(typeToken.getReturnType(),  defaultImplementation);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.constructType(typeToken.getReturnType(),  defaultImplementation);	  final    Type    type    =    typeToken.constructType(typeToken.getReturnType());    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
562	[BUG]  [BUGGY]  final  Type  type  =  typeToken.constructType(this.typeToken.getReturnType());  [CE]  cannot  find  symbol  typeToken  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.constructType(this.typeToken.getReturnType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.constructType(this.typeToken.getReturnType());	  final    Type    type    =    typeToken.constructType(typeToken.getReturnType());    	non-compiled	[CE]  cannot  find  symbol  typeToken	155	None	replace
563	[BUG]  [BUGGY]  final  Type  type  =  typeToken.constructType(typeToken.getReturnType(),  false);  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.constructType(typeToken.getReturnType(),  false);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.constructType(typeToken.getReturnType(),  false);	  final    Type    type    =    typeToken.constructType(typeToken.getReturnType());    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
564	[BUG]  [BUGGY]  final  Type  type  =  typeToken.constructType(typeToken.getReturnType(),  typeToken.getSimpleName());  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.constructType(typeToken.getReturnType(),  typeToken.getSimpleName());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.constructType(typeToken.getReturnType(),  typeToken.getSimpleName());	  final    Type    type    =    typeToken.constructType(typeToken.getReturnType());    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
565	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getRestrictByNotNullOrUndefined());  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getRestrictByNotNullOrUndefined());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getRestrictByNotNullOrUndefined());	  final    Type    type    =    getTypeToken(typeToken.restrictByNotNullOrUndefined());    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
566	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.restrictByNotNullOrUndefined(),  typeToken.getRawType());  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.restrictByNotNullOrUndefined(),  typeToken.getRawType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.restrictByNotNullOrUndefined(),  typeToken.getRawType());	  final    Type    type    =    getTypeToken(typeToken.restrictByNotNullOrUndefined());    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
567	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.restrictByNotNullOrUndefined(),  rawType);  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.restrictByNotNullOrUndefined(),  rawType);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.restrictByNotNullOrUndefined(),  rawType);	  final    Type    type    =    getTypeToken(typeToken.restrictByNotNullOrUndefined());    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
568	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.restrictByNotNullOrUndefined(),  typeToken);  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.restrictByNotNullOrUndefined(),  typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.restrictByNotNullOrUndefined(),  typeToken);	  final    Type    type    =    getTypeToken(typeToken.restrictByNotNullOrUndefined());    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
569	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  defaultImplementation.restrictByNotNullOrUndefined());  [CE]  cannot  find  symbol  defaultImplementation  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  defaultImplementation.restrictByNotNullOrUndefined());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  defaultImplementation.restrictByNotNullOrUndefined());	  final    Type    type    =    getTypeToken(typeToken.restrictByNotNullOrUndefined());    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	128	None	replace
570	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getReturnType()  :  typeToken.toString();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getReturnType()  :  typeToken.toString();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  typeToken.getReturnType()  :  typeToken.toString();	  final    Type    type    =    typeToken!=    null?    typeToken.getReturnType()    :    typeToken.toString();    	non-compiled	[CE]  cannot  find  symbol	156	None	replace
571	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getType()  :  typeToken.toString();  [CE]  incompatible  types  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getType()  :  typeToken.toString();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getType()  :  typeToken.toString();	  final    Type    type    =    typeToken!=    null?    typeToken.getReturnType()    :    typeToken.toString();    	non-compiled	[CE]  incompatible  types	156	None	replace
572	[BUG]  [BUGGY]  final  Type  type  =  typeToken  >=  null?  typeToken.getReturnType()  :  typeToken.toString();  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  >=  null?  typeToken.getReturnType()  :  typeToken.toString();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  >=  null?  typeToken.getReturnType()  :  typeToken.toString();	  final    Type    type    =    typeToken!=    null?    typeToken.getReturnType()    :    typeToken.toString();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	156	None	replace
573	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.toObject()  :  typeToken.toObject();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.toObject()  :  typeToken.toObject();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  typeToken.toObject()  :  typeToken.toObject();	  final    Type    type    =    typeToken!=    null?    typeToken.toObject()    :    typeToken.toObject();    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
574	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toString()  :  typeToken.toObject();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toString()  :  typeToken.toObject();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.toString()  :  typeToken.toObject();	  final    Type    type    =    typeToken!=    null?    typeToken.toObject()    :    typeToken.toObject();    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
575	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toArray(new  TypeToken[typeToken.size()  ]);  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toArray(new  TypeToken[typeToken.size()  ]);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toArray(new  TypeToken[typeToken.size()  ]);	  final    Type    type    =    typeToken.toArray();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
576	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toArray(new  Type[typeToken.size()  ]);  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toArray(new  Type[typeToken.size()  ]);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toArray(new  Type[typeToken.size()  ]);	  final    Type    type    =    typeToken.toArray();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
577	[BUG]  [BUGGY]  final  Type  type  =  defaultConstructor,  typeToken.getConstructor();  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  defaultConstructor,  typeToken.getConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  defaultConstructor,  typeToken.getConstructor();	  final    Type    type    =    typeToken,    defaultConstructor.getConstructor();    	non-compiled	[CE]  ';'  expected	55	None	replace
578	[BUG]  [BUGGY]  final  Type  type  =  typeToken,  defaultImplementation.getConstructor();  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken,  defaultImplementation.getConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken,  defaultImplementation.getConstructor();	  final    Type    type    =    typeToken,    defaultConstructor.getConstructor();    	non-compiled	[CE]  ';'  expected	55	None	replace
579	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawType  =  instanceCreators.get(typeToken.getRawType());  [CE]  incompatible  types  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  ObjectConstructor  <  T>  rawType  =  instanceCreators.get(typeToken.getRawType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	ObjectConstructor  <  T>  rawType  =  instanceCreators.get(typeToken.getRawType());	  ObjectConstructor    <    T>    rawType    =    instanceCreators.get(typeToken);    	non-compiled	[CE]  incompatible  types	112	None	replace
580	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawType  =  instanceCreators.get(typeToken.toString());  [CE]  incompatible  types  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  ObjectConstructor  <  T>  rawType  =  instanceCreators.get(typeToken.toString());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	ObjectConstructor  <  T>  rawType  =  instanceCreators.get(typeToken.toString());	  ObjectConstructor    <    T>    rawType    =    instanceCreators.get(typeToken);    	non-compiled	[CE]  incompatible  types	112	None	replace
581	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawType  =  instanceCreators.get(typeToken,  rawType);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  ObjectConstructor  <  T>  rawType  =  instanceCreators.get(typeToken,  rawType);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	ObjectConstructor  <  T>  rawType  =  instanceCreators.get(typeToken,  rawType);	  ObjectConstructor    <    T>    rawType    =    instanceCreators.get(typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	112	None	replace
582	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawType  =  instanceCreators.get(typeToken.cloneTree());  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  ObjectConstructor  <  T>  rawType  =  instanceCreators.get(typeToken.cloneTree());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	ObjectConstructor  <  T>  rawType  =  instanceCreators.get(typeToken.cloneTree());	  ObjectConstructor    <    T>    rawType    =    instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
583	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawType  =  instanceCreators.get(typeToken,  typeToken);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  ObjectConstructor  <  T>  rawType  =  instanceCreators.get(typeToken,  typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	ObjectConstructor  <  T>  rawType  =  instanceCreators.get(typeToken,  typeToken);	  ObjectConstructor    <    T>    rawType    =    instanceCreators.get(typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	112	None	replace
584	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawType  =  instanceCreators.get(typeToken.getRawClass());  [CE]  cannot  find  symbol  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  ObjectConstructor  <  T>  rawType  =  instanceCreators.get(typeToken.getRawClass());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	ObjectConstructor  <  T>  rawType  =  instanceCreators.get(typeToken.getRawClass());	  ObjectConstructor    <    T>    rawType    =    instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
585	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().restrictByNotEmptyOrUndefined();  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken().restrictByNotEmptyOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().restrictByNotEmptyOrUndefined();	  final    Type    type    =    typeToken.restrictByNotEmptyOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
586	[BUG]  [BUGGY]  final  Type  type  =  typeToken.restrictByNotEmptyOrUndefined(),  false);  [CE]  <identifier>  expected  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.restrictByNotEmptyOrUndefined(),  false);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.restrictByNotEmptyOrUndefined(),  false);	  final    Type    type    =    typeToken.restrictByNotEmptyOrUndefined();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
587	[BUG]  [BUGGY]  final  Type  type  =  typeToken.restrictByNotEmptyOrUndefined(),  rawType);  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.restrictByNotEmptyOrUndefined(),  rawType);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.restrictByNotEmptyOrUndefined(),  rawType);	  final    Type    type    =    typeToken.restrictByNotEmptyOrUndefined();    	non-compiled	[CE]  ';'  expected	24	None	replace
588	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.cloneTree(),  typeToken.cloneTree());  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.cloneTree(),  typeToken.cloneTree());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.cloneTree(),  typeToken.cloneTree());	  final    Type    type    =    getTypeToken(typeToken.cloneTree());    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
589	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.clone());  [CE]  clone()  has  protected  access  in  Object  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.clone());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.clone());	  final    Type    type    =    getTypeToken(typeToken.cloneTree());    	non-compiled	[CE]  clone()  has  protected  access  in  Object	34	None	replace
590	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getNativeType(UNKNOWN_TYPE));  [CE]  cannot  find  symbol  UNKNOWN_TYPE  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getNativeType(UNKNOWN_TYPE));  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getNativeType(UNKNOWN_TYPE));	  final    Type    type    =    getTypeToken(typeToken.cloneTree());    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_TYPE	34	None	replace
591	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.cloneTree(),  typeToken);  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.cloneTree(),  typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.cloneTree(),  typeToken);	  final    Type    type    =    getTypeToken(typeToken.cloneTree());    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
592	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  typeToken.getReturnType());  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken,  typeToken.getReturnType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  typeToken.getReturnType());	  final    Type    type    =    getType(typeToken,    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
593	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  typeToken.getElementType());  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken,  typeToken.getElementType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  typeToken.getElementType());	  final    Type    type    =    getType(typeToken,    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
594	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  typeToken.getSimpleName());  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken,  typeToken.getSimpleName());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  typeToken.getSimpleName());	  final    Type    type    =    getType(typeToken,    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
595	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  typeToken.getImplicitPrototype());  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken,  typeToken.getImplicitPrototype());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  typeToken.getImplicitPrototype());	  final    Type    type    =    getType(typeToken,    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
596	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  typeToken.getObjectType());  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken,  typeToken.getObjectType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  typeToken.getObjectType());	  final    Type    type    =    getType(typeToken,    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
597	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null,  null?  null  :  typeToken.getConstructor();  [CE]  <identifier>  expected  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null,  null?  null  :  typeToken.getConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null,  null?  null  :  typeToken.getConstructor();	  final    Type    type    =    typeToken    ==    null?    null    :    typeToken.getConstructor();    	non-compiled	[CE]  <identifier>  expected	98	None	replace
598	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.constructor();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.constructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  null  :  typeToken.constructor();	  final    Type    type    =    typeToken    ==    null?    null    :    typeToken.getConstructor();    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
599	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  defaultConstructor.getConstructorType()  :  typeToken;  [CE]  cannot  find  symbol  defaultConstructor  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  defaultConstructor.getConstructorType()  :  typeToken;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  defaultConstructor.getConstructorType()  :  typeToken;	  final    Type    type    =    typeToken!=    null?    typeToken.getConstructorType()    :    defaultConstructor;    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	165	None	replace
600	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  defaultConstructor.getConstructorType()  :  typeToken.getConstructorType();  [CE]  cannot  find  symbol  defaultConstructor  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  defaultConstructor.getConstructorType()  :  typeToken.getConstructorType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  defaultConstructor.getConstructorType()  :  typeToken.getConstructorType();	  final    Type    type    =    typeToken!=    null?    typeToken.getConstructorType()    :    defaultConstructor;    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	165	None	replace
601	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  defaultConstructor.getConstructorType()  :  typeToken;  [CE]  cannot  find  symbol  defaultConstructor  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  defaultConstructor.getConstructorType()  :  typeToken;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  defaultConstructor.getConstructorType()  :  typeToken;	  final    Type    type    =    typeToken!=    null?    typeToken.getConstructorType()    :    defaultConstructor;    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	165	None	replace
602	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  defaultConstructor.getConstructorType()  :  typeToken.getConstructorType();  [CE]  cannot  find  symbol  defaultConstructor  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  defaultConstructor.getConstructorType()  :  typeToken.getConstructorType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  defaultConstructor.getConstructorType()  :  typeToken.getConstructorType();	  final    Type    type    =    typeToken!=    null?    typeToken.getConstructorType()    :    defaultConstructor;    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	165	None	replace
603	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getSuperType()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getSuperType()  :  typeToken;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  typeToken.getSuperType()  :  typeToken;	  final    Type    type    =    typeToken!=    null?    typeToken.getSuperType()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
604	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  typeToken);  [CE]  ';'  expected  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  typeToken);	  final    Type    type    =    typeToken!=    null?    typeToken.getSuperType()    :    typeToken;    	non-compiled	[CE]  ';'  expected	71	None	replace
605	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  type;  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  type;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  type;	  final    Type    type    =    typeToken!=    null?    typeToken.getSuperType()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
606	[BUG]  [BUGGY]  final  Type  type  =  defaultConstructor.getConstructorType(),  typeToken;  [CE]  cannot  find  symbol  defaultConstructor  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  defaultConstructor.getConstructorType(),  typeToken;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  defaultConstructor.getConstructorType(),  typeToken;	  final    Type    type    =    typeToken.getConstructorType(),    defaultConstructor;    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	48	None	replace
607	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getConstructorType(),  defaultImplementation;  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getConstructorType(),  defaultImplementation;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getConstructorType(),  defaultImplementation;	  final    Type    type    =    typeToken.getConstructorType(),    defaultConstructor;    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
608	[BUG]  [BUGGY]  final  Type  type  =  defaultConstructor.getConstructorType(),  typeToken);  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  defaultConstructor.getConstructorType(),  typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  defaultConstructor.getConstructorType(),  typeToken);	  final    Type    type    =    typeToken.getConstructorType(),    defaultConstructor;    	non-compiled	[CE]  ';'  expected	48	None	replace
609	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getConstructorType(),  this.defaultConstructor;  [CE]  <identifier>  expected  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getConstructorType(),  this.defaultConstructor;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getConstructorType(),  this.defaultConstructor;	  final    Type    type    =    typeToken.getConstructorType(),    defaultConstructor;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
610	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getType(),  defaultConstructor;  [CE]  variable  defaultConstructor  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getType(),  defaultConstructor;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getType(),  defaultConstructor;	  final    Type    type    =    typeToken.getConstructorType(),    defaultConstructor;    	non-compiled	[CE]  variable  defaultConstructor  is  already  defined  in  method  <T>get(TypeToken<T>)	48	None	replace
611	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getConstructorType(),  defaultConstructor);  [CE]  ';'  expected  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getConstructorType(),  defaultConstructor);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getConstructorType(),  defaultConstructor);	  final    Type    type    =    typeToken.getConstructorType(),    defaultConstructor;    	non-compiled	[CE]  ';'  expected	48	None	replace
612	[BUG]  [BUGGY]  final  Type  type  =  typeToken.trim(),  defaultImplementation.restrictByNotNullOrUndefined();  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.trim(),  defaultImplementation.restrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.trim(),  defaultImplementation.restrictByNotNullOrUndefined();	  final    Type    type    =    typeToken.trim().restrictByNotNullOrUndefined();    	non-compiled	[CE]  ';'  expected	142	None	replace
613	[BUG]  [BUGGY]  final  Type  type  =  typeToken.trim(),  state.restrictByNotNullOrUndefined();  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.trim(),  state.restrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.trim(),  state.restrictByNotNullOrUndefined();	  final    Type    type    =    typeToken.trim().restrictByNotNullOrUndefined();    	non-compiled	[CE]  ';'  expected	142	None	replace
614	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getRawType().restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getRawType().restrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getRawType().restrictByNotNullOrUndefined();	  final    Type    type    =    typeToken.trim().restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
615	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getType().restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getType().restrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getType().restrictByNotNullOrUndefined();	  final    Type    type    =    typeToken.trim().restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
616	[BUG]  [BUGGY]  final  Type  type  =  typeToken.type().restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.type().restrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.type().restrictByNotNullOrUndefined();	  final    Type    type    =    typeToken.trim().restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
617	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getType()  :  typeToken.getSuperType();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getType()  :  typeToken.getSuperType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getType()  :  typeToken.getSuperType();	  final    Type    type    =    typeToken!=    null?    typeToken.getSuperType()    :    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
618	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null  ||  typeToken.getSuperType()  :  typeToken.getSuperType();  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null  ||  typeToken.getSuperType()  :  typeToken.getSuperType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null  ||  typeToken.getSuperType()  :  typeToken.getSuperType();	  final    Type    type    =    typeToken!=    null?    typeToken.getSuperType()    :    typeToken.getSuperType();    	non-compiled	[CE]  ';'  expected	62	None	replace
619	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getConstructor()  :  defaultConstructor.getConstructor();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getConstructor()  :  defaultConstructor.getConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  typeToken.getConstructor()  :  defaultConstructor.getConstructor();	  final    Type    type    =    typeToken    ==    null?    typeToken.getConstructor()    :    typeToken.getConstructor();    	non-compiled	[CE]  cannot  find  symbol	136	None	replace
620	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null  ||  typeToken.getConstructor()  :  typeToken.getConstructor();  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null  ||  typeToken.getConstructor()  :  typeToken.getConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null  ||  typeToken.getConstructor()  :  typeToken.getConstructor();	  final    Type    type    =    typeToken    ==    null?    typeToken.getConstructor()    :    typeToken.getConstructor();    	non-compiled	[CE]  ';'  expected	136	None	replace
621	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  typeToken.cloneTree());  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken,  typeToken.cloneTree());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  typeToken.cloneTree());	  final    Type    type    =    getType(typeToken.cloneTree());    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
622	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.cloneTree(),  typeToken.cloneTree());  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.cloneTree(),  typeToken.cloneTree());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.cloneTree(),  typeToken.cloneTree());	  final    Type    type    =    getType(typeToken.cloneTree());    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
623	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.cloneTree(),  typeToken);  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.cloneTree(),  typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.cloneTree(),  typeToken);	  final    Type    type    =    getType(typeToken.cloneTree());    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
624	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.clone());  [CE]  clone()  has  protected  access  in  Object  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.clone());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.clone());	  final    Type    type    =    getType(typeToken.cloneTree());    	non-compiled	[CE]  clone()  has  protected  access  in  Object	85	None	replace
625	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getTyperegistry()  :  typeToken.getTypeRegistry();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getTyperegistry()  :  typeToken.getTypeRegistry();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getTyperegistry()  :  typeToken.getTypeRegistry();	  final    Type    type    =    typeToken.getTyperegistry();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
626	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getConstructorType()  :  typeToken.getConstructorType();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getConstructorType()  :  typeToken.getConstructorType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  typeToken.getConstructorType()  :  typeToken.getConstructorType();	  final    Type    type    =    typeToken!=    null?    typeToken.getConstructorType()    :    typeToken.getConstructorType();    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
627	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getConstructorType()  :  defaultConstructor.getConstructorType();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getConstructorType()  :  defaultConstructor.getConstructorType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getConstructorType()  :  defaultConstructor.getConstructorType();	  final    Type    type    =    typeToken!=    null?    typeToken.getConstructorType()    :    typeToken.getConstructorType();    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
628	[BUG]  [BUGGY]  final  Type  type  =  typeToken  >=  null?  typeToken.getConstructorType()  :  typeToken.getConstructorType();  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  >=  null?  typeToken.getConstructorType()  :  typeToken.getConstructorType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  >=  null?  typeToken.getConstructorType()  :  typeToken.getConstructorType();	  final    Type    type    =    typeToken!=    null?    typeToken.getConstructorType()    :    typeToken.getConstructorType();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	162	None	replace
629	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getType()  :  typeToken.getConstructorType();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getType()  :  typeToken.getConstructorType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getType()  :  typeToken.getConstructorType();	  final    Type    type    =    typeToken!=    null?    typeToken.getConstructorType()    :    typeToken.getConstructorType();    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
630	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  null.getType());  [CE]  <null>  cannot  be  dereferenced  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  null.getType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  null.getType());	  final    Type    type    =    getTypeToken(typeToken,    defaultConstructor.getType());    	non-compiled	[CE]  <null>  cannot  be  dereferenced	129	None	replace
631	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  type.getType());  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  type.getType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  type.getType());	  final    Type    type    =    getTypeToken(typeToken,    defaultConstructor.getType());    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
632	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  defaultConstructor.getConstructor()  :  null;  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  defaultConstructor.getConstructor()  :  null;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()?  defaultConstructor.getConstructor()  :  null;	  final    Type    type    =    typeToken.isConstructor()?    typeToken.getConstructor()    :    null;    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
633	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.isConstructor()  :  typeToken.getConstructor();  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.isConstructor()  :  typeToken.getConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.isConstructor()  :  typeToken.getConstructor();	  final    Type    type    =    typeToken.isConstructor()?    typeToken.getConstructor()    :    null;    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
634	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructor()  :  defaultImplementation;  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructor()  :  defaultImplementation;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructor()  :  defaultImplementation;	  final    Type    type    =    typeToken.isConstructor()?    typeToken.getConstructor()    :    null;    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
635	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.toConstructor()  :  null;  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.toConstructor()  :  null;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()?  typeToken.toConstructor()  :  null;	  final    Type    type    =    typeToken.isConstructor()?    typeToken.getConstructor()    :    null;    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
636	[BUG]  [BUGGY]  final  Type  type  =  defaultConstructor.isConstructor()?  typeToken.getConstructorType()  :  typeToken;  [CE]  cannot  find  symbol  defaultConstructor  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  defaultConstructor.isConstructor()?  typeToken.getConstructorType()  :  typeToken;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  defaultConstructor.isConstructor()?  typeToken.getConstructorType()  :  typeToken;	  final    Type    type    =    typeToken.isConstructor()?    typeToken.getConstructorType()    :    defaultImplementation;    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	119	None	replace
637	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  ObjectConstructor.getConstructor()  :  typeToken.getConstructor();  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  ObjectConstructor.getConstructor()  :  typeToken.getConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  ObjectConstructor.getConstructor()  :  typeToken.getConstructor();	  final    Type    type    =    typeToken!=    null?    defaultConstructor.getConstructor()    :    typeToken.getConstructor();    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
638	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  objectConstructor.getConstructor()  :  typeToken.getConstructor();  [CE]  cannot  find  symbol  objectConstructor  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  objectConstructor.getConstructor()  :  typeToken.getConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  objectConstructor.getConstructor()  :  typeToken.getConstructor();	  final    Type    type    =    typeToken!=    null?    defaultConstructor.getConstructor()    :    typeToken.getConstructor();    	non-compiled	[CE]  cannot  find  symbol  objectConstructor	102	None	replace
639	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getSuperType()  ||  typeToken.getSimpleType();  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getSuperType()  ||  typeToken.getSimpleType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getSuperType()  ||  typeToken.getSimpleType();	  final    Type    type    =    typeToken.getSuperType()    ||    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
640	[BUG]  [BUGGY]  Class  <?>  typeToken  =  getTypeToken(typeToken.getRawType());  [CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  Class  <?>  typeToken  =  getTypeToken(typeToken.getRawType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	Class  <?>  typeToken  =  getTypeToken(typeToken.getRawType());	  Class    <?>    typeToken    =    typeToken.getRawType();    	non-compiled	[CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)	152	None	replace
641	[BUG]  [BUGGY]  Class  <?>  typeToken  =  typeToken.getClass();  [CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  Class  <?>  typeToken  =  typeToken.getClass();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	Class  <?>  typeToken  =  typeToken.getClass();	  Class    <?>    typeToken    =    typeToken.getRawType();    	non-compiled	[CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)	152	None	replace
642	[BUG]  [BUGGY]  TypeToken  typeToken  =  typeToken.getRawType();  [CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  TypeToken  typeToken  =  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	TypeToken  typeToken  =  typeToken.getRawType();	  Class    <?>    typeToken    =    typeToken.getRawType();    	non-compiled	[CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)	152	None	replace
643	[BUG]  [BUGGY]  final  Type  <?  super  T>  type  =  typeToken.getRawType();  [CE]  type  Type  does  not  take  parameters  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  <?  super  T>  type  =  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  <?  super  T>  type  =  typeToken.getRawType();	  final    Type    type    =    typeToken.getRawType();    final    type    =    typeToken.getRawType();    	non-compiled	[CE]  type  Type  does  not  take  parameters	22	None	replace
644	[BUG]  [BUGGY]  if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  final  type  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }  [CE]  <identifier>  expected  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  final  type  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  final  type  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }	  final    Type    type    =    typeToken.getRawType();    final    type    =    typeToken.getRawType();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
645	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getObjectType(),  factory);  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getObjectType(),  factory);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getObjectType(),  factory);	  final    Type    type    =    typeToken.getObjectType(),    defaultImplementation);    	non-compiled	[CE]  ';'  expected	43	None	replace
646	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getObjectType(),  this);  [CE]  <identifier>  expected  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getObjectType(),  this);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getObjectType(),  this);	  final    Type    type    =    typeToken.getObjectType(),    defaultImplementation);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
647	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken  :  typeToken.getTypeRegistry();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken  :  typeToken.getTypeRegistry();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken  :  typeToken.getTypeRegistry();	  final    Type    type    =    typeToken!=    null?    defaultImplementation    :    typeToken.getTypeRegistry();    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
648	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getDefaultImplementation()  :  typeToken.getTypeRegistry();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getDefaultImplementation()  :  typeToken.getTypeRegistry();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getDefaultImplementation()  :  typeToken.getTypeRegistry();	  final    Type    type    =    typeToken!=    null?    defaultImplementation    :    typeToken.getTypeRegistry();    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
649	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toString()  :  typeToken.getTypeRegistry();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toString()  :  typeToken.getTypeRegistry();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.toString()  :  typeToken.getTypeRegistry();	  final    Type    type    =    typeToken!=    null?    defaultImplementation    :    typeToken.getTypeRegistry();    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
650	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  defaultConstructor  :  typeToken.getTypeRegistry();  [CE]  cannot  find  symbol  defaultConstructor  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  defaultConstructor  :  typeToken.getTypeRegistry();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  defaultConstructor  :  typeToken.getTypeRegistry();	  final    Type    type    =    typeToken!=    null?    defaultImplementation    :    typeToken.getTypeRegistry();    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	124	None	replace
651	[BUG]  [BUGGY]  final  Type  type  =  typeToken  >=  null?  null  :  typeToken.toObjectType();  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  >=  null?  null  :  typeToken.toObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  >=  null?  null  :  typeToken.toObjectType();	  final    Type    type    =    typeToken!=    null?    null    :    typeToken.toObjectType();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	81	None	replace
652	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  constructor.toObjectConstructor()  :  typeToken;  [CE]  cannot  find  symbol  constructor  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  constructor.toObjectConstructor()  :  typeToken;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  constructor.toObjectConstructor()  :  typeToken;	  final    Type    type    =    typeToken!=    null?    defaultConstructor.toObjectConstructor()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol  constructor	78	None	replace
653	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  ObjectConstructor.toObjectConstructor()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  ObjectConstructor.toObjectConstructor()  :  typeToken;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  ObjectConstructor.toObjectConstructor()  :  typeToken;	  final    Type    type    =    typeToken!=    null?    defaultConstructor.toObjectConstructor()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
654	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructor()  :  getDefaultImplementation();  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructor()  :  getDefaultImplementation();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructor()  :  getDefaultImplementation();	  final    Type    type    =    typeToken.isConstructor()?    typeToken.getConstructor()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
655	[BUG]  [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullOrUndefined(),  defaultImplementation;  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullOrUndefined(),  defaultImplementation;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.restrictByNotNullOrUndefined(),  defaultImplementation;	  final    Type    type    =    typeToken.restrictByNotNullOrUndefined(),    null;    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
656	[BUG]  [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullOrUndefined(),  unknownTypes;  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullOrUndefined(),  unknownTypes;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.restrictByNotNullOrUndefined(),  unknownTypes;	  final    Type    type    =    typeToken.restrictByNotNullOrUndefined(),    null;    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
657	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  defaultImplementation  :  typeToken.getConstructor();  [CE]  cannot  find  symbol  defaultImplementation  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  defaultImplementation  :  typeToken.getConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  defaultImplementation  :  typeToken.getConstructor();	  final    Type    type    =    typeToken!=    null?    defaultConstructor    :    typeToken.getConstructor();    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	101	None	replace
658	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.getPrimitiveType();  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  Class  <?>  rawType  =  typeToken.getPrimitiveType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	Class  <?>  rawType  =  typeToken.getPrimitiveType();	  Class    <?>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
659	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getTypeRegistry()  :  defaultImplementation.getTypeRegistry();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getTypeRegistry()  :  defaultImplementation.getTypeRegistry();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getTypeRegistry()  :  defaultImplementation.getTypeRegistry();	  final    Type    type    =    typeToken!=    null?    typeToken.getTypeRegistry()    :    typeToken.getTypeRegistry();    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
660	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null  ||  typeToken.getTypeRegistry()  :  typeToken.getTypeRegistry();  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null  ||  typeToken.getTypeRegistry()  :  typeToken.getTypeRegistry();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null  ||  typeToken.getTypeRegistry()  :  typeToken.getTypeRegistry();	  final    Type    type    =    typeToken!=    null?    typeToken.getTypeRegistry()    :    typeToken.getTypeRegistry();    	non-compiled	[CE]  ';'  expected	157	None	replace
661	[BUG]  [BUGGY]  final  Type  type  =  typeToken  >=  null?  typeToken.getSuperType()  :  typeToken.getSuperType();  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  >=  null?  typeToken.getSuperType()  :  typeToken.getSuperType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  >=  null?  typeToken.getSuperType()  :  typeToken.getSuperType();	  final    Type    type    =    typeToken!=    null?    typeToken.getSuperType()    :    typeToken.getSuperType();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	62	None	replace
662	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  styleToken);  [CE]  cannot  find  symbol  styleToken  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  styleToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getType(),  styleToken);	  final    Type    type    =    getTypeToken(typeToken.getType(),    typeToken);    	non-compiled	[CE]  cannot  find  symbol  styleToken	33	None	replace
663	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  name);  [CE]  cannot  find  symbol  name  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  name);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getType(),  name);	  final    Type    type    =    getTypeToken(typeToken.getType(),    typeToken);    	non-compiled	[CE]  cannot  find  symbol  name	33	None	replace
664	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  object);  [CE]  cannot  find  symbol  object  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  object);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getType(),  object);	  final    Type    type    =    getTypeToken(typeToken.getType(),    typeToken);    	non-compiled	[CE]  cannot  find  symbol  object	33	None	replace
665	[BUG]  [BUGGY]  final  Type  type  =  typeToken  <  null?  null  :  typeToken.toObjectType();  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  <  null?  null  :  typeToken.toObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  <  null?  null  :  typeToken.toObjectType();	  final    Type    type    =    typeToken.toObjectType()?    null    :    typeToken.toObjectType();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	83	None	replace
666	[BUG]  [BUGGY]  final  Type  type  =  typeToken.trim(),  defaultImplementation.toObjectType();  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.trim(),  defaultImplementation.toObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.trim(),  defaultImplementation.toObjectType();	  final    Type    type    =    typeToken.trim().toObjectType();    	non-compiled	[CE]  ';'  expected	143	None	replace
667	[BUG]  [BUGGY]  final  Type  type  =  typeToken.trim(),  defaultConstructor.toObjectType();  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.trim(),  defaultConstructor.toObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.trim(),  defaultConstructor.toObjectType();	  final    Type    type    =    typeToken.trim().toObjectType();    	non-compiled	[CE]  ';'  expected	143	None	replace
668	[BUG]  [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullOrUndefined().toObjectType();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullOrUndefined().toObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.restrictByNotNullOrUndefined().toObjectType();	  final    Type    type    =    typeToken.trim().toObjectType();    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
669	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.getObjectType()  ||  typeToken.getObjectType();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.getObjectType()  ||  typeToken.getObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  null  :  typeToken.getObjectType()  ||  typeToken.getObjectType();	  final    Type    type    =    typeToken.getObjectType()    ||    typeToken.getObjectType();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
670	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getObjectType()  ||  typeToken.getOwnerType();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getObjectType()  ||  typeToken.getOwnerType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getObjectType()  ||  typeToken.getOwnerType();	  final    Type    type    =    typeToken.getObjectType()    ||    typeToken.getObjectType();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
671	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getObjectType()  ||  typeToken.getParameterType(0);  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getObjectType()  ||  typeToken.getParameterType(0);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getObjectType()  ||  typeToken.getParameterType(0);	  final    Type    type    =    typeToken.getObjectType()    ||    typeToken.getObjectType();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
672	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.cloneTree(),  typeToken.getParameterType(0));  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.cloneTree(),  typeToken.getParameterType(0));  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.cloneTree(),  typeToken.getParameterType(0));	  final    Type    type    =    getType(typeToken.cloneTree(),    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
673	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  null.cloneTree(),  typeToken.getType());  [CE]  <null>  cannot  be  dereferenced  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken,  null.cloneTree(),  typeToken.getType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  null.cloneTree(),  typeToken.getType());	  final    Type    type    =    getType(typeToken.cloneTree(),    typeToken.getType());    	non-compiled	[CE]  <null>  cannot  be  dereferenced	86	None	replace
674	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.cloneTree(),  typeToken.toObjectConstructor());  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.cloneTree(),  typeToken.toObjectConstructor());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.cloneTree(),  typeToken.toObjectConstructor());	  final    Type    type    =    getType(typeToken.cloneTree(),    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
675	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.toString(),  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.toString(),  defaultImplementation);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.toString(),  defaultImplementation);	  final    Type    type    =    getTypeToken(typeToken.toString());    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	74	None	replace
676	[BUG]  [BUGGY]  final  Type  type  =  defaultConstructor!=  null?  typeToken.getConstructorType()  :  typeToken;  [CE]  cannot  find  symbol  defaultConstructor  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  defaultConstructor!=  null?  typeToken.getConstructorType()  :  typeToken;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  defaultConstructor!=  null?  typeToken.getConstructorType()  :  typeToken;	  final    Type    type    =    typeToken!=    null?    typeToken.getConstructorType()    :    defaultConstructor;    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	165	None	replace
677	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getConstructorType()  :  defaultImplementation;  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getConstructorType()  :  defaultImplementation;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getConstructorType()  :  defaultImplementation;	  final    Type    type    =    typeToken!=    null?    typeToken.getConstructorType()    :    defaultConstructor;    	non-compiled	[CE]  cannot  find  symbol	165	None	replace
678	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getPropertyType();  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getPropertyType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getPropertyType();	  final    Type    type    =    typeToken.getPropertyType();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
679	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.getPropertyType();  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.getPropertyType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  null  :  typeToken.getPropertyType();	  final    Type    type    =    typeToken.getPropertyType();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
680	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getPropertyType(typeToken);  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getPropertyType(typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getPropertyType(typeToken);	  final    Type    type    =    typeToken.getPropertyType();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
681	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  getTypeToken  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken.restrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken.restrictByNotNullOrUndefined();	  final    Type    type    =    token.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol  getTypeToken	108	None	replace
682	[BUG]  [BUGGY]  final  Type  type  =  instanceCreators.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  instanceCreators.restrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  instanceCreators.restrictByNotNullOrUndefined();	  final    Type    type    =    token.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
683	[BUG]  [BUGGY]  final  Type  type  =  defaultImplementation.toObjectConstructor(typeToken);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  defaultImplementation.toObjectConstructor(typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  defaultImplementation.toObjectConstructor(typeToken);	  final    Type    type    =    typeToken.toObjectConstructor(DefaultImplementation.class);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	13	None	replace
684	[BUG]  [BUGGY]  final  Type  type  =  defaultConstructor.toObjectConstructor(DefaultImplementation.class);  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  defaultConstructor.toObjectConstructor(DefaultImplementation.class);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  defaultConstructor.toObjectConstructor(DefaultImplementation.class);	  final    Type    type    =    typeToken.toObjectConstructor(DefaultImplementation.class);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
685	[BUG]  [BUGGY]  final  Type  type  =  defaultImplementation.toObjectConstructor(typeToken,  DefaultImplementation.class);  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  defaultImplementation.toObjectConstructor(typeToken,  DefaultImplementation.class);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  defaultImplementation.toObjectConstructor(typeToken,  DefaultImplementation.class);	  final    Type    type    =    typeToken.toObjectConstructor(DefaultImplementation.class);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
686	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  instanceCreators);  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  instanceCreators);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getType(),  instanceCreators);	  final    Type    type    =    getTypeToken(typeToken.getType(),    defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
687	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  scope);  [CE]  cannot  find  symbol  scope  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  scope);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getType(),  scope);	  final    Type    type    =    getTypeToken(typeToken.getType(),    defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol  scope	73	None	replace
688	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getImplicitPrototype();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getImplicitPrototype();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getImplicitPrototype();	  final    Type    type    =    typeToken.getImplicitPrototype();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
689	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.getImplicitPrototype();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.getImplicitPrototype();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  null  :  typeToken.getImplicitPrototype();	  final    Type    type    =    typeToken.getImplicitPrototype();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
690	[BUG]  [BUGGY]  final  Type  type  =  getImplicitPrototype(typeToken.getImplicitPrototype());  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getImplicitPrototype(typeToken.getImplicitPrototype());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getImplicitPrototype(typeToken.getImplicitPrototype());	  final    Type    type    =    typeToken.getImplicitPrototype();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
691	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toImplicitPrototype();  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toImplicitPrototype();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toImplicitPrototype();	  final    Type    type    =    typeToken.getImplicitPrototype();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
692	[BUG]  [BUGGY]  if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  [CE]  cannot  find  symbol  type  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }	  final    Type    type    =    typeToken.getRawType();    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol  type	18	None	replace
693	[BUG]  [BUGGY]  final  Type  type  =  getConstructorType(typeToken).getConstructorType(),  defaultConstructor;  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getConstructorType(typeToken).getConstructorType(),  defaultConstructor;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getConstructorType(typeToken).getConstructorType(),  defaultConstructor;	  final    Type    type    =    typeToken.getConstructorType(),    defaultConstructor;    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
694	[BUG]  [BUGGY]  final  Type  type  =  getConstructorType(typeToken.getConstructorType(),  defaultConstructor;  [CE]  ')'  expected  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getConstructorType(typeToken.getConstructorType(),  defaultConstructor;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getConstructorType(typeToken.getConstructorType(),  defaultConstructor;	  final    Type    type    =    typeToken.getConstructorType(),    defaultConstructor;    	non-compiled	[CE]  ')'  expected	48	None	replace
695	[BUG]  [BUGGY]  final  Type  type  =  this.defaultConstructor.getConstructorType(),  typeToken;  [CE]  cannot  find  symbol  defaultConstructor  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  this.defaultConstructor.getConstructorType(),  typeToken;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  this.defaultConstructor.getConstructorType(),  typeToken;	  final    Type    type    =    typeToken.getConstructorType(),    defaultConstructor;    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	48	None	replace
696	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  factory.getType());  [CE]  cannot  find  symbol  factory  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  factory.getType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  factory.getType());	  final    Type    type    =    getTypeToken(typeToken,    defaultConstructor.getType());    	non-compiled	[CE]  cannot  find  symbol  factory	129	None	replace
697	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.getTyperegistry();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.getTyperegistry();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  null  :  typeToken.getTyperegistry();	  final    Type    type    =    typeToken.getTyperegistry();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
698	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.restrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  null  :  typeToken.restrictByNotNullOrUndefined();	  final    Type    type    =    typeToken    ==    null?    null    :    typeToken.getReturnType();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
699	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  null.getType(),  typeToken.getRawType());  [CE]  <null>  cannot  be  dereferenced  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken,  null.getType(),  typeToken.getRawType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  null.getType(),  typeToken.getRawType());	  final    Type    type    =    getType(typeToken.getType(),    typeToken.getRawType());    	non-compiled	[CE]  <null>  cannot  be  dereferenced	51	None	replace
700	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  typeToken.getObjectType());  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  typeToken.getObjectType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.getType(),  typeToken.getObjectType());	  final    Type    type    =    getType(typeToken.getType(),    typeToken.getRawType());    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
701	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  typeToken.getCollectionType());  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  typeToken.getCollectionType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.getType(),  typeToken.getCollectionType());	  final    Type    type    =    getType(typeToken.getType(),    typeToken.getRawType());    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
702	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  typeToken.getLocalName());  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  typeToken.getLocalName());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.getType(),  typeToken.getLocalName());	  final    Type    type    =    getType(typeToken.getType(),    typeToken.getRawType());    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
703	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.cloneObject());  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.cloneObject());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.cloneObject());	  final    Type    type    =    getType(typeToken.cloneTree());    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
704	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.cloneType());  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.cloneType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.cloneType());	  final    Type    type    =    getType(typeToken.cloneTree());    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
705	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.cloneTree(),  defaultImplementation);  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.cloneTree(),  defaultImplementation);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.cloneTree(),  defaultImplementation);	  final    Type    type    =    getType(typeToken.cloneTree());    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
706	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(),  defaultConstructor.toObjectConstructor();  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(),  defaultConstructor.toObjectConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(),  defaultConstructor.toObjectConstructor();	  final    Type    type    =    getTypeToken().toObjectConstructor();    	non-compiled	[CE]  ';'  expected	77	None	replace
707	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().cloneTree().toObjectConstructor();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken().cloneTree().toObjectConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().cloneTree().toObjectConstructor();	  final    Type    type    =    getTypeToken().toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
708	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().constructor();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken().constructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().constructor();	  final    Type    type    =    getTypeToken().toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
709	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  getTypeRegistry()  :  typeToken.cloneTree();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  getTypeRegistry()  :  typeToken.cloneTree();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  getTypeRegistry()  :  typeToken.cloneTree();	  final    Type    type    =    typeToken!=    null?    getTypeRegistry()    :    typeToken.getTypeRegistry();    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
710	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().toTypeConstructor();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken().toTypeConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().toTypeConstructor();	  final    Type    type    =    typeToken.toTypeConstructor();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
711	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getTypeConstructor();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getTypeConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getTypeConstructor();	  final    Type    type    =    typeToken.toTypeConstructor();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
712	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  defaultConstructor.toObjectConstructor();  [CE]  cannot  find  symbol  defaultConstructor  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  defaultConstructor.toObjectConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  null  :  defaultConstructor.toObjectConstructor();	  final    Type    type    =    typeToken    ==    null?    null    :    typeToken.toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	76	None	replace
713	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getObjectConstructor();  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getObjectConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getObjectConstructor();	  final    Type    type    =    typeToken    ==    null?    null    :    typeToken.toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
714	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.toObject());  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.toObject());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.toObject());	  final    Type    type    =    getType(typeToken.toString());    	non-compiled	[CE]  cannot  find  symbol	150	None	replace
715	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.toString(),  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.toString(),  defaultImplementation);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.toString(),  defaultImplementation);	  final    Type    type    =    getType(typeToken.toString());    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	150	None	replace
716	[BUG]  [BUGGY]  ObjectConstructor  <?  super  T>  rawType  =  typeToken.getRawType();  [CE]  incompatible  types  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  ObjectConstructor  <?  super  T>  rawType  =  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	ObjectConstructor  <?  super  T>  rawType  =  typeToken.getRawType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  incompatible  types	35	None	replace
717	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(0);  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(0);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(0);	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
718	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getPrimitiveType();  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getPrimitiveType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	Class  <?  super  T>  rawType  =  typeToken.getPrimitiveType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
719	[BUG]  [BUGGY]  if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  final  Class  <?  super  T>  type  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }  [CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  final  Class  <?  super  T>  type  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  final  Class  <?  super  T>  type  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }	  final    Type    type    =    typeToken.getRawType();    final    Class    <?    super    T>    type    =    typeToken.getRawType();    	non-compiled	[CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)	17	None	replace
720	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toObjectConstructor(instanceCreators);  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toObjectConstructor(instanceCreators);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toObjectConstructor(instanceCreators);	  final    Type    type    =    typeToken.toObjectConstructor(defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
721	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObjectType()  :  defaultImplementation;  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObjectType()  :  defaultImplementation;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.toObjectType()  :  defaultImplementation;	  final    Type    type    =    typeToken!=    null?    typeToken.toObjectType()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
722	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObjectType()  :  nameToken;  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObjectType()  :  nameToken;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.toObjectType()  :  nameToken;	  final    Type    type    =    typeToken!=    null?    typeToken.toObjectType()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
723	[BUG]  [BUGGY]  final  Type  type  =  defaultConstructor.getTypeToken();  [CE]  cannot  find  symbol  defaultConstructor  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  defaultConstructor.getTypeToken();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  defaultConstructor.getTypeToken();	  final    Type    type    =    typeToken,    defaultConstructor.getConstructorType();    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	46	None	replace
724	[BUG]  [BUGGY]  final  Type  type  =  typeToken,  defaultConstructor.getDefaultImplementation();  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken,  defaultConstructor.getDefaultImplementation();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken,  defaultConstructor.getDefaultImplementation();	  final    Type    type    =    typeToken,    defaultConstructor.getConstructorType();    	non-compiled	[CE]  ';'  expected	46	None	replace
725	[BUG]  [BUGGY]  final  Type  type  =  typeToken,  defaultConstructor.getDefaultImplementationType();  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken,  defaultConstructor.getDefaultImplementationType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken,  defaultConstructor.getDefaultImplementationType();	  final    Type    type    =    typeToken,    defaultConstructor.getConstructorType();    	non-compiled	[CE]  ';'  expected	46	None	replace
726	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(defaultConstructor.getConstructorType());  [CE]  cannot  find  symbol  defaultConstructor  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(defaultConstructor.getConstructorType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(defaultConstructor.getConstructorType());	  final    Type    type    =    typeToken,    defaultConstructor.getConstructorType();    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	46	None	replace
727	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toReturnType()  :  typeToken.toString();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toReturnType()  :  typeToken.toString();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.toReturnType()  :  typeToken.toString();	  final    Type    type    =    typeToken!=    null?    typeToken.getReturnType()    :    typeToken.toString();    	non-compiled	[CE]  cannot  find  symbol	156	None	replace
728	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.toConstructor();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.toConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  null  :  typeToken.toConstructor();	  final    Type    type    =    typeToken    ==    null?    null    :    typeToken.getConstructor();    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
729	[BUG]  [BUGGY]  final  Type  type  =  typeToken.resolveType(typeToken.getType());  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.resolveType(typeToken.getType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.resolveType(typeToken.getType());	  final    Type    type    =    typeToken.returnType();    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
730	[BUG]  [BUGGY]  final  Type  type  =  typeToken.reportType();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.reportType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.reportType();	  final    Type    type    =    typeToken.returnType();    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
731	[BUG]  [BUGGY]  final  Type  type  =  getSuperType(typeToken.cloneTree(),  typeToken.getSuperType());  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getSuperType(typeToken.cloneTree(),  typeToken.getSuperType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getSuperType(typeToken.cloneTree(),  typeToken.getSuperType());	  final    Type    type    =    getSuperType(typeToken.getSuperType());    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
732	[BUG]  [BUGGY]  final  Type  type  =  getSuperType(typeToken.cloneTree());  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getSuperType(typeToken.cloneTree());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getSuperType(typeToken.cloneTree());	  final    Type    type    =    getSuperType(typeToken.getSuperType());    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
733	[BUG]  [BUGGY]  final  Type  type  =  getSuperType(typeToken.toString());  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getSuperType(typeToken.toString());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getSuperType(typeToken.toString());	  final    Type    type    =    getSuperType(typeToken.getSuperType());    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
734	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  this.defaultImplementation.getTypeRegistry()  :  typeToken.getTypeRegistry();  [CE]  cannot  find  symbol  defaultImplementation  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  this.defaultImplementation.getTypeRegistry()  :  typeToken.getTypeRegistry();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  this.defaultImplementation.getTypeRegistry()  :  typeToken.getTypeRegistry();	  final    Type    type    =    typeToken!=    null?    defaultImplementation.getTypeRegistry()    :    typeToken.getTypeRegistry();    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	125	None	replace
735	[BUG]  [BUGGY]  final  Type  type  =  defaultImplementation,  defaultConstructor.toObjectConstructor();  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  defaultImplementation,  defaultConstructor.toObjectConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  defaultImplementation,  defaultConstructor.toObjectConstructor();	  final    Type    type    =    typeToken,    defaultConstructor.toObjectConstructor();    	non-compiled	[CE]  ';'  expected	12	None	replace
736	[BUG]  [BUGGY]  final  Type  type  =  defaultConstructor.toType();  [CE]  cannot  find  symbol  defaultConstructor  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  defaultConstructor.toType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  defaultConstructor.toType();	  final    Type    type    =    typeToken,    defaultConstructor.toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	12	None	replace
737	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken.toObjectConstructor());  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken.toObjectConstructor());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken.toObjectConstructor());	  InstanceCreator    <    T>    rawType    =    instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
738	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.constructor();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.constructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  null  :  typeToken.constructor();	  final    Type    type    =    typeToken!=    null?    null    :    typeToken.getConstructor();    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
739	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toType()  :  null;  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toType()  :  null;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.toType()  :  null;	  final    Type    type    =    typeToken!=    null?    typeToken.getTypeRegistry()    :    null;    	non-compiled	[CE]  cannot  find  symbol	159	None	replace
740	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toLowerCase(defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toLowerCase(defaultConstructor);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toLowerCase(defaultConstructor);	  final    Type    type    =    typeToken.toLowerCase();    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	141	None	replace
741	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().toLowerCase();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken().toLowerCase();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().toLowerCase();	  final    Type    type    =    typeToken.toLowerCase();    	non-compiled	[CE]  cannot  find  symbol	141	None	replace
742	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  typeToken.getParameterType(0));  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  typeToken.getParameterType(0));  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.getType(),  typeToken.getParameterType(0));	  final    Type    type    =    getType(typeToken.getType(),    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
743	[BUG]  [BUGGY]  final  Type  type  =(typeToken!=  null)?  null  :  typeToken.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =(typeToken!=  null)?  null  :  typeToken.restrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =(typeToken!=  null)?  null  :  typeToken.restrictByNotNullOrUndefined();	  final    Type    type    =    this.typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
744	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  ObjectConstructor.getType()  :  typeToken.getConstructor();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  ObjectConstructor.getType()  :  typeToken.getConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  ObjectConstructor.getType()  :  typeToken.getConstructor();	  final    Type    type    =    typeToken!=    null?    defaultConstructor.getType()    :    typeToken.getConstructor();    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
745	[BUG]  [BUGGY]  final  Type  type  =  defaultConstructor!=  null?  typeToken.toObjectConstructor()  :  typeToken;  [CE]  cannot  find  symbol  defaultConstructor  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  defaultConstructor!=  null?  typeToken.toObjectConstructor()  :  typeToken;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  defaultConstructor!=  null?  typeToken.toObjectConstructor()  :  typeToken;	  final    Type    type    =    typeToken!=    null?    typeToken.toObjectConstructor()    :    defaultConstructor;    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	149	None	replace
746	[BUG]  [BUGGY]  final  Type  type  =  typeToken.trim(),  defaultConstructor.restrictByNotNullOrUndefined();  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.trim(),  defaultConstructor.restrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.trim(),  defaultConstructor.restrictByNotNullOrUndefined();	  final    Type    type    =    typeToken.trim().restrictByNotNullOrUndefined();    	non-compiled	[CE]  ';'  expected	142	None	replace
747	[BUG]  [BUGGY]  final  Type  type  =  typeToken.trim(),  factory.restrictByNotNullOrUndefined();  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.trim(),  factory.restrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.trim(),  factory.restrictByNotNullOrUndefined();	  final    Type    type    =    typeToken.trim().restrictByNotNullOrUndefined();    	non-compiled	[CE]  ';'  expected	142	None	replace
748	[BUG]  [BUGGY]  final  Type  type  =  typeToken.trim(),  restrictByNotNullOrUndefined();  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.trim(),  restrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.trim(),  restrictByNotNullOrUndefined();	  final    Type    type    =    typeToken.trim().restrictByNotNullOrUndefined();    	non-compiled	[CE]  ';'  expected	142	None	replace
749	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  typeToken.getInstanceType();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  typeToken.getInstanceType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  typeToken.getInstanceType();	  final    Type    type    =    typeToken.isConstructor()?    typeToken.getConstructorType()    :    typeToken.getConstructorType();    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
750	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.isConstructor()  :  typeToken.getConstructorType();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.isConstructor()  :  typeToken.getConstructorType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.isConstructor()  :  typeToken.getConstructorType();	  final    Type    type    =    typeToken.isConstructor()?    typeToken.getConstructorType()    :    typeToken.getConstructorType();    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
751	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  typeToken.getParameterTypes();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  typeToken.getParameterTypes();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  typeToken.getParameterTypes();	  final    Type    type    =    typeToken.isConstructor()?    typeToken.getConstructorType()    :    typeToken.getConstructorType();    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
752	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObject()  :  defaultImplementation;  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObject()  :  defaultImplementation;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.toObject()  :  defaultImplementation;	  final    Type    type    =    typeToken!=    null?    typeToken.toObject()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
753	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.objectType();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.objectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  null  :  typeToken.objectType();	  final    Type    type    =    typeToken    ==    null?    null    :    typeToken.getObjectType();    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
754	[BUG]  [BUGGY]  final  Type  type  =  ObjectConstructor.class.getType();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  ObjectConstructor.class.getType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  ObjectConstructor.class.getType();	  final    Type    type    =    ObjectConstructor.toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
755	[BUG]  [BUGGY]  final  Type  type  =  ObjectConstructor.getType(typeToken.toObjectConstructor());  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  ObjectConstructor.getType(typeToken.toObjectConstructor());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  ObjectConstructor.getType(typeToken.toObjectConstructor());	  final    Type    type    =    ObjectConstructor.toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
756	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken.toObject();  [CE]  cannot  find  symbol  getTypeToken  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken.toObject();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken.toObject();	  final    Type    type    =    token.toObject();    	non-compiled	[CE]  cannot  find  symbol  getTypeToken	127	None	replace
757	[BUG]  [BUGGY]  final  Type  type  =  this.typeToken.toObject();  [CE]  cannot  find  symbol  typeToken  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  this.typeToken.toObject();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  this.typeToken.toObject();	  final    Type    type    =    token.toObject();    	non-compiled	[CE]  cannot  find  symbol  typeToken	127	None	replace
758	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().toArrayType();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken().toArrayType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().toArrayType();	  final    Type    type    =    typeToken.toArrayType();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
759	[BUG]  [BUGGY]  final  Type  type  =  token.toArrayType();  [CE]  cannot  find  symbol  token  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  token.toArrayType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  token.toArrayType();	  final    Type    type    =    typeToken.toArrayType();    	non-compiled	[CE]  cannot  find  symbol  token	67	None	replace
760	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  defaultConstructor.getTypeRegistry()  :  typeToken;  [CE]  cannot  find  symbol  defaultConstructor  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  defaultConstructor.getTypeRegistry()  :  typeToken;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  defaultConstructor.getTypeRegistry()  :  typeToken;	  final    Type    type    =    typeToken!=    null?    typeToken.getTypeRegistry()    :    defaultImplementation;    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	160	None	replace
761	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  defaultImplementation.getTypeRegistry()  :  typeToken;  [CE]  cannot  find  symbol  defaultImplementation  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  defaultImplementation.getTypeRegistry()  :  typeToken;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  defaultImplementation.getTypeRegistry()  :  typeToken;	  final    Type    type    =    typeToken!=    null?    typeToken.getTypeRegistry()    :    defaultImplementation;    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	160	None	replace
762	[BUG]  [BUGGY]  final  Type  type  =  defaultImplementation!=  null?  typeToken.getTypeRegistry()  :  typeToken;  [CE]  cannot  find  symbol  defaultImplementation  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  defaultImplementation!=  null?  typeToken.getTypeRegistry()  :  typeToken;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  defaultImplementation!=  null?  typeToken.getTypeRegistry()  :  typeToken;	  final    Type    type    =    typeToken!=    null?    typeToken.getTypeRegistry()    :    defaultImplementation;    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	160	None	replace
763	[BUG]  [BUGGY]  final  Type  type  =  defaultConstructor!=  null?  typeToken.getConstructor()  :  typeToken;  [CE]  cannot  find  symbol  defaultConstructor  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  defaultConstructor!=  null?  typeToken.getConstructor()  :  typeToken;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  defaultConstructor!=  null?  typeToken.getConstructor()  :  typeToken;	  final    Type    type    =    typeToken!=    null?    typeToken.getConstructor()    :    defaultConstructor;    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	139	None	replace
764	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getConstructor()  :  defaultImplementation;  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getConstructor()  :  defaultImplementation;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getConstructor()  :  defaultImplementation;	  final    Type    type    =    typeToken!=    null?    typeToken.getConstructor()    :    defaultConstructor;    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
765	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  DEFAULT_TYPE;  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  DEFAULT_TYPE;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  DEFAULT_TYPE;	  final    Type    type    =    typeToken.isConstructor()?    typeToken.getConstructorType()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
766	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  this.defaultConstructor;  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  this.defaultConstructor;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  this.defaultConstructor;	  final    Type    type    =    typeToken.isConstructor()?    typeToken.getConstructorType()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
767	[BUG]  [BUGGY]  final  Type  type  =  this.typeToken.restrictByNotEmptyOrUndefined();  [CE]  cannot  find  symbol  typeToken  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  this.typeToken.restrictByNotEmptyOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  this.typeToken.restrictByNotEmptyOrUndefined();	  final    Type    type    =    typeToken.restrictByNotEmptyOrUndefined();    	non-compiled	[CE]  cannot  find  symbol  typeToken	24	None	replace
768	[BUG]  [BUGGY]  final  Type  type  =  token.restrictByNotEmptyOrUndefined();  [CE]  cannot  find  symbol  token  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  token.restrictByNotEmptyOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  token.restrictByNotEmptyOrUndefined();	  final    Type    type    =    typeToken.restrictByNotEmptyOrUndefined();    	non-compiled	[CE]  cannot  find  symbol  token	24	None	replace
769	[BUG]  [BUGGY]  final  Type  type  =  typeToken.destrictByNotEmptyOrUndefined();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.destrictByNotEmptyOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.destrictByNotEmptyOrUndefined();	  final    Type    type    =    typeToken.restrictByNotEmptyOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
770	[BUG]  [BUGGY]  TypeToken  <  T>  typeToken  =  this.typeToken.getRawType();  [CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  TypeToken  <  T>  typeToken  =  this.typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	TypeToken  <  T>  typeToken  =  this.typeToken.getRawType();	  TypeToken    <    T>    typeToken    =    typeToken.getRawType();    	non-compiled	[CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)	151	None	replace
771	[BUG]  [BUGGY]  TypeToken  <  T>  typeToken  =  typeToken.getOwnerType();  [CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  TypeToken  <  T>  typeToken  =  typeToken.getOwnerType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	TypeToken  <  T>  typeToken  =  typeToken.getOwnerType();	  TypeToken    <    T>    typeToken    =    typeToken.getRawType();    	non-compiled	[CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)	151	None	replace
772	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().toStringType();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken().toStringType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().toStringType();	  final    Type    type    =    typeToken.toStringType();    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
773	[BUG]  [BUGGY]  final  Type  type  =  token.toStringType();  [CE]  cannot  find  symbol  token  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  token.toStringType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  token.toStringType();	  final    Type    type    =    typeToken.toStringType();    	non-compiled	[CE]  cannot  find  symbol  token	144	None	replace
774	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawType  =  instanceCreators.get(rawTypeToken);  [CE]  cannot  find  symbol  rawTypeToken  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  ObjectConstructor  <  T>  rawType  =  instanceCreators.get(rawTypeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	ObjectConstructor  <  T>  rawType  =  instanceCreators.get(rawTypeToken);	  ObjectConstructor    <    T>    rawType    =    instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	112	None	replace
775	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawType  =  instances.get(typeToken);  [CE]  cannot  find  symbol  instances  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  ObjectConstructor  <  T>  rawType  =  instances.get(typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	ObjectConstructor  <  T>  rawType  =  instances.get(typeToken);	  ObjectConstructor    <    T>    rawType    =    instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  instances	112	None	replace
776	[BUG]  [BUGGY]  if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  static  final  Type  type  =  typeToken.getRawType();  }  [CE]  illegal  start  of  expression  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  static  final  Type  type  =  typeToken.getRawType();  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  static  final  Type  type  =  typeToken.getRawType();  }	  final    Type    type    =    typeToken.getRawType();    static    final    Type    type    =    typeToken.getRawType();    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
777	[BUG]  [BUGGY]  if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  static  final  Type  type  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }  [CE]  illegal  start  of  expression  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  static  final  Type  type  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  static  final  Type  type  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }	  final    Type    type    =    typeToken.getRawType();    static    final    Type    type    =    typeToken.getRawType();    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
778	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  defaultImplementation.cloneTree());  [CE]  cannot  find  symbol  defaultImplementation  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  defaultImplementation.cloneTree());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  defaultImplementation.cloneTree());	  final    Type    type    =    getTypeToken(typeToken.cloneTree());    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	34	None	replace
779	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  factory.cloneTree());  [CE]  cannot  find  symbol  factory  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  factory.cloneTree());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  factory.cloneTree());	  final    Type    type    =    getTypeToken(typeToken.cloneTree());    	non-compiled	[CE]  cannot  find  symbol  factory	34	None	replace
780	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.cloneTree(),  defaultImplementation);  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.cloneTree(),  defaultImplementation);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.cloneTree(),  defaultImplementation);	  final    Type    type    =    getTypeToken(typeToken.cloneTree());    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
781	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObject()  :  getTypeRegistry().getType(typeToken.toObject());  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObject()  :  getTypeRegistry().getType(typeToken.toObject());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.toObject()  :  getTypeRegistry().getType(typeToken.toObject());	  final    Type    type    =    typeToken!=    null?    typeToken.toObject()    :    typeToken.toObject();    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
782	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.trim();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.trim();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  null  :  typeToken.trim();	  final    Type    type    =    typeToken.trim();    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
783	[BUG]  [BUGGY]  final  Type  type  =  typeToken.trimType();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.trimType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.trimType();	  final    Type    type    =    typeToken.trim();    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
784	[BUG]  [BUGGY]  final  Type  type  =  typeToken.hasConstructor()?  null  :  typeToken.getConstructorType();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.hasConstructor()?  null  :  typeToken.getConstructorType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.hasConstructor()?  null  :  typeToken.getConstructorType();	  final    Type    type    =    typeToken.isConstructor()?    null    :    typeToken.getConstructorType();    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
785	[BUG]  [BUGGY]  final  Type  type  =  typeToken.valueRegistry();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.valueRegistry();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.valueRegistry();	  final    Type    type    =    typeToken.typeRegistry();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
786	[BUG]  [BUGGY]  final  Type  type  =  typeToken.declareType(typeToken.typeRegistry());  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.declareType(typeToken.typeRegistry());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.declareType(typeToken.typeRegistry());	  final    Type    type    =    typeToken.typeRegistry();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
787	[BUG]  [BUGGY]  final  Type  type  =  typeToken.constructType(null,  typeToken.getReturnType());  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.constructType(null,  typeToken.getReturnType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.constructType(null,  typeToken.getReturnType());	  final    Type    type    =    typeToken.constructType(defaultImplementation,    typeToken.getReturnType());    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
788	[BUG]  [BUGGY]  final  Type  type  =  typeToken.constructType(defaultConstructor,  typeToken.getReturnType());  [CE]  cannot  find  symbol  defaultConstructor  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.constructType(defaultConstructor,  typeToken.getReturnType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.constructType(defaultConstructor,  typeToken.getReturnType());	  final    Type    type    =    typeToken.constructType(defaultImplementation,    typeToken.getReturnType());    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	92	None	replace
789	[BUG]  [BUGGY]  final  Type  type  =  typeToken.constructType(instanceCreators,  typeToken.getReturnType());  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.constructType(instanceCreators,  typeToken.getReturnType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.constructType(instanceCreators,  typeToken.getReturnType());	  final    Type    type    =    typeToken.constructType(defaultImplementation,    typeToken.getReturnType());    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
790	[BUG]  [BUGGY]  final  Type  type  =  typeToken.constructType(objectConstructor,  typeToken.getReturnType());  [CE]  cannot  find  symbol  objectConstructor  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.constructType(objectConstructor,  typeToken.getReturnType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.constructType(objectConstructor,  typeToken.getReturnType());	  final    Type    type    =    typeToken.constructType(defaultImplementation,    typeToken.getReturnType());    	non-compiled	[CE]  cannot  find  symbol  objectConstructor	92	None	replace
791	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  typeToken.toObjectConstructor());  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken,  typeToken.toObjectConstructor());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  typeToken.toObjectConstructor());	  final    Type    type    =    getType(typeToken,    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
792	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  typeToken.toObject());  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken,  typeToken.toObject());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  typeToken.toObject());	  final    Type    type    =    getType(typeToken,    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
793	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  typeToken.getType(),  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken,  typeToken.getType(),  defaultImplementation);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  typeToken.getType(),  defaultImplementation);	  final    Type    type    =    getType(typeToken,    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	49	None	replace
794	[BUG]  [BUGGY]  final  Type  type  =  typesToken.getSubType(typeToken.getSuperType());  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typesToken.getSubType(typeToken.getSuperType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typesToken.getSubType(typeToken.getSuperType());	  final    Type    type    =    typeToken.getSubType(typeToken.getSuperType());    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
795	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getSubType(null,  typeToken.getSuperType());  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getSubType(null,  typeToken.getSuperType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getSubType(null,  typeToken.getSuperType());	  final    Type    type    =    typeToken.getSubType(typeToken.getSuperType());    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
796	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getSubType(typetoken.getSuperType());  [CE]  cannot  find  symbol  typetoken  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getSubType(typetoken.getSuperType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getSubType(typetoken.getSuperType());	  final    Type    type    =    typeToken.getSubType(typeToken.getSuperType());    	non-compiled	[CE]  cannot  find  symbol  typetoken	63	None	replace
797	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getSubType(defaultImplementation.getSuperType());  [CE]  cannot  find  symbol  defaultImplementation  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getSubType(defaultImplementation.getSuperType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getSubType(defaultImplementation.getSuperType());	  final    Type    type    =    typeToken.getSubType(typeToken.getSuperType());    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	63	None	replace
798	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getConstructorType(),  this);  [CE]  <identifier>  expected  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getConstructorType(),  this);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getConstructorType(),  this);	  final    Type    type    =    typeToken.getConstructorType(),    defaultImplementation);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
799	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObjectConstructor()  :  getTypeRegistry().toString();  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObjectConstructor()  :  getTypeRegistry().toString();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.toObjectConstructor()  :  getTypeRegistry().toString();	  final    Type    type    =    typeToken!=    null?    typeToken.toObjectConstructor()    :    typeToken.toString();    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
800	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken.toObjectConstructor());  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken.toObjectConstructor());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken.toObjectConstructor());	  final    InstanceCreator    <    T>    rawType    =    instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
801	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawType  =  instanceCreators.get(rawTypeToken);  [CE]  cannot  find  symbol  rawTypeToken  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  InstanceCreator  <  T>  rawType  =  instanceCreators.get(rawTypeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  InstanceCreator  <  T>  rawType  =  instanceCreators.get(rawTypeToken);	  final    InstanceCreator    <    T>    rawType    =    instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	111	None	replace
802	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  null.getType(),  typeToken.getRawType());  [CE]  <null>  cannot  be  dereferenced  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  null.getType(),  typeToken.getRawType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  null.getType(),  typeToken.getRawType());	  final    Type    type    =    getTypeToken(typeToken.getType(),    typeToken.getRawType());    	non-compiled	[CE]  <null>  cannot  be  dereferenced	30	None	replace
803	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  context.getType(),  typeToken.getRawType());  [CE]  cannot  find  symbol  context  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  context.getType(),  typeToken.getRawType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  context.getType(),  typeToken.getRawType());	  final    Type    type    =    getTypeToken(typeToken.getType(),    typeToken.getRawType());    	non-compiled	[CE]  cannot  find  symbol  context	30	None	replace
804	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.getCollectionType());  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.getCollectionType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.getCollectionType());	  final    Type    type    =    getTypeToken(typeToken.getType(),    typeToken.getRawType());    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
805	[BUG]  [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullOrUndefined()?  null  :  typeToken.restrictByNotNullOrUndefined(),  false);  [CE]  <identifier>  expected  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullOrUndefined()?  null  :  typeToken.restrictByNotNullOrUndefined(),  false);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.restrictByNotNullOrUndefined()?  null  :  typeToken.restrictByNotNullOrUndefined(),  false);	  final    Type    type    =    typeToken.restrictByNotNullOrUndefined(),    false);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
806	[BUG]  [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullOrUndefined()?  null  :  typeToken.getRawType();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullOrUndefined()?  null  :  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.restrictByNotNullOrUndefined()?  null  :  typeToken.getRawType();	  final    Type    type    =    typeToken.restrictByNotNullOrUndefined(),    false);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
807	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().restrictByNotNullOrUndefined(),  false);  [CE]  <identifier>  expected  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken().restrictByNotNullOrUndefined(),  false);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().restrictByNotNullOrUndefined(),  false);	  final    Type    type    =    typeToken.restrictByNotNullOrUndefined(),    false);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
808	[BUG]  [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullOrUndefined(),  null);  [CE]  <identifier>  expected  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullOrUndefined(),  null);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.restrictByNotNullOrUndefined(),  null);	  final    Type    type    =    typeToken.restrictByNotNullOrUndefined(),    false);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
809	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getDefaultImplementation(),  defaultImplementation);  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getDefaultImplementation(),  defaultImplementation);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getDefaultImplementation(),  defaultImplementation);	  final    Type    type    =    typeToken.getConstructor(),    defaultImplementation);    	non-compiled	[CE]  ';'  expected	58	None	replace
810	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getConstructor(),  null);  [CE]  <identifier>  expected  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getConstructor(),  null);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getConstructor(),  null);	  final    Type    type    =    typeToken.getConstructor(),    defaultImplementation);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
811	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getConstructor(),  false);  [CE]  <identifier>  expected  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getConstructor(),  false);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getConstructor(),  false);	  final    Type    type    =    typeToken.getConstructor(),    defaultImplementation);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
812	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken.toObjectType();  [CE]  cannot  find  symbol  getTypeToken  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken.toObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken.toObjectType();	  final    Type    type    =    token.toObjectType();    	non-compiled	[CE]  cannot  find  symbol  getTypeToken	145	None	replace
813	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.toObjectType());  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.toObjectType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.toObjectType());	  final    Type    type    =    token.toObjectType();    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
814	[BUG]  [BUGGY]  final  Type  type  =  this.typeToken.toObjectType();  [CE]  cannot  find  symbol  typeToken  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  this.typeToken.toObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  this.typeToken.toObjectType();	  final    Type    type    =    token.toObjectType();    	non-compiled	[CE]  cannot  find  symbol  typeToken	145	None	replace
815	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().constructType(typeToken.toObjectType());  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken().constructType(typeToken.toObjectType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().constructType(typeToken.toObjectType());	  final    Type    type    =    getTypeToken().toObjectType();    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
816	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().typeToObjectType();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken().typeToObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().typeToObjectType();	  final    Type    type    =    getTypeToken().toObjectType();    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
817	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  instances.getType());  [CE]  cannot  find  symbol  instances  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken,  instances.getType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  instances.getType());	  final    Type    type    =    getType(typeToken,    instanceCreators.getType());    	non-compiled	[CE]  cannot  find  symbol  instances	88	None	replace
818	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  instanceCreators.values().getType());  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken,  instanceCreators.values().getType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  instanceCreators.values().getType());	  final    Type    type    =    getType(typeToken,    instanceCreators.getType());    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
819	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  instanceCreators.getType(),  null);  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken,  instanceCreators.getType(),  null);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  instanceCreators.getType(),  null);	  final    Type    type    =    getType(typeToken,    instanceCreators.getType());    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
820	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  instanceCreators.getType(),  defaultImplementation);  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken,  instanceCreators.getType(),  defaultImplementation);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  instanceCreators.getType(),  defaultImplementation);	  final    Type    type    =    getType(typeToken,    instanceCreators.getType());    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
821	[BUG]  [BUGGY]  TypeToken  <  T>  rawType  =  typeToken.getPrimitiveType();  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  TypeToken  <  T>  rawType  =  typeToken.getPrimitiveType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	TypeToken  <  T>  rawType  =  typeToken.getPrimitiveType();	  TypeToken    <    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
822	[BUG]  [BUGGY]  TypeToken  <  T>  rawType  =  typeToken.getConstructor();  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  TypeToken  <  T>  rawType  =  typeToken.getConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	TypeToken  <  T>  rawType  =  typeToken.getConstructor();	  TypeToken    <    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
823	[BUG]  [BUGGY]  if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }  [CE]  ObjectConstructor  is  abstract;  cannot  be  instantiated  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }	  final    Type    type    =    typeToken.getRawType();    final    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  ObjectConstructor  is  abstract;  cannot  be  instantiated	19	None	replace
824	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().objectConstructor().restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken().objectConstructor().restrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().objectConstructor().restrictByNotNullOrUndefined();	  final    Type    type    =    getTypeToken().restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
825	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().strictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken().strictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().strictByNotNullOrUndefined();	  final    Type    type    =    getTypeToken().restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
826	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().destrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken().destrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().destrictByNotNullOrUndefined();	  final    Type    type    =    getTypeToken().restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
827	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().objectImplementation(typeToken.restrictByNotNullOrUndefined());  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken().objectImplementation(typeToken.restrictByNotNullOrUndefined());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().objectImplementation(typeToken.restrictByNotNullOrUndefined());	  final    Type    type    =    getTypeToken().restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
828	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().type();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken().type();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().type();	  final    Type    type    =    typeToken.type();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
829	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getConstructorType()  :  getTypeRegistry().getConstructorType();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getConstructorType()  :  getTypeRegistry().getConstructorType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getConstructorType()  :  getTypeRegistry().getConstructorType();	  final    Type    type    =    typeToken!=    null?    typeToken.getConstructorType()    :    typeToken.getConstructorType();    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
830	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObjectConstructor()  :  this.typeToken.toObjectConstructor();  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObjectConstructor()  :  this.typeToken.toObjectConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.toObjectConstructor()  :  this.typeToken.toObjectConstructor();	  final    Type    type    =    typeToken!=    null?    typeToken.toObjectConstructor()    :    typeToken.toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
831	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeCreators.get(rawTypeToken);  [CE]  cannot  find  symbol  rawTypeToken  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeCreators.get(rawTypeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeCreators.get(rawTypeToken);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(rawTypeToken);    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	41	None	replace
832	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.typeRegistry.getTypeRegistry();  [CE]  cannot  find  symbol  typeRegistry  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.typeRegistry.getTypeRegistry();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  null  :  typeToken.typeRegistry.getTypeRegistry();	  final    Type    type    =    typeToken!=    null?    null    :    typeToken.getTypeRegistry();    	non-compiled	[CE]  cannot  find  symbol  typeRegistry	8	None	replace
833	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.cloneTree();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.cloneTree();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  null  :  typeToken.cloneTree();	  final    Type    type    =    typeToken!=    null?    null    :    typeToken.getTypeRegistry();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
834	[BUG]  [BUGGY]  final  Type  type  =  typeToken.typeToken.cloneTree();  [CE]  cannot  find  symbol  typeToken  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.typeToken.cloneTree();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.typeToken.cloneTree();	  final    Type    type    =    typeToken.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  typeToken	89	None	replace
835	[BUG]  [BUGGY]  final  Type  type  =  typeToken.cloneObject();  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.cloneObject();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.cloneObject();	  final    Type    type    =    typeToken.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
836	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  this);  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  this);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.getType(),  this);	  final    Type    type    =    getType(typeToken.getType(),    typeToken);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
837	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  null);  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  null);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.getType(),  null);	  final    Type    type    =    getType(typeToken.getType(),    typeToken);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
838	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  types);  [CE]  cannot  find  symbol  types  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  types);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.getType(),  types);	  final    Type    type    =    getType(typeToken.getType(),    typeToken);    	non-compiled	[CE]  cannot  find  symbol  types	53	None	replace
839	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  ObjectConstructor.class.getRawType());  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken,  ObjectConstructor.class.getRawType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  ObjectConstructor.class.getRawType());	  final    Type    type    =    getType(typeToken.getRawType());    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
840	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  nameToken;  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  nameToken;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  nameToken;	  final    Type    type    =    typeToken!=    null?    typeToken.getSuperType()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
841	[BUG]  [BUGGY]  final  Type  type  =  typeToken.construct(defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.construct(defaultImplementation);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.construct(defaultImplementation);	  final    Type    type    =    typeToken.constructor();    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	57	None	replace
842	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null  ||  typeToken.getReturnType()  :  typeToken.getReturnType();  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null  ||  typeToken.getReturnType()  :  typeToken.getReturnType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null  ||  typeToken.getReturnType()  :  typeToken.getReturnType();	  final    Type    type    =    typeToken    ==    null?    typeToken.getReturnType()    :    typeToken.getReturnType();    	non-compiled	[CE]  ';'  expected	153	None	replace
843	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  Type  type  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }  [CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  Type  type  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  Type  type  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }	  final    Type    type    =    typeToken.getRawType();    Type    type    =    typeToken.getRawType();    	non-compiled	[CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)	20	None	replace
844	[BUG]  [BUGGY]  if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  Type  type  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }  [CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  Type  type  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  Type  type  =  typeToken.getRawType();  }  else  {  return  new  ObjectConstructor  <  T>();  }	  final    Type    type    =    typeToken.getRawType();    Type    type    =    typeToken.getRawType();    	non-compiled	[CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)	20	None	replace
845	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  Type  type  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  Type  type  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  Type  type  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  final    Type    type    =    typeToken.getRawType();    Type    type    =    typeToken.getRawType();    	non-compiled	[CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)	20	None	replace
846	[BUG]  [BUGGY]  if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  Type  type  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  Type  type  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken  ==  null)  {  final  Type  type  =  typeToken.getRawType();  Type  type  =  typeToken.getRawType();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  final    Type    type    =    typeToken.getRawType();    Type    type    =    typeToken.getRawType();    	non-compiled	[CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)	20	None	replace
847	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.getParameterType(0));  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.getParameterType(0));  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.getParameterType(0));	  final    Type    type    =    getTypeToken(typeToken.getType(),    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
848	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.getName());  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.getName());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.getName());	  final    Type    type    =    getTypeToken(typeToken.getType(),    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
849	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken.strictByNotNullOrUndefined();  [CE]  cannot  find  symbol  getTypeToken  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken.strictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken.strictByNotNullOrUndefined();	  final    Type    type    =    typeToken.strictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol  getTypeToken	110	None	replace
850	[BUG]  [BUGGY]  final  Type  type  =  ObjectConstructor.strictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  ObjectConstructor.strictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  ObjectConstructor.strictByNotNullOrUndefined();	  final    Type    type    =    typeToken.strictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
851	[BUG]  [BUGGY]  final  Type  type  =  getTypeTokens().strictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeTokens().strictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeTokens().strictByNotNullOrUndefined();	  final    Type    type    =    typeToken.strictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
852	[BUG]  [BUGGY]  final  Type  type  =  token.strictByNotNullOrUndefined();  [CE]  cannot  find  symbol  token  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  token.strictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  token.strictByNotNullOrUndefined();	  final    Type    type    =    typeToken.strictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol  token	110	None	replace
853	[BUG]  [BUGGY]  final  Type  type  =  typeToken.trim(),  defaultImplementation.toType();  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.trim(),  defaultImplementation.toType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.trim(),  defaultImplementation.toType();	  final    Type    type    =    typeToken.trim().toType();    	non-compiled	[CE]  ';'  expected	131	None	replace
854	[BUG]  [BUGGY]  final  Type  type  =  typeToken.trim(),  defaultConstructor.toType();  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.trim(),  defaultConstructor.toType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.trim(),  defaultConstructor.toType();	  final    Type    type    =    typeToken.trim().toType();    	non-compiled	[CE]  ';'  expected	131	None	replace
855	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(typeToken,  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(typeToken,  defaultImplementation);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(typeToken,  defaultImplementation);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	36	None	replace
856	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(typeToken  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(typeToken  +  1);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(typeToken  +  1);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	36	None	replace
857	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null  ||  typeToken.getObjectType()  :  typeToken.getObjectType();  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null  ||  typeToken.getObjectType()  :  typeToken.getObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null  ||  typeToken.getObjectType()  :  typeToken.getObjectType();	  final    Type    type    =    typeToken!=    null?    typeToken.getObjectType()    :    typeToken.getObjectType();    	non-compiled	[CE]  ';'  expected	42	None	replace
858	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getObjectType()  :  typeToken.toObjectType();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getObjectType()  :  typeToken.toObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getObjectType()  :  typeToken.toObjectType();	  final    Type    type    =    typeToken!=    null?    typeToken.getObjectType()    :    typeToken.getObjectType();    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
859	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(rawTypeToken);  [CE]  cannot  find  symbol  rawTypeToken  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(rawTypeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(rawTypeToken);	  ObjectConstructor    <    T>    rawTypeCreator    =    instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	40	None	replace
860	[BUG]  [BUGGY]  final  Type  type  =  typeToken  <  null?  null  :  typeToken.toType();  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  <  null?  null  :  typeToken.toType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  <  null?  null  :  typeToken.toType();	  final    Type    type    =    typeToken.toType()?    null    :    typeToken.toType();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	97	None	replace
861	[BUG]  [BUGGY]  InstanceCreator  <?  super  T>  rawType  =  typeToken.getPrimitiveType();  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  InstanceCreator  <?  super  T>  rawType  =  typeToken.getPrimitiveType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	InstanceCreator  <?  super  T>  rawType  =  typeToken.getPrimitiveType();	  InstanceCreator    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
862	[BUG]  [BUGGY]  InstanceCreator  <?  super  T>  rawType  =  typeToken.getRawParameterType(0);  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  InstanceCreator  <?  super  T>  rawType  =  typeToken.getRawParameterType(0);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	InstanceCreator  <?  super  T>  rawType  =  typeToken.getRawParameterType(0);	  InstanceCreator    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
863	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  defaultConstructor.getConstructorType()  :  null;  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  defaultConstructor.getConstructorType()  :  null;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()?  defaultConstructor.getConstructorType()  :  null;	  final    Type    type    =    typeToken.isConstructor()?    typeToken.getConstructorType()    :    null;    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
864	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.toConstructorType()  :  null;  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.toConstructorType()  :  null;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()?  typeToken.toConstructorType()  :  null;	  final    Type    type    =    typeToken.isConstructor()?    typeToken.getConstructorType()    :    null;    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
865	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getOwnerType();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getOwnerType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getOwnerType();	  final    Type    type    =    typeToken.getOwnerType();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
866	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getOwnerType()  :  typeToken.getOwnerType();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getOwnerType()  :  typeToken.getOwnerType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getOwnerType()  :  typeToken.getOwnerType();	  final    Type    type    =    typeToken.getOwnerType();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
867	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  typeToken.cloneTree());  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  typeToken.cloneTree());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  typeToken.cloneTree());	  final    Type    type    =    getTypeToken(typeToken,    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
868	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  typeToken.toObjectConstructor());  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  typeToken.toObjectConstructor());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  typeToken.toObjectConstructor());	  final    Type    type    =    getTypeToken(typeToken,    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
869	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  typeToken.toObject());  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  typeToken.toObject());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  typeToken.toObject());	  final    Type    type    =    getTypeToken(typeToken,    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
870	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  typeToken.getType(),  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  typeToken.getType(),  defaultImplementation);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  typeToken.getType(),  defaultImplementation);	  final    Type    type    =    getTypeToken(typeToken,    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	29	None	replace
871	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  typeToken.toString());  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  typeToken.toString());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  typeToken.toString());	  final    Type    type    =    getTypeToken(typeToken,    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
872	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getReturnType()  :  typeToken.getRawType();  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getReturnType()  :  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getReturnType()  :  typeToken.getRawType();	  final    Type    type    =    typeToken!=    null?    typeToken.getReturnType()    :    typeToken.getReturnType();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
873	[BUG]  [BUGGY]  final  Type  type  =  typeToken.constructType(defaultImplementation.getReturnType());  [CE]  cannot  find  symbol  defaultImplementation  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.constructType(defaultImplementation.getReturnType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.constructType(defaultImplementation.getReturnType());	  final    Type    type    =    typeToken.constructType(typeToken.getReturnType());    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	155	None	replace
874	[BUG]  [BUGGY]  final  Type  type  =  typeToken.constructType(typeToken.cloneTree());  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.constructType(typeToken.cloneTree());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.constructType(typeToken.cloneTree());	  final    Type    type    =    typeToken.constructType(typeToken.getReturnType());    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
875	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  defaultImplementation.restrictByNotNullOrUndefined());  [CE]  cannot  find  symbol  defaultImplementation  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken,  defaultImplementation.restrictByNotNullOrUndefined());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  defaultImplementation.restrictByNotNullOrUndefined());	  final    Type    type    =    getType(typeToken.restrictByNotNullOrUndefined());    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	87	None	replace
876	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  state.restrictByNotNullOrUndefined());  [CE]  cannot  find  symbol  state  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken,  state.restrictByNotNullOrUndefined());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  state.restrictByNotNullOrUndefined());	  final    Type    type    =    getType(typeToken.restrictByNotNullOrUndefined());    	non-compiled	[CE]  cannot  find  symbol  state	87	None	replace
877	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  factory.restrictByNotNullOrUndefined());  [CE]  cannot  find  symbol  factory  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken,  factory.restrictByNotNullOrUndefined());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  factory.restrictByNotNullOrUndefined());	  final    Type    type    =    getType(typeToken.restrictByNotNullOrUndefined());    	non-compiled	[CE]  cannot  find  symbol  factory	87	None	replace
878	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.destrictByNotNullOrUndefined());  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.destrictByNotNullOrUndefined());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.destrictByNotNullOrUndefined());	  final    Type    type    =    getType(typeToken.restrictByNotNullOrUndefined());    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
879	[BUG]  [BUGGY]  final  Type  type  =  typeToken.deserializeWithType(typeToken.destrictByNotNullOrUndefined());  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.deserializeWithType(typeToken.destrictByNotNullOrUndefined());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.deserializeWithType(typeToken.destrictByNotNullOrUndefined());	  final    Type    type    =    typeToken.destrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
880	[BUG]  [BUGGY]  final  Type  type  =  token.destrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  token  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  token.destrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  token.destrictByNotNullOrUndefined();	  final    Type    type    =    typeToken.destrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol  token	109	None	replace
881	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  factory.restrictByNotNullOrUndefined());  [CE]  cannot  find  symbol  factory  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  factory.restrictByNotNullOrUndefined());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  factory.restrictByNotNullOrUndefined());	  final    Type    type    =    getTypeToken(typeToken.restrictByNotNullOrUndefined());    	non-compiled	[CE]  cannot  find  symbol  factory	128	None	replace
882	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  defaultConstructor.restrictByNotNullOrUndefined());  [CE]  cannot  find  symbol  defaultConstructor  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  defaultConstructor.restrictByNotNullOrUndefined());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  defaultConstructor.restrictByNotNullOrUndefined());	  final    Type    type    =    getTypeToken(typeToken.restrictByNotNullOrUndefined());    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	128	None	replace
883	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  state.restrictByNotNullOrUndefined());  [CE]  cannot  find  symbol  state  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  state.restrictByNotNullOrUndefined());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  state.restrictByNotNullOrUndefined());	  final    Type    type    =    getTypeToken(typeToken.restrictByNotNullOrUndefined());    	non-compiled	[CE]  cannot  find  symbol  state	128	None	replace
884	[BUG]  [BUGGY]  final  Type  type  =  getConstructorType(typeToken,  ObjectConstructor.class.getConstructorType());  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getConstructorType(typeToken,  ObjectConstructor.class.getConstructorType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getConstructorType(typeToken,  ObjectConstructor.class.getConstructorType());	  final    Type    type    =    getConstructorType(typeToken.getConstructorType());    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
885	[BUG]  [BUGGY]  final  Type  type  =  getConstructorType(typeToken.cloneTree(),  typeToken.getConstructorType());  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getConstructorType(typeToken.cloneTree(),  typeToken.getConstructorType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getConstructorType(typeToken.cloneTree(),  typeToken.getConstructorType());	  final    Type    type    =    getConstructorType(typeToken.getConstructorType());    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
886	[BUG]  [BUGGY]  final  Type  type  =  getConstructorType(typeToken,  factory.getConstructorType());  [CE]  cannot  find  symbol  factory  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getConstructorType(typeToken,  factory.getConstructorType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getConstructorType(typeToken,  factory.getConstructorType());	  final    Type    type    =    getConstructorType(typeToken.getConstructorType());    	non-compiled	[CE]  cannot  find  symbol  factory	118	None	replace
887	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toArray(new  TypeTokenType[typeToken.size()  ]);  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toArray(new  TypeTokenType[typeToken.size()  ]);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toArray(new  TypeTokenType[typeToken.size()  ]);	  final    Type    type    =    typeToken.toArray();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
888	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  Type  types  =  typeToken.getRawType();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  type  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  Type  types  =  typeToken.getRawType();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  Type  types  =  typeToken.getRawType();  }  else  {  throw  new  IllegalStateException( " ");  }	  final    Type    type    =    typeToken.getRawType();    final    Type    types    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol  type	105	None	replace
889	[BUG]  [BUGGY]  final  Type  type  =  typeToken.constructType(instanceCreators);  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.constructType(instanceCreators);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.constructType(instanceCreators);	  final    Type    type    =    typeToken.constructType(defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
890	[BUG]  [BUGGY]  final  Type  type  =  typeToken.constructType(valueToken);  [CE]  cannot  find  symbol  valueToken  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.constructType(valueToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.constructType(valueToken);	  final    Type    type    =    typeToken.constructType(defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol  valueToken	93	None	replace
891	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getReturnType()  ||  typeToken.getSimpleType();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getReturnType()  ||  typeToken.getSimpleType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getReturnType()  ||  typeToken.getSimpleType();	  final    Type    type    =    typeToken.getReturnType()    ||    typeToken.getReturnType();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
892	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getReturnType()  ||  typeToken.getObjectType();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getReturnType()  ||  typeToken.getObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getReturnType()  ||  typeToken.getObjectType();	  final    Type    type    =    typeToken.getReturnType()    ||    typeToken.getReturnType();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
893	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getReturnType()  ||  typeToken.getParameterType(0);  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getReturnType()  ||  typeToken.getParameterType(0);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getReturnType()  ||  typeToken.getParameterType(0);	  final    Type    type    =    typeToken.getReturnType()    ||    typeToken.getReturnType();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
894	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getReturnType()  ||  typeToken.getParameterTypes();  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getReturnType()  ||  typeToken.getParameterTypes();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getReturnType()  ||  typeToken.getParameterTypes();	  final    Type    type    =    typeToken.getReturnType()    ||    typeToken.getReturnType();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
895	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.cloneTree(),  typeToken.getRawType());  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.cloneTree(),  typeToken.getRawType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.cloneTree(),  typeToken.getRawType());	  final    Type    type    =    getTypeToken(typeToken.getRawType());    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
896	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  ObjectConstructor.class.getRawType());  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  ObjectConstructor.class.getRawType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  ObjectConstructor.class.getRawType());	  final    Type    type    =    getTypeToken(typeToken.getRawType());    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
897	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  final  Category  type  =  this.typeToken.getRawType();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  final  Category  type  =  this.typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  final  Category  type  =  this.typeToken.getRawType();	  final    Type    type    =    typeToken.getRawType();    final    Category    type    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
898	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getTypeToType();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getTypeToType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getTypeToType();	  final    Type    type    =    typeToken.typeToType();    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
899	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().typeToType();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken().typeToType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().typeToType();	  final    Type    type    =    typeToken.typeToType();    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
900	[BUG]  [BUGGY]  final  Type  type  =  typeToken.valueToType();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.valueToType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.valueToType();	  final    Type    type    =    typeToken.typeToType();    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
901	[BUG]  [BUGGY]  final  Type  type  =  typeToken.objectTypeToType();  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.objectTypeToType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.objectTypeToType();	  final    Type    type    =    typeToken.typeToType();    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
902	[BUG]  [BUGGY]  final  Type  type  =  defaultImplementation,  defaultConstructor.getConstructor();  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  defaultImplementation,  defaultConstructor.getConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  defaultImplementation,  defaultConstructor.getConstructor();	  final    Type    type    =    typeToken,    defaultConstructor.getConstructor();    	non-compiled	[CE]  ';'  expected	55	None	replace
903	[BUG]  [BUGGY]  final  Type  type  =  typeToken,  defaultConstructor.getObjectConstructor();  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken,  defaultConstructor.getObjectConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken,  defaultConstructor.getObjectConstructor();	  final    Type    type    =    typeToken,    defaultConstructor.getConstructor();    	non-compiled	[CE]  ';'  expected	55	None	replace
904	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.getRestrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.getRestrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  null  :  typeToken.getRestrictByNotNullOrUndefined();	  final    Type    type    =    typeToken.getRestrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
905	[BUG]  [BUGGY]  final  Type  type  =  this.typeToken.getRestrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  typeToken  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  this.typeToken.getRestrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  this.typeToken.getRestrictByNotNullOrUndefined();	  final    Type    type    =    typeToken.getRestrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol  typeToken	23	None	replace
906	[BUG]  [BUGGY]  final  Type  type  =  token.getRestrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  token  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  token.getRestrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  token.getRestrictByNotNullOrUndefined();	  final    Type    type    =    typeToken.getRestrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol  token	23	None	replace
907	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toRestrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toRestrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toRestrictByNotNullOrUndefined();	  final    Type    type    =    typeToken.getRestrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
908	[BUG]  [BUGGY]  final  T  type  =  getTypeToken().restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  T  type  =  getTypeToken().restrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  T  type  =  getTypeToken().restrictByNotNullOrUndefined();	  final    T    type    =    typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
909	[BUG]  [BUGGY]  final  T  type  =  this.typeToken.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  typeToken  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  T  type  =  this.typeToken.restrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  T  type  =  this.typeToken.restrictByNotNullOrUndefined();	  final    T    type    =    typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol  typeToken	26	None	replace
910	[BUG]  [BUGGY]  final  T  type  =  token.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  token  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  T  type  =  token.restrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  T  type  =  token.restrictByNotNullOrUndefined();	  final    T    type    =    typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol  token	26	None	replace
911	[BUG]  [BUGGY]  final  T  type  =  typeToken.destrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  T  type  =  typeToken.destrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  T  type  =  typeToken.destrictByNotNullOrUndefined();	  final    T    type    =    typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
912	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.typeRegistry.getTypeRegistry();  [CE]  cannot  find  symbol  typeRegistry  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.typeRegistry.getTypeRegistry();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  null  :  typeToken.typeRegistry.getTypeRegistry();	  final    Type    type    =    typeToken    ==    null?    null    :    typeToken.getTypeRegistry();    	non-compiled	[CE]  cannot  find  symbol  typeRegistry	123	None	replace
913	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.cloneTree();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.cloneTree();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  null  :  typeToken.cloneTree();	  final    Type    type    =    typeToken    ==    null?    null    :    typeToken.getTypeRegistry();    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
914	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toUpperCase(defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toUpperCase(defaultConstructor);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toUpperCase(defaultConstructor);	  final    Type    type    =    typeToken.toUpperCase();    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	140	None	replace
915	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken  :  typeToken.toObjectConstructor();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken  :  typeToken.toObjectConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken  :  typeToken.toObjectConstructor();	  final    Type    type    =    typeToken!=    null?    defaultConstructor    :    typeToken.toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
916	[BUG]  [BUGGY]  final  Type  type  =  typeToken.declareType(typeToken);  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.declareType(typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.declareType(typeToken);	  final    Type    type    =    typeToken.fromType();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
917	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(instanceCreators,  typeToken.getType());  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(instanceCreators,  typeToken.getType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(instanceCreators,  typeToken.getType());	  final    Type    type    =    getTypeToken(typeToken,    instanceCreators.getType());    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
918	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  instanceCreators.values().getType());  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  instanceCreators.values().getType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  instanceCreators.values().getType());	  final    Type    type    =    getTypeToken(typeToken,    instanceCreators.getType());    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
919	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  instanceCreators.getType(),  defaultImplementation);  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  instanceCreators.getType(),  defaultImplementation);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  instanceCreators.getType(),  defaultImplementation);	  final    Type    type    =    getTypeToken(typeToken,    instanceCreators.getType());    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
920	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  instanceCreators.getType(),  null);  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  instanceCreators.getType(),  null);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  instanceCreators.getType(),  null);	  final    Type    type    =    getTypeToken(typeToken,    instanceCreators.getType());    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
921	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  getTypeRegistry().getRawType();  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  getTypeRegistry().getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  getTypeRegistry().getRawType();	  final    Type    type    =    typeToken!=    null?    typeToken.getSuperType()    :    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
922	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.toConstructor();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.toConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  null  :  typeToken.toConstructor();	  final    Type    type    =    typeToken!=    null?    null    :    typeToken.getConstructorType();    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
923	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  null.getType(),  typeToken.getSimpleName());  [CE]  <null>  cannot  be  dereferenced  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken,  null.getType(),  typeToken.getSimpleName());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  null.getType(),  typeToken.getSimpleName());	  final    Type    type    =    getType(typeToken.getType(),    typeToken.getSimpleName());    	non-compiled	[CE]  <null>  cannot  be  dereferenced	54	None	replace
924	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getObjectType()  :  getTypeRegistry().getRawType();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getObjectType()  :  getTypeRegistry().getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getObjectType()  :  getTypeRegistry().getRawType();	  final    Type    type    =    typeToken!=    null?    typeToken.getObjectType()    :    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
925	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null  ||  typeToken.getObjectType()  :  typeToken.getRawType();  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null  ||  typeToken.getObjectType()  :  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null  ||  typeToken.getObjectType()  :  typeToken.getRawType();	  final    Type    type    =    typeToken!=    null?    typeToken.getObjectType()    :    typeToken.getRawType();    	non-compiled	[CE]  ';'  expected	134	None	replace
926	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toObjectConstructor(typeImplementation);  [CE]  cannot  find  symbol  typeImplementation  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toObjectConstructor(typeImplementation);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toObjectConstructor(typeImplementation);	  final    Type    type    =    typeToken.toObjectConstructor(defaultConstructor);    	non-compiled	[CE]  cannot  find  symbol  typeImplementation	15	None	replace
927	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getConstructor(defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getConstructor(defaultConstructor);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getConstructor(defaultConstructor);	  final    Type    type    =    typeToken.getConstructor(defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	59	None	replace
928	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getConstructor(objectImplementation);  [CE]  cannot  find  symbol  objectImplementation  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getConstructor(objectImplementation);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getConstructor(objectImplementation);	  final    Type    type    =    typeToken.getConstructor(defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol  objectImplementation	59	None	replace
929	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getReturnType(),  this.defaultImplementation);  [CE]  <identifier>  expected  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getReturnType(),  this.defaultImplementation);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getReturnType(),  this.defaultImplementation);	  final    Type    type    =    typeToken.getReturnType(),    defaultImplementation);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
930	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getReturnType(),  null);  [CE]  <identifier>  expected  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getReturnType(),  null);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getReturnType(),  null);	  final    Type    type    =    typeToken.getReturnType(),    defaultImplementation);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
931	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().constructType(typeToken.toType());  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken().constructType(typeToken.toType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().constructType(typeToken.toType());	  final    Type    type    =    getTypeToken().toType();    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
932	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().cloneTree();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken().cloneTree();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().cloneTree();	  final    Type    type    =    getTypeToken().toType();    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
933	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.toObject(),  defaultImplementation);  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.toObject(),  defaultImplementation);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.toObject(),  defaultImplementation);	  final    Type    type    =    getTypeToken(typeToken.toObject());    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
934	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  getType(typeToken.getType(),  typeToken.getRawType());  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Class  <?  super  T>  rawType  =  getType(typeToken.getType(),  typeToken.getRawType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Class  <?  super  T>  rawType  =  getType(typeToken.getType(),  typeToken.getRawType());	  final    Type    type    =    getType(typeToken.getType(),    typeToken.getRawType());    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
935	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  this.typeToken.getRawType());  [CE]  cannot  find  symbol  typeToken  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  this.typeToken.getRawType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.getType(),  this.typeToken.getRawType());	  final    Type    type    =    getType(typeToken.getType(),    typeToken.getRawType());    	non-compiled	[CE]  cannot  find  symbol  typeToken	51	None	replace
936	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  typeToken.restrictByNotNullOrUndefined());  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  typeToken.restrictByNotNullOrUndefined());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.getType(),  typeToken.restrictByNotNullOrUndefined());	  final    Type    type    =    getType(typeToken.getType(),    typeToken.getRawType());    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
937	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  styleToken.getRawType());  [CE]  cannot  find  symbol  styleToken  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  styleToken.getRawType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.getType(),  styleToken.getRawType());	  final    Type    type    =    getType(typeToken.getType(),    typeToken.getRawType());    	non-compiled	[CE]  cannot  find  symbol  styleToken	51	None	replace
938	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.toObject(),  typeToken.toString());  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.toObject(),  typeToken.toString());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.toObject(),  typeToken.toString());	  final    Type    type    =    getTypeToken(typeToken.toObject());    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
939	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.trim());  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.trim());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.trim());	  final    Type    type    =    getTypeToken(typeToken.toObject());    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
940	[BUG]  [BUGGY]  final  Type  type  =  typeToken.constructType(token);  [CE]  cannot  find  symbol  token  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.constructType(token);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.constructType(token);	  final    Type    type    =    typeToken.constructType(defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol  token	93	None	replace
941	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  typeToken.getClass());  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  typeToken.getClass());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.getType(),  typeToken.getClass());	  final    Type    type    =    getType(typeToken.getType(),    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
942	[BUG]  [BUGGY]  final  Type  type  =  this.defaultImplementation.toObjectConstructor(DefaultImplementation.class);  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  this.defaultImplementation.toObjectConstructor(DefaultImplementation.class);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  this.defaultImplementation.toObjectConstructor(DefaultImplementation.class);	  final    Type    type    =    typeToken.toObjectConstructor(DefaultImplementation.class);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
943	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toObjectConstructor(DefaultImplementation.class,  defaultConstructor);  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toObjectConstructor(DefaultImplementation.class,  defaultConstructor);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toObjectConstructor(DefaultImplementation.class,  defaultConstructor);	  final    Type    type    =    typeToken.toObjectConstructor(DefaultImplementation.class);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
944	[BUG]  [BUGGY]  final  Type  type  =  DefaultImplementation.toObjectConstructor(typeToken);  [CE]  cannot  find  symbol  DefaultImplementation  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  DefaultImplementation.toObjectConstructor(typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  DefaultImplementation.toObjectConstructor(typeToken);	  final    Type    type    =    typeToken.toObjectConstructor(DefaultImplementation.class);    	non-compiled	[CE]  cannot  find  symbol  DefaultImplementation	13	None	replace
945	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.typeRegistry();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.typeRegistry();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  null  :  typeToken.typeRegistry();	  final    Type    type    =    typeToken!=    null?    null    :    typeToken.getTypeRegistry();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
946	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getObjectType()  :  defaultConstructor.getObjectType();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getObjectType()  :  defaultConstructor.getObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getObjectType()  :  defaultConstructor.getObjectType();	  final    Type    type    =    typeToken!=    null?    typeToken.getObjectType()    :    typeToken.getObjectType();    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
947	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getObjectType()  :  getTypeRegistry().getObjectType();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getObjectType()  :  getTypeRegistry().getObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getObjectType()  :  getTypeRegistry().getObjectType();	  final    Type    type    =    typeToken!=    null?    typeToken.getObjectType()    :    typeToken.getObjectType();    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
948	[BUG]  [BUGGY]  final  Type  type  =  getSuperType(typeToken.restrictByNotNullOrUndefined());  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getSuperType(typeToken.restrictByNotNullOrUndefined());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getSuperType(typeToken.restrictByNotNullOrUndefined());	  final    Type    type    =    getSuperType(typeToken.getSuperType());    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
949	[BUG]  [BUGGY]  final  Type  type  =  typeToken.decodeType(typeToken.fromType());  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.decodeType(typeToken.fromType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.decodeType(typeToken.fromType());	  final    Type    type    =    typeToken.fromType();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
950	[BUG]  [BUGGY]  final  Type  type  =  typeToken.decodeType(typeToken.toString());  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.decodeType(typeToken.toString());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.decodeType(typeToken.toString());	  final    Type    type    =    typeToken.fromType();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
951	[BUG]  [BUGGY]  final  Type  type  =(typeToken!=  null)?  this.typeToken.restrictByNotNullOrUndefined()  :  typeToken.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  typeToken  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =(typeToken!=  null)?  this.typeToken.restrictByNotNullOrUndefined()  :  typeToken.restrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =(typeToken!=  null)?  this.typeToken.restrictByNotNullOrUndefined()  :  typeToken.restrictByNotNullOrUndefined();	  final    Type    type    =    this.typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol  typeToken	107	None	replace
952	[BUG]  [BUGGY]  final  Type  type  =(typeToken!=  null)?  this.typeToken.restrictByNotNullOrUndefined()  :  typeToken.getRawType();  [CE]  cannot  find  symbol  typeToken  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =(typeToken!=  null)?  this.typeToken.restrictByNotNullOrUndefined()  :  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =(typeToken!=  null)?  this.typeToken.restrictByNotNullOrUndefined()  :  typeToken.getRawType();	  final    Type    type    =    this.typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol  typeToken	107	None	replace
953	[BUG]  [BUGGY]  final  Type  type  =(typeToken!=  null)?  this.typeToken.restrictByNotNullOrUndefined()  :  typeToken;  [CE]  cannot  find  symbol  typeToken  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =(typeToken!=  null)?  this.typeToken.restrictByNotNullOrUndefined()  :  typeToken;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =(typeToken!=  null)?  this.typeToken.restrictByNotNullOrUndefined()  :  typeToken;	  final    Type    type    =    this.typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol  typeToken	107	None	replace
954	[BUG]  [BUGGY]  final  Type  type  =  typeToken.narrowByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.narrowByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.narrowByNotNullOrUndefined();	  final    Type    type    =    typeToken.strictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
955	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.toLowerCase());  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.toLowerCase());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.toLowerCase());	  final    Type    type    =    getType(typeToken.toString());    	non-compiled	[CE]  cannot  find  symbol	150	None	replace
956	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.toString(),  typeToken);  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.toString(),  typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.toString(),  typeToken);	  final    Type    type    =    getType(typeToken.toString());    	non-compiled	[CE]  cannot  find  symbol	150	None	replace
957	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.trim());  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.trim());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.trim());	  final    Type    type    =    getType(typeToken.toString());    	non-compiled	[CE]  cannot  find  symbol	150	None	replace
958	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  getTypeRegistry().getSuperType();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  getTypeRegistry().getSuperType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  getTypeRegistry().getSuperType();	  final    Type    type    =    typeToken!=    null?    typeToken.getSuperType()    :    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
959	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  defaultConstructor.getSuperType();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  defaultConstructor.getSuperType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  defaultConstructor.getSuperType();	  final    Type    type    =    typeToken!=    null?    typeToken.getSuperType()    :    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
960	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  getType(typeToken.getSuperType());  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  getType(typeToken.getSuperType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  getType(typeToken.getSuperType());	  final    Type    type    =    typeToken!=    null?    typeToken.getSuperType()    :    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
961	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getConstructor(new  Class[]  {  }  );  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getConstructor(new  Class[]  {  }  );  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getConstructor(new  Class[]  {  }  );	  final    Type    type    =    typeToken.getConstructor(defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
962	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  getTypeRegistry().getTypeRegistry()  :  typeToken.getTypeRegistry();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  getTypeRegistry().getTypeRegistry()  :  typeToken.getTypeRegistry();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  getTypeRegistry().getTypeRegistry()  :  typeToken.getTypeRegistry();	  final    Type    type    =    typeToken!=    null?    getTypeRegistry()    :    typeToken.getTypeRegistry();    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
963	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  getTypeRegistry()  :  typeToken,  defaultConstructor.getTypeRegistry();  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  getTypeRegistry()  :  typeToken,  defaultConstructor.getTypeRegistry();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  getTypeRegistry()  :  typeToken,  defaultConstructor.getTypeRegistry();	  final    Type    type    =    typeToken!=    null?    getTypeRegistry()    :    typeToken.getTypeRegistry();    	non-compiled	[CE]  ';'  expected	126	None	replace
964	[BUG]  [BUGGY]  final  Type  type  =  typeToken.constructType(typeToken.getReturnType(),  typeToken);  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.constructType(typeToken.getReturnType(),  typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.constructType(typeToken.getReturnType(),  typeToken);	  final    Type    type    =    typeToken.constructType(typeToken.getReturnType());    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
965	[BUG]  [BUGGY]  final  Type  type  =  typeToken.constructType(typeToken,  defaultConstructor.getReturnType());  [CE]  cannot  find  symbol  defaultConstructor  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.constructType(typeToken,  defaultConstructor.getReturnType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.constructType(typeToken,  defaultConstructor.getReturnType());	  final    Type    type    =    typeToken.constructType(typeToken.getReturnType());    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	155	None	replace
966	[BUG]  [BUGGY]  final  Type  type  =  typeToken.constructType(typeToken,  defaultImplementation.getReturnType());  [CE]  cannot  find  symbol  defaultImplementation  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.constructType(typeToken,  defaultImplementation.getReturnType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.constructType(typeToken,  defaultImplementation.getReturnType());	  final    Type    type    =    typeToken.constructType(typeToken.getReturnType());    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	155	None	replace
967	[BUG]  [BUGGY]  final  Type  type  =  typeToken.constructType(typeToken.getReturnType(),  defaultConstructor);  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.constructType(typeToken.getReturnType(),  defaultConstructor);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.constructType(typeToken.getReturnType(),  defaultConstructor);	  final    Type    type    =    typeToken.constructType(typeToken.getReturnType());    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
968	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  token.cloneTree(),  typeToken.getType());  [CE]  cannot  find  symbol  token  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken,  token.cloneTree(),  typeToken.getType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  token.cloneTree(),  typeToken.getType());	  final    Type    type    =    getType(typeToken.cloneTree(),    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol  token	86	None	replace
969	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.cloneTree(),  typeToken.toString());  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.cloneTree(),  typeToken.toString());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.cloneTree(),  typeToken.toString());	  final    Type    type    =    getType(typeToken.cloneTree(),    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
970	[BUG]  [BUGGY]  final  Type  type  =  typeToken.trim(),  objectType.toObjectType();  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.trim(),  objectType.toObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.trim(),  objectType.toObjectType();	  final    Type    type    =    typeToken.trim().toObjectType();    	non-compiled	[CE]  ';'  expected	143	None	replace
971	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getTyperegistry()  :  typeToken.getTypeRegistry();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getTyperegistry()  :  typeToken.getTypeRegistry();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  typeToken.getTyperegistry()  :  typeToken.getTypeRegistry();	  final    Type    type    =    typeToken.getTyperegistry();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
972	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().declareType(typeToken.restrictByNotNullOrUndefined());  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken().declareType(typeToken.restrictByNotNullOrUndefined());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().declareType(typeToken.restrictByNotNullOrUndefined());	  final    Type    type    =    getTypeToken().restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
973	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getImplicitPrototype()  :  typeToken.getImplicitPrototype();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getImplicitPrototype()  :  typeToken.getImplicitPrototype();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getImplicitPrototype()  :  typeToken.getImplicitPrototype();	  final    Type    type    =    typeToken.getImplicitPrototype();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
974	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getImplicitPrototype()  :  new  TypeToken(typeToken.getImplicitPrototype());  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getImplicitPrototype()  :  new  TypeToken(typeToken.getImplicitPrototype());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getImplicitPrototype()  :  new  TypeToken(typeToken.getImplicitPrototype());	  final    Type    type    =    typeToken.getImplicitPrototype();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
975	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().getImplicitPrototype();  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken().getImplicitPrototype();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().getImplicitPrototype();	  final    Type    type    =    typeToken.getImplicitPrototype();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
976	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getImplicitPrototype()  :  defaultConstructor.getImplicitPrototype();  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getImplicitPrototype()  :  defaultConstructor.getImplicitPrototype();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getImplicitPrototype()  :  defaultConstructor.getImplicitPrototype();	  final    Type    type    =    typeToken.getImplicitPrototype();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
977	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toObjectConstructor(constructType(typeToken));  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toObjectConstructor(constructType(typeToken));  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toObjectConstructor(constructType(typeToken));	  final    Type    type    =    typeToken.toObjectConstructor(defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
978	[BUG]  [BUGGY]  final  Type  type  =  objectConstructor.getConstructorType(),  typeToken;  [CE]  cannot  find  symbol  objectConstructor  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  objectConstructor.getConstructorType(),  typeToken;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  objectConstructor.getConstructorType(),  typeToken;	  final    Type    type    =    typeToken.getConstructorType(),    defaultConstructor;    	non-compiled	[CE]  cannot  find  symbol  objectConstructor	48	None	replace
979	[BUG]  [BUGGY]  final  Type  type  =  typeToken.trim().restrictByNotEmptyOrUndefined();  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.trim().restrictByNotEmptyOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.trim().restrictByNotEmptyOrUndefined();	  final    Type    type    =    typeToken.restrictByNotEmptyOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
980	[BUG]  [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullable();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullable();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.restrictByNotNullable();	  final    Type    type    =    typeToken.restrictByNotEmptyOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
981	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  typeToken.restrictByNotNullOrUndefined());  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  typeToken.restrictByNotNullOrUndefined());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  typeToken.restrictByNotNullOrUndefined());	  final    Type    type    =    getTypeToken(typeToken,    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
982	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  typeToken.narrowBy(typeToken.getType()));  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  typeToken.narrowBy(typeToken.getType()));  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  typeToken.narrowBy(typeToken.getType()));	  final    Type    type    =    getTypeToken(typeToken,    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
983	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  this.typeToken.getConstructorType();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  this.typeToken.getConstructorType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  this.typeToken.getConstructorType();	  final    Type    type    =    typeToken.isConstructor()?    typeToken.getConstructorType()    :    typeToken.getConstructorType();    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
984	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  typeToken,  defaultConstructor.getConstructorType();  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  typeToken,  defaultConstructor.getConstructorType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  typeToken,  defaultConstructor.getConstructorType();	  final    Type    type    =    typeToken.isConstructor()?    typeToken.getConstructorType()    :    typeToken.getConstructorType();    	non-compiled	[CE]  ';'  expected	163	None	replace
985	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  getTypeRegistry().getConstructorType();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  getTypeRegistry().getConstructorType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  getTypeRegistry().getConstructorType();	  final    Type    type    =    typeToken.isConstructor()?    typeToken.getConstructorType()    :    typeToken.getConstructorType();    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
986	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getSuperType()  ||  typeToken.getSubtype(typeToken.getSuperType());  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getSuperType()  ||  typeToken.getSubtype(typeToken.getSuperType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getSuperType()  ||  typeToken.getSubtype(typeToken.getSuperType());	  final    Type    type    =    typeToken.getSuperType()    ||    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
987	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getSuperType()  ||  typeToken.getParameterType(typeToken.getSuperType());  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getSuperType()  ||  typeToken.getParameterType(typeToken.getSuperType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getSuperType()  ||  typeToken.getParameterType(typeToken.getSuperType());	  final    Type    type    =    typeToken.getSuperType()    ||    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
988	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  defaultConstructor.getRawType());  [CE]  cannot  find  symbol  defaultConstructor  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  defaultConstructor.getRawType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  defaultConstructor.getRawType());	  final    Type    type    =    getTypeToken(typeToken.getRawType());    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	32	None	replace
989	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  context.getRawType());  [CE]  cannot  find  symbol  context  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  context.getRawType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  context.getRawType());	  final    Type    type    =    getTypeToken(typeToken.getRawType());    	non-compiled	[CE]  cannot  find  symbol  context	32	None	replace
990	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  objectConstructor.getTypeRegistry()  :  typeToken.getTypeRegistry();  [CE]  cannot  find  symbol  objectConstructor  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  objectConstructor.getTypeRegistry()  :  typeToken.getTypeRegistry();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  objectConstructor.getTypeRegistry()  :  typeToken.getTypeRegistry();	  final    Type    type    =    typeToken!=    null?    defaultImplementation.getTypeRegistry()    :    typeToken.getTypeRegistry();    	non-compiled	[CE]  cannot  find  symbol  objectConstructor	125	None	replace
991	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.typeToken.getSuperType();  [CE]  cannot  find  symbol  typeToken  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.typeToken.getSuperType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  null  :  typeToken.typeToken.getSuperType();	  final    Type    type    =    typeToken    ==    null?    null    :    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol  typeToken	68	None	replace
992	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toUpperCase(),  defaultImplementation);  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toUpperCase(),  defaultImplementation);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toUpperCase(),  defaultImplementation);	  final    Type    type    =    typeToken.toUpperCase();    	non-compiled	[CE]  ';'  expected	140	None	replace
993	[BUG]  [BUGGY]  final  Type  type  =  typeToken,  defaultImplementation.toUpperCase();  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken,  defaultImplementation.toUpperCase();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken,  defaultImplementation.toUpperCase();	  final    Type    type    =    typeToken.toUpperCase();    	non-compiled	[CE]  ';'  expected	140	None	replace
994	[BUG]  [BUGGY]  final  Type  type  =  typeToken.trim().toUpperCase();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.trim().toUpperCase();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.trim().toUpperCase();	  final    Type    type    =    typeToken.toUpperCase();    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
995	[BUG]  [BUGGY]  final  Type  type  =  typeToken.resolveType(typeToken.returnType());  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.resolveType(typeToken.returnType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.resolveType(typeToken.returnType());	  final    Type    type    =    typeToken.returnType();    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
996	[BUG]  [BUGGY]  final  Type  type  =  typeToken.trim().returnType();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.trim().returnType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.trim().returnType();	  final    Type    type    =    typeToken.returnType();    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
997	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  this.typeToken);  [CE]  cannot  find  symbol  typeToken  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  this.typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getType(),  this.typeToken);	  final    Type    type    =    getTypeToken(typeToken.getType(),    typeToken);    	non-compiled	[CE]  cannot  find  symbol  typeToken	33	None	replace
998	[BUG]  [BUGGY]  final  Type  <  T>  type  =  getTypeToken(typeToken.getType(),  typeToken);  [CE]  type  Type  does  not  take  parameters  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  <  T>  type  =  getTypeToken(typeToken.getType(),  typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  <  T>  type  =  getTypeToken(typeToken.getType(),  typeToken);	  final    Type    type    =    getTypeToken(typeToken.getType(),    typeToken);    	non-compiled	[CE]  type  Type  does  not  take  parameters	33	None	replace
999	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  Type  types  =  typeToken.getRawType();  }  else  {  return  defaultConstructor.createInstance(typeToken);  }  [CE]  cannot  find  symbol  defaultConstructor  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  Type  types  =  typeToken.getRawType();  }  else  {  return  defaultConstructor.createInstance(typeToken);  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  final  Type  types  =  typeToken.getRawType();  }  else  {  return  defaultConstructor.createInstance(typeToken);  }	  final    Type    type    =    typeToken.getRawType();    final    Type    types    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	105	None	replace
1000	[BUG]  [BUGGY]  final  Type  type  =  typeToken.declareType(typeToken.toString());  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.declareType(typeToken.toString());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.declareType(typeToken.toString());	  final    Type    type    =    typeToken.constructor();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
1001	[BUG]  [BUGGY]  final  Type  type  =  typeToken.declareType(typeToken.constructor());  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.declareType(typeToken.constructor());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.declareType(typeToken.constructor());	  final    Type    type    =    typeToken.constructor();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
1002	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  getDefaultConstructor().toObjectConstructor()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  getDefaultConstructor().toObjectConstructor()  :  typeToken;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  getDefaultConstructor().toObjectConstructor()  :  typeToken;	  final    Type    type    =    typeToken!=    null?    defaultConstructor.toObjectConstructor()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
1003	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  objectConstructor.toObjectConstructor()  :  typeToken;  [CE]  cannot  find  symbol  objectConstructor  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  objectConstructor.toObjectConstructor()  :  typeToken;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  objectConstructor.toObjectConstructor()  :  typeToken;	  final    Type    type    =    typeToken!=    null?    defaultConstructor.toObjectConstructor()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol  objectConstructor	78	None	replace
1004	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().trim().toObjectConstructor();  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken().trim().toObjectConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().trim().toObjectConstructor();	  final    Type    type    =    getTypeToken().toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
1005	[BUG]  [BUGGY]  final  Type  type  =  ObjectConstructor.TO_OBJECT_CONSTRUCTOR;  [CE]  cannot  find  symbol  TO_OBJECT_CONSTRUCTOR  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  ObjectConstructor.TO_OBJECT_CONSTRUCTOR;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  ObjectConstructor.TO_OBJECT_CONSTRUCTOR;	  final    Type    type    =    ObjectConstructor.toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol  TO_OBJECT_CONSTRUCTOR	79	None	replace
1006	[BUG]  [BUGGY]  final  Type  type  =  ObjectConstructor.create(typeToken);  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  ObjectConstructor.create(typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  ObjectConstructor.create(typeToken);	  final    Type    type    =    ObjectConstructor.toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
1007	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getReturnType(),  factory);  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getReturnType(),  factory);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getReturnType(),  factory);	  final    Type    type    =    typeToken.getReturnType(),    defaultImplementation);    	non-compiled	[CE]  ';'  expected	3	None	replace
1008	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.getClass());  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.getClass());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.getClass());	  final    Type    type    =    getTypeToken(typeToken.getType(),    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
1009	[BUG]  [BUGGY]  TypeToken  <  T>  typeToken  =  typeToken.toString();  [CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  TypeToken  <  T>  typeToken  =  typeToken.toString();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	TypeToken  <  T>  typeToken  =  typeToken.toString();	  TypeToken    <    T>    typeToken    =    typeToken.getRawType();    	non-compiled	[CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)	151	None	replace
1010	[BUG]  [BUGGY]  TypeToken  <  T>  typeToken  =  typeToken.restrictByNotNullOrUndefined();  [CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  TypeToken  <  T>  typeToken  =  typeToken.restrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	TypeToken  <  T>  typeToken  =  typeToken.restrictByNotNullOrUndefined();	  TypeToken    <    T>    typeToken    =    typeToken.getRawType();    	non-compiled	[CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)	151	None	replace
1011	[BUG]  [BUGGY]  TypeToken  <  T>  typeToken  =  typeToken.cloneTree();  [CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  TypeToken  <  T>  typeToken  =  typeToken.cloneTree();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	TypeToken  <  T>  typeToken  =  typeToken.cloneTree();	  TypeToken    <    T>    typeToken    =    typeToken.getRawType();    	non-compiled	[CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)	151	None	replace
1012	[BUG]  [BUGGY]  TypeToken  <  T>  typeToken  =  typeToken.toObject();  [CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  TypeToken  <  T>  typeToken  =  typeToken.toObject();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	TypeToken  <  T>  typeToken  =  typeToken.toObject();	  TypeToken    <    T>    typeToken    =    typeToken.getRawType();    	non-compiled	[CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)	151	None	replace
1013	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.toLowerCase());  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.toLowerCase());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.toLowerCase());	  final    Type    type    =    getTypeToken(typeToken.toString());    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
1014	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.toString(),  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.toString(),  defaultConstructor);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.toString(),  defaultConstructor);	  final    Type    type    =    getTypeToken(typeToken.toString());    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	74	None	replace
1015	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  defaultConstructor.cloneTree());  [CE]  cannot  find  symbol  defaultConstructor  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  defaultConstructor.cloneTree());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  defaultConstructor.cloneTree());	  final    Type    type    =    getTypeToken(typeToken.cloneTree());    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	34	None	replace
1016	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().trim().toType();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken().trim().toType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().trim().toType();	  final    Type    type    =    getTypeToken().toType();    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
1017	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().constructType(typeToken).toType();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken().constructType(typeToken).toType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().constructType(typeToken).toType();	  final    Type    type    =    getTypeToken().toType();    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
1018	[BUG]  [BUGGY]  static  final  Type  type  =  getType(typeToken.getRawType());  [CE]  illegal  start  of  expression  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  static  final  Type  type  =  getType(typeToken.getRawType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	static  final  Type  type  =  getType(typeToken.getRawType());	  final    Type    type    =    typeToken.getRawType();    static    final    Type    type    =    typeToken.getRawType();    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
1019	[BUG]  [BUGGY]  static  final  Type  type  =  this.typeToken.getRawType();  [CE]  illegal  start  of  expression  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  static  final  Type  type  =  this.typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	static  final  Type  type  =  this.typeToken.getRawType();	  final    Type    type    =    typeToken.getRawType();    static    final    Type    type    =    typeToken.getRawType();    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
1020	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isType()?  typeToken.restrictByNotNullOrUndefined()  :  typeToken.type();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isType()?  typeToken.restrictByNotNullOrUndefined()  :  typeToken.type();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isType()?  typeToken.restrictByNotNullOrUndefined()  :  typeToken.type();	  final    Type    type    =    typeToken.type();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
1021	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isType()?  typeToken.type()  :  null;  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isType()?  typeToken.type()  :  null;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isType()?  typeToken.type()  :  null;	  final    Type    type    =    typeToken.type();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
1022	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isType()?  typeToken.getType()  :  typeToken.type();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isType()?  typeToken.getType()  :  typeToken.type();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isType()?  typeToken.getType()  :  typeToken.type();	  final    Type    type    =    typeToken.type();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
1023	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getPropertyType()  :  typeToken.getPropertyType();  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getPropertyType()  :  typeToken.getPropertyType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getPropertyType()  :  typeToken.getPropertyType();	  final    Type    type    =    typeToken.getPropertyType();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
1024	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getPropertyType()  :  typeToken.getPropertyType();  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getPropertyType()  :  typeToken.getPropertyType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  typeToken.getPropertyType()  :  typeToken.getPropertyType();	  final    Type    type    =    typeToken.getPropertyType();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
1025	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getPropertyType()  :  null;  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getPropertyType()  :  null;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getPropertyType()  :  null;	  final    Type    type    =    typeToken.getPropertyType();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
1026	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getPropertyType()  :  defaultImplementation;  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getPropertyType()  :  defaultImplementation;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getPropertyType()  :  defaultImplementation;	  final    Type    type    =    typeToken.getPropertyType();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
1027	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  this.typeToken.getRawType();  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  this.typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  this.typeToken.getRawType();	  final    Type    type    =    typeToken!=    null?    typeToken.getSuperType()    :    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
1028	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  defaultConstructor.getRawType();  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  defaultConstructor.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  defaultConstructor.getRawType();	  final    Type    type    =    typeToken!=    null?    typeToken.getSuperType()    :    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
1029	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getTypeRegistry()  :  defaultConstructor.getTypeRegistry();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getTypeRegistry()  :  defaultConstructor.getTypeRegistry();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getTypeRegistry()  :  defaultConstructor.getTypeRegistry();	  final    Type    type    =    typeToken!=    null?    typeToken.getTypeRegistry()    :    typeToken.getTypeRegistry();    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
1030	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getTypeRegistry()  :  this.typeToken.getTypeRegistry();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getTypeRegistry()  :  this.typeToken.getTypeRegistry();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getTypeRegistry()  :  this.typeToken.getTypeRegistry();	  final    Type    type    =    typeToken!=    null?    typeToken.getTypeRegistry()    :    typeToken.getTypeRegistry();    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
1031	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  type  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	if(typeToken!=  null)  {  final  Type  type  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  typeToken.getRawType();  }  else  {  throw  new  IllegalStateException( " ");  }	  final    Type    type    =    typeToken.getRawType();    Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol  type	18	None	replace
1032	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  objectConstructor.getType()  :  typeToken.getConstructor();  [CE]  cannot  find  symbol  objectConstructor  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  objectConstructor.getType()  :  typeToken.getConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  objectConstructor.getType()  :  typeToken.getConstructor();	  final    Type    type    =    typeToken!=    null?    defaultConstructor.getType()    :    typeToken.getConstructor();    	non-compiled	[CE]  cannot  find  symbol  objectConstructor	100	None	replace
1033	[BUG]  [BUGGY]  final  T  type  =  typeToken.trim().restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  T  type  =  typeToken.trim().restrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  T  type  =  typeToken.trim().restrictByNotNullOrUndefined();	  final    T    type    =    typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
1034	[BUG]  [BUGGY]  final  Type  type  =  typeToken.trim().toStringType();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.trim().toStringType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.trim().toStringType();	  final    Type    type    =    typeToken.toStringType();    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
1035	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getConstructor(),  this);  [CE]  <identifier>  expected  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getConstructor(),  this);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getConstructor(),  this);	  final    Type    type    =    typeToken.getConstructor(),    defaultImplementation);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
1036	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  Class  <?>  rawType  =  typeToken.restrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	Class  <?>  rawType  =  typeToken.restrictByNotNullOrUndefined();	  Class    <?>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
1037	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.getRawParameterType(0);  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  Class  <?>  rawType  =  typeToken.getRawParameterType(0);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	Class  <?>  rawType  =  typeToken.getRawParameterType(0);	  Class    <?>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
1038	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getOwnerType()  :  typeToken.getOwnerType();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getOwnerType()  :  typeToken.getOwnerType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  typeToken.getOwnerType()  :  typeToken.getOwnerType();	  final    Type    type    =    typeToken.getOwnerType();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
1039	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getOwnerType()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getOwnerType()  :  typeToken;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getOwnerType()  :  typeToken;	  final    Type    type    =    typeToken.getOwnerType();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
1040	[BUG]  [BUGGY]  final  Type  type  =  typeToken.constructType(typeToken.getOwnerType());  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.constructType(typeToken.getOwnerType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.constructType(typeToken.getOwnerType());	  final    Type    type    =    typeToken.getOwnerType();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
1041	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.restrictByNotNullOrUndefined());  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.restrictByNotNullOrUndefined());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.restrictByNotNullOrUndefined());	  final    Type    type    =    getTypeToken(typeToken.getType(),    typeToken.getRawType());    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
1042	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  this.typeToken.getRawType());  [CE]  cannot  find  symbol  typeToken  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  this.typeToken.getRawType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getType(),  this.typeToken.getRawType());	  final    Type    type    =    getTypeToken(typeToken.getType(),    typeToken.getRawType());    	non-compiled	[CE]  cannot  find  symbol  typeToken	30	None	replace
1043	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  token.getType(),  typeToken.getRawType());  [CE]  cannot  find  symbol  token  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  token.getType(),  typeToken.getRawType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  token.getType(),  typeToken.getRawType());	  final    Type    type    =    getTypeToken(typeToken.getType(),    typeToken.getRawType());    	non-compiled	[CE]  cannot  find  symbol  token	30	None	replace
1044	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  styleToken.getRawType());  [CE]  cannot  find  symbol  styleToken  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  styleToken.getRawType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getType(),  styleToken.getRawType());	  final    Type    type    =    getTypeToken(typeToken.getType(),    typeToken.getRawType());    	non-compiled	[CE]  cannot  find  symbol  styleToken	30	None	replace
1045	[BUG]  [BUGGY]  final  Type  type  =  typeToken.narrowBy(typeToken.typeToType());  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.narrowBy(typeToken.typeToType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.narrowBy(typeToken.typeToType());	  final    Type    type    =    typeToken.typeToType();    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
1046	[BUG]  [BUGGY]  final  Type  type  =  typeToken.trim().typeToType();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.trim().typeToType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.trim().typeToType();	  final    Type    type    =    typeToken.typeToType();    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
1047	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toObjectType()  ||  typeToken.toObjectType()?  null  :  typeToken.toObjectType();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toObjectType()  ||  typeToken.toObjectType()?  null  :  typeToken.toObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toObjectType()  ||  typeToken.toObjectType()?  null  :  typeToken.toObjectType();	  final    Type    type    =    typeToken.toObjectType()?    null    :    typeToken.toObjectType();    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
1048	[BUG]  [BUGGY]  final  Type  type  =  typeToken,  defaultConstructor.toObjectType()?  null  :  typeToken.toObjectType();  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken,  defaultConstructor.toObjectType()?  null  :  typeToken.toObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken,  defaultConstructor.toObjectType()?  null  :  typeToken.toObjectType();	  final    Type    type    =    typeToken.toObjectType()?    null    :    typeToken.toObjectType();    	non-compiled	[CE]  ';'  expected	83	None	replace
1049	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObjectType()  :  null;  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObjectType()  :  null;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.toObjectType()  :  null;	  final    Type    type    =    typeToken.toObjectType()?    null    :    typeToken.toObjectType();    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
1050	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getType()  :  defaultImplementation;  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getType()  :  defaultImplementation;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()?  typeToken.getType()  :  defaultImplementation;	  final    Type    type    =    typeToken.isConstructor()?    typeToken.getConstructorType()    :    defaultImplementation;    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
1051	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  ObjectConstructor.getType());  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  ObjectConstructor.getType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  ObjectConstructor.getType());	  final    Type    type    =    getTypeToken(typeToken,    defaultConstructor.getType());    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
1052	[BUG]  [BUGGY]  InstanceCreator  <?  super  T>  rawType  =  typeToken.getRawSuperType();  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  InstanceCreator  <?  super  T>  rawType  =  typeToken.getRawSuperType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	InstanceCreator  <?  super  T>  rawType  =  typeToken.getRawSuperType();	  InstanceCreator    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
1053	[BUG]  [BUGGY]  InstanceCreator  <?  super  T>  rawType  =  typeToken.toString();  [CE]  incompatible  types  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  InstanceCreator  <?  super  T>  rawType  =  typeToken.toString();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	InstanceCreator  <?  super  T>  rawType  =  typeToken.toString();	  InstanceCreator    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  incompatible  types	113	None	replace
1054	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getConstructorType()  :  typeToken,  defaultConstructor.getConstructorType();  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getConstructorType()  :  typeToken,  defaultConstructor.getConstructorType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getConstructorType()  :  typeToken,  defaultConstructor.getConstructorType();	  final    Type    type    =    typeToken!=    null?    typeToken.getConstructorType()    :    typeToken.getConstructorType();    	non-compiled	[CE]  ';'  expected	162	None	replace
1055	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getObjectType()  ||  typeToken.isInterface();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getObjectType()  ||  typeToken.isInterface();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getObjectType()  ||  typeToken.isInterface();	  final    Type    type    =    typeToken.getObjectType()    ||    typeToken.getObjectType();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
1056	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getObjectType()  ||  typeToken.hasObjectType();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getObjectType()  ||  typeToken.hasObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getObjectType()  ||  typeToken.hasObjectType();	  final    Type    type    =    typeToken.getObjectType()    ||    typeToken.getObjectType();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
1057	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  defaultConstructor);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getType(),  defaultConstructor);	  final    Type    type    =    getTypeToken(typeToken.getType(),    defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	73	None	replace
1058	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  objectImplementation);  [CE]  cannot  find  symbol  objectImplementation  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  objectImplementation);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getType(),  objectImplementation);	  final    Type    type    =    getTypeToken(typeToken.getType(),    defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol  objectImplementation	73	None	replace
1059	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toLowerCase()?  typeToken.toLowerCase()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toLowerCase()?  typeToken.toLowerCase()  :  typeToken;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toLowerCase()?  typeToken.toLowerCase()  :  typeToken;	  final    Type    type    =    typeToken.toLowerCase();    	non-compiled	[CE]  cannot  find  symbol	141	None	replace
1060	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toLowerCase()?  typeToken.getType()  :  typeToken.toLowerCase();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toLowerCase()?  typeToken.getType()  :  typeToken.toLowerCase();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toLowerCase()?  typeToken.getType()  :  typeToken.toLowerCase();	  final    Type    type    =    typeToken.toLowerCase();    	non-compiled	[CE]  cannot  find  symbol	141	None	replace
1061	[BUG]  [BUGGY]  final  Type  type  =  typeToken.trim().toLowerCase();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.trim().toLowerCase();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.trim().toLowerCase();	  final    Type    type    =    typeToken.toLowerCase();    	non-compiled	[CE]  cannot  find  symbol	141	None	replace
1062	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toLowerCase()?  typeToken.toUpperCase()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toLowerCase()?  typeToken.toUpperCase()  :  typeToken;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toLowerCase()?  typeToken.toUpperCase()  :  typeToken;	  final    Type    type    =    typeToken.toLowerCase();    	non-compiled	[CE]  cannot  find  symbol	141	None	replace
1063	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getDefaultConstructor()  :  typeToken.toObjectConstructor();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getDefaultConstructor()  :  typeToken.toObjectConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getDefaultConstructor()  :  typeToken.toObjectConstructor();	  final    Type    type    =    typeToken!=    null?    defaultConstructor    :    typeToken.toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
1064	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toString()  :  typeToken.toObjectConstructor();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toString()  :  typeToken.toObjectConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.toString()  :  typeToken.toObjectConstructor();	  final    Type    type    =    typeToken!=    null?    defaultConstructor    :    typeToken.toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
1065	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  instanceCreators.constructType(typeToken));  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  instanceCreators.constructType(typeToken));  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  instanceCreators.constructType(typeToken));	  final    Type    type    =    getTypeToken(typeToken,    instanceCreators.getType());    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
1066	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  instanceCreators.size());  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  instanceCreators.size());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  instanceCreators.size());	  final    Type    type    =    getTypeToken(typeToken,    instanceCreators.getType());    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
1067	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  instanceCreators.instanceType());  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  instanceCreators.instanceType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  instanceCreators.instanceType());	  final    Type    type    =    getTypeToken(typeToken,    instanceCreators.getType());    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
1068	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeToken.get(typeToken);  [CE]  no  suitable  method  found  for  get(TypeToken<T#1>)  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeToken.get(typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeToken.get(typeToken);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  no  suitable  method  found  for  get(TypeToken<T#1>)	36	None	replace
1069	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(typeToken,  instanceCreators);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(typeToken,  instanceCreators);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(typeToken,  instanceCreators);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	36	None	replace
1070	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getDefaultConstructor()  :  typeToken.getConstructor();  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getDefaultConstructor()  :  typeToken.getConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getDefaultConstructor()  :  typeToken.getConstructor();	  final    Type    type    =    typeToken!=    null?    defaultConstructor    :    typeToken.getConstructor();    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
1071	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getSubType(typeToken.getSuperType()):  typeToken.getSubType(typeToken.getSuperType());  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getSubType(typeToken.getSuperType()):  typeToken.getSubType(typeToken.getSuperType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getSubType(typeToken.getSuperType()):  typeToken.getSubType(typeToken.getSuperType());	  final    Type    type    =    typeToken.getSubType(typeToken.getSuperType());    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
1072	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getSubType(typeToken.getSuperType(),  typeToken.getSuperType());  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getSubType(typeToken.getSuperType(),  typeToken.getSuperType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getSubType(typeToken.getSuperType(),  typeToken.getSuperType());	  final    Type    type    =    typeToken.getSubType(typeToken.getSuperType());    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
1073	[BUG]  [BUGGY]  final  Type  type  =  typeToken,  defaultConstructor.getSubType(typeToken.getSuperType());  [CE]  ';'  expected  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken,  defaultConstructor.getSubType(typeToken.getSuperType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken,  defaultConstructor.getSubType(typeToken.getSuperType());	  final    Type    type    =    typeToken.getSubType(typeToken.getSuperType());    	non-compiled	[CE]  ';'  expected	63	None	replace
1074	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getSubType(typeToken.getSuperType()  :  typeToken.getSuperType());  [CE]  ')'  expected  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getSubType(typeToken.getSuperType()  :  typeToken.getSuperType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getSubType(typeToken.getSuperType()  :  typeToken.getSuperType());	  final    Type    type    =    typeToken.getSubType(typeToken.getSuperType());    	non-compiled	[CE]  ')'  expected	63	None	replace
1075	[BUG]  [BUGGY]  Class  <?>  typeToken  =  typeToken.toString();  [CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  Class  <?>  typeToken  =  typeToken.toString();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	Class  <?>  typeToken  =  typeToken.toString();	  Class    <?>    typeToken    =    typeToken.getRawType();    	non-compiled	[CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)	152	None	replace
1076	[BUG]  [BUGGY]  Class  <?>  typeToken  =  typeToken.getRawParameterType(0);  [CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  Class  <?>  typeToken  =  typeToken.getRawParameterType(0);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	Class  <?>  typeToken  =  typeToken.getRawParameterType(0);	  Class    <?>    typeToken    =    typeToken.getRawType();    	non-compiled	[CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)	152	None	replace
1077	[BUG]  [BUGGY]  final  Type  type  =  typeToken.deserialize(typeToken.destrictByNotNullOrUndefined());  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.deserialize(typeToken.destrictByNotNullOrUndefined());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.deserialize(typeToken.destrictByNotNullOrUndefined());	  final    Type    type    =    typeToken.destrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
1078	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  instanceCreators.constructType(typeToken));  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken,  instanceCreators.constructType(typeToken));  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  instanceCreators.constructType(typeToken));	  final    Type    type    =    getType(typeToken,    instanceCreators.getType());    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
1079	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  instanceCreators.size());  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken,  instanceCreators.size());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  instanceCreators.size());	  final    Type    type    =    getType(typeToken,    instanceCreators.getType());    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
1080	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  defaultConstructor.cloneTree());  [CE]  cannot  find  symbol  defaultConstructor  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken,  defaultConstructor.cloneTree());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  defaultConstructor.cloneTree());	  final    Type    type    =    getType(typeToken.cloneTree());    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	85	None	replace
1081	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  defaultImplementation.cloneTree());  [CE]  cannot  find  symbol  defaultImplementation  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken,  defaultImplementation.cloneTree());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  defaultImplementation.cloneTree());	  final    Type    type    =    getType(typeToken.cloneTree());    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	85	None	replace
1082	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.restrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  null  :  typeToken.restrictByNotNullOrUndefined();	  final    Type    type    =    typeToken!=    null?    null    :    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
1083	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  getType(typeToken);  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  getType(typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  getType(typeToken);	  final    Type    type    =    typeToken!=    null?    typeToken.getSuperType()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
1084	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getRestrictByNotNullOrUndefined()  :  typeToken.getRestrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getRestrictByNotNullOrUndefined()  :  typeToken.getRestrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getRestrictByNotNullOrUndefined()  :  typeToken.getRestrictByNotNullOrUndefined();	  final    Type    type    =    typeToken.getRestrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
1085	[BUG]  [BUGGY]  final  Type  type  =  typeToken,  defaultConstructor.getRestrictByNotNullOrUndefined();  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken,  defaultConstructor.getRestrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken,  defaultConstructor.getRestrictByNotNullOrUndefined();	  final    Type    type    =    typeToken.getRestrictByNotNullOrUndefined();    	non-compiled	[CE]  ';'  expected	23	None	replace
1086	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getRestrictByNotNullOrUndefined()  :  categoryToken.getRestrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getRestrictByNotNullOrUndefined()  :  categoryToken.getRestrictByNotNullOrUndefined();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getRestrictByNotNullOrUndefined()  :  categoryToken.getRestrictByNotNullOrUndefined();	  final    Type    type    =    typeToken.getRestrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
1087	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getRestrictByNotNullOrUndefined()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getRestrictByNotNullOrUndefined()  :  typeToken;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getRestrictByNotNullOrUndefined()  :  typeToken;	  final    Type    type    =    typeToken.getRestrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
1088	[BUG]  [BUGGY]  final  Class  <?  super  Type>  type  =  typeToken.getRawType();  final  Category  type  =  typeToken.getRawType();  [CE]  incompatible  types  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Class  <?  super  Type>  type  =  typeToken.getRawType();  final  Category  type  =  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Class  <?  super  Type>  type  =  typeToken.getRawType();  final  Category  type  =  typeToken.getRawType();	  final    Type    type    =    typeToken.getRawType();    final    Category    type    =    typeToken.getRawType();    	non-compiled	[CE]  incompatible  types	21	None	replace
1089	[BUG]  [BUGGY]  final  Class  <  T>  type  =  typeToken.getRawType();  final  Category  type  =  typeToken.getRawType();  [CE]  incompatible  types  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Class  <  T>  type  =  typeToken.getRawType();  final  Category  type  =  typeToken.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Class  <  T>  type  =  typeToken.getRawType();  final  Category  type  =  typeToken.getRawType();	  final    Type    type    =    typeToken.getRawType();    final    Category    type    =    typeToken.getRawType();    	non-compiled	[CE]  incompatible  types	21	None	replace
1090	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObjectType()  :  defaultConstructor;  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObjectType()  :  defaultConstructor;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.toObjectType()  :  defaultConstructor;	  final    Type    type    =    typeToken!=    null?    typeToken.toObjectType()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
1091	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.cloneTree()  :  null;  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.cloneTree()  :  null;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.cloneTree()  :  null;	  final    Type    type    =    typeToken!=    null?    typeToken.getTypeRegistry()    :    null;    	non-compiled	[CE]  cannot  find  symbol	159	None	replace
1092	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.returnType();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.returnType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  null  :  typeToken.returnType();	  final    Type    type    =    typeToken!=    null?    null    :    typeToken.getReturnType();    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
1093	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getConstructor()  :  typeToken,  defaultConstructor.getConstructor();  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getConstructor()  :  typeToken,  defaultConstructor.getConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  typeToken.getConstructor()  :  typeToken,  defaultConstructor.getConstructor();	  final    Type    type    =    typeToken    ==    null?    typeToken.getConstructor()    :    typeToken.getConstructor();    	non-compiled	[CE]  ';'  expected	136	None	replace
1094	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.returnType()  :  typeToken.toString();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.returnType()  :  typeToken.toString();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.returnType()  :  typeToken.toString();	  final    Type    type    =    typeToken!=    null?    typeToken.getReturnType()    :    typeToken.toString();    	non-compiled	[CE]  cannot  find  symbol	156	None	replace
1095	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(typeToken.getRawClass());  [CE]  cannot  find  symbol  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(typeToken.getRawClass());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(typeToken.getRawClass());	  ObjectConstructor    <    T>    rawTypeCreator    =    instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
1096	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isTypeRegistry()?  typeToken.typeRegistry()  :  null;  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isTypeRegistry()?  typeToken.typeRegistry()  :  null;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isTypeRegistry()?  typeToken.typeRegistry()  :  null;	  final    Type    type    =    typeToken.typeRegistry();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
1097	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isTypeRegistry()?  typeToken.restrictByNotNullOrUndefined()  :  typeToken.typeRegistry();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isTypeRegistry()?  typeToken.restrictByNotNullOrUndefined()  :  typeToken.typeRegistry();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isTypeRegistry()?  typeToken.restrictByNotNullOrUndefined()  :  typeToken.typeRegistry();	  final    Type    type    =    typeToken.typeRegistry();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
1098	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken.getRawClass());  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken.getRawClass());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken.getRawClass());	  final    InstanceCreator    <    T>    rawType    =    instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
1099	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  typeToken.restrictByNotNullOrUndefined());  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken,  typeToken.restrictByNotNullOrUndefined());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  typeToken.restrictByNotNullOrUndefined());	  final    Type    type    =    getType(typeToken,    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
1100	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  typeToken.narrowBy(typeToken.getType()));  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken,  typeToken.narrowBy(typeToken.getType()));  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  typeToken.narrowBy(typeToken.getType()));	  final    Type    type    =    getType(typeToken,    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
1101	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  typeToken.instanceType());  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken,  typeToken.instanceType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  typeToken.instanceType());	  final    Type    type    =    getType(typeToken,    typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
1102	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toType()  ||  typeToken.toType()?  null  :  typeToken.toType();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toType()  ||  typeToken.toType()?  null  :  typeToken.toType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toType()  ||  typeToken.toType()?  null  :  typeToken.toType();	  final    Type    type    =    typeToken.toType()?    null    :    typeToken.toType();    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
1103	[BUG]  [BUGGY]  final  Type  tokenType  =  typeToken.toObjectType();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  tokenType  =  typeToken.toObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  tokenType  =  typeToken.toObjectType();	  final    Type    type    =    token.toObjectType();    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
1104	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  defaultConstructor.restrictByNotNullOrUndefined());  [CE]  cannot  find  symbol  defaultConstructor  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken,  defaultConstructor.restrictByNotNullOrUndefined());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  defaultConstructor.restrictByNotNullOrUndefined());	  final    Type    type    =    getType(typeToken.restrictByNotNullOrUndefined());    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	87	None	replace
1105	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  this.instance.getType());  [CE]  cannot  find  symbol  instance  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  this.instance.getType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  this.instance.getType());	  final    Type    type    =    getTypeToken(typeToken,    context.getType());    	non-compiled	[CE]  cannot  find  symbol  instance	130	None	replace
1106	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  prefix.getType());  [CE]  cannot  find  symbol  prefix  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  prefix.getType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  prefix.getType());	  final    Type    type    =    getTypeToken(typeToken,    context.getType());    	non-compiled	[CE]  cannot  find  symbol  prefix	130	None	replace
1107	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toArray(new  TypeToken[typeToken.toArray()  ]);  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toArray(new  TypeToken[typeToken.toArray()  ]);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toArray(new  TypeToken[typeToken.toArray()  ]);	  final    Type    type    =    typeToken.toArray();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
1108	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toArray(new  TypeToken(typeToken));  [CE]  no  suitable  constructor  found  for  TypeToken(TypeToken<T>)  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toArray(new  TypeToken(typeToken));  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toArray(new  TypeToken(typeToken));	  final    Type    type    =    typeToken.toArray();    	non-compiled	[CE]  no  suitable  constructor  found  for  TypeToken(TypeToken<T>)	60	None	replace
1109	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toArray(new  TypeToken[typeToken.toString()  ]);  [CE]  incompatible  types  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.toArray(new  TypeToken[typeToken.toString()  ]);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toArray(new  TypeToken[typeToken.toString()  ]);	  final    Type    type    =    typeToken.toArray();    	non-compiled	[CE]  incompatible  types	60	None	replace
1110	[BUG]  [BUGGY]  final  Type  type  =  typeToken,  defaultConstructor.toTypeConstructor();  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken,  defaultConstructor.toTypeConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken,  defaultConstructor.toTypeConstructor();	  final    Type    type    =    typeToken.toTypeConstructor();    	non-compiled	[CE]  ';'  expected	14	None	replace
1111	[BUG]  [BUGGY]  final  Type  type  =  typeToken.trim().toTypeConstructor();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.trim().toTypeConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.trim().toTypeConstructor();	  final    Type    type    =    typeToken.toTypeConstructor();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
1112	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.toStringType();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.toStringType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  null  :  typeToken.toStringType();	  final    Type    type    =    typeToken!=    null?    null    :    typeToken.toObjectType();    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
1113	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  this.typeToken.getSimpleName());  [CE]  cannot  find  symbol  typeToken  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  this.typeToken.getSimpleName());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.getType(),  this.typeToken.getSimpleName());	  final    Type    type    =    getType(typeToken.getType(),    typeToken.getSimpleName());    	non-compiled	[CE]  cannot  find  symbol  typeToken	54	None	replace
1114	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  token.getType(),  typeToken.getSimpleName());  [CE]  cannot  find  symbol  token  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken,  token.getType(),  typeToken.getSimpleName());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  token.getType(),  typeToken.getSimpleName());	  final    Type    type    =    getType(typeToken.getType(),    typeToken.getSimpleName());    	non-compiled	[CE]  cannot  find  symbol  token	54	None	replace
1115	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  this.typeToken);  [CE]  cannot  find  symbol  typeToken  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  this.typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.getType(),  this.typeToken);	  final    Type    type    =    getType(typeToken.getType(),    typeToken);    	non-compiled	[CE]  cannot  find  symbol  typeToken	53	None	replace
1116	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  defaultImplementation);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.getType(),  defaultImplementation);	  final    Type    type    =    getType(typeToken.getType(),    typeToken);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	53	None	replace
1117	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObject()  :  typeToken.toString();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObject()  :  typeToken.toString();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.toObject()  :  typeToken.toString();	  final    Type    type    =    typeToken!=    null?    typeToken.toObject()    :    typeToken.toObject();    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
1118	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  getTypeRegistry().getSimpleName();  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  getTypeRegistry().getSimpleName();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  getTypeRegistry().getSimpleName();	  final    Type    type    =    typeToken!=    null?    typeToken.getSuperType()    :    typeToken.getSimpleName();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
1119	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  this.typeToken.getSimpleName();  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  this.typeToken.getSimpleName();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  this.typeToken.getSimpleName();	  final    Type    type    =    typeToken!=    null?    typeToken.getSuperType()    :    typeToken.getSimpleName();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
1120	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  nameToken.getSimpleName();  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  nameToken.getSimpleName();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  nameToken.getSimpleName();	  final    Type    type    =    typeToken!=    null?    typeToken.getSuperType()    :    typeToken.getSimpleName();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
1121	[BUG]  [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullOrUndefined()?  typeToken.getRawType()  :  null;  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullOrUndefined()?  typeToken.getRawType()  :  null;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.restrictByNotNullOrUndefined()?  typeToken.getRawType()  :  null;	  final    Type    type    =    typeToken.restrictByNotNullOrUndefined(),    null;    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
1122	[BUG]  [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullOrUndefined()?  typeToken.getType()  :  null;  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullOrUndefined()?  typeToken.getType()  :  null;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.restrictByNotNullOrUndefined()?  typeToken.getType()  :  null;	  final    Type    type    =    typeToken.restrictByNotNullOrUndefined(),    null;    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
1123	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().trim().toObjectType();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  getTypeToken().trim().toObjectType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().trim().toObjectType();	  final    Type    type    =    getTypeToken().toObjectType();    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
1124	[BUG]  [BUGGY]  final  Type  type  =  typeToken.trim().toArrayType();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.trim().toArrayType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.trim().toArrayType();	  final    Type    type    =    typeToken.toArrayType();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
1125	[BUG]  [BUGGY]  final  Type  type  =  typeToken.typeToArrayType();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.typeToArrayType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.typeToArrayType();	  final    Type    type    =    typeToken.toArrayType();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
1126	[BUG]  [BUGGY]  final  Type  type  =  typeToken.trim().cloneTree();  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.trim().cloneTree();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.trim().cloneTree();	  final    Type    type    =    typeToken.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
1127	[BUG]  [BUGGY]  TypeToken  <  T>  rawType  =  typeToken.toString();  [CE]  incompatible  types  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  TypeToken  <  T>  rawType  =  typeToken.toString();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	TypeToken  <  T>  rawType  =  typeToken.toString();	  TypeToken    <    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  incompatible  types	37	None	replace
1128	[BUG]  [BUGGY]  TypeToken  <  T>  rawType  =  typeToken.getRawParameterType(0);  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  TypeToken  <  T>  rawType  =  typeToken.getRawParameterType(0);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	TypeToken  <  T>  rawType  =  typeToken.getRawParameterType(0);	  TypeToken    <    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
1129	[BUG]  [BUGGY]  final  Type  type  =  typeToken.constructType(typeToken.getReturnType(),  typeToken.getReturnType());  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.constructType(typeToken.getReturnType(),  typeToken.getReturnType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.constructType(typeToken.getReturnType(),  typeToken.getReturnType());	  final    Type    type    =    typeToken.constructType(defaultImplementation,    typeToken.getReturnType());    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
1130	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getObjectType()  :  defaultConstructor.getRawType();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getObjectType()  :  defaultConstructor.getRawType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getObjectType()  :  defaultConstructor.getRawType();	  final    Type    type    =    typeToken!=    null?    typeToken.getObjectType()    :    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
1131	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObjectConstructor()  :  typeToken,  defaultConstructor.toString();  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObjectConstructor()  :  typeToken,  defaultConstructor.toString();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.toObjectConstructor()  :  typeToken,  defaultConstructor.toString();	  final    Type    type    =    typeToken!=    null?    typeToken.toObjectConstructor()    :    typeToken.toString();    	non-compiled	[CE]  ';'  expected	147	None	replace
1132	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawSuperType();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawSuperType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	Class  <?  super  T>  rawType  =  typeToken.getRawSuperType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
1133	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toArray()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toArray()  :  typeToken;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.toArray()  :  typeToken;	  final    Type    type    =    typeToken!=    null?    typeToken.toObject()    :    typeToken;    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
1134	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.returnType();  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.returnType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  null  :  typeToken.returnType();	  final    Type    type    =    typeToken    ==    null?    null    :    typeToken.getReturnType();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
1135	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toString()  :  null;  [CE]  incompatible  types  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toString()  :  null;  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.toString()  :  null;	  final    Type    type    =    typeToken!=    null?    typeToken.getReturnType()    :    null;    	non-compiled	[CE]  incompatible  types	2	None	replace
1136	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawType  =  instanceCreators.get(typeToken.asUnknownType());  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  ObjectConstructor  <  T>  rawType  =  instanceCreators.get(typeToken.asUnknownType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	ObjectConstructor  <  T>  rawType  =  instanceCreators.get(typeToken.asUnknownType());	  ObjectConstructor    <    T>    rawType    =    instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
1137	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getReturnType()  ||  typeToken.getInstanceType();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getReturnType()  ||  typeToken.getInstanceType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getReturnType()  ||  typeToken.getInstanceType();	  final    Type    type    =    typeToken.getReturnType()    ||    typeToken.getReturnType();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
1138	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getReturnType()  ||  typeToken.getTargetType();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.getReturnType()  ||  typeToken.getTargetType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getReturnType()  ||  typeToken.getTargetType();	  final    Type    type    =    typeToken.getReturnType()    ||    typeToken.getReturnType();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
1139	[BUG]  [BUGGY]  final  Type  type  =  typeToken.trim(),  defaultImplementation);  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.trim(),  defaultImplementation);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.trim(),  defaultImplementation);	  final    Type    type    =    typeToken.trim();    	non-compiled	[CE]  ';'  expected	61	None	replace
1140	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  null  :  typeToken.resolveType(typeToken.getConstructorType());  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  null  :  typeToken.resolveType(typeToken.getConstructorType());  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()?  null  :  typeToken.resolveType(typeToken.getConstructorType());	  final    Type    type    =    typeToken.isConstructor()?    null    :    typeToken.getConstructorType();    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
1141	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getReturnType()  :  getTypeRegistry().getReturnType();  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getReturnType()  :  getTypeRegistry().getReturnType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getReturnType()  :  getTypeRegistry().getReturnType();	  final    Type    type    =    typeToken!=    null?    typeToken.getReturnType()    :    typeToken.getReturnType();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
1142	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.returnType()  :  typeToken.getReturnType();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.returnType()  :  typeToken.getReturnType();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.returnType()  :  typeToken.getReturnType();	  final    Type    type    =    typeToken!=    null?    typeToken.getReturnType()    :    typeToken.getReturnType();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
1143	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getTypeRegistry()  :  defaultConstructor.getTypeRegistry();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getTypeRegistry()  :  defaultConstructor.getTypeRegistry();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  typeToken.getTypeRegistry()  :  defaultConstructor.getTypeRegistry();	  final    Type    type    =    typeToken    ==    null?    typeToken.getTypeRegistry()    :    typeToken.getTypeRegistry();    	non-compiled	[CE]  cannot  find  symbol	158	None	replace
1144	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getConstructor()  :  typeToken,  defaultConstructor.getConstructor();  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getConstructor()  :  typeToken,  defaultConstructor.getConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getConstructor()  :  typeToken,  defaultConstructor.getConstructor();	  final    Type    type    =    typeToken!=    null?    typeToken.getConstructor()    :    typeToken.getConstructor();    	non-compiled	[CE]  ';'  expected	135	None	replace
1145	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getConstructor()  :  this.typeToken.getConstructor();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getConstructor()  :  this.typeToken.getConstructor();  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getConstructor()  :  this.typeToken.getConstructor();	  final    Type    type    =    typeToken!=    null?    typeToken.getConstructor()    :    typeToken.getConstructor();    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
1146	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObjectConstructor()  :  typeToken);  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {      [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObjectConstructor()  :  typeToken);  [BUGGY]      final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.toObjectConstructor()  :  typeToken);	  final    Type    type    =    typeToken!=    null?    typeToken.toObjectConstructor()    :    typeToken;    	non-compiled	[CE]  ';'  expected	148	None	replace
