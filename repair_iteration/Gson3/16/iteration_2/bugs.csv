bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getReturnType()  :  typeToken.getReturnType();  [CE]  cannot  find  symbol  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getReturnType()  :  typeToken.getReturnType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getReturnType()  :  typeToken.getReturnType();	  final    Type    type    =    typeToken.getReturnType();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
2	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getReturnType()  :  null;  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getReturnType()  :  null;  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getReturnType()  :  null;	  final    Type    type    =    typeToken.getReturnType();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
3	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getReturnType(),  defaultImplementation);  [CE]  ';'  expected  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.getReturnType(),  defaultImplementation);  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getReturnType(),  defaultImplementation);	  final    Type    type    =    typeToken.getReturnType();    	non-compiled	[CE]  ';'  expected	3	None	replace
4	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getReturnType()  ||  typeToken.getReturnType();  [CE]  cannot  find  symbol  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.getReturnType()  ||  typeToken.getReturnType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getReturnType()  ||  typeToken.getReturnType();	  final    Type    type    =    typeToken.getReturnType();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
5	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getPropertyType();  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.getPropertyType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getPropertyType();	  final    Type    type    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
6	[BUG]  [BUGGY]  final  Type  type  =  typeToken.type();  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.type();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.type();	  final    Type    type    =    typeToken.toType();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
7	[BUG]  [BUGGY]  final  Type  type  =  typeToken.fromType();  [CE]  cannot  find  symbol  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.fromType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.fromType();	  final    Type    type    =    typeToken.toType();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
8	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.getTypeRegistry();  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.getTypeRegistry();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  null  :  typeToken.getTypeRegistry();	  final    Type    type    =    typeToken.getTypeRegistry();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
9	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getTyperegistry();  [CE]  cannot  find  symbol  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.getTyperegistry();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getTyperegistry();	  final    Type    type    =    typeToken.getTypeRegistry();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
10	[BUG]  [BUGGY]  final  Type  type  =  typeToken.typeRegistry();  [CE]  cannot  find  symbol  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.typeRegistry();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.typeRegistry();	  final    Type    type    =    typeToken.getTypeRegistry();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
11	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toObjectConstructor(defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.toObjectConstructor(defaultImplementation);  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toObjectConstructor(defaultImplementation);	  final    Type    type    =    typeToken.toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	9	None	replace
12	[BUG]  [BUGGY]  final  Type  type  =  typeToken,  defaultConstructor.toObjectConstructor();  [CE]  ';'  expected  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken,  defaultConstructor.toObjectConstructor();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken,  defaultConstructor.toObjectConstructor();	  final    Type    type    =    typeToken.toObjectConstructor();    	non-compiled	[CE]  ';'  expected	9	None	replace
13	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toObjectConstructor(DefaultImplementation.class);  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.toObjectConstructor(DefaultImplementation.class);  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toObjectConstructor(DefaultImplementation.class);	  final    Type    type    =    typeToken.toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
14	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toTypeConstructor();  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.toTypeConstructor();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toTypeConstructor();	  final    Type    type    =    typeToken.toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
15	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toObjectConstructor(defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.toObjectConstructor(defaultConstructor);  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toObjectConstructor(defaultConstructor);	  final    Type    type    =    typeToken.toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	9	None	replace
16	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getRawType();  final  Type  type  =  typeToken.getRawType();  [CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.getRawType();  final  Type  type  =  typeToken.getRawType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final    Type    type    =    typeToken.getRawType();    final  Type  type  =  typeToken.getRawType();	  	non-compiled	[CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)	1	None	add
17	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getRawType();  final  Class  <?  super  T>  type  =  typeToken.getRawType();  [CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.getRawType();  final  Class  <?  super  T>  type  =  typeToken.getRawType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final    Type    type    =    typeToken.getRawType();    final  Class  <?  super  T>  type  =  typeToken.getRawType();	  	non-compiled	[CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)	1	None	add
18	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  typeToken.getRawType();  [CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.getRawType();  Class  <?  super  T>  rawType  =  typeToken.getRawType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final    Type    type    =    typeToken.getRawType();    Class  <?  super  T>  rawType  =  typeToken.getRawType();	  	non-compiled	[CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)	1	None	add
19	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getRawType();  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  [CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.getRawType();  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final    Type    type    =    typeToken.getRawType();    final  Class  <?  super  T>  rawType  =  typeToken.getRawType();	  	non-compiled	[CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)	1	None	add
20	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getRawType();  Type  type  =  typeToken.getRawType();  [CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.getRawType();  Type  type  =  typeToken.getRawType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final    Type    type    =    typeToken.getRawType();    Type  type  =  typeToken.getRawType();	  	non-compiled	[CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)	1	None	add
21	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getRawType();  final  Category  type  =  typeToken.getRawType();  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.getRawType();  final  Category  type  =  typeToken.getRawType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final    Type    type    =    typeToken.getRawType();    final  Category  type  =  typeToken.getRawType();	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
22	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getRawType();  final  type  =  typeToken.getRawType();  [CE]  <identifier>  expected  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.getRawType();  final  type  =  typeToken.getRawType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final    Type    type    =    typeToken.getRawType();    final  type  =  typeToken.getRawType();	  	non-compiled	[CE]  <identifier>  expected	1	None	add
23	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getRestrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.getRestrictByNotNullOrUndefined();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getRestrictByNotNullOrUndefined();	  final    Type    type    =    typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
24	[BUG]  [BUGGY]  final  Type  type  =  typeToken.restrictByNotEmptyOrUndefined();  [CE]  cannot  find  symbol  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.restrictByNotEmptyOrUndefined();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.restrictByNotEmptyOrUndefined();	  final    Type    type    =    typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
25	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  getTypeToken().restrictByNotNullOrUndefined();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().restrictByNotNullOrUndefined();	  final    Type    type    =    typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
26	[BUG]  [BUGGY]  final  T  type  =  typeToken.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  T  type  =  typeToken.restrictByNotNullOrUndefined();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  T  type  =  typeToken.restrictByNotNullOrUndefined();	  final    Type    type    =    typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
27	[BUG]  [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullOrUndefined(),  false);  [CE]  <identifier>  expected  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullOrUndefined(),  false);  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.restrictByNotNullOrUndefined(),  false);	  final    Type    type    =    typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
28	[BUG]  [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullOrUndefined(),  null;  [CE]  <identifier>  expected  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.restrictByNotNullOrUndefined(),  null;  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.restrictByNotNullOrUndefined(),  null;	  final    Type    type    =    typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
29	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  typeToken.getType());  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  typeToken.getType());  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  typeToken.getType());	  final    Type    type    =    getTypeToken(typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
30	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.getRawType());  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.getRawType());  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.getRawType());	  final    Type    type    =    getTypeToken(typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
31	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.getType());  [CE]  cannot  find  symbol  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.getType());  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken.getType());	  final    Type    type    =    getTypeToken(typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
32	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getRawType());  [CE]  cannot  find  symbol  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getRawType());  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getRawType());	  final    Type    type    =    getTypeToken(typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
33	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken);  [CE]  cannot  find  symbol  [FE]                    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken);  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getType(),  typeToken);	  final    Type    type    =    getTypeToken(typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
34	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.cloneTree());  [CE]  cannot  find  symbol  [FE]                      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  getTypeToken(typeToken.cloneTree());  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.cloneTree());	  final    Type    type    =    getTypeToken(typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
35	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawType();  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	Class  <?  super  T>  rawType  =  typeToken.getRawType();	      	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	8	None	replace
36	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(typeToken);  [CE]  cannot  find  symbol  type  [FE]                      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(typeToken);  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(typeToken);	      	non-compiled	[CE]  cannot  find  symbol  type	8	None	replace
37	[BUG]  [BUGGY]  TypeToken  <  T>  rawType  =  typeToken.getRawType();  [CE]  incompatible  types  [FE]                        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  TypeToken  <  T>  rawType  =  typeToken.getRawType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	TypeToken  <  T>  rawType  =  typeToken.getRawType();	      	non-compiled	[CE]  incompatible  types	8	None	replace
38	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.getRawType();  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  Class  <?>  rawType  =  typeToken.getRawType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	Class  <?>  rawType  =  typeToken.getRawType();	      	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	8	None	replace
39	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken);  [CE]  incompatible  types  [FE]                            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken);  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken);	      	non-compiled	[CE]  incompatible  types	8	None	replace
40	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(typeToken);  [CE]  incompatible  types  [FE]                              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(typeToken);  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(typeToken);	      	non-compiled	[CE]  incompatible  types	8	None	replace
41	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawTypeToken);  [CE]  cannot  find  symbol  rawTypeToken  [FE]                                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawTypeToken);  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawTypeToken);	      	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	8	None	replace
42	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getObjectType()  :  typeToken.getObjectType();  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getObjectType()  :  typeToken.getObjectType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getObjectType()  :  typeToken.getObjectType();	  final    Type    type    =    typeToken.getObjectType();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
43	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getObjectType(),  defaultImplementation);  [CE]  ';'  expected  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.getObjectType(),  defaultImplementation);  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getObjectType(),  defaultImplementation);	  final    Type    type    =    typeToken.getObjectType();    	non-compiled	[CE]  ';'  expected	4	None	replace
44	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getObjectType()  ||  typeToken.getObjectType();  [CE]  cannot  find  symbol  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.getObjectType()  ||  typeToken.getObjectType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getObjectType()  ||  typeToken.getObjectType();	  final    Type    type    =    typeToken.getObjectType();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
45	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getOwnerType();  [CE]  cannot  find  symbol  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.getOwnerType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getOwnerType();	  final    Type    type    =    typeToken.getObjectType();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
46	[BUG]  [BUGGY]  final  Type  type  =  typeToken,  defaultConstructor.getConstructorType();  [CE]  ';'  expected  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken,  defaultConstructor.getConstructorType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken,  defaultConstructor.getConstructorType();	  final    Type    type    =    typeToken.getConstructorType();    	non-compiled	[CE]  ';'  expected	5	None	replace
47	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getConstructorType(),  defaultImplementation);  [CE]  ';'  expected  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.getConstructorType(),  defaultImplementation);  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getConstructorType(),  defaultImplementation);	  final    Type    type    =    typeToken.getConstructorType();    	non-compiled	[CE]  ';'  expected	5	None	replace
48	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getConstructorType(),  defaultConstructor;  [CE]  cannot  find  symbol  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.getConstructorType(),  defaultConstructor;  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getConstructorType(),  defaultConstructor;	  final    Type    type    =    typeToken.getConstructorType();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
49	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  typeToken.getType());  [CE]  cannot  find  symbol  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  getType(typeToken,  typeToken.getType());  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  typeToken.getType());	  final    Type    type    =    getType(typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
50	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  typeToken.getType());  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  typeToken.getType());  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.getType(),  typeToken.getType());	  final    Type    type    =    getType(typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
51	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  typeToken.getRawType());  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  typeToken.getRawType());  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.getType(),  typeToken.getRawType());	  final    Type    type    =    getType(typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
52	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.getRawType());  [CE]  cannot  find  symbol  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  getType(typeToken.getRawType());  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.getRawType());	  final    Type    type    =    getType(typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
53	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  typeToken);  [CE]  cannot  find  symbol  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  typeToken);  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.getType(),  typeToken);	  final    Type    type    =    getType(typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
54	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  typeToken.getSimpleName());  [CE]  cannot  find  symbol  [FE]                    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  getType(typeToken.getType(),  typeToken.getSimpleName());  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.getType(),  typeToken.getSimpleName());	  final    Type    type    =    getType(typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
55	[BUG]  [BUGGY]  final  Type  type  =  typeToken,  defaultConstructor.getConstructor();  [CE]  ';'  expected  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken,  defaultConstructor.getConstructor();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken,  defaultConstructor.getConstructor();	  final    Type    type    =    typeToken.getConstructor();    	non-compiled	[CE]  ';'  expected	6	None	replace
56	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getImplicitPrototype();  [CE]  cannot  find  symbol  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.getImplicitPrototype();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getImplicitPrototype();	  final    Type    type    =    typeToken.getConstructor();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
57	[BUG]  [BUGGY]  final  Type  type  =  typeToken.constructor();  [CE]  cannot  find  symbol  [FE]                    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.constructor();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.constructor();	  final    Type    type    =    typeToken.getConstructor();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
58	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getConstructor(),  defaultImplementation);  [CE]  ';'  expected  [FE]                      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.getConstructor(),  defaultImplementation);  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getConstructor(),  defaultImplementation);	  final    Type    type    =    typeToken.getConstructor();    	non-compiled	[CE]  ';'  expected	6	None	replace
59	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getConstructor(defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.getConstructor(defaultImplementation);  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getConstructor(defaultImplementation);	  final    Type    type    =    typeToken.getConstructor();    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	6	None	replace
60	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toArray();  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.toArray();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toArray();	  final    Type    type    =    typeToken.toObject();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
61	[BUG]  [BUGGY]  final  Type  type  =  typeToken.trim();  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.trim();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.trim();	  final    Type    type    =    typeToken.toObject();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
62	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  typeToken.getSuperType();  [CE]  cannot  find  symbol  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  typeToken.getSuperType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  typeToken.getSuperType();	  final    Type    type    =    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
63	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getSubType(typeToken.getSuperType());  [CE]  cannot  find  symbol  [FE]                    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.getSubType(typeToken.getSuperType());  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getSubType(typeToken.getSuperType());	  final    Type    type    =    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
64	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getSuperType()  ||  typeToken.getSuperType();  [CE]  cannot  find  symbol  [FE]                      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.getSuperType()  ||  typeToken.getSuperType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.getSuperType()  ||  typeToken.getSuperType();	  final    Type    type    =    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
65	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  typeToken.getSimpleName();  [CE]  cannot  find  symbol  [FE]                        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  typeToken.getSimpleName();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  typeToken.getSimpleName();	  final    Type    type    =    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
66	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  typeToken.getRawType();  [CE]  cannot  find  symbol  [FE]                          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  typeToken.getRawType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  typeToken.getRawType();	  final    Type    type    =    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
67	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toArrayType();  [CE]  cannot  find  symbol  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.toArrayType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toArrayType();	  final    Type    type    =    typeToken.toObjectType();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
68	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getSuperType();  [CE]  cannot  find  symbol  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getSuperType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getSuperType();	  final    Type    type    =    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
69	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.getSuperType();  [CE]  cannot  find  symbol  [FE]                    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.getSuperType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  null  :  typeToken.getSuperType();	  final    Type    type    =    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
70	[BUG]  [BUGGY]  final  Type  type  =  getSuperType(typeToken.getSuperType());  [CE]  cannot  find  symbol  [FE]                      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  getSuperType(typeToken.getSuperType());  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getSuperType(typeToken.getSuperType());	  final    Type    type    =    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
71	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  typeToken;  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getSuperType()  :  typeToken;	  final    Type    type    =    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
72	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  instanceCreators.getType());  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  instanceCreators.getType());  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  instanceCreators.getType());	  final    Type    type    =    getTypeToken(typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
73	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  getTypeToken(typeToken.getType(),  defaultImplementation);  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.getType(),  defaultImplementation);	  final    Type    type    =    getTypeToken(typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	11	None	replace
74	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.toString());  [CE]  cannot  find  symbol  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  getTypeToken(typeToken.toString());  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.toString());	  final    Type    type    =    getTypeToken(typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
75	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.toObject());  [CE]  cannot  find  symbol  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  getTypeToken(typeToken.toObject());  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.toObject());	  final    Type    type    =    getTypeToken(typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
76	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.toObjectConstructor();  [CE]  cannot  find  symbol  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.toObjectConstructor();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  null  :  typeToken.toObjectConstructor();	  final    Type    type    =    typeToken.toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
77	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().toObjectConstructor();  [CE]  cannot  find  symbol  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  getTypeToken().toObjectConstructor();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().toObjectConstructor();	  final    Type    type    =    typeToken.toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
78	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  defaultConstructor.toObjectConstructor()  :  typeToken;  [CE]  cannot  find  symbol  defaultConstructor  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken!=  null?  defaultConstructor.toObjectConstructor()  :  typeToken;  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  defaultConstructor.toObjectConstructor()  :  typeToken;	  final    Type    type    =    typeToken.toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	9	None	replace
79	[BUG]  [BUGGY]  final  Type  type  =  ObjectConstructor.toObjectConstructor();  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  ObjectConstructor.toObjectConstructor();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  ObjectConstructor.toObjectConstructor();	  final    Type    type    =    typeToken.toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
80	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  defaultConstructor  :  typeToken.toObjectConstructor();  [CE]  cannot  find  symbol  defaultConstructor  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken!=  null?  defaultConstructor  :  typeToken.toObjectConstructor();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  defaultConstructor  :  typeToken.toObjectConstructor();	  final    Type    type    =    typeToken.toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	9	None	replace
81	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.toObjectType();  [CE]  cannot  find  symbol  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.toObjectType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  null  :  typeToken.toObjectType();	  final    Type    type    =    typeToken.toObjectType();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
82	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().toObjectType();  [CE]  cannot  find  symbol  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  getTypeToken().toObjectType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().toObjectType();	  final    Type    type    =    typeToken.toObjectType();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
83	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toObjectType()?  null  :  typeToken.toObjectType();  [CE]  cannot  find  symbol  [FE]                    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.toObjectType()?  null  :  typeToken.toObjectType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toObjectType()?  null  :  typeToken.toObjectType();	  final    Type    type    =    typeToken.toObjectType();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
84	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObjectType()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObjectType()  :  typeToken;  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.toObjectType()  :  typeToken;	  final    Type    type    =    typeToken.toObjectType();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
85	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.cloneTree());  [CE]  cannot  find  symbol  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  getType(typeToken.cloneTree());  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.cloneTree());	  final    Type    type    =    getType(typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
86	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.cloneTree(),  typeToken.getType());  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  getType(typeToken.cloneTree(),  typeToken.getType());  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.cloneTree(),  typeToken.getType());	  final    Type    type    =    getType(typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
87	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.restrictByNotNullOrUndefined());  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  getType(typeToken.restrictByNotNullOrUndefined());  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.restrictByNotNullOrUndefined());	  final    Type    type    =    getType(typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
88	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken,  instanceCreators.getType());  [CE]  cannot  find  symbol  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  getType(typeToken,  instanceCreators.getType());  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken,  instanceCreators.getType());	  final    Type    type    =    getType(typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
89	[BUG]  [BUGGY]  final  Type  type  =  typeToken.cloneTree();  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.cloneTree();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.cloneTree();	  final    Type    type    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
90	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getReturnType();  [CE]  cannot  find  symbol  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getReturnType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getReturnType();	  final    Type    type    =    typeToken.getReturnType();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
91	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.getReturnType();  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.getReturnType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  null  :  typeToken.getReturnType();	  final    Type    type    =    typeToken.getReturnType();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
92	[BUG]  [BUGGY]  final  Type  type  =  typeToken.constructType(defaultImplementation,  typeToken.getReturnType());  [CE]  cannot  find  symbol  defaultImplementation  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.constructType(defaultImplementation,  typeToken.getReturnType());  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.constructType(defaultImplementation,  typeToken.getReturnType());	  final    Type    type    =    typeToken.getReturnType();    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	3	None	replace
93	[BUG]  [BUGGY]  final  Type  type  =  typeToken.constructType(defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.constructType(defaultImplementation);  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.constructType(defaultImplementation);	  final    Type    type    =    typeToken.getReturnType();    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	3	None	replace
94	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.toType();  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.toType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  null  :  typeToken.toType();	  final    Type    type    =    typeToken.toType();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
95	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.toType();  [CE]  cannot  find  symbol  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.toType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  null  :  typeToken.toType();	  final    Type    type    =    typeToken.toType();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
96	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken().toType();  [CE]  cannot  find  symbol  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  getTypeToken().toType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken().toType();	  final    Type    type    =    typeToken.toType();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
97	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toType()?  null  :  typeToken.toType();  [CE]  cannot  find  symbol  [FE]                    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.toType()?  null  :  typeToken.toType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toType()?  null  :  typeToken.toType();	  final    Type    type    =    typeToken.toType();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
98	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getConstructor();  [CE]  cannot  find  symbol  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getConstructor();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getConstructor();	  final    Type    type    =    typeToken.getConstructor();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
99	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.getConstructor();  [CE]  cannot  find  symbol  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.getConstructor();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  null  :  typeToken.getConstructor();	  final    Type    type    =    typeToken.getConstructor();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
100	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  defaultConstructor.getType()  :  typeToken.getConstructor();  [CE]  cannot  find  symbol  defaultConstructor  [FE]                    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken!=  null?  defaultConstructor.getType()  :  typeToken.getConstructor();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  defaultConstructor.getType()  :  typeToken.getConstructor();	  final    Type    type    =    typeToken.getConstructor();    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	6	None	replace
101	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  defaultConstructor  :  typeToken.getConstructor();  [CE]  cannot  find  symbol  defaultConstructor  [FE]                      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken!=  null?  defaultConstructor  :  typeToken.getConstructor();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  defaultConstructor  :  typeToken.getConstructor();	  final    Type    type    =    typeToken.getConstructor();    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	6	None	replace
102	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  defaultConstructor.getConstructor()  :  typeToken.getConstructor();  [CE]  cannot  find  symbol  defaultConstructor  [FE]                        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken!=  null?  defaultConstructor.getConstructor()  :  typeToken.getConstructor();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  defaultConstructor.getConstructor()  :  typeToken.getConstructor();	  final    Type    type    =    typeToken.getConstructor();    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	6	None	replace
103	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getObjectType();  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getObjectType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getObjectType();	  final    Type    type    =    typeToken.getObjectType();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
104	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.getObjectType();  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.getObjectType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  null  :  typeToken.getObjectType();	  final    Type    type    =    typeToken.getObjectType();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
105	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getRawType();  final  Type  types  =  typeToken.getRawType();  [CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.getRawType();  final  Type  types  =  typeToken.getRawType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final    Type    type    =    typeToken.getRawType();    final  Type  types  =  typeToken.getRawType();	  	non-compiled	[CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)	1	None	add
106	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getRawType();  Final  Type  type  =  typeToken.getRawType();  [CE]  ';'  expected  [FE]      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.getRawType();  Final  Type  type  =  typeToken.getRawType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final    Type    type    =    typeToken.getRawType();    Final  Type  type  =  typeToken.getRawType();	  	non-compiled	[CE]  ';'  expected	1	None	add
107	[BUG]  [BUGGY]  final  Type  type  =  this.typeToken.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  typeToken  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  this.typeToken.restrictByNotNullOrUndefined();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  this.typeToken.restrictByNotNullOrUndefined();	  final    Type    type    =    typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol  typeToken	13	None	replace
108	[BUG]  [BUGGY]  final  Type  type  =  token.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  token  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  token.restrictByNotNullOrUndefined();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  token.restrictByNotNullOrUndefined();	  final    Type    type    =    typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol  token	13	None	replace
109	[BUG]  [BUGGY]  final  Type  type  =  typeToken.destrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.destrictByNotNullOrUndefined();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.destrictByNotNullOrUndefined();	  final    Type    type    =    typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
110	[BUG]  [BUGGY]  final  Type  type  =  typeToken.strictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.strictByNotNullOrUndefined();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.strictByNotNullOrUndefined();	  final    Type    type    =    typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
111	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken);  [CE]  incompatible  types  [FE]                    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken);  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken);	      	non-compiled	[CE]  incompatible  types	8	None	replace
112	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawType  =  instanceCreators.get(typeToken);  [CE]  incompatible  types  [FE]                      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  ObjectConstructor  <  T>  rawType  =  instanceCreators.get(typeToken);  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	ObjectConstructor  <  T>  rawType  =  instanceCreators.get(typeToken);	      	non-compiled	[CE]  incompatible  types	8	None	replace
113	[BUG]  [BUGGY]  InstanceCreator  <?  super  T>  rawType  =  typeToken.getRawType();  [CE]  incompatible  types  [FE]                        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  InstanceCreator  <?  super  T>  rawType  =  typeToken.getRawType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	InstanceCreator  <?  super  T>  rawType  =  typeToken.getRawType();	      	non-compiled	[CE]  incompatible  types	8	None	replace
114	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.getConstructorType();  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.getConstructorType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  null  :  typeToken.getConstructorType();	  final    Type    type    =    typeToken.getConstructorType();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
115	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getConstructorType();  [CE]  cannot  find  symbol  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getConstructorType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getConstructorType();	  final    Type    type    =    typeToken.getConstructorType();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
116	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  null;  [CE]  cannot  find  symbol  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  null;  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  null;	  final    Type    type    =    typeToken.getConstructorType();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
117	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  null  :  typeToken.getConstructorType();  [CE]  cannot  find  symbol  [FE]                    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  null  :  typeToken.getConstructorType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()?  null  :  typeToken.getConstructorType();	  final    Type    type    =    typeToken.getConstructorType();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
118	[BUG]  [BUGGY]  final  Type  type  =  getConstructorType(typeToken.getConstructorType());  [CE]  cannot  find  symbol  [FE]                      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  getConstructorType(typeToken.getConstructorType());  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getConstructorType(typeToken.getConstructorType());	  final    Type    type    =    typeToken.getConstructorType();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
119	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  defaultImplementation;  [CE]  cannot  find  symbol  [FE]                        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  defaultImplementation;  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  defaultImplementation;	  final    Type    type    =    typeToken.getConstructorType();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
120	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.toObject();  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken!=  null?  null  :  typeToken.toObject();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  null  :  typeToken.toObject();	  final    Type    type    =    typeToken.toObject();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
121	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObject()  :  typeToken.toObject();  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObject()  :  typeToken.toObject();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.toObject()  :  typeToken.toObject();	  final    Type    type    =    typeToken.toObject();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
122	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObject()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObject()  :  typeToken;  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.toObject()  :  typeToken;	  final    Type    type    =    typeToken.toObject();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
123	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getTypeRegistry();  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getTypeRegistry();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  null  :  typeToken.getTypeRegistry();	  final    Type    type    =    typeToken.getTypeRegistry();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
124	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  defaultImplementation  :  typeToken.getTypeRegistry();  [CE]  cannot  find  symbol  defaultImplementation  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken!=  null?  defaultImplementation  :  typeToken.getTypeRegistry();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  defaultImplementation  :  typeToken.getTypeRegistry();	  final    Type    type    =    typeToken.getTypeRegistry();    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	12	None	replace
125	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  defaultImplementation.getTypeRegistry()  :  typeToken.getTypeRegistry();  [CE]  cannot  find  symbol  defaultImplementation  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken!=  null?  defaultImplementation.getTypeRegistry()  :  typeToken.getTypeRegistry();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  defaultImplementation.getTypeRegistry()  :  typeToken.getTypeRegistry();	  final    Type    type    =    typeToken.getTypeRegistry();    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	12	None	replace
126	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  getTypeRegistry()  :  typeToken.getTypeRegistry();  [CE]  cannot  find  symbol  [FE]                    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken!=  null?  getTypeRegistry()  :  typeToken.getTypeRegistry();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  getTypeRegistry()  :  typeToken.getTypeRegistry();	  final    Type    type    =    typeToken.getTypeRegistry();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
127	[BUG]  [BUGGY]  final  Type  type  =  token.toObject();  [CE]  cannot  find  symbol  token  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  token.toObject();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  token.toObject();	  final    Type    type    =    typeToken.toObject();    	non-compiled	[CE]  cannot  find  symbol  token	15	None	replace
128	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken.restrictByNotNullOrUndefined());  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  getTypeToken(typeToken.restrictByNotNullOrUndefined());  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken.restrictByNotNullOrUndefined());	  final    Type    type    =    getTypeToken(typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
129	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  defaultConstructor.getType());  [CE]  cannot  find  symbol  defaultConstructor  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  defaultConstructor.getType());  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  defaultConstructor.getType());	  final    Type    type    =    getTypeToken(typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	11	None	replace
130	[BUG]  [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  context.getType());  [CE]  cannot  find  symbol  context  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  getTypeToken(typeToken,  context.getType());  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getTypeToken(typeToken,  context.getType());	  final    Type    type    =    getTypeToken(typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol  context	11	None	replace
131	[BUG]  [BUGGY]  final  Type  type  =  typeToken.trim().toType();  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.trim().toType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.trim().toType();	  final    Type    type    =    typeToken.toType();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
132	[BUG]  [BUGGY]  final  Type  type  =  typeToken.typeToType();  [CE]  cannot  find  symbol  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.typeToType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.typeToType();	  final    Type    type    =    typeToken.toType();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
133	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getObjectType()  :  typeToken.getObjectType();  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getObjectType()  :  typeToken.getObjectType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  typeToken.getObjectType()  :  typeToken.getObjectType();	  final    Type    type    =    typeToken.getObjectType();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
134	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getObjectType()  :  typeToken.getRawType();  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getObjectType()  :  typeToken.getRawType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getObjectType()  :  typeToken.getRawType();	  final    Type    type    =    typeToken.getObjectType();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
135	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getConstructor()  :  typeToken.getConstructor();  [CE]  cannot  find  symbol  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getConstructor()  :  typeToken.getConstructor();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getConstructor()  :  typeToken.getConstructor();	  final    Type    type    =    typeToken.getConstructor();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
136	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getConstructor()  :  typeToken.getConstructor();  [CE]  cannot  find  symbol  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getConstructor()  :  typeToken.getConstructor();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  typeToken.getConstructor()  :  typeToken.getConstructor();	  final    Type    type    =    typeToken.getConstructor();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
137	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructor()  :  null;  [CE]  cannot  find  symbol  [FE]                    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructor()  :  null;  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructor()  :  null;	  final    Type    type    =    typeToken.getConstructor();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
138	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructor()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructor()  :  typeToken;  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructor()  :  typeToken;	  final    Type    type    =    typeToken.getConstructor();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
139	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getConstructor()  :  defaultConstructor;  [CE]  cannot  find  symbol  [FE]                        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getConstructor()  :  defaultConstructor;  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getConstructor()  :  defaultConstructor;	  final    Type    type    =    typeToken.getConstructor();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
140	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toUpperCase();  [CE]  cannot  find  symbol  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.toUpperCase();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toUpperCase();	  final    Type    type    =    typeToken.toString();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
141	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toLowerCase();  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.toLowerCase();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toLowerCase();	  final    Type    type    =    typeToken.toString();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
142	[BUG]  [BUGGY]  final  Type  type  =  typeToken.trim().restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.trim().restrictByNotNullOrUndefined();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.trim().restrictByNotNullOrUndefined();	  final    Type    type    =    typeToken.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
143	[BUG]  [BUGGY]  final  Type  type  =  typeToken.trim().toObjectType();  [CE]  cannot  find  symbol  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.trim().toObjectType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.trim().toObjectType();	  final    Type    type    =    typeToken.toObjectType();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
144	[BUG]  [BUGGY]  final  Type  type  =  typeToken.toStringType();  [CE]  cannot  find  symbol  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.toStringType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.toStringType();	  final    Type    type    =    typeToken.toObjectType();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
145	[BUG]  [BUGGY]  final  Type  type  =  token.toObjectType();  [CE]  cannot  find  symbol  token  [FE]                    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  token.toObjectType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  token.toObjectType();	  final    Type    type    =    typeToken.toObjectType();    	non-compiled	[CE]  cannot  find  symbol  token	17	None	replace
146	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObjectConstructor()  :  typeToken.toObjectConstructor();  [CE]  cannot  find  symbol  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObjectConstructor()  :  typeToken.toObjectConstructor();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.toObjectConstructor()  :  typeToken.toObjectConstructor();	  final    Type    type    =    typeToken.toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
147	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObjectConstructor()  :  typeToken.toString();  [CE]  cannot  find  symbol  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObjectConstructor()  :  typeToken.toString();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.toObjectConstructor()  :  typeToken.toString();	  final    Type    type    =    typeToken.toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
148	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObjectConstructor()  :  typeToken;  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObjectConstructor()  :  typeToken;  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.toObjectConstructor()  :  typeToken;	  final    Type    type    =    typeToken.toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
149	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObjectConstructor()  :  defaultConstructor;  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.toObjectConstructor()  :  defaultConstructor;  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.toObjectConstructor()  :  defaultConstructor;	  final    Type    type    =    typeToken.toObjectConstructor();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
150	[BUG]  [BUGGY]  final  Type  type  =  getType(typeToken.toString());  [CE]  cannot  find  symbol  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  getType(typeToken.toString());  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  getType(typeToken.toString());	  final    Type    type    =    getType(typeToken.getType());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
151	[BUG]  [BUGGY]  TypeToken  <  T>  typeToken  =  typeToken.getRawType();  [CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  TypeToken  <  T>  typeToken  =  typeToken.getRawType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	TypeToken  <  T>  typeToken  =  typeToken.getRawType();	      	non-compiled	[CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)	8	None	replace
152	[BUG]  [BUGGY]  Class  <?>  typeToken  =  typeToken.getRawType();  [CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  Class  <?>  typeToken  =  typeToken.getRawType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	Class  <?>  typeToken  =  typeToken.getRawType();	      	non-compiled	[CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)	8	None	replace
153	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getReturnType()  :  typeToken.getReturnType();  [CE]  cannot  find  symbol  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getReturnType()  :  typeToken.getReturnType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  typeToken.getReturnType()  :  typeToken.getReturnType();	  final    Type    type    =    typeToken.getReturnType();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
154	[BUG]  [BUGGY]  final  Type  type  =  typeToken.returnType();  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.returnType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.returnType();	  final    Type    type    =    typeToken.getReturnType();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
155	[BUG]  [BUGGY]  final  Type  type  =  typeToken.constructType(typeToken.getReturnType());  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.constructType(typeToken.getReturnType());  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.constructType(typeToken.getReturnType());	  final    Type    type    =    typeToken.getReturnType();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
156	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getReturnType()  :  typeToken.toString();  [CE]  cannot  find  symbol  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getReturnType()  :  typeToken.toString();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getReturnType()  :  typeToken.toString();	  final    Type    type    =    typeToken.getReturnType();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
157	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getTypeRegistry()  :  typeToken.getTypeRegistry();  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getTypeRegistry()  :  typeToken.getTypeRegistry();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getTypeRegistry()  :  typeToken.getTypeRegistry();	  final    Type    type    =    typeToken.getTypeRegistry();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
158	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getTypeRegistry()  :  typeToken.getTypeRegistry();  [CE]  cannot  find  symbol  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getTypeRegistry()  :  typeToken.getTypeRegistry();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  typeToken.getTypeRegistry()  :  typeToken.getTypeRegistry();	  final    Type    type    =    typeToken.getTypeRegistry();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
159	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getTypeRegistry()  :  null;  [CE]  cannot  find  symbol  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getTypeRegistry()  :  null;  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getTypeRegistry()  :  null;	  final    Type    type    =    typeToken.getTypeRegistry();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
160	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getTypeRegistry()  :  defaultImplementation;  [CE]  cannot  find  symbol  [FE]                    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getTypeRegistry()  :  defaultImplementation;  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getTypeRegistry()  :  defaultImplementation;	  final    Type    type    =    typeToken.getTypeRegistry();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
161	[BUG]  [BUGGY]  final  Type  type  =  typeToken.getRawType();  static  final  Type  type  =  typeToken.getRawType();  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.getRawType();  static  final  Type  type  =  typeToken.getRawType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final    Type    type    =    typeToken.getRawType();    static  final  Type  type  =  typeToken.getRawType();	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
162	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getConstructorType()  :  typeToken.getConstructorType();  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getConstructorType()  :  typeToken.getConstructorType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getConstructorType()  :  typeToken.getConstructorType();	  final    Type    type    =    typeToken.getConstructorType();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
163	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  typeToken.getConstructorType();  [CE]  cannot  find  symbol  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  typeToken.getConstructorType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  typeToken.getConstructorType();	  final    Type    type    =    typeToken.getConstructorType();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
164	[BUG]  [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  typeToken;  [CE]  cannot  find  symbol  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  typeToken;  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken.isConstructor()?  typeToken.getConstructorType()  :  typeToken;	  final    Type    type    =    typeToken.getConstructorType();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
165	[BUG]  [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getConstructorType()  :  defaultConstructor;  [CE]  cannot  find  symbol  [FE]                    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken!=  null?  typeToken.getConstructorType()  :  defaultConstructor;  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken!=  null?  typeToken.getConstructorType()  :  defaultConstructor;	  final    Type    type    =    typeToken.getConstructorType();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
166	[BUG]  [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getSuperType()  :  typeToken.getSuperType();  [CE]  cannot  find  symbol  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {    [BUGGY]  final  Type  type  =  typeToken  ==  null?  typeToken.getSuperType()  :  typeToken.getSuperType();  [BUGGY]    final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree  final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	52	52	2	replace	final  Type  type  =  typeToken  ==  null?  typeToken.getSuperType()  :  typeToken.getSuperType();	  final    Type    type    =    typeToken.getSuperType();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
