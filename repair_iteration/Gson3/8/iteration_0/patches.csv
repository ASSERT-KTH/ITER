bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException  [CONTEXT]  final  Type  type,  Class<?  super  T>  rawType)  {  [BUGGY]  if(Type.class.isAssignableFrom(rawType))  {  [BUGGY]  if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings( "rawtypes ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(Type.class.isAssignableFrom(rawType))  {	if  (Collection.class.isAssignableFrom(rawType))  {  	compilable	  [FE]  ClassCastException  	15	2	replace
2	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException  [CONTEXT]  final  Type  type,  Class<?  super  T>  rawType)  {  [BUGGY]  if(Type.class.isAssignableFrom(rawType))  {  [BUGGY]  if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings( "rawtypes ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType))  {	if  (Collection.class.isAssignableFrom(rawType))  {  	compilable	  [FE]  ClassCastException  	15	2	replace
3	[BUG]  [BUGGY]  if(type.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]      ClassCastException  [CONTEXT]  final  Type  type,  Class<?  super  T>  rawType)  {  [BUGGY]  if(type.isAssignableFrom(rawType))  {  [BUGGY]  if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings( "rawtypes ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(rawType))  {	if  (Collection.class.isAssignableFrom(rawType))  {  	non-compiled	[CE]  cannot  find  symbol	15	None	replace
4	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ClassCastException  [CONTEXT]  final  Type  type,  Class<?  super  T>  rawType)  {  [BUGGY]  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]  if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings( "rawtypes ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {	if  (Collection.class.isAssignableFrom(rawType))  {  	compilable	  [FE]  ClassCastException  	15	2	replace
5	[BUG]  [BUGGY]  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]        ClassCastException  [CONTEXT]  final  Type  type,  Class<?  super  T>  rawType)  {  [BUGGY]  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]  if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings( "rawtypes ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {	if  (Collection.class.isAssignableFrom(rawType))  {  	compilable	  [FE]  ClassCastException  	15	2	replace
6	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          ClassCastException  [CONTEXT]  final  Type  type,  Class<?  super  T>  rawType)  {  [BUGGY]  if(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]  if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings( "rawtypes ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {	if  (Collection.class.isAssignableFrom(rawType))  {  	compilable	  [FE]  ClassCastException  	15	18	replace
7	[BUG]  [BUGGY]  if(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]          ClassCastException  [CONTEXT]  final  Type  type,  Class<?  super  T>  rawType)  {  [BUGGY]  if(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]  if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings( "rawtypes ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {	if  (Collection.class.isAssignableFrom(rawType))  {  	compilable	  [FE]  ClassCastException  	15	18	replace
8	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]            ClassCastException  [CONTEXT]  final  Type  type,  Class<?  super  T>  rawType)  {  [BUGGY]  if(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]  if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings( "rawtypes ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	if  (Collection.class.isAssignableFrom(rawType))  {  	compilable	  [FE]  ClassCastException  	15	2	replace
9	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]            ClassCastException  [CONTEXT]  final  Type  type,  Class<?  super  T>  rawType)  {  [BUGGY]  if(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]  if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings( "rawtypes ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	if  (Collection.class.isAssignableFrom(rawType))  {  	compilable	  [FE]  ClassCastException  	15	2	replace
10	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  rawType.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]              ClassCastException  [CONTEXT]  final  Type  type,  Class<?  super  T>  rawType)  {  [BUGGY]  if(type.isPrimitive()  ||  rawType.isPrimitive())  {  [BUGGY]  if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings( "rawtypes ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  rawType.isPrimitive())  {	if  (Collection.class.isAssignableFrom(rawType))  {  	non-compiled	[CE]  cannot  find  symbol	15	None	replace
11	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                ClassCastException  [CONTEXT]  final  Type  type,  Class<?  super  T>  rawType)  {  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]  if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings( "rawtypes ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {	if  (Collection.class.isAssignableFrom(rawType))  {  	compilable	  [FE]  ClassCastException  	15	2	replace
12	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]                ClassCastException  [CONTEXT]  final  Type  type,  Class<?  super  T>  rawType)  {  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]  if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings( "rawtypes ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {	if  (Collection.class.isAssignableFrom(rawType))  {  	compilable	  [FE]  ClassCastException  	15	2	replace
13	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]                  ClassCastException  [CONTEXT]  final  Type  type,  Class<?  super  T>  rawType)  {  [BUGGY]    [BUGGY]  if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings( "rawtypes ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	  	if  (Collection.class.isAssignableFrom(rawType))  {  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
14	[BUG]  [BUGGY]  if(TypeUtil.isAssignmentOp(type)||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]    ClassCastException  [CONTEXT]  final  Type  type,  Class<?  super  T>  rawType)  {  [BUGGY]  if(TypeUtil.isAssignmentOp(type)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]  if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings( "rawtypes ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignmentOp(type)||  Collection.class.isAssignableFrom(rawType))  {	if  (Collection.class.isAssignableFrom(rawType))  {  	non-compiled	[CE]  cannot  find  symbol  TypeUtil	15	None	replace
15	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException  [CONTEXT]  final  Type  type,  Class<?  super  T>  rawType)  {  [BUGGY]  if(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]  if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings( "rawtypes ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	if  (Collection.class.isAssignableFrom(rawType))  {  	compilable	  [FE]  ClassCastException  	15	2	replace
16	[BUG]  [BUGGY]  if(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]      ClassCastException  [CONTEXT]  final  Type  type,  Class<?  super  T>  rawType)  {  [BUGGY]  if(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]  if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings( "rawtypes ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	if  (Collection.class.isAssignableFrom(rawType))  {  	compilable	  [FE]  ClassCastException  	15	2	replace
17	[BUG]  [BUGGY]  if(TypeUtil.isAssignmentOp(type)||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]        ClassCastException  [CONTEXT]  final  Type  type,  Class<?  super  T>  rawType)  {  [BUGGY]  if(TypeUtil.isAssignmentOp(type)||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]  if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings( "rawtypes ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignmentOp(type)||  SortedSet.class.isAssignableFrom(rawType))  {	if  (Collection.class.isAssignableFrom(rawType))  {  	non-compiled	[CE]  cannot  find  symbol  TypeUtil	15	None	replace
18	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          ClassCastException  [CONTEXT]  final  Type  type,  Class<?  super  T>  rawType)  {  [BUGGY]  if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]  if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings( "rawtypes ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {	if  (Collection.class.isAssignableFrom(rawType))  {  	compilable	  [FE]  ClassCastException  	15	2	replace
19	[BUG]  [BUGGY]  if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]          ClassCastException  [CONTEXT]  final  Type  type,  Class<?  super  T>  rawType)  {  [BUGGY]  if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]  if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings( "rawtypes ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {	if  (Collection.class.isAssignableFrom(rawType))  {  	compilable	  [FE]  ClassCastException  	15	2	replace
20	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]    ClassCastException  [CONTEXT]  final  Type  type,  Class<?  super  T>  rawType)  {  [BUGGY]  if(type.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]  if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings( "rawtypes ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	if  (Collection.class.isAssignableFrom(rawType))  {  	non-compiled	[CE]  cannot  find  symbol	15	None	replace
21	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(type)||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]      ClassCastException  [CONTEXT]  final  Type  type,  Class<?  super  T>  rawType)  {  [BUGGY]  if(TypeUtils.isAssignableFrom(type)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]  if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings( "rawtypes ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(type)||  Collection.class.isAssignableFrom(rawType))  {	if  (Collection.class.isAssignableFrom(rawType))  {  	non-compiled	[CE]  cannot  find  symbol  TypeUtils	15	None	replace
22	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(type)||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]        ClassCastException  [CONTEXT]  final  Type  type,  Class<?  super  T>  rawType)  {  [BUGGY]  if(TypeUtils.isAssignableFrom(type)||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]  if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings( "rawtypes ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(type)||  SortedSet.class.isAssignableFrom(rawType))  {	if  (Collection.class.isAssignableFrom(rawType))  {  	non-compiled	[CE]  cannot  find  symbol  TypeUtils	15	None	replace
